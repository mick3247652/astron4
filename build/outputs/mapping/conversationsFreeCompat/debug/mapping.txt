# compiler: R8
# compiler_version: 1.4.77
# min_api: 16
android.arch.core.executor.ArchTaskExecutor -> android.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:76:android.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:102:void postToMainThread(java.lang.Runnable) -> postToMainThread
android.arch.core.executor.ArchTaskExecutor$1 -> android.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
android.arch.core.executor.ArchTaskExecutor$2 -> android.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
android.arch.core.executor.DefaultTaskExecutor -> android.arch.core.executor.DefaultTaskExecutor:
    31:33:void <init>() -> <init>
    40:41:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    58:58:boolean isMainThread() -> isMainThread
    45:54:void postToMainThread(java.lang.Runnable) -> postToMainThread
android.arch.core.executor.TaskExecutor -> android.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
android.arch.core.internal.FastSafeIterableMap -> android.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:android.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:58:java.lang.Object remove(java.lang.Object) -> remove
android.arch.core.internal.SafeIterableMap -> android.arch.core.internal.SafeIterableMap:
    35:42:void <init>() -> <init>
    35:35:android.arch.core.internal.SafeIterableMap$Entry access$100(android.arch.core.internal.SafeIterableMap) -> access$100
    149:151:java.util.Iterator descendingIterator() -> descendingIterator
    168:168:java.util.Map$Entry eldest() -> eldest
    180:200:boolean equals(java.lang.Object) -> equals
    45:52:android.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    139:141:java.util.Iterator iterator() -> iterator
    159:161:android.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    175:175:java.util.Map$Entry newest() -> newest
    74:85:android.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    65:70:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    97:122:java.lang.Object remove(java.lang.Object) -> remove
    129:129:int size() -> size
    205:215:java.lang.String toString() -> toString
android.arch.core.internal.SafeIterableMap$AscendingIterator -> android.arch.core.internal.SafeIterableMap$AscendingIterator:
    270:271:void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    280:280:android.arch.core.internal.SafeIterableMap$Entry backward(android.arch.core.internal.SafeIterableMap$Entry) -> backward
    275:275:android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> forward
android.arch.core.internal.SafeIterableMap$DescendingIterator -> android.arch.core.internal.SafeIterableMap$DescendingIterator:
    287:288:void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    297:297:android.arch.core.internal.SafeIterableMap$Entry backward(android.arch.core.internal.SafeIterableMap$Entry) -> backward
    292:292:android.arch.core.internal.SafeIterableMap$Entry forward(android.arch.core.internal.SafeIterableMap$Entry) -> forward
android.arch.core.internal.SafeIterableMap$Entry -> android.arch.core.internal.SafeIterableMap$Entry:
    345:348:void <init>(java.lang.Object,java.lang.Object) -> <init>
    374:381:boolean equals(java.lang.Object) -> equals
    353:353:java.lang.Object getKey() -> getKey
    359:359:java.lang.Object getValue() -> getValue
    364:364:java.lang.Object setValue(java.lang.Object) -> setValue
    369:369:java.lang.String toString() -> toString
android.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> android.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    301:303:void <init>(android.arch.core.internal.SafeIterableMap) -> <init>
    301:301:void <init>(android.arch.core.internal.SafeIterableMap,android.arch.core.internal.SafeIterableMap$1) -> <init>
    315:318:boolean hasNext() -> hasNext
    301:301:java.lang.Object next() -> next
    323:329:java.util.Map$Entry next() -> next
    307:311:void supportRemove(android.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
android.arch.core.internal.SafeIterableMap$ListIterator -> android.arch.core.internal.SafeIterableMap$ListIterator:
    223:226:void <init>(android.arch.core.internal.SafeIterableMap$Entry,android.arch.core.internal.SafeIterableMap$Entry) -> <init>
    230:230:boolean hasNext() -> hasNext
    218:218:java.lang.Object next() -> next
    258:260:java.util.Map$Entry next() -> next
    250:251:android.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    235:247:void supportRemove(android.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
android.arch.lifecycle.ClassesInfoCache -> android.arch.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    104:160:android.arch.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    69:71:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    80:85:android.arch.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    90:101:void verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
android.arch.lifecycle.ClassesInfoCache$CallbackInfo -> android.arch.lifecycle.ClassesInfoCache$CallbackInfo:
    168:180:void <init>(java.util.Map) -> <init>
    184:187:void invokeCallbacks(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    191:196:void invokeMethodsForEvent(java.util.List,android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
android.arch.lifecycle.ClassesInfoCache$MethodReference -> android.arch.lifecycle.ClassesInfoCache$MethodReference:
    204:208:void <init>(int,java.lang.reflect.Method) -> <init>
    233:237:boolean equals(java.lang.Object) -> equals
    246:246:int hashCode() -> hashCode
    213:225:void invokeCallback(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
android.arch.lifecycle.CompositeGeneratedAdaptersObserver -> android.arch.lifecycle.CompositeGeneratedAdaptersObserver:
    30:32:void <init>(android.arch.lifecycle.GeneratedAdapter[]) -> <init>
    36:43:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> onStateChanged
android.arch.lifecycle.FullLifecycleObserverAdapter -> android.arch.lifecycle.FullLifecycleObserverAdapter:
    23:25:void <init>(android.arch.lifecycle.FullLifecycleObserver) -> <init>
    29:51:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> onStateChanged
android.arch.lifecycle.FullLifecycleObserverAdapter$1 -> android.arch.lifecycle.FullLifecycleObserverAdapter$1:
    29:29:void <clinit>() -> <clinit>
android.arch.lifecycle.Lifecycle -> android.arch.lifecycle.Lifecycle:
    75:75:void <init>() -> <init>
android.arch.lifecycle.Lifecycle$Event -> android.arch.lifecycle.Lifecycle$Event:
    119:114:void <clinit>() -> <clinit>
    115:115:void <init>(java.lang.String,int) -> <init>
    114:114:android.arch.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    114:114:android.arch.lifecycle.Lifecycle$Event[] values() -> values
android.arch.lifecycle.Lifecycle$State -> android.arch.lifecycle.Lifecycle$State:
    157:150:void <clinit>() -> <clinit>
    151:151:void <init>(java.lang.String,int) -> <init>
    199:199:boolean isAtLeast(android.arch.lifecycle.Lifecycle$State) -> isAtLeast
    150:150:android.arch.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    150:150:android.arch.lifecycle.Lifecycle$State[] values() -> values
android.arch.lifecycle.LifecycleRegistry -> android.arch.lifecycle.LifecycleRegistry:
    97:100:void <init>(android.arch.lifecycle.LifecycleOwner) -> <init>
    161:191:void addObserver(android.arch.lifecycle.LifecycleObserver) -> addObserver
    299:312:void backwardPass(android.arch.lifecycle.LifecycleOwner) -> backwardPass
    151:156:android.arch.lifecycle.Lifecycle$State calculateTargetState(android.arch.lifecycle.LifecycleObserver) -> calculateTargetState
    253:255:android.arch.lifecycle.Lifecycle$Event downEvent(android.arch.lifecycle.Lifecycle$State) -> downEvent
    284:296:void forwardPass(android.arch.lifecycle.LifecycleOwner) -> forwardPass
    231:231:android.arch.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    235:238:android.arch.lifecycle.Lifecycle$State getStateAfter(android.arch.lifecycle.Lifecycle$Event) -> getStateAfter
    122:124:void handleLifecycleEvent(android.arch.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    142:147:boolean isSynced() -> isSynced
    110:111:void markState(android.arch.lifecycle.Lifecycle$State) -> markState
    339:339:android.arch.lifecycle.Lifecycle$State min(android.arch.lifecycle.Lifecycle$State,android.arch.lifecycle.Lifecycle$State) -> min
    127:134:void moveToState(android.arch.lifecycle.Lifecycle$State) -> moveToState
    194:195:void popParentState() -> popParentState
    198:199:void pushParentState(android.arch.lifecycle.Lifecycle$State) -> pushParentState
    215:216:void removeObserver(android.arch.lifecycle.LifecycleObserver) -> removeObserver
    317:336:void sync() -> sync
    269:272:android.arch.lifecycle.Lifecycle$Event upEvent(android.arch.lifecycle.Lifecycle$State) -> upEvent
android.arch.lifecycle.LifecycleRegistry$1 -> android.arch.lifecycle.LifecycleRegistry$1:
    253:235:void <clinit>() -> <clinit>
android.arch.lifecycle.LifecycleRegistry$ObserverWithState -> android.arch.lifecycle.LifecycleRegistry$ObserverWithState:
    346:349:void <init>(android.arch.lifecycle.LifecycleObserver,android.arch.lifecycle.Lifecycle$State) -> <init>
    352:356:void dispatchEvent(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> dispatchEvent
android.arch.lifecycle.Lifecycling -> android.arch.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    79:81:android.arch.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    92:108:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    179:179:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    48:72:android.arch.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object) -> getCallback
    116:121:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    172:172:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    126:168:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
android.arch.lifecycle.LiveData -> android.arch.lifecycle.LiveData:
    62:62:void <clinit>() -> <clinit>
    59:421:void <init>() -> <init>
    59:59:java.lang.Object access$000(android.arch.lifecycle.LiveData) -> access$000
    59:59:java.lang.Object access$100(android.arch.lifecycle.LiveData) -> access$100
    59:59:java.lang.Object access$102(android.arch.lifecycle.LiveData,java.lang.Object) -> access$102
    59:59:java.lang.Object access$200() -> access$200
    59:59:int access$300(android.arch.lifecycle.LiveData) -> access$300
    59:59:int access$302(android.arch.lifecycle.LiveData,int) -> access$302
    59:59:void access$400(android.arch.lifecycle.LiveData,android.arch.lifecycle.LiveData$ObserverWrapper) -> access$400
    434:435:void assertMainThread(java.lang.String) -> assertMainThread
    92:110:void considerNotify(android.arch.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    113:132:void dispatchingValue(android.arch.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    166:180:void observe(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer) -> observe
    314:314:void onActive() -> onActive
    327:327:void onInactive() -> onInactive
    217:224:void removeObserver(android.arch.lifecycle.Observer) -> removeObserver
    279:283:void setValue(java.lang.Object) -> setValue
android.arch.lifecycle.LiveData$1 -> android.arch.lifecycle.LiveData$1:
    78:78:void <init>(android.arch.lifecycle.LiveData) -> <init>
    82:85:void run() -> run
android.arch.lifecycle.LiveData$LifecycleBoundObserver -> android.arch.lifecycle.LiveData$LifecycleBoundObserver:
    352:355:void <init>(android.arch.lifecycle.LiveData,android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Observer) -> <init>
    378:379:void detachObserver() -> detachObserver
    373:373:boolean isAttachedTo(android.arch.lifecycle.LifecycleOwner) -> isAttachedTo
    364:369:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> onStateChanged
    359:359:boolean shouldBeActive() -> shouldBeActive
android.arch.lifecycle.LiveData$ObserverWrapper -> android.arch.lifecycle.LiveData$ObserverWrapper:
    387:389:void <init>(android.arch.lifecycle.LiveData,android.arch.lifecycle.Observer) -> <init>
    401:418:void activeStateChanged(boolean) -> activeStateChanged
    398:398:void detachObserver() -> detachObserver
    394:394:boolean isAttachedTo(android.arch.lifecycle.LifecycleOwner) -> isAttachedTo
android.arch.lifecycle.MethodCallsLogger -> android.arch.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
android.arch.lifecycle.MutableLiveData -> android.arch.lifecycle.MutableLiveData:
    25:25:void <init>() -> <init>
    33:34:void setValue(java.lang.Object) -> setValue
android.arch.lifecycle.ReflectiveGenericLifecycleObserver -> android.arch.lifecycle.ReflectiveGenericLifecycleObserver:
    29:32:void <init>(java.lang.Object) -> <init>
    36:37:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> onStateChanged
android.arch.lifecycle.ReportFragment -> android.arch.lifecycle.ReportFragment:
    30:130:void <init>() -> <init>
    112:124:void dispatch(android.arch.lifecycle.Lifecycle$Event) -> dispatch
    53:56:void dispatchCreate(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    65:68:void dispatchResume(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    59:62:void dispatchStart(android.arch.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    37:43:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    72:75:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    105:109:void onDestroy() -> onDestroy
    93:95:void onPause() -> onPause
    86:89:void onResume() -> onResume
    79:82:void onStart() -> onStart
    99:101:void onStop() -> onStop
android.arch.lifecycle.SingleGeneratedAdapterObserver -> android.arch.lifecycle.SingleGeneratedAdapterObserver:
    29:31:void <init>(android.arch.lifecycle.GeneratedAdapter) -> <init>
    35:37:void onStateChanged(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.Lifecycle$Event) -> onStateChanged
android.arch.lifecycle.ViewModel -> android.arch.lifecycle.ViewModel:
    96:96:void <init>() -> <init>
    105:105:void onCleared() -> onCleared
android.arch.lifecycle.ViewModelProvider -> android.arch.lifecycle.ViewModelProvider:
    77:80:void <init>(android.arch.lifecycle.ViewModelStore,android.arch.lifecycle.ViewModelProvider$Factory) -> <init>
    98:100:android.arch.lifecycle.ViewModel get(java.lang.Class) -> get
    122:137:android.arch.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
android.arch.lifecycle.ViewModelStore -> android.arch.lifecycle.ViewModelStore:
    36:38:void <init>() -> <init>
    55:59:void clear() -> clear
    48:48:android.arch.lifecycle.ViewModel get(java.lang.String) -> get
    41:45:void put(java.lang.String,android.arch.lifecycle.ViewModel) -> put
android.databinding.BaseObservable -> android.databinding.BaseObservable:
    28:29:void <init>() -> <init>
android.databinding.CallbackRegistry$NotifierCallback -> android.databinding.CallbackRegistry$NotifierCallback:
    404:404:void <init>() -> <init>
android.databinding.DataBinderMapper -> android.databinding.DataBinderMapper:
    31:31:void <init>() -> <init>
    41:41:java.util.List collectDependencies() -> collectDependencies
android.databinding.DataBinderMapperImpl -> android.databinding.DataBinderMapperImpl:
    4:6:void <init>() -> <init>
android.databinding.DataBindingUtil -> android.databinding.DataBindingUtil:
    32:33:void <clinit>() -> <clinit>
    194:194:android.databinding.ViewDataBinding bind(android.databinding.DataBindingComponent,android.view.View[],int) -> bind
    199:199:android.databinding.ViewDataBinding bind(android.databinding.DataBindingComponent,android.view.View,int) -> bind
    323:333:android.databinding.ViewDataBinding bindToAddedViews(android.databinding.DataBindingComponent,android.view.ViewGroup,int,int) -> bindToAddedViews
    95:95:android.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean) -> inflate
    124:130:android.databinding.ViewDataBinding inflate(android.view.LayoutInflater,int,android.view.ViewGroup,boolean,android.databinding.DataBindingComponent) -> inflate
    284:284:android.databinding.ViewDataBinding setContentView(android.app.Activity,int) -> setContentView
    303:306:android.databinding.ViewDataBinding setContentView(android.app.Activity,int,android.databinding.DataBindingComponent) -> setContentView
android.databinding.MergedDataBinderMapper -> android.databinding.MergedDataBinderMapper:
    32:43:void <init>() -> <init>
    55:63:void addMapper(android.databinding.DataBinderMapper) -> addMapper
    73:82:android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int) -> getDataBinder
    88:97:android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View[],int) -> getDataBinder
    132:148:boolean loadFeatures() -> loadFeatures
android.databinding.ViewDataBinding -> android.databinding.ViewDataBinding:
    69:172:void <clinit>() -> <clinit>
    275:280:void <init>(java.lang.Object,android.view.View,int) -> <init>
    63:63:java.lang.Runnable access$100(android.databinding.ViewDataBinding) -> access$100
    63:63:boolean access$202(android.databinding.ViewDataBinding,boolean) -> access$202
    63:63:void access$300() -> access$300
    63:63:android.view.View access$400(android.databinding.ViewDataBinding) -> access$400
    63:63:android.view.View$OnAttachStateChangeListener access$500() -> access$500
    297:301:android.databinding.DataBindingComponent checkAndCastToBindingComponent(java.lang.Object) -> checkAndCastToBindingComponent
    444:454:void executeBindingsInternal() -> executeBindingsInternal
    433:438:void executePendingBindings() -> executePendingBindings
    1264:1275:int findIncludeIndex(java.lang.String,int,android.databinding.ViewDataBinding$IncludedLayouts,int) -> findIncludeIndex
    1279:1299:int findLastMatching(android.view.ViewGroup,int) -> findLastMatching
    513:516:android.databinding.ViewDataBinding getBinding(android.view.View) -> getBinding
    527:527:android.view.View getRoot() -> getRoot
    1303:1312:boolean isNumeric(java.lang.String,int) -> isNumeric
    706:708:java.lang.Object[] mapBindings(android.databinding.DataBindingComponent,android.view.View,int,android.databinding.ViewDataBinding$IncludedLayouts,android.util.SparseIntArray) -> mapBindings
    1178:1260:void mapBindings(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[],android.databinding.ViewDataBinding$IncludedLayouts,android.util.SparseIntArray,boolean) -> mapBindings
    1322:1329:int parseTagInt(java.lang.String,int) -> parseTagInt
    1337:1343:void processReferenceQueue() -> processReferenceQueue
    558:573:void requestRebind() -> requestRebind
    313:314:void setRootTag(android.view.View) -> setRootTag
android.databinding.ViewDataBinding$1 -> android.databinding.ViewDataBinding$1:
    91:91:void <init>() -> <init>
android.databinding.ViewDataBinding$2 -> android.databinding.ViewDataBinding$2:
    101:101:void <init>() -> <init>
android.databinding.ViewDataBinding$3 -> android.databinding.ViewDataBinding$3:
    111:111:void <init>() -> <init>
android.databinding.ViewDataBinding$4 -> android.databinding.ViewDataBinding$4:
    121:121:void <init>() -> <init>
android.databinding.ViewDataBinding$5 -> android.databinding.ViewDataBinding$5:
    129:129:void <init>() -> <init>
android.databinding.ViewDataBinding$6 -> android.databinding.ViewDataBinding$6:
    157:157:void <init>() -> <init>
    162:165:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    169:169:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.databinding.ViewDataBinding$7 -> android.databinding.ViewDataBinding$7:
    177:177:void <init>(android.databinding.ViewDataBinding) -> <init>
    180:182:void run() -> run
android.databinding.ViewDataBinding$8 -> android.databinding.ViewDataBinding$8:
    284:284:void <init>(android.databinding.ViewDataBinding) -> <init>
    287:288:void doFrame(long) -> doFrame
android.databinding.ViewDataBinding$OnStartListener -> android.databinding.ViewDataBinding$OnStartListener:
    1671:1675:void onStart() -> onStart
android.databinding.ViewDataBinding$WeakListener -> android.databinding.ViewDataBinding$WeakListener:
    1397:1403:boolean unregister() -> unregister
android.support.compat.R$styleable -> android.support.compat.R$styleable:
    144:179:void <clinit>() -> <clinit>
android.support.coordinatorlayout.R$styleable -> android.support.coordinatorlayout.R$styleable:
    161:207:void <clinit>() -> <clinit>
android.support.design.R$styleable -> android.support.design.R$styleable:
    1802:2509:void <clinit>() -> <clinit>
android.support.design.animation.AnimationUtils -> android.support.design.animation.AnimationUtils:
    32:39:void <clinit>() -> <clinit>
    43:43:float lerp(float,float,float) -> lerp
    48:48:int lerp(int,int,float) -> lerp
android.support.design.animation.AnimatorSetCompat -> android.support.design.animation.AnimatorSetCompat:
    37:47:void playTogether(android.animation.AnimatorSet,java.util.List) -> playTogether
android.support.design.animation.ArgbEvaluatorCompat -> android.support.design.animation.ArgbEvaluatorCompat:
    28:28:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    27:27:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    55:88:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    38:38:android.support.design.animation.ArgbEvaluatorCompat getInstance() -> getInstance
android.support.design.animation.ChildrenAlphaProperty -> android.support.design.animation.ChildrenAlphaProperty:
    37:37:void <clinit>() -> <clinit>
    41:42:void <init>(java.lang.String) -> <init>
    32:32:java.lang.Object get(java.lang.Object) -> get
    46:50:java.lang.Float get(android.view.ViewGroup) -> get
    32:32:void set(java.lang.Object,java.lang.Object) -> set
    56:64:void set(android.view.ViewGroup,java.lang.Float) -> set
android.support.design.animation.DrawableAlphaProperty -> android.support.design.animation.DrawableAlphaProperty:
    34:34:void <clinit>() -> <clinit>
    40:41:void <init>() -> <init>
    28:28:java.lang.Object get(java.lang.Object) -> get
    45:51:java.lang.Integer get(android.graphics.drawable.Drawable) -> get
    28:28:void set(java.lang.Object,java.lang.Object) -> set
    56:61:void set(android.graphics.drawable.Drawable,java.lang.Integer) -> set
android.support.design.animation.ImageMatrixProperty -> android.support.design.animation.ImageMatrixProperty:
    30:31:void <init>() -> <init>
    26:26:java.lang.Object get(java.lang.Object) -> get
    40:41:android.graphics.Matrix get(android.widget.ImageView) -> get
    26:26:void set(java.lang.Object,java.lang.Object) -> set
    35:36:void set(android.widget.ImageView,android.graphics.Matrix) -> set
android.support.design.animation.MatrixEvaluator -> android.support.design.animation.MatrixEvaluator:
    25:28:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    32:39:android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix) -> evaluate
android.support.design.animation.MotionSpec -> android.support.design.animation.MotionSpec:
    63:67:void <init>() -> <init>
    149:153:void addTimingFromAnimator(android.support.design.animation.MotionSpec,android.animation.Animator) -> addTimingFromAnimator
    110:116:android.support.design.animation.MotionSpec createFromAttribute(android.content.Context,android.content.res.TypedArray,int) -> createFromAttribute
    123:136:android.support.design.animation.MotionSpec createFromResource(android.content.Context,int) -> createFromResource
    141:145:android.support.design.animation.MotionSpec createSpecFromAnimators(java.util.List) -> createSpecFromAnimators
    159:163:boolean equals(java.lang.Object) -> equals
    79:80:android.support.design.animation.MotionTiming getTiming(java.lang.String) -> getTiming
    95:100:long getTotalDuration() -> getTotalDuration
    71:71:boolean hasTiming(java.lang.String) -> hasTiming
    173:173:int hashCode() -> hashCode
    87:88:void setTiming(java.lang.String,android.support.design.animation.MotionTiming) -> setTiming
    178:186:java.lang.String toString() -> toString
android.support.design.animation.MotionTiming -> android.support.design.animation.MotionTiming:
    39:42:void <init>(long,long) -> <init>
    44:48:void <init>(long,long,android.animation.TimeInterpolator) -> <init>
    51:58:void apply(android.animation.Animator) -> apply
    81:86:android.support.design.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator) -> createFromAnimator
    114:118:boolean equals(java.lang.Object) -> equals
    61:61:long getDelay() -> getDelay
    65:65:long getDuration() -> getDuration
    69:69:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    100:102:android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator) -> getInterpolatorCompat
    73:73:int getRepeatCount() -> getRepeatCount
    77:77:int getRepeatMode() -> getRepeatMode
    140:145:int hashCode() -> hashCode
    150:166:java.lang.String toString() -> toString
android.support.design.animation.Positioning -> android.support.design.animation.Positioning:
    34:38:void <init>(int,float,float) -> <init>
android.support.design.behavior.HideBottomViewOnScrollBehavior -> android.support.design.behavior.HideBottomViewOnScrollBehavior:
    48:48:void <init>() -> <init>
    57:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    35:35:android.view.ViewPropertyAnimator access$002(android.support.design.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator) -> access$002
    113:126:void animateChildTo(android.view.View,int,long,android.animation.TimeInterpolator) -> animateChildTo
    62:63:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    85:90:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    73:73:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    103:110:void slideDown(android.view.View) -> slideDown
    93:100:void slideUp(android.view.View) -> slideUp
android.support.design.behavior.HideBottomViewOnScrollBehavior$1 -> android.support.design.behavior.HideBottomViewOnScrollBehavior$1:
    120:120:void <init>(android.support.design.behavior.HideBottomViewOnScrollBehavior) -> <init>
    123:124:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar -> android.support.design.bottomappbar.BottomAppBar:
    86:86:android.animation.Animator access$002(android.support.design.bottomappbar.BottomAppBar,android.animation.Animator) -> access$002
    86:86:void access$1000(android.support.design.bottomappbar.BottomAppBar,android.support.design.widget.FloatingActionButton) -> access$1000
    86:86:android.support.design.widget.FloatingActionButton access$1100(android.support.design.bottomappbar.BottomAppBar) -> access$1100
    86:86:boolean access$1200(android.support.design.bottomappbar.BottomAppBar) -> access$1200
    86:86:void access$1300(android.support.design.bottomappbar.BottomAppBar) -> access$1300
    86:86:float access$1400(android.support.design.bottomappbar.BottomAppBar) -> access$1400
    86:86:android.animation.Animator access$302(android.support.design.bottomappbar.BottomAppBar,android.animation.Animator) -> access$302
    86:86:void access$400(android.support.design.bottomappbar.BottomAppBar,android.support.v7.widget.ActionMenuView,int,boolean) -> access$400
    657:660:void addFabAnimationListeners(android.support.design.widget.FloatingActionButton) -> addFabAnimationListeners
    590:599:void cancelAnimations() -> cancelAnimations
    316:322:void createCradleTranslationAnimation(int,java.util.List) -> createCradleTranslationAnimation
    360:364:void createFabTranslationXAnimation(int,java.util.List) -> createFabTranslationXAnimation
    403:443:void createMenuViewTranslationAnimation(int,boolean,java.util.List) -> createMenuViewTranslationAnimation
    338:350:android.support.design.widget.FloatingActionButton findDependentFab() -> findDependentFab
    544:551:android.support.v7.widget.ActionMenuView getActionMenuView() -> getActionMenuView
    193:193:android.content.res.ColorStateList getBackgroundTint() -> getBackgroundTint
    680:680:android.support.design.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    233:233:float getCradleVerticalOffset() -> getCradleVerticalOffset
    171:171:int getFabAlignmentMode() -> getFabAlignmentMode
    200:200:float getFabCradleMargin() -> getFabCradleMargin
    216:216:float getFabCradleRoundedCornerRadius() -> getFabCradleRoundedCornerRadius
    532:533:int getFabTranslationX(int) -> getFabTranslationX
    539:539:float getFabTranslationX() -> getFabTranslationX
    504:524:float getFabTranslationY(boolean) -> getFabTranslationY
    528:528:float getFabTranslationY() -> getFabTranslationY
    254:254:boolean getHideOnScroll() -> getHideOnScroll
    602:602:boolean isAnimationRunning() -> isAnimationRunning
    354:355:boolean isVisibleFab() -> isVisibleFab
    367:396:void maybeAnimateMenuView(int,boolean) -> maybeAnimateMenuView
    288:289:void maybeAnimateModeChange(int) -> maybeAnimateModeChange
    609:614:void onLayout(boolean,int,int,int,int) -> onLayout
    795:803:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    786:790:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    663:665:void removeFabAnimationListeners(android.support.design.widget.FloatingActionButton) -> removeFabAnimationListeners
    188:189:void setBackgroundTint(android.content.res.ColorStateList) -> setBackgroundTint
    242:243:void setCradleVerticalOffset(float) -> setCradleVerticalOffset
    619:619:void setCutoutState() -> setCutoutState
    182:185:void setFabAlignmentMode(int) -> setFabAlignmentMode
    207:208:void setFabCradleMargin(float) -> setFabCradleMargin
    221:222:void setFabCradleRoundedCornerRadius(float) -> setFabCradleRoundedCornerRadius
    281:281:void setFabDiameter(int) -> setFabDiameter
    263:264:void setHideOnScroll(boolean) -> setHideOnScroll
    675:675:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    670:670:void setTitle(java.lang.CharSequence) -> setTitle
    566:587:void translateActionMenuView(android.support.v7.widget.ActionMenuView,int,boolean) -> translateActionMenuView
android.support.design.bottomappbar.BottomAppBar$1 -> android.support.design.bottomappbar.BottomAppBar$1:
    305:305:void <init>(android.support.design.bottomappbar.BottomAppBar) -> <init>
    308:309:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar$3 -> android.support.design.bottomappbar.BottomAppBar$3:
    389:389:void <init>(android.support.design.bottomappbar.BottomAppBar) -> <init>
    392:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar$4 -> android.support.design.bottomappbar.BottomAppBar$4:
    418:418:void <init>(android.support.design.bottomappbar.BottomAppBar,android.support.v7.widget.ActionMenuView,int,boolean) -> <init>
    423:424:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    428:431:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.bottomappbar.BottomAppBar$Behavior -> android.support.design.bottomappbar.BottomAppBar$Behavior:
    692:694:void <init>() -> <init>
    703:705:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    687:687:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    722:732:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,int) -> onLayoutChild
    687:687:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    749:749:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    687:687:void slideDown(android.view.View) -> slideDown
    769:781:void slideDown(android.support.design.bottomappbar.BottomAppBar) -> slideDown
    687:687:void slideUp(android.view.View) -> slideUp
    756:765:void slideUp(android.support.design.bottomappbar.BottomAppBar) -> slideUp
    709:716:boolean updateFabPositionAndVisibility(android.support.design.widget.FloatingActionButton,android.support.design.bottomappbar.BottomAppBar) -> updateFabPositionAndVisibility
android.support.design.bottomappbar.BottomAppBar$SavedState -> android.support.design.bottomappbar.BottomAppBar$SavedState:
    826:826:void <clinit>() -> <clinit>
    810:811:void <init>(android.os.Parcelable) -> <init>
    814:817:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    821:824:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.bottomappbar.BottomAppBar$SavedState$1 -> android.support.design.bottomappbar.BottomAppBar$SavedState$1:
    827:827:void <init>() -> <init>
    827:827:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    827:827:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    830:830:android.support.design.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    835:835:android.support.design.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    827:827:java.lang.Object[] newArray(int) -> newArray
    840:840:android.support.design.bottomappbar.BottomAppBar$SavedState[] newArray(int) -> newArray
android.support.design.button.MaterialButton -> android.support.design.button.MaterialButton:
    133:134:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    137:168:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:262:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    273:273:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    717:717:int getCornerRadius() -> getCornerRadius
    470:470:android.graphics.drawable.Drawable getIcon() -> getIcon
    729:729:int getIconGravity() -> getIconGravity
    396:396:int getIconPadding() -> getIconPadding
    426:426:int getIconSize() -> getIconSize
    509:509:android.content.res.ColorStateList getIconTint() -> getIconTint
    534:534:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    591:591:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    633:633:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    676:676:int getStrokeWidth() -> getStrokeWidth
    207:213:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    245:250:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    358:358:boolean isLayoutRTL() -> isLayoutRTL
    744:744:boolean isUsingOriginalBackground() -> isUsingOriginalBackground
    172:177:void onDraw(android.graphics.Canvas) -> onDraw
    321:326:void onLayout(boolean,int,int,int,int) -> onLayout
    330:332:void onMeasure(int,int) -> onMeasure
    289:290:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    278:285:void setBackgroundColor(int) -> setBackgroundColor
    303:317:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    294:299:void setBackgroundResource(int) -> setBackgroundResource
    256:257:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    267:268:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    688:691:void setCornerRadius(int) -> setCornerRadius
    702:705:void setCornerRadiusResource(int) -> setCornerRadiusResource
    439:443:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    740:741:void setIconGravity(int) -> setIconGravity
    381:385:void setIconPadding(int) -> setIconPadding
    454:459:void setIconResource(int) -> setIconResource
    407:408:void setIconSize(int) -> setIconSize
    482:486:void setIconTint(android.content.res.ColorStateList) -> setIconTint
    520:524:void setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    497:498:void setIconTintResource(int) -> setIconTintResource
    370:371:void setInternalBackground(android.graphics.drawable.Drawable) -> setInternalBackground
    563:566:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    577:580:void setRippleColorResource(int) -> setRippleColorResource
    604:607:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    619:622:void setStrokeColorResource(int) -> setStrokeColorResource
    646:649:void setStrokeWidth(int) -> setStrokeWidth
    661:664:void setStrokeWidthResource(int) -> setStrokeWidthResource
    188:195:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    226:233:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    539:552:void updateIcon() -> updateIcon
android.support.design.button.MaterialButtonBackgroundDrawable -> android.support.design.button.MaterialButtonBackgroundDrawable:
    59:60:void <init>(android.content.res.ColorStateList,android.graphics.drawable.InsetDrawable,android.graphics.drawable.Drawable) -> <init>
    65:71:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
android.support.design.button.MaterialButtonHelper -> android.support.design.button.MaterialButtonHelper:
    57:57:void <clinit>() -> <clinit>
    89:91:void <init>(android.support.design.button.MaterialButton) -> <init>
    183:200:android.graphics.drawable.Drawable createBackgroundCompat() -> createBackgroundCompat
    255:275:android.graphics.drawable.Drawable createBackgroundLollipop() -> createBackgroundLollipop
    163:175:void drawStroke(android.graphics.Canvas) -> drawStroke
    377:377:int getCornerRadius() -> getCornerRadius
    308:308:android.content.res.ColorStateList getRippleColor() -> getRippleColor
    324:324:android.content.res.ColorStateList getStrokeColor() -> getStrokeColor
    336:336:int getStrokeWidth() -> getStrokeWidth
    221:221:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    236:236:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    158:158:boolean isBackgroundOverwritten() -> isBackgroundOverwritten
    94:141:void loadFromAttributes(android.content.res.TypedArray) -> loadFromAttributes
    288:293:void setBackgroundColor(int) -> setBackgroundColor
    150:155:void setBackgroundOverwritten() -> setBackgroundOverwritten
    351:374:void setCornerRadius(int) -> setCornerRadius
    296:304:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    312:320:void setStrokeColor(android.content.res.ColorStateList) -> setStrokeColor
    328:333:void setStrokeWidth(int) -> setStrokeWidth
    210:218:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    225:233:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    394:400:android.graphics.drawable.GradientDrawable unwrapBackgroundDrawable() -> unwrapBackgroundDrawable
    382:388:android.graphics.drawable.GradientDrawable unwrapStrokeDrawable() -> unwrapStrokeDrawable
    282:285:void updateMaskBounds(int,int) -> updateMaskBounds
    340:348:void updateStroke() -> updateStroke
    240:246:void updateTintAndTintModeLollipop() -> updateTintAndTintModeLollipop
    206:206:android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable) -> wrapDrawableWithInset
android.support.design.circularreveal.CircularRevealCompat -> android.support.design.circularreveal.CircularRevealCompat:
    55:77:android.animation.Animator createCircularReveal(android.support.design.circularreveal.CircularRevealWidget,float,float,float) -> createCircularReveal
    118:118:android.animation.Animator$AnimatorListener createCircularRevealListener(android.support.design.circularreveal.CircularRevealWidget) -> createCircularRevealListener
android.support.design.circularreveal.CircularRevealCompat$1 -> android.support.design.circularreveal.CircularRevealCompat$1:
    118:118:void <init>(android.support.design.circularreveal.CircularRevealWidget) -> <init>
    126:127:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    121:122:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.circularreveal.CircularRevealFrameLayout -> android.support.design.circularreveal.CircularRevealFrameLayout:
    43:43:void buildCircularRevealCache() -> buildCircularRevealCache
    48:48:void destroyCircularRevealCache() -> destroyCircularRevealCache
    86:87:void draw(android.graphics.Canvas) -> draw
    75:75:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    64:64:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    54:54:android.support.design.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    100:101:boolean isOpaque() -> isOpaque
    80:80:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    69:69:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    59:59:void setRevealInfo(android.support.design.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
android.support.design.circularreveal.CircularRevealHelper -> android.support.design.circularreveal.CircularRevealHelper:
    126:133:void <clinit>() -> <clinit>
android.support.design.circularreveal.CircularRevealWidget$CircularRevealEvaluator -> android.support.design.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    208:208:void <clinit>() -> <clinit>
    206:209:void <init>() -> <init>
    206:206:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    213:217:android.support.design.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,android.support.design.circularreveal.CircularRevealWidget$RevealInfo,android.support.design.circularreveal.CircularRevealWidget$RevealInfo) -> evaluate
android.support.design.circularreveal.CircularRevealWidget$CircularRevealProperty -> android.support.design.circularreveal.CircularRevealWidget$CircularRevealProperty:
    181:181:void <clinit>() -> <clinit>
    185:186:void <init>(java.lang.String) -> <init>
    179:179:java.lang.Object get(java.lang.Object) -> get
    190:190:android.support.design.circularreveal.CircularRevealWidget$RevealInfo get(android.support.design.circularreveal.CircularRevealWidget) -> get
    179:179:void set(java.lang.Object,java.lang.Object) -> set
    195:196:void set(android.support.design.circularreveal.CircularRevealWidget,android.support.design.circularreveal.CircularRevealWidget$RevealInfo) -> set
android.support.design.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty -> android.support.design.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    227:227:void <clinit>() -> <clinit>
    231:232:void <init>(java.lang.String) -> <init>
    225:225:java.lang.Object get(java.lang.Object) -> get
    236:236:java.lang.Integer get(android.support.design.circularreveal.CircularRevealWidget) -> get
    225:225:void set(java.lang.Object,java.lang.Object) -> set
    241:242:void set(android.support.design.circularreveal.CircularRevealWidget,java.lang.Integer) -> set
android.support.design.circularreveal.CircularRevealWidget$RevealInfo -> android.support.design.circularreveal.CircularRevealWidget$RevealInfo:
    132:132:void <init>(android.support.design.circularreveal.CircularRevealWidget$1) -> <init>
    144:144:void <init>() -> <init>
    146:150:void <init>(float,float,float) -> <init>
    157:160:void set(float,float,float) -> set
android.support.design.circularreveal.cardview.CircularRevealCardView -> android.support.design.circularreveal.cardview.CircularRevealCardView:
    46:46:void buildCircularRevealCache() -> buildCircularRevealCache
    51:51:void destroyCircularRevealCache() -> destroyCircularRevealCache
    88:89:void draw(android.graphics.Canvas) -> draw
    78:78:android.graphics.drawable.Drawable getCircularRevealOverlayDrawable() -> getCircularRevealOverlayDrawable
    72:72:int getCircularRevealScrimColor() -> getCircularRevealScrimColor
    62:62:android.support.design.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo() -> getRevealInfo
    102:103:boolean isOpaque() -> isOpaque
    83:83:void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable) -> setCircularRevealOverlayDrawable
    67:67:void setCircularRevealScrimColor(int) -> setCircularRevealScrimColor
    56:56:void setRevealInfo(android.support.design.circularreveal.CircularRevealWidget$RevealInfo) -> setRevealInfo
android.support.design.expandable.ExpandableWidgetHelper -> android.support.design.expandable.ExpandableWidgetHelper:
    39:41:void <init>(android.support.design.expandable.ExpandableWidget) -> <init>
    89:93:void dispatchExpandedStateChanged() -> dispatchExpandedStateChanged
    85:85:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    55:55:boolean isExpanded() -> isExpanded
    69:75:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    60:64:android.os.Bundle onSaveInstanceState() -> onSaveInstanceState
    79:80:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
android.support.design.internal.BaselineLayout -> android.support.design.internal.BaselineLayout:
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:int getBaseline() -> getBaseline
    85:110:void onLayout(boolean,int,int,int,int) -> onLayout
    47:81:void onMeasure(int,int) -> onMeasure
android.support.design.internal.ForegroundLinearLayout -> android.support.design.internal.ForegroundLinearLayout:
    53:54:void <init>(android.content.Context) -> <init>
    57:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    202:233:void draw(android.graphics.Canvas) -> draw
    239:243:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    136:140:void drawableStateChanged() -> drawableStateChanged
    185:185:android.graphics.drawable.Drawable getForeground() -> getForeground
    89:89:int getForegroundGravity() -> getForegroundGravity
    128:132:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    190:192:void onLayout(boolean,int,int,int,int) -> onLayout
    196:198:void onSizeChanged(int,int,int,int) -> onSizeChanged
    151:175:void setForeground(android.graphics.drawable.Drawable) -> setForeground
    100:118:void setForegroundGravity(int) -> setForegroundGravity
    122:122:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.design.internal.NavigationMenuItemView -> android.support.design.internal.NavigationMenuItemView:
    52:52:void <clinit>() -> <clinit>
    83:84:void <init>(android.content.Context) -> <init>
    87:88:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    91:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    128:144:void adjustAppearance() -> adjustAppearance
    166:175:android.graphics.drawable.StateListDrawable createDefaultBackground() -> createDefaultBackground
    180:180:android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    102:119:void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    242:246:int[] onCreateDrawableState(int) -> onCreateDrawableState
    232:232:boolean prefersCondensedTitle() -> prefersCondensedTitle
    154:163:void setActionView(android.view.View) -> setActionView
    190:196:void setCheckable(boolean) -> setCheckable
    200:202:void setChecked(boolean) -> setChecked
    271:272:void setHorizontalPadding(int) -> setHorizontalPadding
    209:228:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    275:276:void setIconPadding(int) -> setIconPadding
    250:256:void setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    267:268:void setNeedsEmptyIcon(boolean) -> setNeedsEmptyIcon
    259:260:void setTextAppearance(int) -> setTextAppearance
    263:264:void setTextColor(android.content.res.ColorStateList) -> setTextColor
    185:186:void setTitle(java.lang.CharSequence) -> setTitle
    122:122:boolean shouldExpandActionArea() -> shouldExpandActionArea
android.support.design.internal.NavigationMenuItemView$1 -> android.support.design.internal.NavigationMenuItemView$1:
    73:73:void <init>(android.support.design.internal.NavigationMenuItemView) -> <init>
    77:79:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.design.internal.NavigationMenuView -> android.support.design.internal.NavigationMenuView:
    34:35:void <init>(android.content.Context) -> <init>
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:51:int getWindowAnimations() -> getWindowAnimations
    47:47:void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
android.support.design.internal.ThemeEnforcement -> android.support.design.internal.ThemeEnforcement:
    40:43:void <clinit>() -> <clinit>
    196:197:void checkAppCompatTheme(android.content.Context) -> checkAppCompatTheme
    121:132:void checkCompatibleTheme(android.content.Context,android.util.AttributeSet,int,int) -> checkCompatibleTheme
    200:201:void checkMaterialTheme(android.content.Context) -> checkMaterialTheme
    141:170:void checkTextAppearance(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> checkTextAppearance
    220:221:void checkTheme(android.content.Context,int[],java.lang.String) -> checkTheme
    183:192:boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> isCustomTextAppearanceValid
    212:216:boolean isTheme(android.content.Context,int[]) -> isTheme
    72:78:android.content.res.TypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainStyledAttributes
    110:116:android.support.v7.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[]) -> obtainTintedStyledAttributes
android.support.design.internal.ViewUtils -> android.support.design.internal.ViewUtils:
    53:53:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    34:36:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
android.support.design.resources.MaterialResources -> android.support.design.resources.MaterialResources:
    43:52:android.content.res.ColorStateList getColorStateList(android.content.Context,android.content.res.TypedArray,int) -> getColorStateList
    64:73:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
android.support.design.ripple.RippleUtils -> android.support.design.ripple.RippleUtils:
    36:63:void <clinit>() -> <clinit>
    95:167:android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList) -> convertToRippleDrawableColor
    189:190:int doubleAlpha(int) -> doubleAlpha
    174:179:int getColorForState(android.content.res.ColorStateList,int[]) -> getColorForState
android.support.design.stateful.ExtendableSavedState -> android.support.design.stateful.ExtendableSavedState:
    88:88:void <clinit>() -> <clinit>
    34:34:void <init>(android.os.Parcel,java.lang.ClassLoader,android.support.design.stateful.ExtendableSavedState$1) -> <init>
    39:41:void <init>(android.os.Parcelable) -> <init>
    44:58:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    81:81:java.lang.String toString() -> toString
    62:77:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.stateful.ExtendableSavedState$1 -> android.support.design.stateful.ExtendableSavedState$1:
    89:89:void <init>() -> <init>
    89:89:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:93:android.support.design.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    98:98:android.support.design.stateful.ExtendableSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    89:89:java.lang.Object[] newArray(int) -> newArray
    103:103:android.support.design.stateful.ExtendableSavedState[] newArray(int) -> newArray
android.support.design.theme.MaterialComponentsViewInflater -> android.support.design.theme.MaterialComponentsViewInflater:
    32:32:void <init>() -> <init>
    37:37:android.support.v7.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
android.support.design.transformation.ExpandableBehavior -> android.support.design.transformation.ExpandableBehavior:
    61:61:void <init>() -> <init>
    64:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:int access$000(android.support.design.transformation.ExpandableBehavior) -> access$000
    139:144:boolean didStateChange(boolean) -> didStateChange
    128:135:android.support.design.expandable.ExpandableWidget findExpandableWidget(android.support.design.widget.CoordinatorLayout,android.view.View) -> findExpandableWidget
    116:123:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    88:110:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
android.support.design.transformation.ExpandableBehavior$1 -> android.support.design.transformation.ExpandableBehavior$1:
    96:96:void <init>(android.support.design.transformation.ExpandableBehavior,android.view.View,int,android.support.design.expandable.ExpandableWidget) -> <init>
    99:104:boolean onPreDraw() -> onPreDraw
android.support.design.transformation.ExpandableTransformationBehavior -> android.support.design.transformation.ExpandableTransformationBehavior:
    42:42:void <init>() -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:android.animation.AnimatorSet access$002(android.support.design.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet) -> access$002
    70:92:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
android.support.design.transformation.ExpandableTransformationBehavior$1 -> android.support.design.transformation.ExpandableTransformationBehavior$1:
    78:78:void <init>(android.support.design.transformation.ExpandableTransformationBehavior) -> <init>
    81:82:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.transformation.FabTransformationBehavior -> android.support.design.transformation.FabTransformationBehavior:
    79:79:void <init>() -> <init>
    82:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    633:641:android.view.ViewGroup calculateChildContentContainer(android.view.View) -> calculateChildContentContainer
    591:609:void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,android.support.design.animation.MotionTiming,float,float,float,float,android.graphics.RectF) -> calculateChildVisibleBoundsAtEndOfExpansion
    556:565:float calculateRevealCenterX(android.view.View,android.view.View,android.support.design.animation.Positioning) -> calculateRevealCenterX
    569:578:float calculateRevealCenterY(android.view.View,android.view.View,android.support.design.animation.Positioning) -> calculateRevealCenterY
    492:513:float calculateTranslationX(android.view.View,android.view.View,android.support.design.animation.Positioning) -> calculateTranslationX
    517:538:float calculateTranslationY(android.view.View,android.view.View,android.support.design.animation.Positioning) -> calculateTranslationY
    613:626:float calculateValueOfAnimationAtEndOfExpansion(android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,android.support.design.animation.MotionTiming,float,float) -> calculateValueOfAnimationAtEndOfExpansion
    542:553:void calculateWindowBounds(android.view.View,android.graphics.RectF) -> calculateWindowBounds
    459:489:void createChildrenFadeAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createChildrenFadeAnimation
    419:449:void createColorAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createColorAnimation
    187:202:void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createElevationAnimation
    334:409:void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List) -> createExpansionAnimation
    272:273:void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List) -> createIconFadeAnimation
    695:706:void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List) -> createPostFillRadialExpansion
    673:684:void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List) -> createPreFillRadialExpansion
    213:262:void createTranslationAnimation(android.view.View,android.view.View,boolean,boolean,android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List,android.graphics.RectF) -> createTranslationAnimation
    658:662:int getBackgroundTint(android.view.View) -> getBackgroundTint
    88:89:boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    104:109:void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    115:173:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    650:653:android.view.ViewGroup toViewGroupOrNull(android.view.View) -> toViewGroupOrNull
android.support.design.transformation.FabTransformationBehavior$1 -> android.support.design.transformation.FabTransformationBehavior$1:
    149:149:void <init>(android.support.design.transformation.FabTransformationBehavior,boolean,android.view.View,android.view.View) -> <init>
    162:168:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    152:158:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.transformation.FabTransformationBehavior$2 -> android.support.design.transformation.FabTransformationBehavior$2:
    297:297:void <init>(android.support.design.transformation.FabTransformationBehavior,android.view.View) -> <init>
    302:303:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.transformation.FabTransformationBehavior$3 -> android.support.design.transformation.FabTransformationBehavior$3:
    310:310:void <init>(android.support.design.transformation.FabTransformationBehavior,android.support.design.circularreveal.CircularRevealWidget,android.graphics.drawable.Drawable) -> <init>
    319:320:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    314:315:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.transformation.FabTransformationBehavior$4 -> android.support.design.transformation.FabTransformationBehavior$4:
    362:362:void <init>(android.support.design.transformation.FabTransformationBehavior,android.support.design.circularreveal.CircularRevealWidget) -> <init>
    367:370:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec -> android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec:
    709:709:void <init>() -> <init>
android.support.design.transformation.FabTransformationScrimBehavior -> android.support.design.transformation.FabTransformationScrimBehavior:
    51:51:void <init>() -> <init>
    54:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:118:void createScrimAnimation(android.view.View,boolean,boolean,java.util.List,java.util.List) -> createScrimAnimation
    59:59:boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    72:95:android.animation.AnimatorSet onCreateExpandedStateChangeAnimation(android.view.View,android.view.View,boolean,boolean) -> onCreateExpandedStateChangeAnimation
    65:65:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
android.support.design.transformation.FabTransformationScrimBehavior$1 -> android.support.design.transformation.FabTransformationScrimBehavior$1:
    80:80:void <init>(android.support.design.transformation.FabTransformationScrimBehavior,boolean,android.view.View) -> <init>
    90:93:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    83:86:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.transformation.FabTransformationSheetBehavior -> android.support.design.transformation.FabTransformationSheetBehavior:
    47:47:void <init>() -> <init>
    50:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    56:65:android.support.design.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean) -> onCreateMotionSpec
    72:73:boolean onExpandedStateChange(android.view.View,android.view.View,boolean,boolean) -> onExpandedStateChange
    77:120:void updateImportantForAccessibility(android.view.View,boolean) -> updateImportantForAccessibility
android.support.design.widget.AppBarLayout -> android.support.design.widget.AppBarLayout:
    356:356:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    505:513:void dispatchOffsetUpdates(int) -> dispatchOffsetUpdates
    110:110:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    361:361:android.support.design.widget.AppBarLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    110:110:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    110:110:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    110:110:android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    366:366:android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    371:376:android.support.design.widget.AppBarLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    431:463:int getDownNestedPreScrollRange() -> getDownNestedPreScrollRange
    468:499:int getDownNestedScrollRange() -> getDownNestedScrollRange
    516:533:int getMinimumHeightForVisibleOverlappingContent() -> getMinimumHeightForVisibleOverlappingContent
    637:637:int getPendingAction() -> getPendingAction
    633:633:float getTargetElevation() -> getTargetElevation
    646:646:int getTopInset() -> getTopInset
    389:417:int getTotalScrollRange() -> getTotalScrollRange
    426:426:int getUpNestedPreScrollRange() -> getUpNestedPreScrollRange
    380:380:boolean hasChildWithInterpolator() -> hasChildWithInterpolator
    292:297:boolean hasCollapsibleChild() -> hasCollapsibleChild
    421:421:boolean hasScrollableChildren() -> hasScrollableChildren
    302:305:void invalidateScrollRanges() -> invalidateScrollRanges
    610:610:boolean isLiftOnScroll() -> isLiftOnScroll
    538:554:int[] onCreateDrawableState(int) -> onCreateDrawableState
    270:289:void onLayout(boolean,int,int,int,int) -> onLayout
    264:266:void onMeasure(int,int) -> onMeasure
    641:642:void resetPendingAction() -> resetPendingAction
    328:329:void setExpanded(boolean) -> setExpanded
    343:344:void setExpanded(boolean,boolean) -> setExpanded
    347:352:void setExpanded(boolean,boolean,boolean) -> setExpanded
    605:606:void setLiftOnScroll(boolean) -> setLiftOnScroll
    569:574:boolean setLiftableState(boolean) -> setLiftableState
    588:593:boolean setLiftedState(boolean) -> setLiftedState
    309:310:void setOrientation(int) -> setOrientation
    622:625:void setTargetElevation(float) -> setTargetElevation
android.support.design.widget.AppBarLayout$BaseBehavior -> android.support.design.widget.AppBarLayout$BaseBehavior:
    900:900:void <init>() -> <init>
    903:904:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    869:869:int access$000(android.support.design.widget.AppBarLayout$BaseBehavior) -> access$000
    1029:1041:void animateOffsetTo(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,float) -> animateOffsetTo
    1048:1074:void animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int) -> animateOffsetWithDuration
    869:869:boolean canDragView(android.view.View) -> canDragView
    1234:1248:boolean canDragView(android.support.design.widget.AppBarLayout) -> canDragView
    936:936:boolean canScrollChildren(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View) -> canScrollChildren
    1143:1143:boolean checkFlag(int,int) -> checkFlag
    1455:1461:android.view.View findFirstScrollingChild(android.support.design.widget.CoordinatorLayout) -> findFirstScrollingChild
    1443:1450:android.view.View getAppBarChildOnOffset(android.support.design.widget.AppBarLayout,int) -> getAppBarChildOnOffset
    1077:1093:int getChildIndexOnOffset(android.support.design.widget.AppBarLayout,int) -> getChildIndexOnOffset
    869:869:int getMaxDragOffset(android.view.View) -> getMaxDragOffset
    1260:1260:int getMaxDragOffset(android.support.design.widget.AppBarLayout) -> getMaxDragOffset
    869:869:int getScrollRangeForDragFling(android.view.View) -> getScrollRangeForDragFling
    1265:1265:int getScrollRangeForDragFling(android.support.design.widget.AppBarLayout) -> getScrollRangeForDragFling
    1466:1466:int getTopBottomOffsetForScrollingSibling() -> getTopBottomOffsetForScrollingSibling
    1328:1372:int interpolateOffset(android.support.design.widget.AppBarLayout,int) -> interpolateOffset
    869:869:void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.view.View) -> onFlingFinished
    1255:1256:void onFlingFinished(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> onFlingFinished
    869:869:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1177:1229:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int) -> onLayoutChild
    869:869:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1154:1171:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int,int) -> onMeasureChild
    869:869:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    949:966:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    869:869:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    978:987:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int,int) -> onNestedScroll
    869:869:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    1495:1505:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    869:869:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    1471:1490:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> onSaveInstanceState
    869:869:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    916:931:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    869:869:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    1006:1013:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    869:869:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> setHeaderTopBottomOffset
    1275:1319:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int) -> setHeaderTopBottomOffset
    1428:1439:boolean shouldJumpElevationState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> shouldJumpElevationState
    1097:1140:void snapToChildIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> snapToChildIfNeeded
    990:997:void stopNestedScrollIfNeeded(int,android.support.design.widget.AppBarLayout,android.view.View,int) -> stopNestedScrollIfNeeded
    1381:1423:void updateAppBarLayoutDrawableState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,boolean) -> updateAppBarLayoutDrawableState
android.support.design.widget.AppBarLayout$BaseBehavior$1 -> android.support.design.widget.AppBarLayout$BaseBehavior$1:
    1060:1060:void <init>(android.support.design.widget.AppBarLayout$BaseBehavior,android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> <init>
    1063:1065:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.AppBarLayout$BaseBehavior$SavedState -> android.support.design.widget.AppBarLayout$BaseBehavior$SavedState:
    1532:1532:void <clinit>() -> <clinit>
    1514:1518:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1521:1522:void <init>(android.os.Parcelable) -> <init>
    1526:1530:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.AppBarLayout$BaseBehavior$SavedState$1 -> android.support.design.widget.AppBarLayout$BaseBehavior$SavedState$1:
    1533:1533:void <init>() -> <init>
    1533:1533:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1533:1533:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1536:1536:android.support.design.widget.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1541:1541:android.support.design.widget.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1533:1533:java.lang.Object[] newArray(int) -> newArray
    1546:1546:android.support.design.widget.AppBarLayout$BaseBehavior$SavedState[] newArray(int) -> newArray
android.support.design.widget.AppBarLayout$Behavior -> android.support.design.widget.AppBarLayout$Behavior:
    852:853:void <init>() -> <init>
    860:861:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    842:842:int getTopAndBottomOffset() -> getTopAndBottomOffset
    842:842:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int) -> onLayoutChild
    842:842:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int,int,int) -> onMeasureChild
    842:842:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int[],int) -> onNestedPreScroll
    842:842:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int,int,int,int,int) -> onNestedScroll
    842:842:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.os.Parcelable) -> onRestoreInstanceState
    842:842:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout) -> onSaveInstanceState
    842:842:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    842:842:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View,int) -> onStopNestedScroll
    842:842:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
android.support.design.widget.AppBarLayout$LayoutParams -> android.support.design.widget.AppBarLayout$LayoutParams:
    743:751:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    754:755:void <init>(int,int) -> <init>
    762:763:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    766:767:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    772:773:void <init>(android.widget.LinearLayout$LayoutParams) -> <init>
    805:805:int getScrollFlags() -> getScrollFlags
    827:827:android.view.animation.Interpolator getScrollInterpolator() -> getScrollInterpolator
    832:832:boolean isCollapsible() -> isCollapsible
android.support.design.widget.AppBarLayout$ScrollingViewBehavior -> android.support.design.widget.AppBarLayout$ScrollingViewBehavior:
    1558:1558:void <init>() -> <init>
    1561:1568:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1556:1556:android.view.View findFirstDependency(java.util.List) -> findFirstDependency
    1653:1659:android.support.design.widget.AppBarLayout findFirstDependency(java.util.List) -> findFirstDependency
    1643:1648:int getAppBarLayoutOffset(android.support.design.widget.AppBarLayout) -> getAppBarLayoutOffset
    1622:1639:float getOverlapRatioForOffset(android.view.View) -> getOverlapRatioForOffset
    1664:1667:int getScrollRange(android.view.View) -> getScrollRange
    1573:1573:boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    1605:1618:void offsetChildAsNeeded(android.view.View,android.view.View) -> offsetChildAsNeeded
    1578:1580:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1556:1556:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1556:1556:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    1586:1601:boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    1672:1678:void updateLiftedStateIfNeeded(android.view.View,android.view.View) -> updateLiftedStateIfNeeded
android.support.design.widget.BaseTransientBottomBar -> android.support.design.widget.BaseTransientBottomBar:
    176:201:void <clinit>() -> <clinit>
    241:243:void <init>(android.view.ViewGroup,android.view.View,android.support.design.snackbar.ContentViewCallback) -> <init>
    72:72:android.support.design.snackbar.ContentViewCallback access$100(android.support.design.widget.BaseTransientBottomBar) -> access$100
    72:72:boolean access$200() -> access$200
    406:413:android.support.design.widget.BaseTransientBottomBar addCallback(android.support.design.widget.BaseTransientBottomBar$BaseCallback) -> addCallback
    566:609:void animateViewIn() -> animateViewIn
    612:647:void animateViewOut(int) -> animateViewOut
    390:391:void dismiss() -> dismiss
    394:395:void dispatchDismiss(int) -> dispatchDismiss
    374:374:android.content.Context getContext() -> getContext
    348:348:int getDuration() -> getDuration
    464:464:android.support.design.widget.SwipeDismissBehavior getNewBehavior() -> getNewBehavior
    314:314:int getSnackbarBaseLayoutResId() -> getSnackbarBaseLayoutResId
    650:655:int getTranslationYBottom() -> getTranslationYBottom
    380:380:android.view.View getView() -> getView
    323:326:boolean hasSnackbarStyleAttr() -> hasSnackbarStyleAttr
    659:665:void hideView(int) -> hideView
    446:446:boolean isShownOrQueued() -> isShownOrQueued
    681:695:void onViewHidden(int) -> onViewHidden
    668:677:void onViewShown() -> onViewShown
    337:338:android.support.design.widget.BaseTransientBottomBar setDuration(int) -> setDuration
    699:702:boolean shouldAnimate() -> shouldAnimate
    385:386:void show() -> show
    468:563:void showView() -> showView
android.support.design.widget.BaseTransientBottomBar$1 -> android.support.design.widget.BaseTransientBottomBar$1:
    186:186:void <init>() -> <init>
    189:192:boolean handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.BaseTransientBottomBar$10 -> android.support.design.widget.BaseTransientBottomBar$10:
    617:617:void <init>(android.support.design.widget.BaseTransientBottomBar,int) -> <init>
    625:626:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    620:621:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.widget.BaseTransientBottomBar$11 -> android.support.design.widget.BaseTransientBottomBar$11:
    629:630:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    634:644:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.BaseTransientBottomBar$2 -> android.support.design.widget.BaseTransientBottomBar$2:
    272:272:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    277:282:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.design.widget.BaseTransientBottomBar$3 -> android.support.design.widget.BaseTransientBottomBar$3:
    289:289:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    293:296:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    300:304:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.design.widget.BaseTransientBottomBar$4 -> android.support.design.widget.BaseTransientBottomBar$4:
    450:450:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    458:460:void dismiss(int) -> dismiss
    453:454:void show() -> show
android.support.design.widget.BaseTransientBottomBar$5 -> android.support.design.widget.BaseTransientBottomBar$5:
    482:482:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    485:487:void onDismiss(android.view.View) -> onDismiss
    491:504:void onDragStateChanged(int) -> onDragStateChanged
android.support.design.widget.BaseTransientBottomBar$6 -> android.support.design.widget.BaseTransientBottomBar$6:
    515:515:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    517:517:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    521:534:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.design.widget.BaseTransientBottomBar$6$1 -> android.support.design.widget.BaseTransientBottomBar$6$1:
    527:527:void <init>(android.support.design.widget.BaseTransientBottomBar$6) -> <init>
    530:531:void run() -> run
android.support.design.widget.BaseTransientBottomBar$7 -> android.support.design.widget.BaseTransientBottomBar$7:
    548:548:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    551:560:void onLayoutChange(android.view.View,int,int,int,int) -> onLayoutChange
android.support.design.widget.BaseTransientBottomBar$8 -> android.support.design.widget.BaseTransientBottomBar$8:
    578:578:void <init>(android.support.design.widget.BaseTransientBottomBar) -> <init>
    587:588:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    581:583:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.widget.BaseTransientBottomBar$9 -> android.support.design.widget.BaseTransientBottomBar$9:
    591:592:void <init>(android.support.design.widget.BaseTransientBottomBar,int) -> <init>
    596:606:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.BaseTransientBottomBar$BaseCallback -> android.support.design.widget.BaseTransientBottomBar$BaseCallback:
    79:79:void <init>() -> <init>
    115:115:void onDismissed(java.lang.Object,int) -> onDismissed
    125:125:void onShown(java.lang.Object) -> onShown
android.support.design.widget.BaseTransientBottomBar$Behavior -> android.support.design.widget.BaseTransientBottomBar$Behavior:
    792:794:void <init>() -> <init>
    789:789:void access$000(android.support.design.widget.BaseTransientBottomBar$Behavior,android.support.design.widget.BaseTransientBottomBar) -> access$000
    802:802:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    807:808:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    797:798:void setBaseTransientBottomBar(android.support.design.widget.BaseTransientBottomBar) -> setBaseTransientBottomBar
android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate -> android.support.design.widget.BaseTransientBottomBar$BehaviorDelegate:
    818:822:void <init>(android.support.design.widget.SwipeDismissBehavior) -> <init>
    829:829:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    833:848:void onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    825:826:void setBaseTransientBottomBar(android.support.design.widget.BaseTransientBottomBar) -> setBaseTransientBottomBar
android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout -> android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout:
    716:717:void <init>(android.content.Context) -> <init>
    720:741:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    707:707:void access$300(android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout,boolean) -> access$300
    758:764:void onAttachedToWindow() -> onAttachedToWindow
    768:775:void onDetachedFromWindow() -> onDetachedFromWindow
    750:754:void onLayout(boolean,int,int,int,int) -> onLayout
    744:746:void setClickableOrFocusableBasedOnAccessibility(boolean) -> setClickableOrFocusableBasedOnAccessibility
    784:785:void setOnAttachStateChangeListener(android.support.design.widget.BaseTransientBottomBar$OnAttachStateChangeListener) -> setOnAttachStateChangeListener
    779:780:void setOnLayoutChangeListener(android.support.design.widget.BaseTransientBottomBar$OnLayoutChangeListener) -> setOnLayoutChangeListener
android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout$1 -> android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout$1:
    731:731:void <init>(android.support.design.widget.BaseTransientBottomBar$SnackbarBaseLayout) -> <init>
    734:735:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
android.support.design.widget.BottomSheetBehavior -> android.support.design.widget.BottomSheetBehavior:
    179:179:void <init>() -> <init>
    188:206:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:55:boolean access$000(android.support.design.widget.BottomSheetBehavior) -> access$000
    55:55:int access$100(android.support.design.widget.BottomSheetBehavior) -> access$100
    683:688:void calculateCollapsedOffset() -> calculateCollapsedOffset
    892:902:void dispatchOnSlide(int) -> dispatchOnSlide
    712:724:android.view.View findScrollingChild(android.view.View) -> findScrollingChild
    736:736:int getExpandedOffset() -> getExpandedOffset
    728:732:float getYVelocity() -> getYVelocity
    271:318:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    227:266:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    487:487:boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    379:415:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    215:223:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    210:210:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    365:367:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    423:428:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    329:354:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    691:696:void reset() -> reset
    509:521:void setFitToContents(boolean) -> setFitToContents
    569:570:void setHideable(boolean) -> setHideable
    531:549:void setPeekHeight(int) -> setPeekHeight
    590:591:void setSkipCollapsed(boolean) -> setSkipCollapsed
    666:680:void setStateInternal(int) -> setStateInternal
    699:707:boolean shouldHide(android.view.View,float) -> shouldHide
    993:1039:void updateImportantForAccessibility(boolean) -> updateImportantForAccessibility
android.support.design.widget.BottomSheetBehavior$2 -> android.support.design.widget.BottomSheetBehavior$2:
    766:766:void <init>(android.support.design.widget.BottomSheetBehavior) -> <init>
    878:878:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    872:872:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    883:886:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    794:797:void onViewDragStateChanged(int) -> onViewDragStateChanged
    789:790:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    803:868:void onViewReleased(android.view.View,float,float) -> onViewReleased
    770:783:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
android.support.design.widget.BottomSheetBehavior$SavedState -> android.support.design.widget.BottomSheetBehavior$SavedState:
    954:954:void <clinit>() -> <clinit>
    938:941:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    944:946:void <init>(android.os.Parcelable,int) -> <init>
    950:952:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.BottomSheetBehavior$SavedState$1 -> android.support.design.widget.BottomSheetBehavior$SavedState$1:
    955:955:void <init>() -> <init>
    955:955:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    955:955:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    958:958:android.support.design.widget.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    963:963:android.support.design.widget.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    955:955:java.lang.Object[] newArray(int) -> newArray
    968:968:android.support.design.widget.BottomSheetBehavior$SavedState[] newArray(int) -> newArray
android.support.design.widget.BottomSheetBehavior$SettleRunnable -> android.support.design.widget.BottomSheetBehavior$SettleRunnable:
    915:918:void <init>(android.support.design.widget.BottomSheetBehavior,android.view.View,int) -> <init>
    922:927:void run() -> run
android.support.design.widget.CheckableImageButton -> android.support.design.widget.CheckableImageButton:
    37:37:void <clinit>() -> <clinit>
    42:43:void <init>(android.content.Context) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:82:boolean isChecked() -> isChecked
    92:97:int[] onCreateDrawableState(int) -> onCreateDrawableState
    73:78:void setChecked(boolean) -> setChecked
    87:88:void toggle() -> toggle
android.support.design.widget.CheckableImageButton$1 -> android.support.design.widget.CheckableImageButton$1:
    54:54:void <init>(android.support.design.widget.CheckableImageButton) -> <init>
    57:59:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    64:67:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.design.widget.CircularBorderDrawable -> android.support.design.widget.CircularBorderDrawable:
    71:74:void <init>() -> <init>
    200:225:android.graphics.Shader createGradientShader() -> createGradientShader
    105:127:void draw(android.graphics.Canvas) -> draw
    79:79:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    159:159:int getOpacity() -> getOpacity
    131:133:boolean getPadding(android.graphics.Rect) -> getPadding
    176:176:boolean isStateful() -> isStateful
    171:172:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:191:boolean onStateChange(int[]) -> onStateChange
    138:140:void setAlpha(int) -> setAlpha
    143:149:void setBorderTint(android.content.res.ColorStateList) -> setBorderTint
    95:101:void setBorderWidth(float) -> setBorderWidth
    153:155:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    87:91:void setGradientColors(int,int,int,int) -> setGradientColors
    163:167:void setRotation(float) -> setRotation
android.support.design.widget.CircularBorderDrawable$CircularBorderState -> android.support.design.widget.CircularBorderDrawable$CircularBorderState:
    233:233:void <init>(android.support.design.widget.CircularBorderDrawable) -> <init>
    233:233:void <init>(android.support.design.widget.CircularBorderDrawable,android.support.design.widget.CircularBorderDrawable$1) -> <init>
    243:243:int getChangingConfigurations() -> getChangingConfigurations
    238:238:android.graphics.drawable.Drawable newDrawable() -> newDrawable
android.support.design.widget.CircularBorderDrawableLollipop -> android.support.design.widget.CircularBorderDrawableLollipop:
    28:28:void <init>() -> <init>
    32:34:void getOutline(android.graphics.Outline) -> getOutline
android.support.design.widget.CollapsingTextHelper -> android.support.design.widget.CollapsingTextHelper:
    52:63:void <clinit>() -> <clinit>
    123:132:void <init>(android.view.View) -> <init>
    758:763:int blendColors(int,int,float) -> blendColors
    448:522:void calculateBaseOffsets() -> calculateBaseOffsets
    189:193:float calculateCollapsedTextWidth() -> calculateCollapsedTextWidth
    399:400:void calculateCurrentOffsets() -> calculateCurrentOffsets
    579:581:boolean calculateIsRtl(java.lang.CharSequence) -> calculateIsRtl
    403:426:void calculateOffsets(float) -> calculateOffsets
    603:672:void calculateUsingTextSize(float) -> calculateUsingTextSize
    729:733:void clearTexture() -> clearTexture
    535:576:void draw(android.graphics.Canvas) -> draw
    675:676:void ensureExpandedTexture() -> ensureExpandedTexture
    203:210:void getCollapsedTextActualBounds(android.graphics.RectF) -> getCollapsedTextActualBounds
    748:748:android.content.res.ColorStateList getCollapsedTextColor() -> getCollapsedTextColor
    197:199:float getCollapsedTextHeight() -> getCollapsedTextHeight
    440:443:int getCurrentCollapsedTextColor() -> getCurrentCollapsedTextColor
    430:433:int getCurrentExpandedTextColor() -> getCurrentExpandedTextColor
    387:387:float getExpansionFraction() -> getExpansionFraction
    213:215:void getTextPaintCollapsed(android.text.TextPaint) -> getTextPaintCollapsed
    525:532:void interpolateBounds(float) -> interpolateBounds
    740:740:boolean isClose(float,float) -> isClose
    382:382:boolean isStateful() -> isStateful
    768:771:float lerp(float,float,float,android.animation.TimeInterpolator) -> lerp
    218:223:void onBoundsChanged() -> onBoundsChanged
    312:320:android.graphics.Typeface readFontFamilyTypeface(int) -> readFontFamilyTypeface
    702:708:void recalculate() -> recalculate
    775:775:boolean rectEquals(android.graphics.Rect,int,int,int,int) -> rectEquals
    181:186:void setCollapsedBounds(int,int,int,int) -> setCollapsedBounds
    248:277:void setCollapsedTextAppearance(int) -> setCollapsedTextAppearance
    159:163:void setCollapsedTextColor(android.content.res.ColorStateList) -> setCollapsedTextColor
    237:241:void setCollapsedTextGravity(int) -> setCollapsedTextGravity
    173:178:void setExpandedBounds(int,int,int,int) -> setExpandedBounds
    166:170:void setExpandedTextColor(android.content.res.ColorStateList) -> setExpandedTextColor
    226:230:void setExpandedTextGravity(int) -> setExpandedTextGravity
    145:149:void setExpandedTextSize(float) -> setExpandedTextSize
    362:368:void setExpansionFraction(float) -> setExpansionFraction
    588:599:void setInterpolatedTextSize(float) -> setInterpolatedTextSize
    140:142:void setPositionInterpolator(android.animation.TimeInterpolator) -> setPositionInterpolator
    371:378:boolean setState(int[]) -> setState
    716:722:void setText(java.lang.CharSequence) -> setText
    135:137:void setTextSizeInterpolator(android.animation.TimeInterpolator) -> setTextSizeInterpolator
    342:344:void setTypefaces(android.graphics.Typeface) -> setTypefaces
android.support.design.widget.CoordinatorLayout -> android.support.design.widget.CoordinatorLayout:
    116:150:void <clinit>() -> <clinit>
    197:198:void <init>(android.content.Context) -> <init>
    201:202:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    206:228:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    154:158:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1580:1592:void addPreDrawListener() -> addPreDrawListener
    1724:1724:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1250:1255:int clamp(int,int,int) -> clamp
    1036:1048:void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    825:846:android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1489:1501:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1222:1246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    305:318:void drawableStateChanged() -> drawableStateChanged
    1549:1566:void ensurePreDrawListener() -> ensurePreDrawListener
    111:111:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1719:1719:android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1704:1704:android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1709:1714:android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    949:951:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1513:1518:java.util.List getDependencies(android.view.View) -> getDependencies
    1541:1542:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1531:1536:java.util.List getDependents(android.view.View) -> getDependents
    705:706:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1060:1066:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    962:1033:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    574:581:int getKeyline(int) -> getKeyline
    935:937:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    374:374:android.support.v4.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    1950:1950:int getNestedScrollAxes() -> getNestedScrollAxes
    627:658:android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    300:300:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    715:715:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    710:710:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    416:429:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1572:1572:boolean hasDependencies(android.view.View) -> hasDependencies
    1668:1673:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1163:1187:void layoutChild(android.view.View,int) -> layoutChild
    1076:1084:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1100:1153:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1380:1387:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1617:1656:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    237:252:void onAttachedToWindow() -> onAttachedToWindow
    1275:1377:void onChildViewsChanged(int) -> onChildViewsChanged
    256:266:void onDetachedFromWindow() -> onDetachedFromWindow
    896:904:void onDraw(android.graphics.Canvas) -> onDraw
    503:516:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    876:892:void onLayout(boolean,int,int,int,int) -> onLayout
    860:862:void onLayoutChild(android.view.View,int) -> onLayoutChild
    739:822:void onMeasure(int,int) -> onMeasure
    733:735:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1896:1920:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1925:1945:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1850:1851:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1855:1892:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1813:1815:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1820:1846:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1759:1760:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1764:1781:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3147:3170:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3174:3192:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1729:1729:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1734:1754:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1785:1786:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1790:1808:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    521:561:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    588:622:android.support.design.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    432:498:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    662:695:void prepareChildren() -> prepareChildren
    923:925:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    162:164:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1599:1606:void removePreDrawListener() -> removePreDrawListener
    3197:3205:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    566:571:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    384:409:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    1217:1217:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    1195:1201:int resolveGravity(int) -> resolveGravity
    1209:1209:int resolveKeylineGravity(int) -> resolveKeylineGravity
    908:910:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1461:1467:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1470:1476:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    232:233:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    275:291:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    353:354:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    342:343:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    327:333:void setVisibility(int) -> setVisibility
    357:366:android.support.v4.view.WindowInsetsCompat setWindowInsets(android.support.v4.view.WindowInsetsCompat) -> setWindowInsets
    3209:3233:void setupForInsets() -> setupForInsets
    322:322:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.design.widget.CoordinatorLayout$1 -> android.support.design.widget.CoordinatorLayout$1:
    3216:3216:void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    3220:3220:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.design.widget.CoordinatorLayout$Behavior -> android.support.design.widget.CoordinatorLayout$Behavior:
    2024:2025:void <init>() -> <init>
    2035:2036:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2162:2162:boolean blocksInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2705:2705:boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2128:2128:int getScrimColor(android.support.design.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2146:2146:float getScrimOpacity(android.support.design.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2189:2189:boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2625:2625:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.support.design.widget.CoordinatorLayout,android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    2047:2047:void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2219:2219:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2238:2238:void onDependentViewRemoved(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2057:2057:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2084:2084:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2292:2292:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2263:2263:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2577:2577:boolean onNestedFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2605:2605:boolean onNestedPreFling(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2508:2508:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2542:2545:void onNestedPreScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2458:2458:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2492:2496:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2376:2376:void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2402:2406:void onNestedScrollAccepted(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2647:2647:boolean onRequestChildRectangleOnScreen(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2665:2665:void onRestoreInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2687:2687:android.os.Parcelable onSaveInstanceState(android.support.design.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2331:2331:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2359:2363:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2417:2417:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2442:2445:void onStopNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2108:2108:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
android.support.design.widget.CoordinatorLayout$HierarchyChangeListener -> android.support.design.widget.CoordinatorLayout$HierarchyChangeListener:
    3125:3126:void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    3130:3133:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3137:3142:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
android.support.design.widget.CoordinatorLayout$LayoutParams -> android.support.design.widget.CoordinatorLayout$LayoutParams:
    2778:2779:void <init>(int,int) -> <init>
    2782:2814:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2817:2818:void <init>(android.support.design.widget.CoordinatorLayout$LayoutParams) -> <init>
    2821:2822:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2825:2826:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2912:2912:boolean checkAnchorChanged() -> checkAnchorChanged
    3007:3009:boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    2923:2926:boolean didBlockInteraction() -> didBlockInteraction
    3032:3040:android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2835:2835:int getAnchorId() -> getAnchorId
    2861:2861:android.support.design.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    2987:2987:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2904:2904:android.graphics.Rect getLastChildRect() -> getLastChildRect
    2941:2946:boolean isBlockingInteractionBelow(android.support.design.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    2977:2979:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    2995:2996:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    2962:2963:void resetNestedScroll(int) -> resetNestedScroll
    2958:2959:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3048:3082:void resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> resolveAnchorView
    2874:2889:void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior) -> setBehavior
    2991:2992:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2896:2897:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    2966:2974:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3117:3120:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3093:3110:boolean verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout) -> verifyAnchorView
android.support.design.widget.CoordinatorLayout$OnPreDrawListener -> android.support.design.widget.CoordinatorLayout$OnPreDrawListener:
    1953:1953:void <init>(android.support.design.widget.CoordinatorLayout) -> <init>
    1956:1957:boolean onPreDraw() -> onPreDraw
android.support.design.widget.CoordinatorLayout$SavedState -> android.support.design.widget.CoordinatorLayout$SavedState:
    3277:3277:void <clinit>() -> <clinit>
    3239:3252:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3255:3256:void <init>(android.os.Parcelable) -> <init>
    3260:3275:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.CoordinatorLayout$SavedState$1 -> android.support.design.widget.CoordinatorLayout$SavedState$1:
    3278:3278:void <init>() -> <init>
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3281:3281:android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3286:3286:android.support.design.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object[] newArray(int) -> newArray
    3291:3291:android.support.design.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
android.support.design.widget.CoordinatorLayout$ViewElevationComparator -> android.support.design.widget.CoordinatorLayout$ViewElevationComparator:
    1964:1964:void <init>() -> <init>
    1964:1964:int compare(java.lang.Object,java.lang.Object) -> compare
    1967:1974:int compare(android.view.View,android.view.View) -> compare
android.support.design.widget.CutoutDrawable -> android.support.design.widget.CutoutDrawable:
    42:46:void <init>() -> <init>
    81:88:void draw(android.graphics.Canvas) -> draw
    55:55:boolean hasCutout() -> hasCutout
    112:115:void postDraw(android.graphics.Canvas) -> postDraw
    91:100:void preDraw(android.graphics.Canvas) -> preDraw
    76:77:void removeCutout() -> removeCutout
    103:109:void saveCanvasLayer(android.graphics.Canvas) -> saveCanvasLayer
    61:68:void setCutout(float,float,float,float) -> setCutout
    71:72:void setCutout(android.graphics.RectF) -> setCutout
    49:52:void setPaintStyles() -> setPaintStyles
    118:118:boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback) -> useHardwareLayer
android.support.design.widget.DescendantOffsetUtils -> android.support.design.widget.DescendantOffsetUtils:
    36:37:void <clinit>() -> <clinit>
    80:82:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    85:97:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:70:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
android.support.design.widget.DrawableUtils -> android.support.design.widget.DrawableUtils:
    45:45:boolean setContainerConstantState(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState) -> setContainerConstantState
    50:69:boolean setContainerConstantStateV9(android.graphics.drawable.DrawableContainer,android.graphics.drawable.Drawable$ConstantState) -> setContainerConstantStateV9
android.support.design.widget.FloatingActionButton -> android.support.design.widget.FloatingActionButton:
    184:185:void <init>(android.content.Context) -> <init>
    188:189:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    192:243:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:93:int access$000(android.support.design.widget.FloatingActionButton) -> access$000
    93:93:void access$101(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable) -> access$101
    544:545:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    512:513:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    1255:1258:android.support.design.widget.FloatingActionButtonImpl createImpl() -> createImpl
    737:739:void drawableStateChanged() -> drawableStateChanged
    328:328:android.content.res.ColorStateList getBackgroundTintList() -> getBackgroundTintList
    354:354:android.graphics.PorterDuff$Mode getBackgroundTintMode() -> getBackgroundTintMode
    1104:1104:float getCompatElevation() -> getCompatElevation
    1139:1139:float getCompatHoveredFocusedTranslationZ() -> getCompatHoveredFocusedTranslationZ
    1174:1174:float getCompatPressedTranslationZ() -> getCompatPressedTranslationZ
    810:810:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    782:787:boolean getContentRect(android.graphics.Rect) -> getContentRect
    684:684:int getCustomSize() -> getCustomSize
    568:568:int getExpandedComponentIdHint() -> getExpandedComponentIdHint
    1226:1226:android.support.design.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    1248:1251:android.support.design.widget.FloatingActionButtonImpl getImpl() -> getImpl
    796:798:void getMeasuredContentRect(android.graphics.Rect) -> getMeasuredContentRect
    274:274:int getRippleColor() -> getRippleColor
    285:285:android.content.res.ColorStateList getRippleColorStateList() -> getRippleColorStateList
    1203:1203:android.support.design.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    628:628:int getSize() -> getSize
    698:698:int getSizeDimension() -> getSizeDimension
    702:712:int getSizeDimension(int) -> getSizeDimension
    388:388:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    407:407:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    421:421:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    435:435:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    596:596:boolean getUseCompatPadding() -> getUseCompatPadding
    525:526:void hide() -> hide
    536:537:void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> hide
    540:541:void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> hide
    558:558:boolean isExpanded() -> isExpanded
    656:656:boolean isOrWillBeShown() -> isOrWillBeShown
    743:745:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    801:805:void offsetRectWithShadow(android.graphics.Rect) -> offsetRectWithShadow
    439:458:void onApplySupportImageTint() -> onApplySupportImageTint
    725:727:void onAttachedToWindow() -> onAttachedToWindow
    731:733:void onDetachedFromWindow() -> onDetachedFromWindow
    247:262:void onMeasure(int,int) -> onMeasure
    760:770:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    749:755:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    841:847:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    548:549:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    516:517:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    814:836:int resolveAdjustedSize(int,int) -> resolveAdjustedSize
    472:473:void setBackgroundColor(int) -> setBackgroundColor
    462:463:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    467:468:void setBackgroundResource(int) -> setBackgroundResource
    339:343:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    366:370:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1116:1117:void setCompatElevation(float) -> setCompatElevation
    1128:1129:void setCompatElevationResource(int) -> setCompatElevationResource
    1151:1152:void setCompatHoveredFocusedTranslationZ(float) -> setCompatHoveredFocusedTranslationZ
    1163:1164:void setCompatHoveredFocusedTranslationZResource(int) -> setCompatHoveredFocusedTranslationZResource
    1186:1187:void setCompatPressedTranslationZ(float) -> setCompatPressedTranslationZ
    1198:1199:void setCompatPressedTranslationZResource(int) -> setCompatPressedTranslationZResource
    670:671:void setCustomSize(int) -> setCustomSize
    563:564:void setExpandedComponentIdHint(int) -> setExpandedComponentIdHint
    1235:1236:void setHideMotionSpec(android.support.design.animation.MotionSpec) -> setHideMotionSpec
    1244:1245:void setHideMotionSpecResource(int) -> setHideMotionSpecResource
    483:485:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    478:479:void setImageResource(int) -> setImageResource
    299:300:void setRippleColor(int) -> setRippleColor
    313:317:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    1212:1213:void setShowMotionSpec(android.support.design.animation.MotionSpec) -> setShowMotionSpec
    1221:1222:void setShowMotionSpecResource(int) -> setShowMotionSpecResource
    613:618:void setSize(int) -> setSize
    378:379:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    397:398:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    412:416:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    426:430:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    581:585:void setUseCompatPadding(boolean) -> setUseCompatPadding
    493:494:void show() -> show
    504:505:void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> show
    508:509:void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean) -> show
    634:638:android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> wrapOnVisibilityChangedListener
android.support.design.widget.FloatingActionButton$1 -> android.support.design.widget.FloatingActionButton$1:
    638:638:void <init>(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    646:647:void onHidden() -> onHidden
    641:642:void onShown() -> onShown
android.support.design.widget.FloatingActionButton$BaseBehavior -> android.support.design.widget.FloatingActionButton$BaseBehavior:
    882:884:void <init>() -> <init>
    887:895:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    873:873:boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    1047:1053:boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    944:948:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1062:1093:void offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton) -> offsetIfNeeded
    923:928:void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    873:873:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    933:940:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> onDependentViewChanged
    873:873:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1020:1037:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int) -> onLayoutChild
    957:975:boolean shouldUpdateVisibility(android.view.View,android.support.design.widget.FloatingActionButton) -> shouldUpdateVisibility
    980:999:boolean updateFabVisibilityForAppBarLayout(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.support.design.widget.FloatingActionButton) -> updateFabVisibilityForAppBarLayout
    1004:1013:boolean updateFabVisibilityForBottomSheet(android.view.View,android.support.design.widget.FloatingActionButton) -> updateFabVisibilityForBottomSheet
android.support.design.widget.FloatingActionButton$Behavior -> android.support.design.widget.FloatingActionButton$Behavior:
    859:860:void <init>() -> <init>
    863:864:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:856:boolean getInsetDodgeRect(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.graphics.Rect) -> getInsetDodgeRect
    856:856:void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    856:856:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,android.view.View) -> onDependentViewChanged
    856:856:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton,int) -> onLayoutChild
android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener -> android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener:
    100:100:void <init>() -> <init>
    114:114:void onHidden(android.support.design.widget.FloatingActionButton) -> onHidden
    106:106:void onShown(android.support.design.widget.FloatingActionButton) -> onShown
android.support.design.widget.FloatingActionButton$ShadowDelegateImpl -> android.support.design.widget.FloatingActionButton$ShadowDelegateImpl:
    1263:1263:void <init>(android.support.design.widget.FloatingActionButton) -> <init>
    1267:1267:float getRadius() -> getRadius
    1284:1284:boolean isCompatPaddingEnabled() -> isCompatPaddingEnabled
    1279:1280:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    1272:1275:void setShadowPadding(int,int,int,int) -> setShadowPadding
android.support.design.widget.FloatingActionButtonImpl -> android.support.design.widget.FloatingActionButtonImpl:
    62:126:void <clinit>() -> <clinit>
    138:165:void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate) -> <init>
    356:360:void addOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> addOnHideAnimationListener
    341:345:void addOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> addOnShowAnimationListener
    290:304:void calculateImageMatrixFromScale(float,android.graphics.Matrix) -> calculateImageMatrixFromScale
    515:539:android.animation.AnimatorSet createAnimator(android.support.design.animation.MotionSpec,float,float,float) -> createAnimator
    582:591:android.support.design.widget.CircularBorderDrawable createBorderDrawable(int,android.content.res.ColorStateList) -> createBorderDrawable
    651:657:android.animation.ValueAnimator createElevationAnimator(android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl) -> createElevationAnimator
    620:623:android.graphics.drawable.GradientDrawable createShapeDrawable() -> createShapeDrawable
    607:617:void ensurePreDrawListener() -> ensurePreDrawListener
    543:543:android.graphics.drawable.Drawable getContentBackground() -> getContentBackground
    505:509:android.support.design.animation.MotionSpec getDefaultHideMotionSpec() -> getDefaultHideMotionSpec
    497:501:android.support.design.animation.MotionSpec getDefaultShowMotionSpec() -> getDefaultShowMotionSpec
    241:241:float getElevation() -> getElevation
    317:317:android.support.design.animation.MotionSpec getHideMotionSpec() -> getHideMotionSpec
    245:245:float getHoveredFocusedTranslationZ() -> getHoveredFocusedTranslationZ
    558:559:void getPadding(android.graphics.Rect) -> getPadding
    249:249:float getPressedTranslationZ() -> getPressedTranslationZ
    308:308:android.support.design.animation.MotionSpec getShowMotionSpec() -> getShowMotionSpec
    371:431:void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> hide
    641:646:boolean isOrWillBeHidden() -> isOrWillBeHidden
    631:636:boolean isOrWillBeShown() -> isOrWillBeShown
    337:338:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    595:595:android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> newCircularDrawable
    627:627:android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> newGradientDrawableForShape
    564:568:void onAttachedToWindow() -> onAttachedToWindow
    548:548:void onCompatShadowChanged() -> onCompatShadowChanged
    571:575:void onDetachedFromWindow() -> onDetachedFromWindow
    333:334:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    326:330:void onElevationsChanged(float,float,float) -> onElevationsChanged
    561:561:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    599:604:void onPreDraw() -> onPreDraw
    363:368:void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnHideAnimationListener
    348:353:void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener) -> removeOnShowAnimationListener
    578:578:boolean requirePreDrawListener() -> requirePreDrawListener
    174:209:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> setBackgroundDrawable
    212:218:void setBackgroundTintList(android.content.res.ColorStateList) -> setBackgroundTintList
    221:224:void setBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    234:238:void setElevation(float) -> setElevation
    321:322:void setHideMotionSpec(android.support.design.animation.MotionSpec) -> setHideMotionSpec
    253:257:void setHoveredFocusedTranslationZ(float) -> setHoveredFocusedTranslationZ
    282:287:void setImageMatrixScale(float) -> setImageMatrixScale
    267:271:void setMaxImageSize(int) -> setMaxImageSize
    260:264:void setPressedTranslationZ(float) -> setPressedTranslationZ
    227:231:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
    312:313:void setShowMotionSpec(android.support.design.animation.MotionSpec) -> setShowMotionSpec
    725:725:boolean shouldAnimateVisibilityChange() -> shouldAnimateVisibilityChange
    434:494:void show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean) -> show
    729:750:void updateFromViewRotation() -> updateFromViewRotation
    278:279:void updateImageMatrixScale() -> updateImageMatrixScale
    551:555:void updatePadding() -> updatePadding
android.support.design.widget.FloatingActionButtonImpl$1 -> android.support.design.widget.FloatingActionButtonImpl$1:
    388:388:void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    402:403:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    407:416:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    393:398:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.widget.FloatingActionButtonImpl$2 -> android.support.design.widget.FloatingActionButtonImpl$2:
    459:459:void <init>(android.support.design.widget.FloatingActionButtonImpl,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener) -> <init>
    470:476:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    462:466:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.widget.FloatingActionButtonImpl$3 -> android.support.design.widget.FloatingActionButtonImpl$3:
    609:609:void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    612:613:boolean onPreDraw() -> onPreDraw
android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation -> android.support.design.widget.FloatingActionButtonImpl$DisabledElevationAnimation:
    716:716:void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    720:720:float getTargetShadowSize() -> getTargetShadowSize
android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation -> android.support.design.widget.FloatingActionButtonImpl$ElevateToHoveredFocusedTranslationZAnimation:
    698:698:void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    702:702:float getTargetShadowSize() -> getTargetShadowSize
android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation -> android.support.design.widget.FloatingActionButtonImpl$ElevateToPressedTranslationZAnimation:
    707:707:void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    711:711:float getTargetShadowSize() -> getTargetShadowSize
android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation -> android.support.design.widget.FloatingActionButtonImpl$ResetElevationAnimation:
    689:689:void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    693:693:float getTargetShadowSize() -> getTargetShadowSize
android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl -> android.support.design.widget.FloatingActionButtonImpl$ShadowAnimatorImpl:
    660:660:void <init>(android.support.design.widget.FloatingActionButtonImpl) -> <init>
    660:660:void <init>(android.support.design.widget.FloatingActionButtonImpl,android.support.design.widget.FloatingActionButtonImpl$1) -> <init>
    680:682:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    668:676:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.FloatingActionButtonImplLollipop -> android.support.design.widget.FloatingActionButtonImplLollipop:
    53:54:void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate) -> <init>
    155:161:android.animation.Animator createElevationAnimator(float,float) -> createElevationAnimator
    166:166:float getElevation() -> getElevation
    228:243:void getPadding(android.graphics.Rect) -> getPadding
    209:209:void jumpDrawableToCurrentState() -> jumpDrawableToCurrentState
    218:218:android.support.design.widget.CircularBorderDrawable newCircularDrawable() -> newCircularDrawable
    223:223:android.graphics.drawable.GradientDrawable newGradientDrawableForShape() -> newGradientDrawableForShape
    171:172:void onCompatShadowChanged() -> onCompatShadowChanged
    188:204:void onDrawableStateChanged(int[]) -> onDrawableStateChanged
    102:151:void onElevationsChanged(float,float,float) -> onElevationsChanged
    176:184:void onPaddingUpdated(android.graphics.Rect) -> onPaddingUpdated
    213:213:boolean requirePreDrawListener() -> requirePreDrawListener
    63:85:void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int) -> setBackgroundDrawable
    89:95:void setRippleColor(android.content.res.ColorStateList) -> setRippleColor
android.support.design.widget.FloatingActionButtonImplLollipop$AlwaysStatefulGradientDrawable -> android.support.design.widget.FloatingActionButtonImplLollipop$AlwaysStatefulGradientDrawable:
    251:251:void <init>() -> <init>
    254:254:boolean isStateful() -> isStateful
android.support.design.widget.HeaderBehavior -> android.support.design.widget.HeaderBehavior:
    48:48:void <init>() -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    295:298:void ensureVelocityTracker() -> ensureVelocityTracker
    243:268:boolean fling(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,float) -> fling
    56:119:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    124:139:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    229:229:int scroll(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int) -> scroll
    199:199:int setHeaderTopBottomOffset(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> setHeaderTopBottomOffset
android.support.design.widget.HeaderBehavior$FlingRunnable -> android.support.design.widget.HeaderBehavior$FlingRunnable:
    304:307:void <init>(android.support.design.widget.HeaderBehavior,android.support.design.widget.CoordinatorLayout,android.view.View) -> <init>
    311:320:void run() -> run
android.support.design.widget.HeaderScrollingViewBehavior -> android.support.design.widget.HeaderScrollingViewBehavior:
    45:45:void <init>() -> <init>
    48:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:156:int getOverlapPixelsForOffset(android.view.View) -> getOverlapPixelsForOffset
    193:193:int getOverlayTop() -> getOverlayTop
    168:168:int getScrollRange(android.view.View) -> getScrollRange
    175:175:int getVerticalLayoutGap() -> getVerticalLayoutGap
    107:149:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    59:101:boolean onMeasureChild(android.support.design.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    162:162:int resolveGravity(int) -> resolveGravity
    185:186:void setOverlayTop(int) -> setOverlayTop
android.support.design.widget.IndicatorViewController -> android.support.design.widget.IndicatorViewController:
    118:123:void <init>(android.support.design.widget.TextInputLayout) -> <init>
    57:57:int access$002(android.support.design.widget.IndicatorViewController,int) -> access$002
    57:57:android.animation.Animator access$102(android.support.design.widget.IndicatorViewController,android.animation.Animator) -> access$102
    57:57:android.widget.TextView access$200(android.support.design.widget.IndicatorViewController) -> access$200
    359:388:void addIndicator(android.widget.TextView,int) -> addIndicator
    343:352:void adjustIndicatorPadding() -> adjustIndicatorPadding
    355:355:boolean canAdjustIndicatorPadding() -> canAdjustIndicatorPadding
    321:324:void cancelCaptionAnimator() -> cancelCaptionAnimator
    291:292:void createCaptionAnimators(java.util.List,boolean,android.widget.TextView,int,int,int) -> createCaptionAnimators
    305:309:android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean) -> createCaptionOpacityAnimator
    313:317:android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView) -> createCaptionTranslationYAnimator
    484:484:boolean errorShouldBeShown() -> errorShouldBeShown
    332:334:android.widget.TextView getCaptionViewFromDisplayState(int) -> getCaptionViewFromDisplayState
    508:508:java.lang.CharSequence getErrorText() -> getErrorText
    532:532:int getErrorViewCurrentTextColor() -> getErrorViewCurrentTextColor
    537:537:android.content.res.ColorStateList getErrorViewTextColors() -> getErrorViewTextColors
    512:512:java.lang.CharSequence getHelperText() -> getHelperText
    555:555:int getHelperTextViewCurrentTextColor() -> getHelperTextViewCurrentTextColor
    163:177:void hideError() -> hideError
    139:147:void hideHelperText() -> hideHelperText
    488:488:boolean isCaptionStateError(int) -> isCaptionStateError
    327:327:boolean isCaptionView(int) -> isCaptionView
    442:442:boolean isErrorEnabled() -> isErrorEnabled
    446:446:boolean isHelperTextEnabled() -> isHelperTextEnabled
    391:404:void removeIndicator(android.widget.TextView,int) -> removeIndicator
    258:281:void setCaptionViewVisibilities(int,int) -> setCaptionViewVisibilities
    414:439:void setErrorEnabled(boolean) -> setErrorEnabled
    547:551:void setErrorTextAppearance(int) -> setErrorTextAppearance
    541:544:void setErrorViewTextColor(android.content.res.ColorStateList) -> setErrorViewTextColor
    570:574:void setHelperTextAppearance(int) -> setHelperTextAppearance
    451:477:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    564:567:void setHelperTextViewTextColor(android.content.res.ColorStateList) -> setHelperTextViewTextColor
    525:528:void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface) -> setTextViewTypeface
    517:522:void setTypefaces(android.graphics.Typeface) -> setTypefaces
    407:410:void setViewGroupGoneIfEmpty(android.view.ViewGroup,int) -> setViewGroupGoneIfEmpty
    189:189:boolean shouldAnimateCaptionView(android.widget.TextView,java.lang.CharSequence) -> shouldAnimateCaptionView
    150:160:void showError(java.lang.CharSequence) -> showError
    126:136:void showHelper(java.lang.CharSequence) -> showHelper
    201:254:void updateCaptionViewsVisibility(int,int,boolean) -> updateCaptionViewsVisibility
android.support.design.widget.IndicatorViewController$1 -> android.support.design.widget.IndicatorViewController$1:
    227:227:void <init>(android.support.design.widget.IndicatorViewController,int,android.widget.TextView,int,android.widget.TextView) -> <init>
    230:238:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    242:245:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.design.widget.MathUtils -> android.support.design.widget.MathUtils:
    28:30:float dist(float,float,float,float) -> dist
    65:65:float distanceToFurthestCorner(float,float,float,float,float,float) -> distanceToFurthestCorner
    37:37:float lerp(float,float,float) -> lerp
    74:74:float max(float,float,float,float) -> max
android.support.design.widget.ShadowDrawableWrapper -> android.support.design.widget.ShadowDrawableWrapper:
    41:41:void <clinit>() -> <clinit>
    83:96:void <init>(android.content.Context,android.graphics.drawable.Drawable,float,float,float) -> <init>
    357:372:void buildComponents(android.graphics.Rect) -> buildComponents
    306:351:void buildShadowCorners() -> buildShadowCorners
    177:180:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    168:171:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    201:208:void draw(android.graphics.Canvas) -> draw
    218:303:void drawShadow(android.graphics.Canvas) -> drawShadow
    186:186:int getOpacity() -> getOpacity
    154:163:boolean getPadding(android.graphics.Rect) -> getPadding
    149:149:float getShadowSize() -> getShadowSize
    118:119:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    105:107:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    111:114:void setAlpha(int) -> setAlpha
    211:215:void setRotation(float) -> setRotation
    122:123:void setShadowSize(float,float) -> setShadowSize
    145:146:void setShadowSize(float) -> setShadowSize
    100:101:int toEven(float) -> toEven
android.support.design.widget.Snackbar -> android.support.design.widget.Snackbar:
    95:95:void <clinit>() -> <clinit>
    134:137:void <init>(android.view.ViewGroup,android.view.View,android.support.design.snackbar.ContentViewCallback) -> <init>
    150:151:void dismiss() -> dismiss
    234:255:android.view.ViewGroup findSuitableParent(android.view.View) -> findSuitableParent
    329:329:int getDuration() -> getDuration
    206:209:boolean hasSnackbarButtonStyleAttr(android.content.Context) -> hasSnackbarButtonStyleAttr
    179:181:android.support.design.widget.Snackbar make(android.view.View,java.lang.CharSequence,int) -> make
    230:230:android.support.design.widget.Snackbar make(android.view.View,int,int) -> make
    292:292:android.support.design.widget.Snackbar setAction(int,android.view.View$OnClickListener) -> setAction
    303:323:android.support.design.widget.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener) -> setAction
    268:271:android.support.design.widget.Snackbar setText(java.lang.CharSequence) -> setText
    143:144:void show() -> show
android.support.design.widget.Snackbar$1 -> android.support.design.widget.Snackbar$1:
    314:314:void <init>(android.support.design.widget.Snackbar,android.view.View$OnClickListener) -> <init>
    317:320:void onClick(android.view.View) -> onClick
android.support.design.widget.Snackbar$Callback -> android.support.design.widget.Snackbar$Callback:
    105:105:void <init>() -> <init>
    105:105:void onShown(java.lang.Object) -> onShown
    120:120:void onShown(android.support.design.widget.Snackbar) -> onShown
android.support.design.widget.Snackbar$SnackbarLayout -> android.support.design.widget.Snackbar$SnackbarLayout:
    393:394:void <init>(android.content.Context) -> <init>
    397:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    402:417:void onMeasure(int,int) -> onMeasure
android.support.design.widget.SnackbarContentLayout -> android.support.design.widget.SnackbarContentLayout:
    42:43:void <init>(android.content.Context) -> <init>
    46:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    134:141:void animateContentIn(int,int) -> animateContentIn
    145:152:void animateContentOut(int,int) -> animateContentOut
    66:66:android.widget.Button getActionView() -> getActionView
    62:62:android.widget.TextView getMessageView() -> getMessageView
    56:59:void onFinishInflate() -> onFinishInflate
    71:102:void onMeasure(int,int) -> onMeasure
    120:130:void updateTopBottomPadding(android.view.View,int,int) -> updateTopBottomPadding
    106:116:boolean updateViewsWithinLayout(int,int,int) -> updateViewsWithinLayout
android.support.design.widget.SnackbarManager -> android.support.design.widget.SnackbarManager:
    47:63:void <init>() -> <init>
    202:209:boolean cancelSnackbarLocked(android.support.design.widget.SnackbarManager$SnackbarRecord,int) -> cancelSnackbarLocked
    104:110:void dismiss(android.support.design.widget.SnackbarManager$Callback,int) -> dismiss
    35:38:android.support.design.widget.SnackbarManager getInstance() -> getInstance
    237:241:void handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord) -> handleTimeout
    166:168:boolean isCurrentOrNext(android.support.design.widget.SnackbarManager$Callback) -> isCurrentOrNext
    213:213:boolean isCurrentSnackbarLocked(android.support.design.widget.SnackbarManager$Callback) -> isCurrentSnackbarLocked
    217:217:boolean isNextSnackbarLocked(android.support.design.widget.SnackbarManager$Callback) -> isNextSnackbarLocked
    118:126:void onDismissed(android.support.design.widget.SnackbarManager$Callback) -> onDismissed
    134:138:void onShown(android.support.design.widget.SnackbarManager$Callback) -> onShown
    142:147:void pauseTimeout(android.support.design.widget.SnackbarManager$Callback) -> pauseTimeout
    151:156:void restoreTimeoutIfPaused(android.support.design.widget.SnackbarManager$Callback) -> restoreTimeoutIfPaused
    221:234:void scheduleTimeoutLocked(android.support.design.widget.SnackbarManager$SnackbarRecord) -> scheduleTimeoutLocked
    72:100:void show(int,android.support.design.widget.SnackbarManager$Callback) -> show
    187:199:void showNextSnackbarLocked() -> showNextSnackbarLocked
android.support.design.widget.SnackbarManager$1 -> android.support.design.widget.SnackbarManager$1:
    52:52:void <init>(android.support.design.widget.SnackbarManager) -> <init>
    55:58:boolean handleMessage(android.os.Message) -> handleMessage
android.support.design.widget.SnackbarManager$SnackbarRecord -> android.support.design.widget.SnackbarManager$SnackbarRecord:
    176:179:void <init>(int,android.support.design.widget.SnackbarManager$Callback) -> <init>
    182:182:boolean isSnackbar(android.support.design.widget.SnackbarManager$Callback) -> isSnackbar
android.support.design.widget.StateListAnimator -> android.support.design.widget.StateListAnimator:
    35:42:void <init>() -> <init>
    60:63:void addState(int[],android.animation.ValueAnimator) -> addState
    96:100:void cancel() -> cancel
    108:112:void jumpToCurrentState() -> jumpToCurrentState
    67:88:void setState(int[]) -> setState
    91:93:void start(android.support.design.widget.StateListAnimator$Tuple) -> start
android.support.design.widget.StateListAnimator$1 -> android.support.design.widget.StateListAnimator$1:
    43:43:void <init>(android.support.design.widget.StateListAnimator) -> <init>
    46:49:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.StateListAnimator$Tuple -> android.support.design.widget.StateListAnimator$Tuple:
    118:121:void <init>(int[],android.animation.ValueAnimator) -> <init>
android.support.design.widget.SwipeDismissBehavior -> android.support.design.widget.SwipeDismissBehavior:
    38:207:void <init>() -> <init>
    204:204:boolean canSwipeDismissView(android.view.View) -> canSwipeDismissView
    384:384:float clamp(float,float,float) -> clamp
    388:388:int clamp(int,int,int) -> clamp
    354:360:void ensureViewDragHelper(android.view.ViewGroup) -> ensureViewDragHelper
    403:403:float fraction(float,float,float) -> fraction
    166:185:boolean onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    190:194:boolean onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    149:150:void setEndAlphaSwipeDistance(float) -> setEndAlphaSwipeDistance
    112:113:void setListener(android.support.design.widget.SwipeDismissBehavior$OnDismissListener) -> setListener
    140:141:void setStartAlphaSwipeDistance(float) -> setStartAlphaSwipeDistance
    122:123:void setSwipeDirection(int) -> setSwipeDirection
android.support.design.widget.SwipeDismissBehavior$1 -> android.support.design.widget.SwipeDismissBehavior$1:
    208:212:void <init>(android.support.design.widget.SwipeDismissBehavior) -> <init>
    300:326:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    331:331:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    295:295:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    222:231:void onViewCaptured(android.view.View,int) -> onViewCaptured
    235:238:void onViewDragStateChanged(int) -> onViewDragStateChanged
    336:350:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    243:265:void onViewReleased(android.view.View,float,float) -> onViewReleased
    268:287:boolean shouldDismiss(android.view.View,float) -> shouldDismiss
    217:217:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
android.support.design.widget.SwipeDismissBehavior$SettleRunnable -> android.support.design.widget.SwipeDismissBehavior$SettleRunnable:
    366:369:void <init>(android.support.design.widget.SwipeDismissBehavior,android.view.View,boolean) -> <init>
    373:380:void run() -> run
android.support.design.widget.TabLayout -> android.support.design.widget.TabLayout:
    191:191:void <clinit>() -> <clinit>
    395:396:void <init>(android.content.Context) -> <init>
    399:400:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    403:463:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:167:android.graphics.RectF access$400(android.support.design.widget.TabLayout) -> access$400
    672:675:void addOnTabSelectedListener(android.support.design.widget.TabLayout$BaseOnTabSelectedListener) -> addOnTabSelectedListener
    584:585:void addTab(android.support.design.widget.TabLayout$Tab) -> addTab
    605:606:void addTab(android.support.design.widget.TabLayout$Tab,boolean) -> addTab
    616:617:void addTab(android.support.design.widget.TabLayout$Tab,int,boolean) -> addTab
    628:642:void addTabFromItemView(android.support.design.widget.TabItem) -> addTabFromItemView
    1369:1371:void addTabView(android.support.design.widget.TabLayout$Tab) -> addTabView
    1375:1376:void addView(android.view.View) -> addView
    1380:1381:void addView(android.view.View,int) -> addView
    1385:1386:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    1390:1391:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1394:1397:void addViewInternal(android.view.View) -> addViewInternal
    1510:1520:void animateToTab(int) -> animateToTab
    1647:1664:void applyModeAndGravity() -> applyModeAndGravity
    1625:1643:int calculateScrollXForTab(int,float) -> calculateScrollXForTab
    1359:1366:void configureTab(android.support.design.widget.TabLayout$Tab,int) -> configureTab
    2704:2717:android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    1402:1405:android.widget.LinearLayout$LayoutParams createLayoutParamsForTabs() -> createLayoutParamsForTabs
    709:713:android.support.design.widget.TabLayout$Tab createTabFromPool() -> createTabFromPool
    1343:1355:android.support.design.widget.TabLayout$TabView createTabView(android.support.design.widget.TabLayout$Tab) -> createTabView
    1619:1622:void dispatchTabReselected(android.support.design.widget.TabLayout$Tab) -> dispatchTabReselected
    1607:1610:void dispatchTabSelected(android.support.design.widget.TabLayout$Tab) -> dispatchTabSelected
    1613:1616:void dispatchTabUnselected(android.support.design.widget.TabLayout$Tab) -> dispatchTabUnselected
    1420:1420:int dpToPx(int) -> dpToPx
    1538:1550:void ensureScrollAnimator() -> ensureScrollAnimator
    166:166:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2748:2748:android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2722:2730:int getDefaultHeight() -> getDefaultHeight
    742:742:int getSelectedTabPosition() -> getSelectedTabPosition
    733:733:android.support.design.widget.TabLayout$Tab getTabAt(int) -> getTabAt
    727:727:int getTabCount() -> getTabCount
    854:854:int getTabGravity() -> getTabGravity
    1062:1062:android.content.res.ColorStateList getTabIconTint() -> getTabIconTint
    887:887:int getTabIndicatorGravity() -> getTabIndicatorGravity
    2752:2752:int getTabMaxWidth() -> getTabMaxWidth
    2734:2739:int getTabMinWidth() -> getTabMinWidth
    831:831:int getTabMode() -> getTabMode
    1073:1073:android.content.res.ColorStateList getTabRippleColor() -> getTabRippleColor
    1293:1293:int getTabScrollRange() -> getTabScrollRange
    1120:1120:android.graphics.drawable.Drawable getTabSelectedIndicator() -> getTabSelectedIndicator
    1024:1024:android.content.res.ColorStateList getTabTextColors() -> getTabTextColors
    701:704:android.support.design.widget.TabLayout$Tab newTab() -> newTab
    1267:1279:void onAttachedToWindow() -> onAttachedToWindow
    1283:1290:void onDetachedFromWindow() -> onDetachedFromWindow
    1426:1434:void onDraw(android.graphics.Canvas) -> onDraw
    1440:1497:void onMeasure(int,int) -> onMeasure
    1318:1334:void populateFromPagerAdapter() -> populateFromPagerAdapter
    718:718:boolean releaseFromTabPool(android.support.design.widget.TabLayout$Tab) -> releaseFromTabPool
    788:800:void removeAllTabs() -> removeAllTabs
    684:685:void removeOnTabSelectedListener(android.support.design.widget.TabLayout$BaseOnTabSelectedListener) -> removeOnTabSelectedListener
    1500:1507:void removeTabViewAt(int) -> removeTabViewAt
    1569:1570:void selectTab(android.support.design.widget.TabLayout$Tab) -> selectTab
    1573:1604:void selectTab(android.support.design.widget.TabLayout$Tab,boolean) -> selectTab
    930:940:void setInlineLabel(boolean) -> setInlineLabel
    951:952:void setInlineLabelResource(int) -> setInlineLabelResource
    652:661:void setOnTabSelectedListener(android.support.design.widget.TabLayout$BaseOnTabSelectedListener) -> setOnTabSelectedListener
    1298:1315:void setPagerAdapter(android.support.v4.view.PagerAdapter,boolean) -> setPagerAdapter
    1553:1555:void setScrollAnimatorListener(android.animation.Animator$AnimatorListener) -> setScrollAnimatorListener
    547:548:void setScrollPosition(int,float,boolean) -> setScrollPosition
    555:557:void setScrollPosition(int,float,boolean,boolean) -> setScrollPosition
    1134:1138:void setSelectedTabIndicator(android.graphics.drawable.Drawable) -> setSelectedTabIndicator
    1151:1157:void setSelectedTabIndicator(int) -> setSelectedTabIndicator
    520:521:void setSelectedTabIndicatorColor(int) -> setSelectedTabIndicatorColor
    872:876:void setSelectedTabIndicatorGravity(int) -> setSelectedTabIndicatorGravity
    533:534:void setSelectedTabIndicatorHeight(int) -> setSelectedTabIndicatorHeight
    1558:1566:void setSelectedTabView(int) -> setSelectedTabView
    841:845:void setTabGravity(int) -> setTabGravity
    1043:1047:void setTabIconTint(android.content.res.ColorStateList) -> setTabIconTint
    1056:1057:void setTabIconTintResource(int) -> setTabIconTintResource
    906:908:void setTabIndicatorFullWidth(boolean) -> setTabIndicatorFullWidth
    818:822:void setTabMode(int) -> setTabMode
    1087:1096:void setTabRippleColor(android.content.res.ColorStateList) -> setTabRippleColor
    1108:1109:void setTabRippleColorResource(int) -> setTabRippleColorResource
    1015:1019:void setTabTextColors(android.content.res.ColorStateList) -> setTabTextColors
    1256:1257:void setTabsFromPagerAdapter(android.support.v4.view.PagerAdapter) -> setTabsFromPagerAdapter
    975:984:void setUnboundedRipple(boolean) -> setUnboundedRipple
    995:996:void setUnboundedRippleResource(int) -> setUnboundedRippleResource
    1168:1169:void setupWithViewPager(android.support.v4.view.ViewPager) -> setupWithViewPager
    1188:1189:void setupWithViewPager(android.support.v4.view.ViewPager,boolean) -> setupWithViewPager
    1193:1247:void setupWithViewPager(android.support.v4.view.ViewPager,boolean,boolean) -> setupWithViewPager
    1262:1262:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1337:1340:void updateAllTabs() -> updateAllTabs
    1409:1416:void updateTabViewLayoutParams(android.widget.LinearLayout$LayoutParams) -> updateTabViewLayoutParams
    1667:1675:void updateTabViews(boolean) -> updateTabViews
android.support.design.widget.TabLayout$1 -> android.support.design.widget.TabLayout$1:
    1543:1543:void <init>(android.support.design.widget.TabLayout) -> <init>
    1546:1547:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.TabLayout$AdapterChangeListener -> android.support.design.widget.TabLayout$AdapterChangeListener:
    2862:2862:void <init>(android.support.design.widget.TabLayout) -> <init>
    2869:2872:void onAdapterChanged(android.support.v4.view.ViewPager,android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    2875:2876:void setAutoRefresh(boolean) -> setAutoRefresh
android.support.design.widget.TabLayout$PagerAdapterObserver -> android.support.design.widget.TabLayout$PagerAdapterObserver:
    2846:2846:void <init>(android.support.design.widget.TabLayout) -> <init>
    2850:2851:void onChanged() -> onChanged
    2855:2856:void onInvalidated() -> onInvalidated
android.support.design.widget.TabLayout$SlidingTabIndicator -> android.support.design.widget.TabLayout$SlidingTabIndicator:
    2385:2390:void <init>(android.support.design.widget.TabLayout,android.content.Context) -> <init>
    2566:2617:void animateIndicatorToPosition(int,int) -> animateIndicatorToPosition
    2632:2643:void calculateTabViewContentBounds(android.support.design.widget.TabLayout$TabView,android.graphics.RectF) -> calculateTabViewContentBounds
    2407:2413:boolean childrenNeedLayout() -> childrenNeedLayout
    2647:2700:void draw(android.graphics.Canvas) -> draw
    2502:2516:void onLayout(boolean,int,int,int,int) -> onLayout
    2446:2498:void onMeasure(int,int) -> onMeasure
    2432:2442:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2557:2563:void setIndicatorPosition(int,int) -> setIndicatorPosition
    2417:2424:void setIndicatorPositionFromTabPosition(int,float) -> setIndicatorPositionFromTabPosition
    2393:2397:void setSelectedIndicatorColor(int) -> setSelectedIndicatorColor
    2400:2404:void setSelectedIndicatorHeight(int) -> setSelectedIndicatorHeight
    2519:2554:void updateIndicatorPosition() -> updateIndicatorPosition
android.support.design.widget.TabLayout$SlidingTabIndicator$1 -> android.support.design.widget.TabLayout$SlidingTabIndicator$1:
    2598:2598:void <init>(android.support.design.widget.TabLayout$SlidingTabIndicator,int,int,int,int) -> <init>
    2601:2605:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.TabLayout$SlidingTabIndicator$2 -> android.support.design.widget.TabLayout$SlidingTabIndicator$2:
    2608:2608:void <init>(android.support.design.widget.TabLayout$SlidingTabIndicator,int) -> <init>
    2611:2613:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.design.widget.TabLayout$Tab -> android.support.design.widget.TabLayout$Tab:
    1704:1706:void <init>() -> <init>
    1679:1679:java.lang.CharSequence access$100(android.support.design.widget.TabLayout$Tab) -> access$100
    1679:1679:java.lang.CharSequence access$200(android.support.design.widget.TabLayout$Tab) -> access$200
    1734:1734:android.view.View getCustomView() -> getCustomView
    1780:1780:android.graphics.drawable.Drawable getIcon() -> getIcon
    1790:1790:int getPosition() -> getPosition
    1804:1804:java.lang.CharSequence getText() -> getText
    1879:1880:boolean isSelected() -> isSelected
    1939:1947:void reset() -> reset
    1871:1872:void select() -> select
    1913:1915:android.support.design.widget.TabLayout$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1750:1752:android.support.design.widget.TabLayout$Tab setCustomView(android.view.View) -> setCustomView
    1769:1770:android.support.design.widget.TabLayout$Tab setCustomView(int) -> setCustomView
    1815:1817:android.support.design.widget.TabLayout$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1794:1795:void setPosition(int) -> setPosition
    1843:1851:android.support.design.widget.TabLayout$Tab setText(java.lang.CharSequence) -> setText
    1933:1936:void updateView() -> updateView
android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener -> android.support.design.widget.TabLayout$TabLayoutOnPageChangeListener:
    2769:2771:void <init>(android.support.design.widget.TabLayout) -> <init>
    2775:2777:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    2782:2795:void onPageScrolled(int,float,int) -> onPageScrolled
    2799:2811:void onPageSelected(int) -> onPageSelected
    2814:2815:void reset() -> reset
android.support.design.widget.TabLayout$TabView -> android.support.design.widget.TabLayout$TabView:
    1962:1972:void <init>(android.support.design.widget.TabLayout,android.content.Context) -> <init>
    1950:1950:void access$000(android.support.design.widget.TabLayout$TabView,android.content.Context) -> access$000
    1950:1950:void access$300(android.support.design.widget.TabLayout$TabView,android.graphics.Canvas) -> access$300
    1950:1950:int access$500(android.support.design.widget.TabLayout$TabView) -> access$500
    2366:2366:float approximateLineWidth(android.text.Layout,int,float) -> approximateLineWidth
    2030:2034:void drawBackground(android.graphics.Canvas) -> drawBackground
    2038:2049:void drawableStateChanged() -> drawableStateChanged
    2345:2357:int getContentWidth() -> getContentWidth
    2092:2095:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2100:2103:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    2107:2168:void onMeasure(int,int) -> onMeasure
    2053:2062:boolean performClick() -> performClick
    2178:2180:void reset() -> reset
    2068:2088:void setSelected(boolean) -> setSelected
    2171:2175:void setTab(android.support.design.widget.TabLayout$Tab) -> setTab
    2183:2266:void update() -> update
    1975:2017:void updateBackgroundDrawable(android.content.Context) -> updateBackgroundDrawable
    2269:2275:void updateOrientation() -> updateOrientation
    2279:2336:void updateTextAndIcon(android.widget.TextView,android.widget.ImageView) -> updateTextAndIcon
android.support.design.widget.TabLayout$ViewPagerOnTabSelectedListener -> android.support.design.widget.TabLayout$ViewPagerOnTabSelectedListener:
    2825:2827:void <init>(android.support.v4.view.ViewPager) -> <init>
    2842:2842:void onTabReselected(android.support.design.widget.TabLayout$Tab) -> onTabReselected
    2831:2832:void onTabSelected(android.support.design.widget.TabLayout$Tab) -> onTabSelected
    2837:2837:void onTabUnselected(android.support.design.widget.TabLayout$Tab) -> onTabUnselected
android.support.design.widget.TextInputEditText -> android.support.design.widget.TextInputEditText:
    40:41:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:59:java.lang.CharSequence getHint() -> getHint
    87:88:java.lang.CharSequence getHintFromLayout() -> getHintFromLayout
    75:82:android.support.design.widget.TextInputLayout getTextInputLayout() -> getTextInputLayout
    64:70:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
android.support.design.widget.TextInputLayout -> android.support.design.widget.TextInputLayout:
    243:244:void <init>(android.content.Context) -> <init>
    247:248:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    251:372:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    143:143:boolean access$000(android.support.design.widget.TextInputLayout) -> access$000
    376:393:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2049:2066:void animateToExpansionFraction(float) -> animateToExpansionFraction
    1342:1370:void applyBoxAttributes() -> applyBoxAttributes
    1954:1958:void applyCutoutPadding(android.graphics.RectF) -> applyCutoutPadding
    1865:1881:void applyPasswordToggleTint() -> applyPasswordToggleTint
    425:437:void assignBoxBackgroundByMode() -> assignBoxBackgroundByMode
    1254:1260:int calculateBoxBackgroundTop() -> calculateBoxBackgroundTop
    1285:1289:int calculateCollapsedTextTopBounds() -> calculateCollapsedTextTopBounds
    1269:1278:int calculateLabelMarginTop() -> calculateLabelMarginTop
    1948:1951:void closeCutout() -> closeCutout
    1919:1931:void collapseHint(boolean) -> collapseHint
    1934:1934:boolean cutoutEnabled() -> cutoutEnabled
    641:643:void dispatchProvideAutofillStructure(android.view.ViewStructure,int) -> dispatchProvideAutofillStructure
    1522:1525:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1574:1581:void draw(android.graphics.Canvas) -> draw
    1967:1997:void drawableStateChanged() -> drawableStateChanged
    1407:1443:void ensureBackgroundDrawableStateWorkaround() -> ensureBackgroundDrawableStateWorkaround
    2033:2045:void expandHint(boolean) -> expandHint
    397:398:android.graphics.drawable.Drawable getBoxBackground() -> getBoxBackground
    493:493:int getBoxBackgroundColor() -> getBoxBackgroundColor
    573:573:float getBoxCornerRadiusBottomEnd() -> getBoxCornerRadiusBottomEnd
    583:583:float getBoxCornerRadiusBottomStart() -> getBoxCornerRadiusBottomStart
    563:563:float getBoxCornerRadiusTopEnd() -> getBoxCornerRadiusTopEnd
    553:553:float getBoxCornerRadiusTopStart() -> getBoxCornerRadiusTopStart
    461:461:int getBoxStrokeColor() -> getBoxStrokeColor
    587:599:float[] getCornerRadiiAsArray() -> getCornerRadiiAsArray
    1148:1148:int getCounterMaxLength() -> getCounterMaxLength
    1157:1160:java.lang.CharSequence getCounterOverflowDescription() -> getCounterOverflowDescription
    927:927:android.content.res.ColorStateList getDefaultHintTextColor() -> getDefaultHintTextColor
    795:795:android.widget.EditText getEditText() -> getEditText
    1535:1535:java.lang.CharSequence getError() -> getError
    958:958:int getErrorCurrentTextColors() -> getErrorCurrentTextColors
    2090:2090:int getErrorTextCurrentColor() -> getErrorTextCurrentColor
    1547:1547:java.lang.CharSequence getHelperText() -> getHelperText
    1035:1035:int getHelperTextCurrentTextColor() -> getHelperTextCurrentTextColor
    830:830:java.lang.CharSequence getHint() -> getHint
    2085:2085:float getHintCollapsedTextHeight() -> getHintCollapsedTextHeight
    2080:2080:int getHintCurrentCollapsedTextColor() -> getHintCurrentCollapsedTextColor
    1742:1742:java.lang.CharSequence getPasswordVisibilityToggleContentDescription() -> getPasswordVisibilityToggleContentDescription
    1731:1731:android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable() -> getPasswordVisibilityToggleDrawable
    636:636:android.graphics.Typeface getTypeface() -> getTypeface
    1856:1856:boolean hasPasswordTransformation() -> hasPasswordTransformation
    1024:1024:boolean isHelperTextEnabled() -> isHelperTextEnabled
    892:892:boolean isProvidingHint() -> isProvidingHint
    417:422:void onApplyBoxBackgroundMode() -> onApplyBoxBackgroundMode
    1885:1916:void onLayout(boolean,int,int,int,int) -> onLayout
    1585:1587:void onMeasure(int,int) -> onMeasure
    1507:1518:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1496:1502:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1938:1945:void openCutout() -> openCutout
    1820:1840:void passwordVisibilityToggleRequested(boolean) -> passwordVisibilityToggleRequested
    1133:1140:void recursiveSetEnabled(android.view.ViewGroup,boolean) -> recursiveSetEnabled
    1324:1339:void setBoxAttributes() -> setBoxAttributes
    480:484:void setBoxBackgroundColor(int) -> setBoxBackgroundColor
    470:471:void setBoxBackgroundColorResource(int) -> setBoxBackgroundColorResource
    409:414:void setBoxBackgroundMode(int) -> setBoxBackgroundMode
    448:452:void setBoxStrokeColor(int) -> setBoxStrokeColor
    1071:1092:void setCounterEnabled(boolean) -> setCounterEnabled
    1111:1121:void setCounterMaxLength(int) -> setCounterMaxLength
    913:919:void setDefaultHintTextColor(android.content.res.ColorStateList) -> setDefaultHintTextColor
    663:664:void setEditText(android.widget.EditText) -> setEditText
    1128:1130:void setEnabled(boolean) -> setEnabled
    1049:1063:void setError(java.lang.CharSequence) -> setError
    938:939:void setErrorEnabled(boolean) -> setErrorEnabled
    947:948:void setErrorTextAppearance(int) -> setErrorTextAppearance
    952:953:void setErrorTextColor(android.content.res.ColorStateList) -> setErrorTextColor
    1005:1015:void setHelperText(java.lang.CharSequence) -> setHelperText
    1029:1030:void setHelperTextColor(android.content.res.ColorStateList) -> setHelperTextColor
    988:989:void setHelperTextEnabled(boolean) -> setHelperTextEnabled
    967:968:void setHelperTextTextAppearance(int) -> setHelperTextTextAppearance
    805:809:void setHint(java.lang.CharSequence) -> setHint
    1569:1570:void setHintAnimationEnabled(boolean) -> setHintAnimationEnabled
    845:874:void setHintEnabled(boolean) -> setHintEnabled
    812:820:void setHintInternal(java.lang.CharSequence) -> setHintInternal
    901:909:void setHintTextAppearance(int) -> setHintTextAppearance
    1703:1705:void setPasswordVisibilityToggleContentDescription(int) -> setPasswordVisibilityToggleContentDescription
    1717:1721:void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence) -> setPasswordVisibilityToggleContentDescription
    1673:1675:void setPasswordVisibilityToggleDrawable(int) -> setPasswordVisibilityToggleDrawable
    1687:1691:void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable) -> setPasswordVisibilityToggleDrawable
    1764:1778:void setPasswordVisibilityToggleEnabled(boolean) -> setPasswordVisibilityToggleEnabled
    1792:1795:void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList) -> setPasswordVisibilityToggleTintList
    1806:1809:void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode) -> setPasswordVisibilityToggleTintMode
    1202:1224:void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int) -> setTextAppearanceCompatWithErrorFallback
    1850:1853:void setTextInputAccessibilityDelegate(android.support.design.widget.TextInputLayout$AccessibilityDelegate) -> setTextInputAccessibilityDelegate
    619:629:void setTypeface(android.graphics.Typeface) -> setTypeface
    1861:1861:boolean shouldShowPasswordIcon() -> shouldShowPasswordIcon
    1164:1199:void updateCounter(int) -> updateCounter
    1373:1404:void updateEditTextBackground() -> updateEditTextBackground
    1296:1321:void updateEditTextBackgroundBounds() -> updateEditTextBackgroundBounds
    742:749:void updateInputLayoutMargins() -> updateInputLayoutMargins
    752:753:void updateLabelState(boolean) -> updateLabelState
    756:790:void updateLabelState(boolean,boolean) -> updateLabelState
    1590:1661:void updatePasswordToggleView() -> updatePasswordToggleView
    1227:1231:void updateTextInputBoxBounds() -> updateTextInputBoxBounds
    2000:2001:void updateTextInputBoxState() -> updateTextInputBoxState
android.support.design.widget.TextInputLayout$1 -> android.support.design.widget.TextInputLayout$1:
    694:694:void <init>(android.support.design.widget.TextInputLayout) -> <init>
    697:701:void afterTextChanged(android.text.Editable) -> afterTextChanged
    704:704:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    707:707:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
android.support.design.widget.TextInputLayout$2 -> android.support.design.widget.TextInputLayout$2:
    1606:1606:void <init>(android.support.design.widget.TextInputLayout) -> <init>
    1609:1610:void onClick(android.view.View) -> onClick
android.support.design.widget.TextInputLayout$3 -> android.support.design.widget.TextInputLayout$3:
    2057:2057:void <init>(android.support.design.widget.TextInputLayout) -> <init>
    2060:2061:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.design.widget.TextInputLayout$AccessibilityDelegate -> android.support.design.widget.TextInputLayout$AccessibilityDelegate:
    2102:2104:void <init>(android.support.design.widget.TextInputLayout) -> <init>
    2108:2134:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2138:2145:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
android.support.design.widget.TextInputLayout$SavedState -> android.support.design.widget.TextInputLayout$SavedState:
    1475:1475:void <clinit>() -> <clinit>
    1450:1451:void <init>(android.os.Parcelable) -> <init>
    1454:1457:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1468:1468:java.lang.String toString() -> toString
    1461:1464:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.design.widget.TextInputLayout$SavedState$1 -> android.support.design.widget.TextInputLayout$SavedState$1:
    1476:1476:void <init>() -> <init>
    1476:1476:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1476:1476:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1479:1479:android.support.design.widget.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1484:1484:android.support.design.widget.TextInputLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1476:1476:java.lang.Object[] newArray(int) -> newArray
    1489:1489:android.support.design.widget.TextInputLayout$SavedState[] newArray(int) -> newArray
android.support.design.widget.ViewOffsetBehavior -> android.support.design.widget.ViewOffsetBehavior:
    32:32:void <init>() -> <init>
    35:36:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    84:84:int getTopAndBottomOffset() -> getTopAndBottomOffset
    62:63:void layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> layoutChild
    41:57:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    66:71:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
android.support.design.widget.ViewOffsetHelper -> android.support.design.widget.ViewOffsetHelper:
    38:40:void <init>(android.view.View) -> <init>
    87:87:int getTopAndBottomOffset() -> getTopAndBottomOffset
    44:49:void onViewLayout() -> onViewLayout
    78:83:boolean setLeftAndRightOffset(int) -> setLeftAndRightOffset
    63:68:boolean setTopAndBottomOffset(int) -> setTopAndBottomOffset
    52:54:void updateOffsets() -> updateOffsets
android.support.design.widget.ViewUtilsLollipop -> android.support.design.widget.ViewUtilsLollipop:
    35:35:void <clinit>() -> <clinit>
    60:78:void setDefaultAppBarLayoutStateListAnimator(android.view.View,float) -> setDefaultAppBarLayoutStateListAnimator
android.support.design.widget.VisibilityAwareImageButton -> android.support.design.widget.VisibilityAwareImageButton:
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    45:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:62:int getUserSetVisibility() -> getUserSetVisibility
    55:59:void internalSetVisibility(int,boolean) -> internalSetVisibility
    51:52:void setVisibility(int) -> setVisibility
android.support.graphics.drawable.AndroidResources -> android.support.graphics.drawable.AndroidResources:
    22:133:void <clinit>() -> <clinit>
android.support.graphics.drawable.AnimatedVectorDrawableCompat -> android.support.graphics.drawable.AnimatedVectorDrawableCompat:
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    177:185:void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    512:517:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    522:526:boolean canApplyTheme() -> canApplyTheme
    143:143:void clearColorFilter() -> clearColorFilter
    253:255:android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    143:143:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    410:413:int getIntrinsicHeight() -> getIntrinsicHeight
    402:405:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    394:397:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    436:502:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    507:508:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    418:421:boolean isAutoMirrored() -> isAutoMirrored
    690:694:boolean isRunning() -> isRunning
    386:389:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    329:334:void setAlpha(int) -> setAlpha
    426:431:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    347:353:void setTint(int) -> setTint
    357:363:void setTintList(android.content.res.ColorStateList) -> setTintList
    367:373:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    377:381:boolean setVisible(boolean,boolean) -> setVisible
    672:686:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    651:669:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    699:711:void start() -> start
    715:721:void stop() -> stop
android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$1:
    723:723:void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    726:727:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    731:732:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    736:737:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    589:620:void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    634:634:int getChangingConfigurations() -> getChangingConfigurations
    624:624:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    629:629:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    638:642:void setupAnimatorSet() -> setupAnimatorSet
android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    538:540:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    571:571:boolean canApplyTheme() -> canApplyTheme
    576:576:int getChangingConfigurations() -> getChangingConfigurations
    544:548:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    553:557:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    562:566:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
android.support.graphics.drawable.AnimationUtilsCompat -> android.support.graphics.drawable.AnimationUtilsCompat:
    105:146:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:95:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
android.support.graphics.drawable.AnimatorInflaterCompat -> android.support.graphics.drawable.AnimatorInflaterCompat:
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    917:917:boolean isColorType(int) -> isColorType
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    129:147:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:447:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> android.support.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:167:void <init>() -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:186:android.support.v4.graphics.PathParser$PathDataNode[] evaluate(float,android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> evaluate
android.support.graphics.drawable.ArgbEvaluator -> android.support.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:android.support.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
android.support.graphics.drawable.PathInterpolatorCompat -> android.support.graphics.drawable.PathInterpolatorCompat:
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    195:223:float getInterpolation(float) -> getInterpolation
    130:134:void initCubic(float,float,float,float) -> initCubic
    137:143:void initPath(android.graphics.Path) -> initPath
    123:127:void initQuad(float,float) -> initQuad
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
android.support.graphics.drawable.VectorDrawableCommon -> android.support.graphics.drawable.VectorDrawableCommon:
    30:30:void <init>() -> <init>
    104:108:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    112:117:void clearColorFilter() -> clearColorFilter
    46:49:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    121:124:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:140:int getMinimumHeight() -> getMinimumHeight
    129:132:int getMinimumWidth() -> getMinimumWidth
    145:148:boolean getPadding(android.graphics.Rect) -> getPadding
    153:156:int[] getState() -> getState
    162:165:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    95:99:void jumpToCurrentState() -> jumpToCurrentState
    54:57:boolean onLevelChange(int) -> onLevelChange
    170:175:void setChangingConfigurations(int) -> setChangingConfigurations
    37:42:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    87:91:void setFilterBitmap(boolean) -> setFilterBitmap
    71:74:void setHotspot(float,float) -> setHotspot
    79:83:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    179:182:boolean setState(int[]) -> setState
android.support.graphics.drawable.VectorDrawableCompat -> android.support.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    321:323:void <init>() -> <init>
    325:328:void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    679:682:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    579:583:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    637:662:android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    673:675:android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:369:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    916:919:int getChangingConfigurations() -> getChangingConfigurations
    277:277:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    569:573:int getIntrinsicHeight() -> getIntrinsicHeight
    560:564:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    551:555:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    688:694:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    699:718:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    807:868:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    924:929:void invalidateSelf() -> invalidateSelf
    588:591:boolean isAutoMirrored() -> isAutoMirrored
    520:526:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    898:902:boolean needMirroring() -> needMirroring
    909:912:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    531:546:boolean onStateChange(int[]) -> onStateChange
    726:728:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    933:938:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    893:894:void setAllowCaching(boolean) -> setAllowCaching
    441:450:void setAlpha(int) -> setAlpha
    596:601:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    480:486:void setTint(int) -> setTint
    490:501:void setTintList(android.content.res.ColorStateList) -> setTintList
    505:516:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    942:945:boolean setVisible(boolean,boolean) -> setVisible
    950:955:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    746:774:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    469:470:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
android.support.graphics.drawable.VectorDrawableCompat$VClipPath -> android.support.graphics.drawable.VectorDrawableCompat$VClipPath:
    1750:1752:void <init>() -> <init>
    1755:1756:void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1760:1768:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1789:1789:boolean isClipPath() -> isClipPath
    1774:1785:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
android.support.graphics.drawable.VectorDrawableCompat$VFullPath -> android.support.graphics.drawable.VectorDrawableCompat$VFullPath:
    1817:1819:void <init>() -> <init>
    1822:1838:void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    2010:2010:float getFillAlpha() -> getFillAlpha
    2000:2000:int getFillColor() -> getFillColor
    1989:1989:float getStrokeAlpha() -> getStrokeAlpha
    1969:1969:int getStrokeColor() -> getStrokeColor
    1841:1843:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1854:1856:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1979:1979:float getStrokeWidth() -> getStrokeWidth
    2030:2030:float getTrimPathEnd() -> getTrimPathEnd
    2040:2040:float getTrimPathOffset() -> getTrimPathOffset
    2020:2020:float getTrimPathStart() -> getTrimPathStart
    1872:1876:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1942:1942:boolean isStateful() -> isStateful
    1947:1949:boolean onStateChanged(int[]) -> onStateChanged
    2015:2016:void setFillAlpha(float) -> setFillAlpha
    2005:2006:void setFillColor(int) -> setFillColor
    1994:1995:void setStrokeAlpha(float) -> setStrokeAlpha
    1974:1975:void setStrokeColor(int) -> setStrokeColor
    1984:1985:void setStrokeWidth(float) -> setStrokeWidth
    2035:2036:void setTrimPathEnd(float) -> setTrimPathEnd
    2045:2046:void setTrimPathOffset(float) -> setTrimPathOffset
    2025:2026:void setTrimPathStart(float) -> setTrimPathStart
    1883:1938:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
android.support.graphics.drawable.VectorDrawableCompat$VGroup -> android.support.graphics.drawable.VectorDrawableCompat$VGroup:
    1451:1489:void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap) -> <init>
    1491:1492:void <init>() -> <init>
    1495:1495:java.lang.String getGroupName() -> getGroupName
    1499:1499:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1571:1571:float getPivotX() -> getPivotX
    1584:1584:float getPivotY() -> getPivotY
    1558:1558:float getRotation() -> getRotation
    1597:1597:float getScaleX() -> getScaleX
    1610:1610:float getScaleY() -> getScaleY
    1623:1623:float getTranslateX() -> getTranslateX
    1636:1636:float getTranslateY() -> getTranslateY
    1503:1507:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1649:1654:boolean isStateful() -> isStateful
    1659:1663:boolean onStateChanged(int[]) -> onStateChanged
    1576:1580:void setPivotX(float) -> setPivotX
    1589:1593:void setPivotY(float) -> setPivotY
    1563:1567:void setRotation(float) -> setRotation
    1602:1606:void setScaleX(float) -> setScaleX
    1615:1619:void setScaleY(float) -> setScaleY
    1628:1632:void setTranslateX(float) -> setTranslateX
    1641:1645:void setTranslateY(float) -> setTranslateY
    1548:1553:void updateLocalMatrix() -> updateLocalMatrix
    1514:1543:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
android.support.graphics.drawable.VectorDrawableCompat$VObject -> android.support.graphics.drawable.VectorDrawableCompat$VObject:
    1408:1408:void <init>() -> <init>
    1408:1408:void <init>(android.support.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1415:1415:boolean isStateful() -> isStateful
    1423:1423:boolean onStateChanged(int[]) -> onStateChanged
android.support.graphics.drawable.VectorDrawableCompat$VPath -> android.support.graphics.drawable.VectorDrawableCompat$VPath:
    1675:1677:void <init>() -> <init>
    1701:1705:void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1732:1732:android.support.v4.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1715:1715:java.lang.String getPathName() -> getPathName
    1726:1726:boolean isClipPath() -> isClipPath
    1737:1743:void setPathData(android.support.v4.graphics.PathParser$PathDataNode[]) -> setPathData
    1708:1712:void toPath(android.graphics.Path) -> toPath
android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer -> android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1161:1161:void <clinit>() -> <clinit>
    1182:1186:void <init>() -> <init>
    1207:1222:void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1364:1364:float cross(float,float,float,float) -> cross
    1255:1256:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1230:1251:void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1260:1361:void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1204:1204:float getAlpha() -> getAlpha
    1378:1393:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1193:1193:int getRootAlpha() -> getRootAlpha
    1397:1400:boolean isStateful() -> isStateful
    1404:1404:boolean onStateChanged(int[]) -> onStateChanged
    1199:1200:void setAlpha(float) -> setAlpha
    1189:1190:void setRootAlpha(int) -> setRootAlpha
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1024:1038:void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1112:1114:void <init>() -> <init>
    1084:1088:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1092:1099:boolean canReuseCache() -> canReuseCache
    1075:1081:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1043:1045:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1130:1130:int getChangingConfigurations() -> getChangingConfigurations
    1055:1065:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1048:1048:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1134:1134:boolean isStateful() -> isStateful
    1119:1119:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1125:1125:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1138:1140:boolean onStateChanged(int[]) -> onStateChanged
    1105:1110:void updateCacheStates() -> updateCacheStates
    1069:1072:void updateCachedBitmap(int,int) -> updateCachedBitmap
android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    966:968:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    994:994:boolean canApplyTheme() -> canApplyTheme
    999:999:int getChangingConfigurations() -> getChangingConfigurations
    972:974:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    979:981:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    986:989:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
android.support.media.ExifInterface -> android.support.media.ExifInterface:
    2147:3711:void <clinit>() -> <clinit>
    3738:3740:void <init>(java.io.InputStream) -> <init>
    5257:5280:void addDefaultValuesForCompatibility() -> addDefaultValuesForCompatibility
    6506:6516:long[] convertToLongArray(java.lang.Object) -> convertToLongArray
    3785:3813:java.lang.String getAttribute(java.lang.String) -> getAttribute
    3825:3833:int getAttributeInt(java.lang.String,int) -> getAttributeInt
    3759:3774:android.support.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String) -> getExifAttribute
    4798:4806:void getJpegAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream,int,int) -> getJpegAttributes
    4696:4710:int getMimeType(java.io.BufferedInputStream) -> getMimeType
    5043:5118:void getOrfAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) -> getOrfAttributes
    4984:5028:void getRafAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) -> getRafAttributes
    4933:4971:void getRawAttributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) -> getRawAttributes
    5125:5143:void getRw2Attributes(android.support.media.ExifInterface$ByteOrderedDataInputStream) -> getRw2Attributes
    5608:5643:void handleThumbnailFromJfif(android.support.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> handleThumbnailFromJfif
    5648:5705:void handleThumbnailFromStrips(android.support.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> handleThumbnailFromStrips
    4718:4723:boolean isJpegFormat(byte[]) -> isJpegFormat
    4751:4760:boolean isOrfFormat(byte[]) -> isOrfFormat
    4733:4739:boolean isRafFormat(byte[]) -> isRafFormat
    4768:4777:boolean isRw2Format(byte[]) -> isRw2Format
    5709:5739:boolean isSupportedDataType(java.util.HashMap) -> isSupportedDataType
    5745:5755:boolean isThumbnail(java.util.HashMap) -> isThumbnail
    4207:4263:void loadAttributes(java.io.InputStream) -> loadAttributes
    5305:5318:void parseTiffHeaders(android.support.media.ExifInterface$ByteOrderedDataInputStream,int) -> parseTiffHeaders
    5285:5291:java.nio.ByteOrder readByteOrder(android.support.media.ExifInterface$ByteOrderedDataInputStream) -> readByteOrder
    5245:5253:void readExifSegment(byte[],int) -> readExifSegment
    5332:5346:void readImageFileDirectory(android.support.media.ExifInterface$ByteOrderedDataInputStream,int) -> readImageFileDirectory
    5557:5574:void retrieveJpegImageSize(android.support.media.ExifInterface$ByteOrderedDataInputStream,int) -> retrieveJpegImageSize
    5578:5602:void setThumbnailData(android.support.media.ExifInterface$ByteOrderedDataInputStream) -> setThumbnailData
    6433:6437:void swapBasedOnImageSize(int,int) -> swapBasedOnImageSize
    5805:5867:void updateImageSizeValues(android.support.media.ExifInterface$ByteOrderedDataInputStream,int) -> updateImageSizeValues
    5761:5790:void validateImages(java.io.InputStream) -> validateImages
android.support.media.ExifInterface$ByteOrderedDataInputStream -> android.support.media.ExifInterface$ByteOrderedDataInputStream:
    6127:6128:void <clinit>() -> <clinit>
    6137:6142:void <init>(java.io.InputStream) -> <init>
    6145:6146:void <init>(byte[]) -> <init>
    6172:6172:int available() -> available
    6167:6167:int peek() -> peek
    6177:6178:int read() -> read
    6183:6185:int read(byte[],int,int) -> read
    6202:6203:boolean readBoolean() -> readBoolean
    6242:6244:byte readByte() -> readByte
    6208:6209:char readChar() -> readChar
    6363:6363:double readDouble() -> readDouble
    6358:6358:float readFloat() -> readFloat
    6220:6222:void readFully(byte[],int,int) -> readFully
    6231:6233:void readFully(byte[]) -> readFully
    6274:6276:int readInt() -> readInt
    6196:6197:java.lang.String readLine() -> readLine
    6329:6331:long readLong() -> readLong
    6255:6257:short readShort() -> readShort
    6214:6215:java.lang.String readUTF() -> readUTF
    6190:6191:int readUnsignedByte() -> readUnsignedByte
    6324:6324:long readUnsignedInt() -> readUnsignedInt
    6306:6308:int readUnsignedShort() -> readUnsignedShort
    6153:6162:void seek(long) -> seek
    6149:6150:void setByteOrder(java.nio.ByteOrder) -> setByteOrder
    6295:6301:int skipBytes(int) -> skipBytes
android.support.media.ExifInterface$ExifAttribute -> android.support.media.ExifInterface$ExifAttribute:
    2943:2947:void <init>(int,int,byte[]) -> <init>
    3002:3003:android.support.media.ExifInterface$ExifAttribute createString(java.lang.String) -> createString
    2964:2970:android.support.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder) -> createULong
    2974:2974:android.support.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder) -> createULong
    3007:3014:android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational[],java.nio.ByteOrder) -> createURational
    3018:3018:android.support.media.ExifInterface$ExifAttribute createURational(android.support.media.ExifInterface$Rational,java.nio.ByteOrder) -> createURational
    2950:2956:android.support.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder) -> createUShort
    2960:2960:android.support.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder) -> createUShort
    3179:3181:double getDoubleValue(java.nio.ByteOrder) -> getDoubleValue
    3218:3220:int getIntValue(java.nio.ByteOrder) -> getIntValue
    3243:3294:java.lang.String getStringValue(java.nio.ByteOrder) -> getStringValue
    3057:3173:java.lang.Object getValue(java.nio.ByteOrder) -> getValue
    3052:3052:java.lang.String toString() -> toString
android.support.media.ExifInterface$ExifTag -> android.support.media.ExifInterface$ExifTag:
    3310:3315:void <init>(java.lang.String,int,int) -> <init>
    3318:3323:void <init>(java.lang.String,int,int,int) -> <init>
    3327:3328:boolean isFormatCompatible(int) -> isFormatCompatible
android.support.media.ExifInterface$Rational -> android.support.media.ExifInterface$Rational:
    2915:2924:void <init>(long,long) -> <init>
    2932:2932:double calculate() -> calculate
    2928:2928:java.lang.String toString() -> toString
android.support.text.emoji.EmojiCompat -> android.support.text.emoji.EmojiCompat:
    196:196:void <clinit>() -> <clinit>
    264:282:void <init>(android.support.text.emoji.EmojiCompat$Config) -> <init>
    356:360:android.support.text.emoji.EmojiCompat get() -> get
    520:520:int getEmojiSpanIndicatorColor() -> getEmojiSpanIndicatorColor
    490:494:int getLoadState() -> getLoadState
    574:578:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    545:548:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    295:302:android.support.text.emoji.EmojiCompat init(android.support.text.emoji.EmojiCompat$Config) -> init
    511:511:boolean isEmojiSpanIndicatorEnabled() -> isEmojiSpanIndicatorEnabled
    502:502:boolean isInitialized() -> isInitialized
    396:402:void loadMetadata() -> loadMetadata
    427:434:void onMetadataLoadFailed(java.lang.Throwable) -> onMetadataLoadFailed
    412:419:void onMetadataLoadSuccess() -> onMetadataLoadSuccess
    633:634:java.lang.CharSequence process(java.lang.CharSequence) -> process
    666:666:java.lang.CharSequence process(java.lang.CharSequence,int,int) -> process
    702:702:java.lang.CharSequence process(java.lang.CharSequence,int,int,int) -> process
    742:761:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int) -> process
    453:463:void registerInitCallback(android.support.text.emoji.EmojiCompat$InitCallback) -> registerInitCallback
    809:812:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
android.support.text.emoji.EmojiCompat$CompatInternal -> android.support.text.emoji.EmojiCompat$CompatInternal:
    1146:1148:void <init>(android.support.text.emoji.EmojiCompat) -> <init>
    1152:1153:void loadMetadata() -> loadMetadata
    1169:1169:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1174:1174:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
android.support.text.emoji.EmojiCompat$CompatInternal19 -> android.support.text.emoji.EmojiCompat$CompatInternal19:
    1200:1201:void <init>(android.support.text.emoji.EmojiCompat) -> <init>
    1206:1221:void loadMetadata() -> loadMetadata
    1226:1238:void onMetadataLoadSuccess(android.support.text.emoji.MetadataRepo) -> onMetadataLoadSuccess
    1254:1254:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1259:1261:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
android.support.text.emoji.EmojiCompat$CompatInternal19$1 -> android.support.text.emoji.EmojiCompat$CompatInternal19$1:
    1206:1206:void <init>(android.support.text.emoji.EmojiCompat$CompatInternal19) -> <init>
    1214:1215:void onFailed(java.lang.Throwable) -> onFailed
    1209:1210:void onLoaded(android.support.text.emoji.MetadataRepo) -> onLoaded
android.support.text.emoji.EmojiCompat$Config -> android.support.text.emoji.EmojiCompat$Config:
    917:920:void <init>(android.support.text.emoji.EmojiCompat$MetadataRepoLoader) -> <init>
    965:966:android.support.text.emoji.EmojiCompat$Config setReplaceAll(boolean) -> setReplaceAll
android.support.text.emoji.EmojiCompat$InitCallback -> android.support.text.emoji.EmojiCompat$InitCallback:
    837:837:void <init>() -> <init>
    850:850:void onFailed(java.lang.Throwable) -> onFailed
    843:843:void onInitialized() -> onInitialized
android.support.text.emoji.EmojiCompat$ListenerDispatcher -> android.support.text.emoji.EmojiCompat$ListenerDispatcher:
    1103:1105:void <init>(android.support.text.emoji.EmojiCompat$InitCallback,int) -> <init>
    1109:1110:void <init>(java.util.Collection,int) -> <init>
    1114:1119:void <init>(java.util.Collection,int,java.lang.Throwable) -> <init>
    1123:1137:void run() -> run
android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback -> android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback:
    872:872:void <init>() -> <init>
android.support.text.emoji.EmojiCompat$SpanFactory -> android.support.text.emoji.EmojiCompat$SpanFactory:
    821:821:void <init>() -> <init>
    830:830:android.support.text.emoji.EmojiSpan createSpan(android.support.text.emoji.EmojiMetadata) -> createSpan
android.support.text.emoji.EmojiMetadata -> android.support.text.emoji.EmojiMetadata:
    71:71:void <clinit>() -> <clinit>
    89:92:void <init>(android.support.text.emoji.MetadataRepo,int) -> <init>
    105:115:void draw(android.graphics.Canvas,float,float,android.graphics.Paint) -> draw
    211:211:int getCodepointAt(int) -> getCodepointAt
    218:218:int getCodepointsLength() -> getCodepointsLength
    185:185:int getHasGlyph() -> getHasGlyph
    162:162:short getHeight() -> getHeight
    148:148:int getId() -> getId
    128:141:androidx.text.emoji.flatbuffer.MetadataItem getMetadataItem() -> getMetadataItem
    176:176:short getSdkAdded() -> getSdkAdded
    155:155:short getWidth() -> getWidth
    202:202:boolean isDefaultEmoji() -> isDefaultEmoji
    194:195:void setHasGlyph(boolean) -> setHasGlyph
    223:233:java.lang.String toString() -> toString
android.support.text.emoji.EmojiProcessor -> android.support.text.emoji.EmojiProcessor:
    110:115:void <init>(android.support.text.emoji.MetadataRepo,android.support.text.emoji.EmojiCompat$SpanFactory,boolean,int[]) -> <init>
    437:439:void addEmoji(android.text.Spannable,android.support.text.emoji.EmojiMetadata,int,int) -> addEmoji
    322:348:boolean delete(android.text.Editable,android.view.KeyEvent,boolean) -> delete
    371:372:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    300:317:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    458:468:boolean hasGlyph(java.lang.CharSequence,int,int,android.support.text.emoji.EmojiMetadata) -> hasGlyph
    428:428:boolean hasInvalidSelection(int,int) -> hasInvalidSelection
    432:432:boolean hasModifiers(android.view.KeyEvent) -> hasModifiers
    163:274:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
android.support.text.emoji.EmojiProcessor$CodepointIndexFinder -> android.support.text.emoji.EmojiProcessor$CodepointIndexFinder:
    681:685:int findIndexBackward(java.lang.CharSequence,int,int) -> findIndexBackward
    737:741:int findIndexForward(java.lang.CharSequence,int,int) -> findIndexForward
android.support.text.emoji.EmojiProcessor$GlyphChecker -> android.support.text.emoji.EmojiProcessor$GlyphChecker:
    801:801:void <clinit>() -> <clinit>
    808:811:void <init>() -> <init>
    835:838:java.lang.StringBuilder getStringBuilder() -> getStringBuilder
    823:831:boolean hasGlyph(java.lang.CharSequence,int,int) -> hasGlyph
android.support.text.emoji.EmojiProcessor$ProcessorSm -> android.support.text.emoji.EmojiProcessor$ProcessorSm:
    526:531:void <init>(android.support.text.emoji.MetadataRepo$Node,boolean,int[]) -> <init>
    536:581:int check(int) -> check
    603:603:android.support.text.emoji.EmojiMetadata getCurrentMetadata() -> getCurrentMetadata
    596:596:android.support.text.emoji.EmojiMetadata getFlushMetadata() -> getFlushMetadata
    649:649:boolean isEmojiStyle(int) -> isEmojiStyle
    614:615:boolean isInFlushableState() -> isInFlushableState
    658:658:boolean isTextStyle(int) -> isTextStyle
    586:589:int reset() -> reset
    619:640:boolean shouldUseEmojiPresentationStyleForSingleCodepoint() -> shouldUseEmojiPresentationStyleForSingleCodepoint
android.support.text.emoji.EmojiSpan -> android.support.text.emoji.EmojiSpan:
    71:74:void <init>(android.support.text.emoji.EmojiMetadata) -> <init>
    101:101:android.support.text.emoji.EmojiMetadata getMetadata() -> getMetadata
    79:93:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    111:111:int getWidth() -> getWidth
android.support.text.emoji.MetadataListReader -> android.support.text.emoji.MetadataListReader:
    121:126:android.support.text.emoji.MetadataListReader$OffsetInfo findOffsetInfo(android.support.text.emoji.MetadataListReader$OpenTypeReader) -> findOffsetInfo
    70:78:androidx.text.emoji.flatbuffer.MetadataList read(java.io.InputStream) -> read
    107:109:androidx.text.emoji.flatbuffer.MetadataList read(android.content.res.AssetManager,java.lang.String) -> read
    193:193:long toUnsignedInt(int) -> toUnsignedInt
    188:188:int toUnsignedShort(short) -> toUnsignedShort
android.support.text.emoji.MetadataListReader$InputStreamOpenTypeReader -> android.support.text.emoji.MetadataListReader$InputStreamOpenTypeReader:
    250:255:void <init>(java.io.InputStream) -> <init>
    292:292:long getPosition() -> getPosition
    297:298:void read(int) -> read
    273:275:int readTag() -> readTag
    266:268:long readUnsignedInt() -> readUnsignedInt
    259:261:int readUnsignedShort() -> readUnsignedShort
    280:288:void skip(int) -> skip
android.support.text.emoji.MetadataListReader$OffsetInfo -> android.support.text.emoji.MetadataListReader$OffsetInfo:
    172:175:void <init>(long,long) -> <init>
    182:182:long getLength() -> getLength
    178:178:long getStartOffset() -> getStartOffset
android.support.text.emoji.MetadataRepo -> android.support.text.emoji.MetadataRepo:
    88:94:void <init>(android.graphics.Typeface,androidx.text.emoji.flatbuffer.MetadataList) -> <init>
    137:146:void constructIndex(androidx.text.emoji.flatbuffer.MetadataList) -> constructIndex
    129:130:android.support.text.emoji.MetadataRepo create(android.content.res.AssetManager,java.lang.String) -> create
    177:177:char[] getEmojiCharArray() -> getEmojiCharArray
    185:185:androidx.text.emoji.flatbuffer.MetadataList getMetadataList() -> getMetadataList
    161:161:int getMetadataVersion() -> getMetadataVersion
    169:169:android.support.text.emoji.MetadataRepo$Node getRootNode() -> getRootNode
    153:153:android.graphics.Typeface getTypeface() -> getTypeface
    196:201:void put(android.support.text.emoji.EmojiMetadata) -> put
android.support.text.emoji.MetadataRepo$Node -> android.support.text.emoji.MetadataRepo$Node:
    215:216:void <init>() -> <init>
    219:221:void <init>(int) -> <init>
    224:224:android.support.text.emoji.MetadataRepo$Node get(int) -> get
    228:228:android.support.text.emoji.EmojiMetadata getData() -> getData
    233:244:void put(android.support.text.emoji.EmojiMetadata,int,int) -> put
android.support.text.emoji.R$styleable -> android.support.text.emoji.R$styleable:
    152:191:void <clinit>() -> <clinit>
android.support.text.emoji.TypefaceEmojiSpan -> android.support.text.emoji.TypefaceEmojiSpan:
    49:50:void <init>(android.support.text.emoji.EmojiMetadata) -> <init>
    56:60:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    63:68:android.graphics.Paint getDebugPaint() -> getDebugPaint
android.support.text.emoji.bundled.BundledEmojiCompatConfig -> android.support.text.emoji.bundled.BundledEmojiCompatConfig:
    44:45:void <init>(android.content.Context) -> <init>
android.support.text.emoji.bundled.BundledEmojiCompatConfig$BundledMetadataLoader -> android.support.text.emoji.bundled.BundledEmojiCompatConfig$BundledMetadataLoader:
    50:52:void <init>(android.content.Context) -> <init>
    57:62:void load(android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback) -> load
android.support.text.emoji.bundled.BundledEmojiCompatConfig$InitRunnable -> android.support.text.emoji.bundled.BundledEmojiCompatConfig$InitRunnable:
    71:74:void <init>(android.content.Context,android.support.text.emoji.EmojiCompat$MetadataRepoLoaderCallback) -> <init>
    79:85:void run() -> run
android.support.text.emoji.widget.EditTextAttributeHelper -> android.support.text.emoji.widget.EditTextAttributeHelper:
    41:49:void <init>(android.view.View,android.util.AttributeSet,int,int) -> <init>
    52:52:int getMaxEmojiCount() -> getMaxEmojiCount
android.support.text.emoji.widget.EmojiAppCompatEditText -> android.support.text.emoji.widget.EmojiAppCompatEditText:
    47:49:void <init>(android.content.Context) -> <init>
    52:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:117:android.support.text.emoji.widget.EmojiEditTextHelper getEmojiEditTextHelper() -> getEmojiEditTextHelper
    110:110:int getMaxEmojiCount() -> getMaxEmojiCount
    62:69:void init(android.util.AttributeSet,int) -> init
    81:82:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    73:77:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    98:99:void setMaxEmojiCount(int) -> setMaxEmojiCount
android.support.text.emoji.widget.EmojiEditTextHelper -> android.support.text.emoji.widget.EmojiEditTextHelper:
    82:86:void <init>(android.widget.EditText) -> <init>
    178:178:int getEmojiReplaceStrategy() -> getEmojiReplaceStrategy
    128:129:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    113:113:int getMaxEmojiCount() -> getMaxEmojiCount
    147:148:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    163:165:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    100:104:void setMaxEmojiCount(int) -> setMaxEmojiCount
android.support.text.emoji.widget.EmojiEditTextHelper$HelperInternal -> android.support.text.emoji.widget.EmojiEditTextHelper$HelperInternal:
    182:182:void <init>() -> <init>
    185:185:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    190:190:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    199:199:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    195:195:void setMaxEmojiCount(int) -> setMaxEmojiCount
android.support.text.emoji.widget.EmojiEditTextHelper$HelperInternal19 -> android.support.text.emoji.widget.EmojiEditTextHelper$HelperInternal19:
    207:212:void <init>(android.widget.EditText) -> <init>
    226:229:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    235:238:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    221:222:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    216:217:void setMaxEmojiCount(int) -> setMaxEmojiCount
android.support.text.emoji.widget.EmojiEditableFactory -> android.support.text.emoji.widget.EmojiEditableFactory:
    43:43:void <clinit>() -> <clinit>
    50:57:void <init>() -> <init>
    61:68:android.text.Editable$Factory getInstance() -> getInstance
    73:76:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
android.support.text.emoji.widget.EmojiExtractEditText -> android.support.text.emoji.widget.EmojiExtractEditText:
    57:59:void <init>(android.content.Context) -> <init>
    62:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    150:153:android.support.text.emoji.widget.EmojiEditTextHelper getEmojiEditTextHelper() -> getEmojiEditTextHelper
    136:136:int getEmojiReplaceStrategy() -> getEmojiReplaceStrategy
    146:146:int getMaxEmojiCount() -> getMaxEmojiCount
    79:86:void init(android.util.AttributeSet,int,int) -> init
    98:99:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    162:164:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:125:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    90:94:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    112:113:void setMaxEmojiCount(int) -> setMaxEmojiCount
android.support.text.emoji.widget.EmojiInputConnection -> android.support.text.emoji.widget.EmojiInputConnection:
    49:52:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> <init>
    56:58:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    64:66:boolean deleteSurroundingTextInCodePoints(int,int) -> deleteSurroundingTextInCodePoints
    70:70:android.text.Editable getEditable() -> getEditable
android.support.text.emoji.widget.EmojiInputFilter -> android.support.text.emoji.widget.EmojiInputFilter:
    126:133:void updateSelection(android.text.Spannable,int,int) -> updateSelection
android.support.text.emoji.widget.EmojiKeyListener -> android.support.text.emoji.widget.EmojiKeyListener:
    38:40:void <init>(android.text.method.KeyListener) -> <init>
    65:66:void clearMetaKeyState(android.view.View,android.text.Editable,int) -> clearMetaKeyState
    44:44:int getInputType() -> getInputType
    49:50:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyDown
    60:60:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent) -> onKeyOther
    55:55:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyUp
android.support.text.emoji.widget.EmojiTextWatcher -> android.support.text.emoji.widget.EmojiTextWatcher:
    47:49:void <init>(android.widget.EditText) -> <init>
    101:101:void afterTextChanged(android.text.Editable) -> afterTextChanged
    96:96:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    104:107:android.support.text.emoji.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    70:91:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    64:65:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    52:53:void setMaxEmojiCount(int) -> setMaxEmojiCount
android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl -> android.support.text.emoji.widget.EmojiTextWatcher$InitCallbackImpl:
    113:115:void <init>(android.widget.EditText) -> <init>
    119:131:void onInitialized() -> onInitialized
android.support.text.emoji.widget.ExtractButtonCompat -> android.support.text.emoji.widget.ExtractButtonCompat:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    62:62:boolean hasWindowFocus() -> hasWindowFocus
    71:73:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
android.support.text.emoji.widget.SpannableBuilder -> android.support.text.emoji.widget.SpannableBuilder:
    77:80:void <init>(java.lang.Class,java.lang.CharSequence) -> <init>
    88:91:void <init>(java.lang.Class,java.lang.CharSequence,int,int) -> <init>
    51:51:android.text.Editable append(char) -> append
    51:51:android.text.Editable append(java.lang.CharSequence) -> append
    51:51:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    51:51:java.lang.Appendable append(char) -> append
    51:51:java.lang.Appendable append(java.lang.CharSequence) -> append
    51:51:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    337:338:android.text.SpannableStringBuilder append(java.lang.CharSequence) -> append
    343:344:android.text.SpannableStringBuilder append(char) -> append
    349:350:android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int) -> append
    355:356:android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int) -> append
    260:261:void beginBatchEdit() -> beginBatchEdit
    276:279:void blockWatchers() -> blockWatchers
    98:98:android.support.text.emoji.widget.SpannableBuilder create(java.lang.Class,java.lang.CharSequence) -> create
    51:51:android.text.Editable delete(int,int) -> delete
    331:332:android.text.SpannableStringBuilder delete(int,int) -> delete
    268:270:void endBatchEdit() -> endBatchEdit
    295:298:void fireWatchers() -> fireWatchers
    204:210:int getSpanEnd(java.lang.Object) -> getSpanEnd
    218:224:int getSpanFlags(java.lang.Object) -> getSpanFlags
    190:196:int getSpanStart(java.lang.Object) -> getSpanStart
    150:159:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    246:252:android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object) -> getWatcherFor
    51:51:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    51:51:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    319:320:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence) -> insert
    325:326:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    109:109:boolean isWatcher(java.lang.Object) -> isWatcher
    120:120:boolean isWatcher(java.lang.Class) -> isWatcher
    232:235:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    169:183:void removeSpan(java.lang.Object) -> removeSpan
    51:51:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    51:51:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    302:305:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence) -> replace
    311:314:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    135:141:void setSpan(java.lang.Object,int,int,int) -> setSpan
    125:125:java.lang.CharSequence subSequence(int,int) -> subSequence
    285:288:void unblockwatchers() -> unblockwatchers
android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper -> android.support.text.emoji.widget.SpannableBuilder$WatcherWrapper:
    367:369:void <init>(java.lang.Object) -> <init>
    383:384:void afterTextChanged(android.text.Editable) -> afterTextChanged
    373:374:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    424:425:void blockCalls() -> blockCalls
    432:432:boolean isEmojiSpan(java.lang.Object) -> isEmojiSpan
    392:396:void onSpanAdded(android.text.Spannable,java.lang.Object,int,int) -> onSpanAdded
    417:421:void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int) -> onSpanChanged
    404:408:void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int) -> onSpanRemoved
    378:379:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    428:429:void unblockCalls() -> unblockCalls
android.support.transition.AnimatorUtils -> android.support.transition.AnimatorUtils:
    31:34:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    37:50:void pause(android.animation.Animator) -> pause
    53:66:void resume(android.animation.Animator) -> resume
android.support.transition.AutoTransition -> android.support.transition.AutoTransition:
    37:39:void <init>() -> <init>
    47:51:void init() -> init
android.support.transition.ChangeBounds -> android.support.transition.ChangeBounds:
    60:167:void <clinit>() -> <clinit>
    169:170:void <init>() -> <init>
    241:242:void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    236:237:void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    217:232:void captureValues(android.support.transition.TransitionValues) -> captureValues
    261:262:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    185:185:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    245:254:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
android.support.transition.ChangeBounds$1 -> android.support.transition.ChangeBounds$1:
    69:70:void <init>(java.lang.Class,java.lang.String) -> <init>
    69:69:java.lang.Object get(java.lang.Object) -> get
    81:82:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    69:69:void set(java.lang.Object,java.lang.Object) -> set
    74:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
android.support.transition.ChangeBounds$10 -> android.support.transition.ChangeBounds$10:
    445:445:void <init>(android.support.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    448:450:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.ChangeBounds$2 -> android.support.transition.ChangeBounds$2:
    87:87:void <init>(java.lang.Class,java.lang.String) -> <init>
    87:87:java.lang.Object get(java.lang.Object) -> get
    95:95:android.graphics.PointF get(android.support.transition.ChangeBounds$ViewBounds) -> get
    87:87:void set(java.lang.Object,java.lang.Object) -> set
    90:91:void set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
android.support.transition.ChangeBounds$3 -> android.support.transition.ChangeBounds$3:
    100:100:void <init>(java.lang.Class,java.lang.String) -> <init>
    100:100:java.lang.Object get(java.lang.Object) -> get
    108:108:android.graphics.PointF get(android.support.transition.ChangeBounds$ViewBounds) -> get
    100:100:void set(java.lang.Object,java.lang.Object) -> set
    103:104:void set(android.support.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
android.support.transition.ChangeBounds$4 -> android.support.transition.ChangeBounds$4:
    113:113:void <init>(java.lang.Class,java.lang.String) -> <init>
    113:113:java.lang.Object get(java.lang.Object) -> get
    125:125:android.graphics.PointF get(android.view.View) -> get
    113:113:void set(java.lang.Object,java.lang.Object) -> set
    116:121:void set(android.view.View,android.graphics.PointF) -> set
android.support.transition.ChangeBounds$5 -> android.support.transition.ChangeBounds$5:
    130:130:void <init>(java.lang.Class,java.lang.String) -> <init>
    130:130:java.lang.Object get(java.lang.Object) -> get
    142:142:android.graphics.PointF get(android.view.View) -> get
    130:130:void set(java.lang.Object,java.lang.Object) -> set
    133:138:void set(android.view.View,android.graphics.PointF) -> set
android.support.transition.ChangeBounds$6 -> android.support.transition.ChangeBounds$6:
    147:147:void <init>(java.lang.Class,java.lang.String) -> <init>
    147:147:java.lang.Object get(java.lang.Object) -> get
    159:159:android.graphics.PointF get(android.view.View) -> get
    147:147:void set(java.lang.Object,java.lang.Object) -> set
    150:155:void set(android.view.View,android.graphics.PointF) -> set
android.support.transition.ChangeBounds$7 -> android.support.transition.ChangeBounds$7:
    323:326:void <init>(android.support.transition.ChangeBounds,android.support.transition.ChangeBounds$ViewBounds) -> <init>
android.support.transition.ChangeBounds$8 -> android.support.transition.ChangeBounds$8:
    367:367:void <init>(android.support.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    372:373:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    377:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.ChangeBounds$9 -> android.support.transition.ChangeBounds$9:
    391:392:void <init>(android.support.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    402:406:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    410:411:void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    415:416:void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
android.support.transition.ChangeBounds$ViewBounds -> android.support.transition.ChangeBounds$ViewBounds:
    468:470:void <init>(android.view.View) -> <init>
    482:488:void setBottomRight(android.graphics.PointF) -> setBottomRight
    491:494:void setLeftTopRightBottom() -> setLeftTopRightBottom
    473:479:void setTopLeft(android.graphics.PointF) -> setTopLeft
android.support.transition.Fade -> android.support.transition.Fade:
    90:92:void <init>(int) -> <init>
    112:115:void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    121:140:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    168:175:float getStartAlpha(android.support.transition.TransitionValues,float) -> getStartAlpha
    152:156:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onAppear
    162:164:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> onDisappear
android.support.transition.Fade$1 -> android.support.transition.Fade$1:
    132:132:void <init>(android.support.transition.Fade,android.view.View) -> <init>
    135:138:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
android.support.transition.Fade$FadeAnimatorListener -> android.support.transition.Fade$FadeAnimatorListener:
    183:185:void <init>(android.view.View) -> <init>
    198:202:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    189:194:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.transition.FragmentTransitionSupport -> android.support.transition.FragmentTransitionSupport:
    39:39:void <init>() -> <init>
    291:295:void addTarget(java.lang.Object,android.view.View) -> addTarget
    99:120:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    210:211:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    43:43:boolean canHandle(java.lang.Object) -> canHandle
    48:52:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    123:125:boolean hasSimpleTarget(android.support.transition.Transition) -> hasSimpleTarget
    182:204:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    131:141:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    299:303:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    265:287:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    147:175:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    218:249:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    83:95:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    307:319:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    68:79:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    254:260:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    57:62:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
android.support.transition.FragmentTransitionSupport$1 -> android.support.transition.FragmentTransitionSupport$1:
    88:88:void <init>(android.support.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
android.support.transition.FragmentTransitionSupport$2 -> android.support.transition.FragmentTransitionSupport$2:
    148:148:void <init>(android.support.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    155:161:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    169:169:void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    173:173:void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
    151:151:void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
android.support.transition.FragmentTransitionSupport$3 -> android.support.transition.FragmentTransitionSupport$3:
    219:219:void <init>(android.support.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    235:235:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    243:243:void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    247:247:void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
    222:231:void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
android.support.transition.FragmentTransitionSupport$4 -> android.support.transition.FragmentTransitionSupport$4:
    309:309:void <init>(android.support.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
android.support.transition.ObjectAnimatorUtils -> android.support.transition.ObjectAnimatorUtils:
    28:31:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.PathMotion -> android.support.transition.PathMotion:
    43:44:void <init>() -> <init>
android.support.transition.PathProperty -> android.support.transition.PathProperty:
    45:49:void <init>(android.util.Property,android.graphics.Path) -> <init>
    35:35:java.lang.Object get(java.lang.Object) -> get
    53:53:java.lang.Float get(java.lang.Object) -> get
    35:35:void set(java.lang.Object,java.lang.Object) -> set
    58:63:void set(java.lang.Object,java.lang.Float) -> set
android.support.transition.PropertyValuesHolderUtils -> android.support.transition.PropertyValuesHolderUtils:
    38:41:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
android.support.transition.RectEvaluator -> android.support.transition.RectEvaluator:
    39:40:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
android.support.transition.Scene -> android.support.transition.Scene:
    149:154:void exit() -> exit
    207:207:android.support.transition.Scene getCurrentScene(android.view.View) -> getCurrentScene
    196:197:void setCurrentScene(android.view.View,android.support.transition.Scene) -> setCurrentScene
android.support.transition.Transition -> android.support.transition.Transition:
    163:204:void <clinit>() -> <clinit>
    262:263:void <init>() -> <init>
    2033:2037:android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener) -> addListener
    998:999:android.support.transition.Transition addTarget(android.view.View) -> addTarget
    644:660:void addUnmatched(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> addUnmatched
    1531:1568:void addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues) -> addViewValues
    1895:1916:void animate(android.animation.Animator) -> animate
    1598:1653:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    2180:2196:void capturePropagationValues(android.support.transition.TransitionValues) -> capturePropagationValues
    1468:1527:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1576:1585:void clearValues(boolean) -> clearValues
    119:119:java.lang.Object clone() -> clone
    2215:2223:android.support.transition.Transition clone() -> clone
    486:486:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    707:801:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1954:1978:void end() -> end
    354:354:long getDuration() -> getDuration
    2124:2124:android.support.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1682:1706:android.support.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2241:2241:java.lang.String getName() -> getName
    2094:2094:android.support.transition.PathMotion getPathMotion() -> getPathMotion
    2172:2172:android.support.transition.TransitionPropagation getPropagation() -> getPropagation
    857:862:android.support.v4.util.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1412:1412:java.util.List getTargetIds() -> getTargetIds
    1441:1441:java.util.List getTargetNames() -> getTargetNames
    1456:1456:java.util.List getTargetTypes() -> getTargetTypes
    1426:1426:java.util.List getTargets() -> getTargets
    435:435:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1663:1667:android.support.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1836:1857:boolean isTransitionRequired(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> isTransitionRequired
    814:841:boolean isValidTarget(android.view.View) -> isValidTarget
    1862:1880:boolean isValueChanged(android.support.transition.TransitionValues,android.support.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:608:void matchIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:554:void matchInstances(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> matchInstances
    564:581:void matchItemIds(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.LongSparseArray,android.support.v4.util.LongSparseArray) -> matchItemIds
    618:635:void matchNames(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> matchNames
    664:687:void matchStartAndEnd(android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps) -> matchStartAndEnd
    1718:1739:void pause(android.view.View) -> pause
    1781:1819:void playTransition(android.view.ViewGroup) -> playTransition
    2049:2056:android.support.transition.Transition removeListener(android.support.transition.Transition$TransitionListener) -> removeListener
    1096:1097:android.support.transition.Transition removeTarget(android.view.View) -> removeTarget
    1750:1773:void resume(android.view.View) -> resume
    894:910:void runAnimator(android.animation.Animator,android.support.v4.util.ArrayMap) -> runAnimator
    876:890:void runAnimators() -> runAnimators
    341:342:android.support.transition.Transition setDuration(long) -> setDuration
    2109:2110:void setEpicenterCallback(android.support.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:396:android.support.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2076:2081:void setPathMotion(android.support.transition.PathMotion) -> setPathMotion
    2155:2156:void setPropagation(android.support.transition.TransitionPropagation) -> setPropagation
    368:369:android.support.transition.Transition setStartDelay(long) -> setStartDelay
    1927:1939:void start() -> start
    2209:2209:java.lang.String toString() -> toString
    2245:2276:java.lang.String toString(java.lang.String) -> toString
android.support.transition.Transition$1 -> android.support.transition.Transition$1:
    170:170:void <init>() -> <init>
    173:176:android.graphics.Path getPath(float,float,float,float) -> getPath
android.support.transition.Transition$2 -> android.support.transition.Transition$2:
    896:896:void <init>(android.support.transition.Transition,android.support.v4.util.ArrayMap) -> <init>
    904:906:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    899:900:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.transition.Transition$3 -> android.support.transition.Transition$3:
    1907:1907:void <init>(android.support.transition.Transition) -> <init>
    1910:1912:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.Transition$AnimationInfo -> android.support.transition.Transition$AnimationInfo:
    2359:2365:void <init>(android.view.View,java.lang.String,android.support.transition.Transition,android.support.transition.WindowIdImpl,android.support.transition.TransitionValues) -> <init>
android.support.transition.Transition$EpicenterCallback -> android.support.transition.Transition$EpicenterCallback:
    2422:2422:void <init>() -> <init>
android.support.transition.TransitionListenerAdapter -> android.support.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
    43:43:void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    47:47:void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
    31:31:void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
android.support.transition.TransitionManager -> android.support.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    402:416:void beginDelayedTransition(android.view.ViewGroup,android.support.transition.Transition) -> beginDelayedTransition
    195:206:android.support.v4.util.ArrayMap getRunningTransitions() -> getRunningTransitions
    211:216:void sceneChangeRunTransition(android.view.ViewGroup,android.support.transition.Transition) -> sceneChangeRunTransition
    303:320:void sceneChangeSetup(android.view.ViewGroup,android.support.transition.Transition) -> sceneChangeSetup
android.support.transition.TransitionManager$MultiListener -> android.support.transition.TransitionManager$MultiListener:
    233:236:void <init>(android.support.transition.Transition,android.view.ViewGroup) -> <init>
    263:297:boolean onPreDraw() -> onPreDraw
    245:245:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    249:259:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    239:241:void removeListeners() -> removeListeners
android.support.transition.TransitionManager$MultiListener$1 -> android.support.transition.TransitionManager$MultiListener$1:
    282:282:void <init>(android.support.transition.TransitionManager$MultiListener,android.support.v4.util.ArrayMap) -> <init>
    285:287:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
android.support.transition.TransitionSet -> android.support.transition.TransitionSet:
    109:110:void <init>() -> <init>
    61:61:android.support.transition.Transition addListener(android.support.transition.Transition$TransitionListener) -> addListener
    299:299:android.support.transition.TransitionSet addListener(android.support.transition.Transition$TransitionListener) -> addListener
    61:61:android.support.transition.Transition addTarget(android.view.View) -> addTarget
    263:266:android.support.transition.TransitionSet addTarget(android.view.View) -> addTarget
    176:193:android.support.transition.TransitionSet addTransition(android.support.transition.Transition) -> addTransition
    526:534:void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    538:543:void capturePropagationValues(android.support.transition.TransitionValues) -> capturePropagationValues
    514:522:void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    61:61:java.lang.Object clone() -> clone
    639:645:android.support.transition.Transition clone() -> clone
    456:473:void createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    215:216:android.support.transition.Transition getTransitionAt(int) -> getTransitionAt
    204:204:int getTransitionCount() -> getTransitionCount
    549:554:void pause(android.view.View) -> pause
    61:61:android.support.transition.Transition removeListener(android.support.transition.Transition$TransitionListener) -> removeListener
    377:377:android.support.transition.TransitionSet removeListener(android.support.transition.Transition$TransitionListener) -> removeListener
    61:61:android.support.transition.Transition removeTarget(android.view.View) -> removeTarget
    314:317:android.support.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    560:565:void resume(android.view.View) -> resume
    481:510:void runAnimators() -> runAnimators
    61:61:android.support.transition.Transition setDuration(long) -> setDuration
    231:238:android.support.transition.TransitionSet setDuration(long) -> setDuration
    620:626:void setEpicenterCallback(android.support.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    61:61:android.support.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    250:257:android.support.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    132:143:android.support.transition.TransitionSet setOrdering(int) -> setOrdering
    382:387:void setPathMotion(android.support.transition.PathMotion) -> setPathMotion
    610:616:void setPropagation(android.support.transition.TransitionPropagation) -> setPropagation
    61:61:android.support.transition.Transition setStartDelay(long) -> setStartDelay
    244:244:android.support.transition.TransitionSet setStartDelay(long) -> setStartDelay
    408:413:void setupStartEndListeners() -> setupStartEndListeners
    630:634:java.lang.String toString(java.lang.String) -> toString
android.support.transition.TransitionSet$1 -> android.support.transition.TransitionSet$1:
    493:493:void <init>(android.support.transition.TransitionSet,android.support.transition.Transition) -> <init>
    496:498:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
android.support.transition.TransitionSet$TransitionSetListener -> android.support.transition.TransitionSet$TransitionSetListener:
    423:425:void <init>(android.support.transition.TransitionSet) -> <init>
    437:444:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    429:433:void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
android.support.transition.TransitionUtils -> android.support.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:72:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:140:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    144:151:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
android.support.transition.TransitionValues -> android.support.transition.TransitionValues:
    43:58:void <init>() -> <init>
    62:69:boolean equals(java.lang.Object) -> equals
    74:74:int hashCode() -> hashCode
    79:85:java.lang.String toString() -> toString
android.support.transition.TransitionValuesMaps -> android.support.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
android.support.transition.ViewGroupOverlayApi14 -> android.support.transition.ViewGroupOverlayApi14:
    28:29:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    37:38:void add(android.view.View) -> add
    32:32:android.support.transition.ViewGroupOverlayApi14 createFrom(android.view.ViewGroup) -> createFrom
    42:43:void remove(android.view.View) -> remove
android.support.transition.ViewGroupOverlayApi18 -> android.support.transition.ViewGroupOverlayApi18:
    32:34:void <init>(android.view.ViewGroup) -> <init>
    38:39:void add(android.graphics.drawable.Drawable) -> add
    53:54:void add(android.view.View) -> add
    48:49:void remove(android.graphics.drawable.Drawable) -> remove
    58:59:void remove(android.view.View) -> remove
android.support.transition.ViewGroupUtils -> android.support.transition.ViewGroupUtils:
    33:36:android.support.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    43:48:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
android.support.transition.ViewGroupUtilsApi14 -> android.support.transition.ViewGroupUtilsApi14:
    109:127:void cancelLayoutTransition(android.animation.LayoutTransition) -> cancelLayoutTransition
    45:106:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
android.support.transition.ViewGroupUtilsApi14$1 -> android.support.transition.ViewGroupUtilsApi14$1:
    46:46:void <init>() -> <init>
    49:49:boolean isChangingLayout() -> isChangingLayout
android.support.transition.ViewGroupUtilsApi18 -> android.support.transition.ViewGroupUtilsApi18:
    50:60:void fetchSuppressLayoutMethod() -> fetchSuppressLayoutMethod
    37:47:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
android.support.transition.ViewOverlayApi14 -> android.support.transition.ViewOverlayApi14:
    47:49:void <init>(android.content.Context,android.view.ViewGroup,android.view.View) -> <init>
    89:90:void add(android.graphics.drawable.Drawable) -> add
    65:76:android.support.transition.ViewOverlayApi14 createFrom(android.view.View) -> createFrom
    52:61:android.view.ViewGroup getContentView(android.view.View) -> getContentView
    99:100:void remove(android.graphics.drawable.Drawable) -> remove
android.support.transition.ViewOverlayApi14$OverlayViewGroup -> android.support.transition.ViewOverlayApi14$OverlayViewGroup:
    134:139:void <clinit>() -> <clinit>
    158:165:void <init>(android.content.Context,android.view.ViewGroup,android.view.View,android.support.transition.ViewOverlayApi14) -> <init>
    174:184:void add(android.graphics.drawable.Drawable) -> add
    200:224:void add(android.view.View) -> add
    252:265:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    170:170:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    282:288:void getOffset(int[]) -> getOffset
    330:344:android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect) -> invalidateChildInParent
    247:248:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    241:242:boolean isEmpty() -> isEmpty
    270:270:void onLayout(boolean,int,int,int,int) -> onLayout
    187:192:void remove(android.graphics.drawable.Drawable) -> remove
    227:231:void remove(android.view.View) -> remove
    196:196:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.transition.ViewOverlayApi18 -> android.support.transition.ViewOverlayApi18:
    31:33:void <init>(android.view.View) -> <init>
    37:38:void add(android.graphics.drawable.Drawable) -> add
    47:48:void remove(android.graphics.drawable.Drawable) -> remove
android.support.transition.ViewUtils -> android.support.transition.ViewUtils:
    45:74:void <clinit>() -> <clinit>
    131:132:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    214:223:void fetchViewFlagsField() -> fetchViewFlagsField
    93:96:android.support.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    114:114:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    103:106:android.support.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    122:123:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    210:211:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    110:111:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    148:157:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    172:173:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    188:189:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
android.support.transition.ViewUtils$1 -> android.support.transition.ViewUtils$1:
    60:60:void <init>(java.lang.Class,java.lang.String) -> <init>
    60:60:java.lang.Object get(java.lang.Object) -> get
    64:64:java.lang.Float get(android.view.View) -> get
    60:60:void set(java.lang.Object,java.lang.Object) -> set
    69:70:void set(android.view.View,java.lang.Float) -> set
android.support.transition.ViewUtils$2 -> android.support.transition.ViewUtils$2:
    75:75:void <init>(java.lang.Class,java.lang.String) -> <init>
    75:75:java.lang.Object get(java.lang.Object) -> get
    79:79:android.graphics.Rect get(android.view.View) -> get
    75:75:void set(java.lang.Object,java.lang.Object) -> set
    84:85:void set(android.view.View,android.graphics.Rect) -> set
android.support.transition.ViewUtilsApi19 -> android.support.transition.ViewUtilsApi19:
    29:29:void <init>() -> <init>
    77:77:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    93:102:void fetchGetTransitionAlphaMethod() -> fetchGetTransitionAlphaMethod
    80:90:void fetchSetTransitionAlphaMethod() -> fetchSetTransitionAlphaMethod
    56:66:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    72:72:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    40:52:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
android.support.transition.ViewUtilsApi21 -> android.support.transition.ViewUtilsApi21:
    30:30:void <init>() -> <init>
    84:94:void fetchTransformMatrixToGlobalMethod() -> fetchTransformMatrixToGlobalMethod
    97:107:void fetchTransformMatrixToLocalMethod() -> fetchTransformMatrixToLocalMethod
    43:53:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    57:67:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
android.support.transition.ViewUtilsApi22 -> android.support.transition.ViewUtilsApi22:
    29:29:void <init>() -> <init>
    52:62:void fetchSetLeftTopRightBottomMethod() -> fetchSetLeftTopRightBottomMethod
    38:48:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
android.support.transition.ViewUtilsBase -> android.support.transition.ViewUtilsBase:
    25:25:void <init>() -> <init>
    56:59:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    39:43:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    48:51:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    126:130:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    30:36:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    62:73:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    76:90:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
android.support.transition.Visibility -> android.support.transition.Visibility:
    79:79:void <clinit>() -> <clinit>
    98:99:void <init>() -> <init>
    161:162:void captureEndValues(android.support.transition.TransitionValues) -> captureEndValues
    156:157:void captureStartValues(android.support.transition.TransitionValues) -> captureStartValues
    146:152:void captureValues(android.support.transition.TransitionValues) -> captureValues
    246:258:android.animation.Animator createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> createAnimator
    142:142:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    191:239:android.support.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> getVisibilityChangeInfo
    462:473:boolean isTransitionRequired(android.support.transition.TransitionValues,android.support.transition.TransitionValues) -> isTransitionRequired
    279:280:android.animation.Animator onAppear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int) -> onAppear
    336:436:android.animation.Animator onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int) -> onDisappear
    122:123:void setMode(int) -> setMode
android.support.transition.Visibility$1 -> android.support.transition.Visibility$1:
    411:411:void <init>(android.support.transition.Visibility,android.support.transition.ViewGroupOverlayImpl,android.view.View) -> <init>
    414:415:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.transition.Visibility$DisappearListener -> android.support.transition.Visibility$DisappearListener:
    488:495:void <init>(android.view.View,int,boolean) -> <init>
    559:568:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    517:518:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    530:531:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    501:504:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    522:522:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    510:513:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    526:526:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    540:542:void onTransitionEnd(android.support.transition.Transition) -> onTransitionEnd
    550:551:void onTransitionPause(android.support.transition.Transition) -> onTransitionPause
    555:556:void onTransitionResume(android.support.transition.Transition) -> onTransitionResume
    536:536:void onTransitionStart(android.support.transition.Transition) -> onTransitionStart
    571:575:void suppressLayout(boolean) -> suppressLayout
android.support.transition.Visibility$VisibilityInfo -> android.support.transition.Visibility$VisibilityInfo:
    85:86:void <init>() -> <init>
android.support.transition.WindowIdApi14 -> android.support.transition.WindowIdApi14:
    25:27:void <init>(android.os.IBinder) -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
android.support.transition.WindowIdApi18 -> android.support.transition.WindowIdApi18:
    29:31:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
android.support.v13.view.inputmethod.EditorInfoCompat -> android.support.v13.view.inputmethod.EditorInfoCompat:
    71:71:void <clinit>() -> <clinit>
    111:119:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    89:97:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
android.support.v13.view.inputmethod.InputConnectionCompat -> android.support.v13.view.inputmethod.InputConnectionCompat:
    194:195:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    58:79:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
android.support.v13.view.inputmethod.InputConnectionCompat$1 -> android.support.v13.view.inputmethod.InputConnectionCompat$1:
    205:205:void <init>(android.view.inputmethod.InputConnection,boolean,android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    209:213:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
android.support.v13.view.inputmethod.InputConnectionCompat$2 -> android.support.v13.view.inputmethod.InputConnectionCompat$2:
    222:222:void <init>(android.view.inputmethod.InputConnection,boolean,android.support.v13.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    225:228:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
android.support.v13.view.inputmethod.InputContentInfoCompat -> android.support.v13.view.inputmethod.InputContentInfoCompat:
    169:175:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:179:void <init>(android.support.v13.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> getContentUri
    196:196:android.content.ClipDescription getDescription() -> getDescription
    247:248:void requestPermission() -> requestPermission
    219:225:android.support.v13.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
android.support.v13.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> android.support.v13.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    109:111:void <init>(java.lang.Object) -> <init>
    114:116:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    121:121:android.net.Uri getContentUri() -> getContentUri
    127:127:android.content.ClipDescription getDescription() -> getDescription
    144:145:void requestPermission() -> requestPermission
android.support.v13.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> android.support.v13.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    94:94:void requestPermission() -> requestPermission
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    287:292:void finishAffinity(android.app.Activity) -> finishAffinity
    169:169:android.support.v4.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    491:524:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
android.support.v4.app.ActivityCompat$1 -> android.support.v4.app.ActivityCompat$1:
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:521:void run() -> run
android.support.v4.app.AppOpsManagerCompat -> android.support.v4.app.AppOpsManagerCompat:
    175:179:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:78:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    332:334:void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    379:380:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    391:392:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    370:375:void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    544:545:android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    597:611:void bumpBackStackNesting(int) -> bumpBackStackNesting
    637:637:int commit() -> commit
    642:642:int commitAllowingStateLoss() -> commitAllowingStateLoss
    669:669:int commitInternal(boolean) -> commitInternal
    396:400:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    251:252:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    255:330:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    755:804:void executeOps() -> executeOps
    814:862:void executePopOps(boolean) -> executePopOps
    888:953:android.support.v4.app.Fragment expandOps(java.util.ArrayList,android.support.v4.app.Fragment) -> expandOps
    698:707:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    1017:1017:java.lang.String getName() -> getName
    711:719:boolean interactsWith(int) -> interactsWith
    723:747:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    1009:1011:boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op) -> isFragmentPostponed
    990:996:boolean isPostponed() -> isPostponed
    450:452:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    627:633:void runOnCommitRunnables() -> runOnCommitRunnables
    1000:1006:void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    235:247:java.lang.String toString() -> toString
    967:986:android.support.v4.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,android.support.v4.app.Fragment) -> trackAddedFragmentsInPop
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    200:201:void <init>() -> <init>
    203:206:void <init>(int,android.support.v4.app.Fragment) -> <init>
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    158:158:void <clinit>() -> <clinit>
    48:53:void <init>(android.support.v4.app.BackStackRecord) -> <init>
    79:92:void <init>(android.os.Parcel) -> <init>
    139:139:int describeContents() -> describeContents
    95:134:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    144:156:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    159:159:void <init>() -> <init>
    159:159:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    159:159:java.lang.Object[] newArray(int) -> newArray
    167:167:android.support.v4.app.BackStackState[] newArray(int) -> newArray
android.support.v4.app.BundleCompat -> android.support.v4.app.BundleCompat:
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
android.support.v4.app.BundleCompat$BundleCompatBaseImpl -> android.support.v4.app.BundleCompat$BundleCompatBaseImpl:
    48:67:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
android.support.v4.app.CoreComponentFactory -> android.support.v4.app.CoreComponentFactory:
    37:86:void <init>() -> <init>
    72:78:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    43:43:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    49:49:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    62:62:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    56:56:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    68:68:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    101:102:void <init>() -> <init>
    205:227:void dismissInternal(boolean) -> dismissInternal
    230:230:android.app.Dialog getDialog() -> getDialog
    401:428:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    289:295:void onAttach(android.content.Context) -> onAttach
    386:386:void onCancel(android.content.DialogInterface) -> onCancel
    310:321:void onCreate(android.os.Bundle) -> onCreate
    479:488:void onDestroyView() -> onDestroyView
    299:306:void onDetach() -> onDetach
    390:397:void onDismiss(android.content.DialogInterface) -> onDismiss
    326:338:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    442:464:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    432:438:void onStart() -> onStart
    468:472:void onStop() -> onStop
    345:355:void setupDialog(android.app.Dialog,int) -> setupDialog
    157:162:int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    87:90:void <clinit>() -> <clinit>
    410:411:void <init>() -> <init>
    2272:2282:void callStartTransitionListener() -> callStartTransitionListener
    2294:2369:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2747:2750:android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    525:525:boolean equals(java.lang.Object) -> equals
    2372:2378:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    710:710:android.support.v4.app.FragmentActivity getActivity() -> getActivity
    2178:2179:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2203:2204:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2805:2808:android.view.View getAnimatingAway() -> getAnimatingAway
    2820:2823:android.animation.Animator getAnimator() -> getAnimator
    592:592:android.os.Bundle getArguments() -> getArguments
    844:856:android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    683:683:android.content.Context getContext() -> getContext
    1961:1964:java.lang.Object getEnterTransition() -> getEnterTransition
    2791:2794:android.support.v4.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2040:2043:java.lang.Object getExitTransition() -> getExitTransition
    2798:2801:android.support.v4.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    812:812:android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    1326:1327:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    258:258:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    2754:2757:int getNextAnim() -> getNextAnim
    2768:2771:int getNextTransition() -> getNextTransition
    2784:2787:int getNextTransitionStyle() -> getNextTransitionStyle
    2078:2081:java.lang.Object getReenterTransition() -> getReenterTransition
    760:760:android.content.res.Resources getResources() -> getResources
    982:982:boolean getRetainInstance() -> getRetainInstance
    2000:2003:java.lang.Object getReturnTransition() -> getReturnTransition
    2111:2114:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2149:2153:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2827:2830:int getStateAfterAnimating() -> getStateAfterAnimating
    1577:1577:android.view.View getView() -> getView
    327:328:android.arch.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    532:532:int hashCode() -> hashCode
    1743:1760:void initState() -> initState
    437:450:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2382:2383:void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    2845:2848:boolean isHideReplaced() -> isHideReplaced
    518:518:boolean isInBackStack() -> isInBackStack
    2838:2841:boolean isPostponed() -> isPostponed
    604:607:boolean isStateSaved() -> isStateSaved
    480:488:boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    2514:2517:void noteStateNotSaved() -> noteStateNotSaved
    1595:1596:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1135:1135:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1418:1424:void onAttach(android.content.Context) -> onAttach
    1435:1436:void onAttach(android.app.Activity) -> onAttach
    1410:1410:void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    1679:1680:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1911:1911:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1496:1502:void onCreate(android.os.Bundle) -> onCreate
    1454:1454:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1474:1474:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    1865:1866:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1785:1785:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1553:1553:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1728:1734:void onDestroy() -> onDestroy
    1812:1812:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1719:1720:void onDestroyView() -> onDestroyView
    1768:1769:void onDetach() -> onDetach
    1277:1277:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    961:961:void onHiddenChanged(boolean) -> onHiddenChanged
    1380:1386:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1397:1398:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1705:1706:void onLowMemory() -> onLowMemory
    1665:1665:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    1833:1833:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1844:1844:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1689:1690:void onPause() -> onPause
    1674:1674:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1802:1802:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1237:1237:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1632:1633:void onResume() -> onResume
    1655:1655:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1621:1622:void onStart() -> onStart
    1699:1700:void onStop() -> onStop
    1567:1567:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1611:1612:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    865:865:android.support.v4.app.FragmentManager peekChildFragmentManager() -> peekChildFragmentManager
    2455:2462:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2534:2538:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2601:2611:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2409:2417:void performCreate(android.os.Bundle) -> performCreate
    2557:2567:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2425:2447:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2692:2701:void performDestroy() -> performDestroy
    2670:2680:void performDestroyView() -> performDestroyView
    2708:2712:void performDetach() -> performDetach
    1308:1310:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2541:2545:void performLowMemory() -> performLowMemory
    2520:2524:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2585:2597:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2615:2623:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2636:2647:void performPause() -> performPause
    2527:2531:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2571:2581:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2492:2500:void performResume() -> performResume
    2626:2633:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2471:2479:void performStart() -> performStart
    2653:2664:void performStop() -> performStop
    1879:1880:void registerForContextMenu(android.view.View) -> registerForContextMenu
    694:696:android.content.Context requireContext() -> requireContext
    1517:1529:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    493:500:void restoreViewState(android.os.Bundle) -> restoreViewState
    2812:2813:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2816:2817:void setAnimator(android.animation.Animator) -> setAnimator
    580:584:void setArguments(android.os.Bundle) -> setArguments
    2852:2853:void setHideReplaced(boolean) -> setHideReplaced
    509:515:void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    2761:2765:void setNextAnim(int) -> setNextAnim
    2775:2781:void setNextTransition(int,int) -> setNextTransition
    2730:2744:void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    978:979:void setRetainInstance(boolean) -> setRetainInstance
    2834:2835:void setStateAfterAnimating(int) -> setStateAfterAnimating
    2252:2264:void startPostponedEnterTransition() -> startPostponedEnterTransition
    537:552:java.lang.String toString() -> toString
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    2255:2255:void <init>(android.support.v4.app.Fragment) -> <init>
    2258:2259:void run() -> run
android.support.v4.app.Fragment$2 -> android.support.v4.app.Fragment$2:
    2386:2386:void <init>(android.support.v4.app.Fragment) -> <init>
    2403:2403:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2390:2391:android.view.View onFindViewById(int) -> onFindViewById
    2398:2398:boolean onHasView() -> onHasView
android.support.v4.app.Fragment$3 -> android.support.v4.app.Fragment$3:
    2429:2429:void <init>(android.support.v4.app.Fragment) -> <init>
    2432:2435:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
android.support.v4.app.Fragment$AnimationInfo -> android.support.v4.app.Fragment$AnimationInfo:
    2869:2902:void <init>() -> <init>
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
    391:392:void <init>(java.lang.String,java.lang.Exception) -> <init>
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    68:957:void <init>() -> <init>
    805:806:void checkForValidRequestCode(int) -> checkForValidRequestCode
    405:405:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    693:707:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    324:324:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    729:729:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    299:300:android.arch.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1051:1052:void markFragmentsCreated() -> markFragmentsCreated
    1056:1072:boolean markState(android.support.v4.app.FragmentManager,android.arch.lifecycle.Lifecycle$State) -> markState
    145:173:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    722:722:void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    181:193:void onBackPressed() -> onBackPressed
    284:287:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    333:370:void onCreate(android.os.Bundle) -> onCreate
    377:382:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    387:391:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    396:400:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    413:420:void onDestroy() -> onDestroy
    427:429:void onLowMemory() -> onLowMemory
    436:442:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    261:262:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    491:493:void onNewIntent(android.content.Intent) -> onNewIntent
    457:463:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    470:477:void onPause() -> onPause
    276:277:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    525:529:void onPostResume() -> onPostResume
    559:559:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    546:551:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    845:863:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    514:518:void onResume() -> onResume
    538:539:void onResumeFragments() -> onResumeFragments
    653:653:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    569:581:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    589:607:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    614:629:void onStart() -> onStart
    500:501:void onStateNotSaved() -> onStateNotSaved
    636:642:void onStop() -> onStop
    749:755:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    762:768:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    776:783:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    791:798:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    678:679:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    819:823:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    82:82:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    85:93:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.FragmentActivity$HostCallbacks:
    958:960:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    1032:1033:void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    964:965:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    1038:1038:android.view.View onFindViewById(int) -> onFindViewById
    974:974:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    1026:1027:int onGetWindowAnimations() -> onGetWindowAnimations
    1043:1044:boolean onHasView() -> onHasView
    1021:1021:boolean onHasWindowAnimations() -> onHasWindowAnimations
    969:969:boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    984:985:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    130:130:void <init>() -> <init>
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    30:30:void <init>() -> <init>
    50:50:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
android.support.v4.app.FragmentController -> android.support.v4.app.FragmentController:
    52:54:void <init>(android.support.v4.app.FragmentHostCallback) -> <init>
    104:106:void attachHost(android.support.v4.app.Fragment) -> attachHost
    49:49:android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> createController
    201:202:void dispatchActivityCreated() -> dispatchActivityCreated
    307:308:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    369:369:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    190:191:void dispatchCreate() -> dispatchCreate
    331:331:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    274:275:void dispatchDestroy() -> dispatchDestroy
    319:320:void dispatchLowMemory() -> dispatchLowMemory
    285:286:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    356:356:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    380:381:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    234:235:void dispatchPause() -> dispatchPause
    296:297:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    343:343:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    223:224:void dispatchResume() -> dispatchResume
    212:213:void dispatchStart() -> dispatchStart
    245:246:void dispatchStop() -> dispatchStop
    391:391:boolean execPendingActions() -> execPendingActions
    82:82:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    60:60:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    127:128:void noteStateNotSaved() -> noteStateNotSaved
    120:120:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    158:159:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    179:179:android.support.v4.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    134:134:android.os.Parcelable saveAllState() -> saveAllState
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.FragmentHostCallback:
    57:58:void <init>(android.support.v4.app.FragmentActivity) -> <init>
    61:66:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    190:190:android.app.Activity getActivity() -> getActivity
    195:195:android.content.Context getContext() -> getContext
    204:204:android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    200:200:android.os.Handler getHandler() -> getHandler
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    88:466:void <init>() -> <init>
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    664:1132:void <clinit>() -> <clinit>
    663:4063:void <init>() -> <init>
    2637:2653:void addAddedFragments(android.support.v4.util.ArraySet) -> addAddedFragments
    2739:2743:void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    1912:1933:void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    2144:2160:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    1630:1681:void animateRemoveFragment(android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    3201:3201:void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachController
    2001:2018:void attachFragment(android.support.v4.app.Fragment) -> attachFragment
    809:809:android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    3190:3197:void burpActive() -> burpActive
    2079:2080:void checkStateLoss() -> checkStateLoss
    2258:2261:void cleanupExec() -> cleanupExec
    2531:2567:void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1714:1764:void completeShowHideFragment(android.support.v4.app.Fragment) -> completeShowHideFragment
    1983:1998:void detachFragment(android.support.v4.app.Fragment) -> detachFragment
    3227:3230:void dispatchActivityCreated() -> dispatchActivityCreated
    3295:3301:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3377:3388:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3221:3224:void dispatchCreate() -> dispatchCreate
    3313:3342:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3258:3264:void dispatchDestroy() -> dispatchDestroy
    3254:3255:void dispatchDestroyView() -> dispatchDestroyView
    3304:3310:void dispatchLowMemory() -> dispatchLowMemory
    3277:3283:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3503:3515:void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    3455:3467:void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    3487:3499:void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    3625:3637:void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    3640:3652:void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentDetached
    3564:3576:void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentPaused
    3439:3451:void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    3471:3483:void dispatchOnFragmentPreCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    3549:3561:void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentResumed
    3595:3607:void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    3534:3546:void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStarted
    3579:3591:void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentStopped
    3519:3531:void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    3610:3622:void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    3362:3373:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3392:3401:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3245:3246:void dispatchPause() -> dispatchPause
    3286:3292:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3346:3358:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3239:3242:void dispatchResume() -> dispatchResume
    3233:3236:void dispatchStart() -> dispatchStart
    3268:3271:void dispatchStateChange(int) -> dispatchStateChange
    3249:3251:void dispatchStop() -> dispatchStop
    2724:2728:void doPendingDeferredStart() -> doPendingDeferredStart
    1020:1095:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2671:2693:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    2105:2121:void enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    2206:2207:void ensureExecReady(boolean) -> ensureExecReady
    1688:1701:void ensureInflatedFragmentView(android.support.v4.app.Fragment) -> ensureInflatedFragmentView
    2267:2283:boolean execPendingActions() -> execPendingActions
    2614:2628:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2386:2441:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2292:2318:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    2024:2039:android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    2045:2063:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    2067:2075:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2586:2590:android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment) -> findFragmentUnder
    2659:2664:void forcePostponedTransactions() -> forcePostponedTransactions
    2189:2196:void freeBackStackIndex(int) -> freeBackStackIndex
    2707:2719:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    1298:1310:android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation) -> getAnimationListener
    932:938:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    946:951:java.util.List getFragments() -> getFragments
    3796:3796:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3416:3416:android.support.v4.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    1957:1964:void hideFragment(android.support.v4.app.Fragment) -> hideFragment
    1314:1314:boolean isStateAtLeast(int) -> isStateAtLeast
    2094:2094:boolean isStateSaved() -> isStateSaved
    1160:1253:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    1886:1896:void makeActive(android.support.v4.app.Fragment) -> makeActive
    1152:1155:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    1899:1909:void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    1138:1148:android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    2451:2460:void makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet) -> makeRemovedFragmentsInvisible
    738:749:boolean modifiesAlpha(android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> modifiesAlpha
    754:773:boolean modifiesAlpha(android.animation.Animator) -> modifiesAlpha
    1773:1824:void moveFragmentToExpectedState(android.support.v4.app.Fragment) -> moveFragmentToExpectedState
    1321:1618:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    1684:1685:void moveToState(android.support.v4.app.Fragment) -> moveToState
    1836:1872:void moveToState(int,boolean) -> moveToState
    3208:3218:void noteStateNotSaved() -> noteStateNotSaved
    3696:3752:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3792:3792:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1257:1266:void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    843:844:void popBackStack(int,int) -> popBackStack
    826:827:boolean popBackStackImmediate() -> popBackStackImmediate
    867:892:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2748:2799:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2477:2510:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.support.v4.util.ArraySet) -> postponePostponableTransactions
    922:923:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    1936:1941:void removeFragment(android.support.v4.app.Fragment) -> removeFragment
    2336:2337:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2731:2736:void reportBackStackChanged() -> reportBackStackChanged
    3054:3182:void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig) -> restoreAllState
    2803:2804:android.support.v4.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    3655:3667:int reverseTransit(int) -> reverseTransit
    2941:2949:android.os.Parcelable saveAllState() -> saveAllState
    2905:2935:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    2889:2902:void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    2832:2886:void saveNonConfig() -> saveNonConfig
    2132:2140:void scheduleCommit() -> scheduleCommit
    2164:2185:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    1276:1277:void setHWLayerAnimListenerIfAlpha(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> setHWLayerAnimListenerIfAlpha
    3405:3411:void setPrimaryNavigationFragment(android.support.v4.app.Fragment) -> setPrimaryNavigationFragment
    2814:2829:void setRetaining(android.support.v4.app.FragmentManagerNonConfig) -> setRetaining
    777:778:boolean shouldRunOnHWLayer(android.view.View,android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator) -> shouldRunOnHWLayer
    1973:1980:void showFragment(android.support.v4.app.Fragment) -> showFragment
    1875:1883:void startPendingDeferredFragments() -> startPendingDeferredFragments
    787:804:void throwException(java.lang.RuntimeException) -> throwException
    1005:1015:java.lang.String toString() -> toString
    3679:3691:int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    730:730:void <init>(android.support.v4.app.FragmentManagerImpl) -> <init>
    733:734:void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    1639:1639:void <init>(android.support.v4.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,android.support.v4.app.Fragment) -> <init>
    1642:1657:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$2$1 -> android.support.v4.app.FragmentManagerImpl$2$1:
    1647:1647:void <init>(android.support.v4.app.FragmentManagerImpl$2) -> <init>
    1650:1655:void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    1664:1664:void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    1667:1675:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    1728:1728:void <init>(android.support.v4.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.support.v4.app.Fragment) -> <init>
    1731:1736:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
    4004:4006:void <init>(android.view.View,android.view.animation.Animation$AnimationListener) -> <init>
    4021:4032:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
    4022:4022:void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    4025:4026:void run() -> run
android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper -> android.support.v4.app.FragmentManagerImpl$AnimationListenerWrapper:
    3968:3970:void <init>(android.view.animation.Animation$AnimationListener) -> <init>
    3983:3986:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    3991:3994:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    3975:3978:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator -> android.support.v4.app.FragmentManagerImpl$AnimationOrAnimator:
    3945:3949:void <init>(android.view.animation.Animation) -> <init>
    3953:3957:void <init>(android.animation.Animator) -> <init>
android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener:
    4041:4043:void <init>(android.view.View) -> <init>
    4052:4054:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    4047:4048:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.app.FragmentManagerImpl$EndViewTransitionAnimator -> android.support.v4.app.FragmentManagerImpl$EndViewTransitionAnimator:
    4072:4079:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    4083:4092:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    4098:4107:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    4112:4120:void run() -> run
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    3800:3800:void <clinit>() -> <clinit>
android.support.v4.app.FragmentManagerImpl$PopBackStackState -> android.support.v4.app.FragmentManagerImpl$PopBackStackState:
    3839:3843:void <init>(android.support.v4.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3848:3858:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener -> android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener:
    3873:3876:void <init>(android.support.v4.app.BackStackRecord,boolean) -> <init>
    3934:3935:void cancelTransaction() -> cancelTransaction
    3916:3927:void completeTransaction() -> completeTransaction
    3906:3906:boolean isReady() -> isReady
    3885:3890:void onStartEnterTransition() -> onStartEnterTransition
    3899:3900:void startListening() -> startListening
android.support.v4.app.FragmentManagerNonConfig -> android.support.v4.app.FragmentManagerNonConfig:
    42:46:void <init>(java.util.List,java.util.List,java.util.List) -> <init>
    59:59:java.util.List getChildNonConfigs() -> getChildNonConfigs
    52:52:java.util.List getFragments() -> getFragments
    66:66:java.util.List getViewModelStores() -> getViewModelStores
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    646:646:void <clinit>() -> <clinit>
    621:622:void <init>() -> <init>
    624:630:void <init>(android.os.Parcel) -> <init>
    634:634:int describeContents() -> describeContents
    639:644:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    647:647:void <init>() -> <init>
    647:647:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    650:650:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    647:647:java.lang.Object[] newArray(int) -> newArray
    655:655:android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    129:129:void <clinit>() -> <clinit>
    43:54:void <init>(android.support.v4.app.Fragment) -> <init>
    56:68:void <init>(android.os.Parcel) -> <init>
    111:111:int describeContents() -> describeContents
    73:106:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig,android.arch.lifecycle.ViewModelStore) -> instantiate
    116:127:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    130:130:void <init>() -> <init>
    130:130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    133:133:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    130:130:java.lang.Object[] newArray(int) -> newArray
    138:138:android.support.v4.app.FragmentState[] newArray(int) -> newArray
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    44:201:void <init>() -> <init>
android.support.v4.app.FragmentTransition -> android.support.v4.app.FragmentTransition:
    44:61:void <clinit>() -> <clinit>
    646:652:void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1123:1210:void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1075:1080:void calculateFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    161:191:android.support.v4.util.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1092:1100:void calculatePopFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    978:995:void callSharedElementStartEnd(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean) -> callSharedElementStartEnd
    469:474:boolean canHandleAll(android.support.v4.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    838:842:android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    782:784:android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    423:463:android.support.v4.app.FragmentTransitionImpl chooseImpl(android.support.v4.app.Fragment,android.support.v4.app.Fragment) -> chooseImpl
    1001:1016:java.util.ArrayList configureEnteringExitingViews(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    689:693:java.lang.Object configureSharedElementsOrdered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    560:566:java.lang.Object configureSharedElementsReordered(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    310:367:void configureTransitionsOrdered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsOrdered
    212:267:void configureTransitionsReordered(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap) -> configureTransitionsReordered
    1220:1224:android.support.v4.app.FragmentTransition$FragmentContainerTransition ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    889:895:java.lang.String findKeyForValue(android.support.v4.util.ArrayMap,java.lang.String) -> findKeyForValue
    505:508:java.lang.Object getEnterTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> getEnterTransition
    518:521:java.lang.Object getExitTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,boolean) -> getExitTransition
    911:920:android.view.View getInEpicenterView(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    491:492:java.lang.Object getSharedElementTransition(android.support.v4.app.FragmentTransitionImpl,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    1040:1061:java.lang.Object mergeTransitions(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean) -> mergeTransitions
    277:290:void replaceHide(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList) -> replaceHide
    66:72:android.support.v4.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    956:962:void retainValues(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap) -> retainValues
    392:415:void scheduleTargetChange(android.support.v4.app.FragmentTransitionImpl,android.view.ViewGroup,android.support.v4.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    935:947:void setOutEpicenter(android.support.v4.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,android.support.v4.util.ArrayMap,boolean,android.support.v4.app.BackStackRecord) -> setOutEpicenter
    1024:1031:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    105:141:void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
android.support.v4.app.FragmentTransition$1 -> android.support.v4.app.FragmentTransition$1:
    283:283:void <init>(java.util.ArrayList) -> <init>
    286:287:void run() -> run
android.support.v4.app.FragmentTransition$2 -> android.support.v4.app.FragmentTransition$2:
    392:392:void <init>(java.lang.Object,android.support.v4.app.FragmentTransitionImpl,android.view.View,android.support.v4.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    395:413:void run() -> run
android.support.v4.app.FragmentTransition$3 -> android.support.v4.app.FragmentTransition$3:
    622:622:void <init>(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,android.view.View,android.support.v4.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    625:630:void run() -> run
android.support.v4.app.FragmentTransition$4 -> android.support.v4.app.FragmentTransition$4:
    734:734:void <init>(android.support.v4.app.FragmentTransitionImpl,android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    737:759:void run() -> run
android.support.v4.app.FragmentTransition$FragmentContainerTransition -> android.support.v4.app.FragmentTransition$FragmentContainerTransition:
    1231:1231:void <init>() -> <init>
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    32:32:void <init>() -> <init>
    287:291:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:113:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:207:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    41:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    119:121:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    178:200:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    295:299:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    261:283:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:171:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:245:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    76:88:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    303:315:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:72:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    250:256:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    50:55:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    81:81:void <init>(android.support.v4.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    144:144:void <init>(android.support.v4.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:161:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    151:157:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    165:165:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    169:169:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    147:147:void onTransitionStart(android.transition.Transition) -> onTransitionStart
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    215:215:void <init>(android.support.v4.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    235:235:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    231:231:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    239:239:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    243:243:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    218:227:void onTransitionStart(android.transition.Transition) -> onTransitionStart
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    305:305:void <init>(android.support.v4.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    308:309:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionImpl -> android.support.v4.app.FragmentTransitionImpl:
    38:38:void <init>() -> <init>
    311:329:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    189:205:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    336:341:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    356:361:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    212:226:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    75:78:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    348:348:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    130:137:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    292:304:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    233:247:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    149:178:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
android.support.v4.app.FragmentTransitionImpl$1 -> android.support.v4.app.FragmentTransitionImpl$1:
    169:169:void <init>(android.support.v4.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    172:176:void run() -> run
android.support.v4.app.FragmentTransitionImpl$2 -> android.support.v4.app.FragmentTransitionImpl$2:
    233:233:void <init>(android.support.v4.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    236:245:void run() -> run
android.support.v4.app.FragmentTransitionImpl$3 -> android.support.v4.app.FragmentTransitionImpl$3:
    292:292:void <init>(android.support.v4.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    295:302:void run() -> run
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    29:36:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    97:99:void <init>(android.os.IBinder) -> <init>
    102:102:android.os.IBinder asBinder() -> asBinder
    137:146:void cancel(java.lang.String,int,java.lang.String) -> cancel
    154:161:void cancelAll(java.lang.String) -> cancelAll
    113:129:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    76:77:void <init>() -> <init>
    328:333:void ensureList() -> ensureList
    227:228:android.widget.ListView getListView() -> getListView
    96:141:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    158:164:void onDestroyView() -> onDestroyView
    149:151:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    184:194:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    285:287:void setListShown(boolean,boolean) -> setListShown
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    52:52:void <init>(android.support.v4.app.ListFragment) -> <init>
    55:56:void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    60:60:void <init>(android.support.v4.app.ListFragment) -> <init>
    63:64:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    40:44:void <init>() -> <init>
    128:128:android.support.v4.app.LoaderManager getInstance(android.arch.lifecycle.LifecycleOwner) -> getInstance
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(android.arch.lifecycle.LifecycleOwner,android.arch.lifecycle.ViewModelStore) -> <init>
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:482:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    149:151:android.support.v4.content.Loader destroy(boolean) -> destroy
    212:215:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    111:121:void markForRedelivery() -> markForRedelivery
    76:77:void onActive() -> onActive
    82:83:void onInactive() -> onInactive
    134:138:void removeObserver(android.arch.lifecycle.Observer) -> removeObserver
    189:192:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
android.support.v4.app.LoaderManagerImpl$LoaderViewModel -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:android.support.v4.app.LoaderManagerImpl$LoaderViewModel getInstance(android.arch.lifecycle.ViewModelStore) -> getInstance
    335:340:void markForRedelivery() -> markForRedelivery
    344:348:void onCleared() -> onCleared
android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1 -> android.support.v4.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:android.arch.lifecycle.ViewModel create(java.lang.Class) -> create
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:258:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    5041:5046:android.os.Bundle getExtras(android.app.Notification) -> getExtras
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    3163:3173:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],android.support.v4.app.RemoteInput[],boolean,int,boolean) -> <init>
    3184:3184:android.app.PendingIntent getActionIntent() -> getActionIntent
    3199:3199:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    3233:3233:android.support.v4.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    3191:3191:android.os.Bundle getExtras() -> getExtras
    3176:3176:int getIcon() -> getIcon
    3208:3208:android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    3219:3219:int getSemanticAction() -> getSemanticAction
    3241:3241:boolean getShowsUserInterface() -> getShowsUserInterface
    3180:3180:java.lang.CharSequence getTitle() -> getTitle
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    3264:3265:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3280:3290:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],boolean,int,boolean) -> <init>
    3323:3327:android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    3385:3400:android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    1989:1990:void <init>() -> <init>
    2037:2049:void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    2018:2019:android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    2009:2011:android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    2076:2077:void <init>() -> <init>
    2116:2125:void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    2106:2107:android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    734:743:void <init>(android.content.Context,java.lang.String) -> <init>
    1374:1375:android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    1237:1238:android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    1585:1585:android.app.Notification build() -> build
    1568:1569:android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    1647:1647:int getColor() -> getColor
    1332:1335:android.os.Bundle getExtras() -> getExtras
    1589:1593:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    986:987:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> reduceLargeIconSize
    1139:1140:android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    1162:1163:android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    1433:1434:android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    911:912:android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    828:829:android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    820:821:android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1177:1181:android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    923:924:android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1185:1190:void setFlag(int,boolean) -> setFlag
    1253:1254:android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    1559:1560:android.support.v4.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    1265:1266:android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    977:978:android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1074:1080:android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    871:872:android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    1210:1211:android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    888:891:android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    796:797:android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    1018:1026:android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    1416:1422:android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    1064:1065:android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    759:760:android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    4643:4644:void <init>() -> <init>
    4758:4777:android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    4720:4748:android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> getBundleForUnreadConversation
    4834:4835:android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    4859:4866:void <init>(java.lang.String[],android.support.v4.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    4917:4917:long getLatestTimestamp() -> getLatestTimestamp
    4872:4872:java.lang.String[] getMessages() -> getMessages
    4903:4903:java.lang.String[] getParticipants() -> getParticipants
    4896:4896:android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    4880:4880:android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    4888:4888:android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    4936:4938:void <init>(java.lang.String) -> <init>
    4949:4950:android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    5006:5008:android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
    4996:4997:android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    4980:4981:android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    4966:4969:android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    2850:2851:void <init>() -> <init>
    2879:2880:android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
    2889:2900:void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    2862:2863:android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
android.support.v4.app.NotificationCompat$MessagingStyle -> android.support.v4.app.NotificationCompat$MessagingStyle:
    2196:2198:void <init>(android.support.v4.app.Person) -> <init>
    2537:2552:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    2281:2282:android.support.v4.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,android.support.v4.app.Person) -> addMessage
    2293:2297:android.support.v4.app.NotificationCompat$MessagingStyle addMessage(android.support.v4.app.NotificationCompat$MessagingStyle$Message) -> addMessage
    2385:2477:void apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> apply
    2481:2493:android.support.v4.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> findLatestIncomingMessage
    2497:2503:boolean hasMessagesWithoutSender() -> hasMessagesWithoutSender
    2336:2344:boolean isGroupConversation() -> isGroupConversation
    2532:2532:android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> makeFontColorSpan
    2507:2527:java.lang.CharSequence makeMessageLine(android.support.v4.app.NotificationCompat$MessagingStyle$Message) -> makeMessageLine
    2232:2233:android.support.v4.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence) -> setConversationTitle
    2314:2315:android.support.v4.app.NotificationCompat$MessagingStyle setGroupConversation(boolean) -> setGroupConversation
android.support.v4.app.NotificationCompat$MessagingStyle$Message -> android.support.v4.app.NotificationCompat$MessagingStyle$Message:
    2614:2618:void <init>(java.lang.CharSequence,long,android.support.v4.app.Person) -> <init>
    2757:2762:android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> getBundleArrayForMessages
    2713:2713:java.lang.String getDataMimeType() -> getDataMimeType
    2722:2722:android.net.Uri getDataUri() -> getDataUri
    2707:2707:android.support.v4.app.Person getPerson() -> getPerson
    2679:2679:java.lang.CharSequence getText() -> getText
    2684:2684:long getTimestamp() -> getTimestamp
    2668:2670:android.support.v4.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> setData
    2726:2752:android.os.Bundle toBundle() -> toBundle
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    1658:1666:void <init>() -> <init>
    1726:1726:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    1709:1709:android.widget.RemoteViews makeBigContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    1701:1701:android.widget.RemoteViews makeContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    1717:1717:android.widget.RemoteViews makeHeadsUpContentView(android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    1669:1675:void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    3866:3867:void <init>() -> <init>
    4046:4047:android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    3745:3745:java.lang.Object clone() -> clone
    4015:4030:android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    3922:3983:android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    3988:4010:android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompat$Action) -> getActionFromActionCompat
android.support.v4.app.NotificationCompatBuilder -> android.support.v4.app.NotificationCompatBuilder:
    62:208:void <init>(android.support.v4.app.NotificationCompat$Builder) -> <init>
    255:290:void addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    216:251:android.app.Notification build() -> build
    293:413:android.app.Notification buildInternal() -> buildInternal
    212:212:android.app.Notification$Builder getBuilder() -> getBuilder
    418:422:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    58:62:void <clinit>() -> <clinit>
    72:82:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    249:265:android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompat$Action) -> getBundleForAction
    90:118:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    286:301:android.os.Bundle toBundle(android.support.v4.app.RemoteInput) -> toBundle
    316:323:android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInput[]) -> toBundleArray
    141:153:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompat$Action) -> writeActionAndGetExtras
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    97:106:void <clinit>() -> <clinit>
    156:160:void <init>(android.content.Context) -> <init>
    167:168:void cancel(int) -> cancel
    176:180:void cancel(java.lang.String,int) -> cancel
    153:153:android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    263:282:java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    196:197:void notify(int,android.app.Notification) -> notify
    206:214:void notify(java.lang.String,int,android.app.Notification) -> notify
    297:302:void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    289:290:boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    632:637:void <init>(java.lang.String,int,java.lang.String) -> <init>
    641:646:void send(android.support.v4.app.INotificationSideChannel) -> send
    650:656:java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    596:601:void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    605:606:void send(android.support.v4.app.INotificationSideChannel) -> send
    610:615:java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    580:583:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    322:327:void <init>(android.content.Context) -> <init>
    462:474:boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    481:486:void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    339:342:boolean handleMessage(android.os.Message) -> handleMessage
    358:363:void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    382:386:void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    366:372:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    375:379:void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    390:396:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    400:404:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    517:527:void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
    334:335:void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    494:510:void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    411:455:void updateListenerMap() -> updateListenerMap
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    569:571:void <init>(android.content.ComponentName) -> <init>
android.support.v4.app.OneShotPreDrawListener -> android.support.v4.app.OneShotPreDrawListener:
    41:45:void <init>(android.view.View,java.lang.Runnable) -> <init>
    55:58:android.support.v4.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    63:65:boolean onPreDraw() -> onPreDraw
    83:84:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    88:89:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    73:79:void removeListener() -> removeListener
android.support.v4.app.Person -> android.support.v4.app.Person:
    95:102:void <init>(android.support.v4.app.Person$Builder) -> <init>
    157:157:android.support.v4.graphics.drawable.IconCompat getIcon() -> getIcon
    184:184:java.lang.String getKey() -> getKey
    151:151:java.lang.CharSequence getName() -> getName
    175:175:java.lang.String getUri() -> getUri
    192:192:boolean isBot() -> isBot
    200:200:boolean isImportant() -> isImportant
    135:142:android.app.Person toAndroidPerson() -> toAndroidPerson
    110:117:android.os.Bundle toBundle() -> toBundle
android.support.v4.app.Person$Builder -> android.support.v4.app.Person$Builder:
    213:213:void <init>() -> <init>
    300:300:android.support.v4.app.Person build() -> build
    242:243:android.support.v4.app.Person$Builder setIcon(android.support.v4.graphics.drawable.IconCompat) -> setIcon
    230:231:android.support.v4.app.Person$Builder setName(java.lang.CharSequence) -> setName
    260:261:android.support.v4.app.Person$Builder setUri(java.lang.String) -> setUri
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    60:67:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> <init>
    430:437:android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInput[]) -> fromCompat
    442:447:android.app.RemoteInput fromCompat(android.support.v4.app.RemoteInput) -> fromCompat
    114:114:boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    92:92:java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    88:88:java.lang.CharSequence[] getChoices() -> getChoices
    452:463:android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> getClipDataIntentFromIntent
    121:121:android.os.Bundle getExtras() -> getExtras
    81:81:java.lang.CharSequence getLabel() -> getLabel
    74:74:java.lang.String getResultKey() -> getResultKey
    311:321:android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    101:104:boolean isDataOnly() -> isDataOnly
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    140:142:void <init>(java.lang.String) -> <init>
    244:244:android.support.v4.app.RemoteInput build() -> build
    155:156:android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
    23:24:void <init>(java.lang.String) -> <init>
android.support.v4.app.SupportActivity -> android.support.v4.app.SupportActivity:
    46:132:void <init>() -> <init>
    122:126:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    113:117:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    99:99:android.arch.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    75:77:void onCreate(android.os.Bundle) -> onCreate
    82:84:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    108:108:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    82:84:void <init>(android.content.Context) -> <init>
    121:122:android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    159:177:android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:210:android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    256:256:java.util.Iterator iterator() -> iterator
    268:269:void startActivities() -> startActivities
    283:284:void startActivities(android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    150:150:void <clinit>() -> <clinit>
    540:541:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    522:525:int getColor(android.content.Context,int) -> getColor
    500:503:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    462:478:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    430:433:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    377:380:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    220:225:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    674:680:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    340:360:void <clinit>() -> <clinit>
    339:691:void <init>() -> <init>
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    814:820:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    824:826:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    830:832:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    575:589:android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    493:504:java.lang.String getType(android.net.Uri) -> getType
    417:418:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    790:810:int modeToMode(java.lang.String) -> modeToMode
    370:370:boolean onCreate() -> onCreate
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    601:608:android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    454:478:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    695:697:void <init>(java.lang.String) -> <init>
    704:705:void addRoot(java.lang.String,java.io.File) -> addRoot
    759:767:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    723:725:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
android.support.v4.content.PermissionChecker -> android.support.v4.content.PermissionChecker:
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
android.support.v4.content.res.ColorStateListInflaterCompat -> android.support.v4.content.res.ColorStateListInflaterCompat:
    65:74:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    92:95:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    107:169:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    181:182:int modulateColorAlpha(int,float) -> modulateColorAlpha
    174:175:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
android.support.v4.content.res.ComplexColorCompat -> android.support.v4.content.res.ComplexColorCompat:
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:160:android.support.v4.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:android.support.v4.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:android.support.v4.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:android.support.v4.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:android.support.v4.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
android.support.v4.content.res.FontResourcesParserCompat -> android.support.v4.content.res.FontResourcesParserCompat:
    230:235:int getType(android.content.res.TypedArray,int) -> getType
    168:174:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    246:270:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:187:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:225:android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:155:void <init>(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry -> android.support.v4.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:86:void <init>(android.support.v4.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:android.support.v4.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
android.support.v4.content.res.GradientColorInflaterCompat -> android.support.v4.content.res.GradientColorInflaterCompat:
    192:197:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops checkColors(android.support.v4.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:186:android.support.v4.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    202:204:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
android.support.v4.content.res.GradientColorInflaterCompat$ColorStops -> android.support.v4.content.res.GradientColorInflaterCompat$ColorStops:
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
android.support.v4.content.res.GrowingArrayUtils -> android.support.v4.content.res.GrowingArrayUtils:
    41:50:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    57:65:int[] append(int[],int,int) -> append
    189:189:int growSize(int) -> growSize
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    144:147:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    81:84:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    313:316:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback) -> getFont
    336:344:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    356:358:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
android.support.v4.content.res.ResourcesCompat$FontCallback -> android.support.v4.content.res.ResourcesCompat$FontCallback:
    214:214:void <init>() -> <init>
    263:272:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    244:253:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
android.support.v4.content.res.ResourcesCompat$FontCallback$1 -> android.support.v4.content.res.ResourcesCompat$FontCallback$1:
    247:247:void <init>(android.support.v4.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    250:251:void run() -> run
android.support.v4.content.res.ResourcesCompat$FontCallback$2 -> android.support.v4.content.res.ResourcesCompat$FontCallback$2:
    266:266:void <init>(android.support.v4.content.res.ResourcesCompat$FontCallback,int) -> <init>
    269:270:void run() -> run
android.support.v4.content.res.TypedArrayUtils -> android.support.v4.content.res.TypedArrayUtils:
    86:90:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    121:125:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    139:153:android.support.v4.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    69:73:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    103:107:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    166:170:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    184:188:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    57:57:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    215:218:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    200:204:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    135:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    365:366:int setAlphaComponent(int,int) -> setAlphaComponent
android.support.v4.graphics.PaintCompat -> android.support.v4.graphics.PaintCompat:
    34:34:void <clinit>() -> <clinit>
    45:104:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    108:116:android.support.v4.util.Pair obtainEmptyRects() -> obtainEmptyRects
android.support.v4.graphics.PathParser -> android.support.v4.graphics.PathParser:
    189:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    137:138:boolean canMorph(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> canMorph
    55:56:float[] copyOfRange(float[],int,int) -> copyOfRange
    92:113:android.support.v4.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    74:84:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    121:128:android.support.v4.graphics.PathParser$PathDataNode[] deepCopyNodes(android.support.v4.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    257:299:void extract(java.lang.String,int,android.support.v4.graphics.PathParser$ExtractFloatResult) -> extract
    210:211:float[] getFloats(java.lang.String) -> getFloats
    173:185:int nextStart(java.lang.String,int) -> nextStart
    162:168:void updateNodes(android.support.v4.graphics.PathParser$PathDataNode[],android.support.v4.graphics.PathParser$PathDataNode[]) -> updateNodes
android.support.v4.graphics.PathParser$ExtractFloatResult -> android.support.v4.graphics.PathParser$ExtractFloatResult:
    198:199:void <init>() -> <init>
android.support.v4.graphics.PathParser$PathDataNode -> android.support.v4.graphics.PathParser$PathDataNode:
    320:323:void <init>(char,float[]) -> <init>
    325:328:void <init>(android.support.v4.graphics.PathParser$PathDataNode) -> <init>
    365:610:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    717:759:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    624:687:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    356:360:void interpolatePathDataNode(android.support.v4.graphics.PathParser$PathDataNode,android.support.v4.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    337:343:void nodesToPath(android.support.v4.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
android.support.v4.graphics.TypefaceCompat -> android.support.v4.graphics.TypefaceCompat:
    49:66:void <clinit>() -> <clinit>
    155:155:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    104:130:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    140:146:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    89:89:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    77:77:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
android.support.v4.graphics.TypefaceCompatApi21Impl -> android.support.v4.graphics.TypefaceCompatApi21Impl:
    46:46:void <init>() -> <init>
    66:83:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    51:59:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
android.support.v4.graphics.TypefaceCompatApi24Impl -> android.support.v4.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    156:167:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    134:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
android.support.v4.graphics.TypefaceCompatApi26Impl -> android.support.v4.graphics.TypefaceCompatApi26Impl:
    75:109:void <init>() -> <init>
    196:198:void abortCreation(java.lang.Object) -> abortCreation
    140:145:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    156:160:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    170:175:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    206:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    228:274:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    284:297:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    184:187:boolean freeze(java.lang.Object) -> freeze
    115:119:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    331:331:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    315:315:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    321:321:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    336:340:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    306:306:java.lang.Class obtainFontFamily() -> obtainFontFamily
    310:310:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    327:327:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
android.support.v4.graphics.TypefaceCompatApi28Impl -> android.support.v4.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:67:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
android.support.v4.graphics.TypefaceCompatBaseImpl -> android.support.v4.graphics.TypefaceCompatBaseImpl:
    42:46:void <init>() -> <init>
    140:144:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    108:119:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    86:101:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    154:169:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    124:124:android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(android.support.v4.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    52:67:java.lang.Object findBestFont(java.lang.Object[],int,android.support.v4.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    71:71:android.support.v4.provider.FontsContractCompat$FontInfo findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
android.support.v4.graphics.TypefaceCompatBaseImpl$1 -> android.support.v4.graphics.TypefaceCompatBaseImpl$1:
    71:71:void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    71:71:int getWeight(java.lang.Object) -> getWeight
    74:74:int getWeight(android.support.v4.provider.FontsContractCompat$FontInfo) -> getWeight
    71:71:boolean isItalic(java.lang.Object) -> isItalic
    79:79:boolean isItalic(android.support.v4.provider.FontsContractCompat$FontInfo) -> isItalic
android.support.v4.graphics.TypefaceCompatBaseImpl$2 -> android.support.v4.graphics.TypefaceCompatBaseImpl$2:
    124:124:void <init>(android.support.v4.graphics.TypefaceCompatBaseImpl) -> <init>
    124:124:int getWeight(java.lang.Object) -> getWeight
    127:127:int getWeight(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    124:124:boolean isItalic(java.lang.Object) -> isItalic
    132:132:boolean isItalic(android.support.v4.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
android.support.v4.graphics.TypefaceCompatUtil -> android.support.v4.graphics.TypefaceCompatUtil:
    170:176:void closeQuietly(java.io.Closeable) -> closeQuietly
    119:129:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    137:152:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    160:165:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:74:java.io.File getTempFile(android.content.Context) -> getTempFile
    83:88:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    98:109:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:200:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:180:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:213:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:415:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:379:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:318:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.IconCompat -> android.support.v4.graphics.drawable.IconCompat:
    176:176:void <clinit>() -> <clinit>
    307:308:void <init>() -> <init>
    310:312:void <init>(int) -> <init>
    999:1034:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    231:232:android.support.v4.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    356:360:int getResId() -> getResId
    945:952:int getResId(android.graphics.drawable.Icon) -> getResId
    338:342:java.lang.String getResPackage() -> getResPackage
    916:923:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    757:763:void onPostParceling() -> onPostParceling
    721:726:void onPreParceling(boolean) -> onPreParceling
    646:675:android.os.Bundle toBundle() -> toBundle
    420:423:android.graphics.drawable.Icon toIcon() -> toIcon
    680:716:java.lang.String toString() -> toString
    789:790:java.lang.String typeToString(int) -> typeToString
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    10:10:void <init>() -> <init>
    12:12:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    16:17:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.WrappedDrawableApi14 -> android.support.v4.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:87:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    210:214:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    251:252:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    353:353:boolean isCompatTintEnabled() -> isCompatTintEnabled
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    220:230:android.graphics.drawable.Drawable mutate() -> mutate
    243:243:android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:260:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    277:278:void setTint(int) -> setTint
    282:284:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:290:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    330:349:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    267:268:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:77:void updateLocalState(android.content.res.Resources) -> updateLocalState
    293:314:boolean updateTint(int[]) -> updateTint
android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState -> android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState:
    363:370:void <init>(android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    389:389:boolean canConstantState() -> canConstantState
    384:385:int getChangingConfigurations() -> getChangingConfigurations
    375:375:android.graphics.drawable.Drawable newDrawable() -> newDrawable
android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperStateBase -> android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperStateBase:
    396:397:void <init>(android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    402:402:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v4.graphics.drawable.WrappedDrawableApi21 -> android.support.v4.graphics.drawable.WrappedDrawableApi21:
    44:46:void <init>(android.graphics.drawable.Drawable) -> <init>
    49:51:void <init>(android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    160:167:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    71:71:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    65:66:void getOutline(android.graphics.Outline) -> getOutline
    114:121:boolean isCompatTintEnabled() -> isCompatTintEnabled
    143:143:android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    55:56:void setHotspot(float,float) -> setHotspot
    60:61:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    103:109:boolean setState(int[]) -> setState
    85:90:void setTint(int) -> setTint
    76:81:void setTintList(android.content.res.ColorStateList) -> setTintList
    94:99:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
android.support.v4.graphics.drawable.WrappedDrawableApi21$DrawableWrapperStateLollipop -> android.support.v4.graphics.drawable.WrappedDrawableApi21$DrawableWrapperStateLollipop:
    149:150:void <init>(android.support.v4.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    155:155:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v4.math.MathUtils -> android.support.v4.math.MathUtils:
    39:44:float clamp(float,float,float) -> clamp
    81:86:int clamp(int,int,int) -> clamp
android.support.v4.media.AudioAttributesCompat -> android.support.v4.media.AudioAttributesCompat:
    175:186:void <clinit>() -> <clinit>
    252:253:void <init>() -> <init>
    766:773:boolean equals(java.lang.Object) -> equals
    606:606:int hashCode() -> hashCode
    611:611:java.lang.String toString() -> toString
    712:756:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    615:617:java.lang.String usageToString(int) -> usageToString
android.support.v4.media.AudioAttributesImplApi21 -> android.support.v4.media.AudioAttributesImplApi21:
    49:50:void <init>() -> <init>
    150:154:boolean equals(java.lang.Object) -> equals
    145:145:int hashCode() -> hashCode
    159:159:java.lang.String toString() -> toString
android.support.v4.media.AudioAttributesImplBase -> android.support.v4.media.AudioAttributesImplBase:
    50:50:void <init>() -> <init>
    128:134:boolean equals(java.lang.Object) -> equals
    86:86:int getContentType() -> getContentType
    96:103:int getFlags() -> getFlags
    73:76:int getLegacyStreamType() -> getLegacyStreamType
    91:91:int getUsage() -> getUsage
    123:123:int hashCode() -> hashCode
    140:151:java.lang.String toString() -> toString
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    2310:2329:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    2246:2250:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    563:563:void <clinit>() -> <clinit>
    538:541:void <init>(android.os.Parcel) -> <init>
    545:545:int describeContents() -> describeContents
    556:560:java.lang.String toString() -> toString
    550:552:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$1:
    564:564:void <init>() -> <init>
    564:564:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    567:567:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    564:564:java.lang.Object[] newArray(int) -> newArray
    572:572:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    2276:2280:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    418:418:void <clinit>() -> <clinit>
    190:199:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    201:212:void <init>(android.os.Parcel) -> <init>
    295:295:int describeContents() -> describeContents
    375:414:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    331:332:java.lang.Object getMediaDescription() -> getMediaDescription
    316:316:java.lang.String toString() -> toString
    300:312:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    419:419:void <init>() -> <init>
    419:419:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    422:425:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    419:419:java.lang.Object[] newArray(int) -> newArray
    431:431:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    451:452:void <init>() -> <init>
    552:552:android.support.v4.media.MediaDescriptionCompat build() -> build
    495:496:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    530:531:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    507:508:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    519:520:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    461:462:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    541:542:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    483:484:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    472:473:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    62:62:java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
    42:42:java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    54:54:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    46:46:android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    50:50:android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    30:30:java.lang.String getMediaId(java.lang.Object) -> getMediaId
    38:38:java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    34:34:java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    58:59:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    100:100:java.lang.Object build(java.lang.Object) -> build
    67:67:java.lang.Object newInstance() -> newInstance
    84:85:void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    96:97:void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    88:89:void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    92:93:void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    72:73:void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    80:81:void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    76:77:void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    26:26:android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    31:32:void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    308:641:void <clinit>() -> <clinit>
    373:375:void <init>(android.os.Parcel) -> <init>
    557:557:int describeContents() -> describeContents
    607:616:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    562:563:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    642:642:void <init>() -> <init>
    642:642:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    645:645:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    642:642:java.lang.Object[] newArray(int) -> newArray
    650:650:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    51:52:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    128:128:void <clinit>() -> <clinit>
    106:109:void <init>(int,float) -> <init>
    119:119:int describeContents() -> describeContents
    113:114:java.lang.String toString() -> toString
    124:126:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    129:129:void <init>() -> <init>
    129:129:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    137:137:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    129:129:java.lang.Object[] newArray(int) -> newArray
    142:142:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    19:21:void <init>() -> <init>
    39:39:android.os.IBinder asBinder() -> asBinder
    43:48:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    27:34:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    622:624:void <init>(android.os.IBinder) -> <init>
    627:627:android.os.IBinder asBinder() -> asBinder
    690:700:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    693:699:void <init>() -> <init>
    823:824:void binderDied() -> binderDied
    780:780:void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    772:772:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    742:742:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    733:733:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    753:753:void onQueueChanged(java.util.List) -> onQueueChanged
    763:763:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    714:714:void onSessionDestroyed() -> onSessionDestroyed
    725:725:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    843:848:void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    854:856:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    927:932:void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
    918:922:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    894:898:void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    881:890:void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    902:906:void onQueueChanged(java.util.List) -> onQueueChanged
    910:914:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    860:864:void onSessionDestroyed() -> onSessionDestroyed
    868:877:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    938:940:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    992:997:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    944:948:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1023:1027:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    968:972:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    960:964:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    976:980:void onQueueChanged(java.util.List) -> onQueueChanged
    984:988:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1001:1005:void onRepeatModeChanged(int) -> onRepeatModeChanged
    952:956:void onSessionDestroyed() -> onSessionDestroyed
    1044:1048:void onSessionReady() -> onSessionReady
    1014:1019:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1010:1010:void onShuffleModeChangedRemoved(boolean) -> onShuffleModeChangedRemoved
    1031:1040:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    2203:2219:void processPendingCallbacksLocked() -> processPendingCallbacksLocked
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    2231:2233:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2249:2250:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2279:2279:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2261:2261:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2267:2267:void onQueueChanged(java.util.List) -> onQueueChanged
    2273:2273:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2255:2255:void onSessionDestroyed() -> onSessionDestroyed
    2285:2285:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    1363:1369:void <init>(int,int,int,int,int) -> <init>
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    46:46:java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    283:285:void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    326:329:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    320:322:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    305:306:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    300:301:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    310:311:void onQueueChanged(java.util.List) -> onQueueChanged
    315:316:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    289:290:void onSessionDestroyed() -> onSessionDestroyed
    294:296:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    200:200:android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    204:205:int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    228:242:int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    928:931:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    1875:1875:void <clinit>() -> <clinit>
    1772:1774:void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    1784:1787:void <init>(android.os.Parcel) -> <init>
    1811:1811:int describeContents() -> describeContents
    1844:1845:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    1865:1866:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    1891:1891:java.lang.String toString() -> toString
    1805:1807:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    1876:1876:void <init>() -> <init>
    1876:1876:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1880:1880:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    1876:1876:java.lang.Object[] newArray(int) -> newArray
    1885:1885:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    1917:1917:void <clinit>() -> <clinit>
    1912:1914:void <init>(android.os.Parcel) -> <init>
    1931:1931:int describeContents() -> describeContents
    1936:1937:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    1917:1917:void <init>() -> <init>
    1917:1917:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1920:1920:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    1917:1917:java.lang.Object[] newArray(int) -> newArray
    1925:1925:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    1726:1726:void <clinit>() -> <clinit>
    1556:1557:void <init>(java.lang.Object) -> <init>
    1563:1567:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle) -> <init>
    1607:1607:int describeContents() -> describeContents
    1629:1643:boolean equals(java.lang.Object) -> equals
    1664:1664:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1621:1624:int hashCode() -> hashCode
    1672:1673:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    1688:1689:void setSessionToken2Bundle(android.os.Bundle) -> setSessionToken2Bundle
    1612:1617:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    1727:1727:void <init>() -> <init>
    1727:1727:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1736:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    1727:1727:java.lang.Object[] newArray(int) -> newArray
    1741:1741:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    270:270:java.lang.Object getDescription(java.lang.Object) -> getDescription
    274:274:long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    65:65:void <clinit>() -> <clinit>
    42:48:void <init>(android.os.Parcel) -> <init>
    52:52:int describeContents() -> describeContents
    57:62:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    66:66:void <init>() -> <init>
    66:66:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    66:66:java.lang.Object[] newArray(int) -> newArray
    74:74:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    864:864:void <clinit>() -> <clinit>
    556:568:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    570:583:void <init>(android.os.Parcel) -> <init>
    604:604:int describeContents() -> describeContents
    798:828:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    587:599:java.lang.String toString() -> toString
    609:621:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    865:865:void <init>() -> <init>
    865:865:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    868:868:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    865:865:java.lang.Object[] newArray(int) -> newArray
    873:873:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    965:965:void <clinit>() -> <clinit>
    893:898:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    900:905:void <init>(android.os.Parcel) -> <init>
    917:917:int describeContents() -> describeContents
    932:933:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    1022:1022:java.lang.String toString() -> toString
    909:913:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    966:966:void <init>() -> <init>
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    970:970:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
    975:975:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    45:45:long getActions(java.lang.Object) -> getActions
    61:61:long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    37:37:long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    57:57:java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    49:49:java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    53:53:long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    41:41:float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    33:33:long getPosition(java.lang.Object) -> getPosition
    29:29:int getState(java.lang.Object) -> getState
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    82:82:java.lang.String getAction(java.lang.Object) -> getAction
    93:93:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    90:90:int getIcon(java.lang.Object) -> getIcon
    86:86:java.lang.CharSequence getName(java.lang.Object) -> getName
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    29:29:android.os.Bundle getExtras(java.lang.Object) -> getExtras
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:17:void <init>() -> <init>
    35:35:android.os.IBinder asBinder() -> asBinder
    24:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    39:59:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    68:70:void <init>(android.os.IBinder) -> <init>
    73:73:android.os.IBinder asBinder() -> asBinder
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    142:142:void <clinit>() -> <clinit>
    136:140:void <init>(android.os.Parcel) -> <init>
    123:123:int describeContents() -> describeContents
    119:119:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    128:133:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    143:143:void <init>() -> <init>
    143:143:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    146:146:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    143:143:java.lang.Object[] newArray(int) -> newArray
    150:150:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    65:65:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    68:73:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    54:57:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    61:62:void run() -> run
android.support.v4.os.TraceCompat -> android.support.v4.os.TraceCompat:
    44:47:void beginSection(java.lang.String) -> beginSection
    57:60:void endSection() -> endSection
android.support.v4.provider.FontRequest -> android.support.v4.provider.FontRequest:
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
android.support.v4.provider.FontsContractCompat -> android.support.v4.provider.FontsContractCompat:
    174:776:void <clinit>() -> <clinit>
    805:809:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    793:801:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    719:727:android.support.v4.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontRequest) -> fetchFonts
    769:773:java.util.List getCertificates(android.support.v4.provider.FontRequest,android.content.res.Resources) -> getCertificates
    816:870:android.support.v4.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    186:188:android.support.v4.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,android.support.v4.provider.FontRequest,int) -> getFontInternal
    234:303:android.graphics.Typeface getFontSync(android.content.Context,android.support.v4.provider.FontRequest,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    736:739:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources) -> getProvider
    681:696:java.util.Map prepareFontData(android.content.Context,android.support.v4.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
android.support.v4.provider.FontsContractCompat$1 -> android.support.v4.provider.FontsContractCompat$1:
    256:256:void <init>(android.content.Context,android.support.v4.provider.FontRequest,int,java.lang.String) -> <init>
    256:256:java.lang.Object call() -> call
    259:263:android.support.v4.provider.FontsContractCompat$TypefaceResult call() -> call
android.support.v4.provider.FontsContractCompat$2 -> android.support.v4.provider.FontsContractCompat$2:
    275:275:void <init>(android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    275:275:void onReply(java.lang.Object) -> onReply
    278:286:void onReply(android.support.v4.provider.FontsContractCompat$TypefaceResult) -> onReply
android.support.v4.provider.FontsContractCompat$3 -> android.support.v4.provider.FontsContractCompat$3:
    304:304:void <init>(java.lang.String) -> <init>
    304:304:void onReply(java.lang.Object) -> onReply
    308:314:void onReply(android.support.v4.provider.FontsContractCompat$TypefaceResult) -> onReply
android.support.v4.provider.FontsContractCompat$5 -> android.support.v4.provider.FontsContractCompat$5:
    776:776:void <init>() -> <init>
    776:776:int compare(java.lang.Object,java.lang.Object) -> compare
    779:787:int compare(byte[],byte[]) -> compare
android.support.v4.provider.FontsContractCompat$FontFamilyResult -> android.support.v4.provider.FontsContractCompat$FontFamilyResult:
    428:431:void <init>(int,android.support.v4.provider.FontsContractCompat$FontInfo[]) -> <init>
    438:438:android.support.v4.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    434:434:int getStatusCode() -> getStatusCode
android.support.v4.provider.FontsContractCompat$FontInfo -> android.support.v4.provider.FontsContractCompat$FontInfo:
    347:353:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    389:389:int getResultCode() -> getResultCode
    366:366:int getTtcIndex() -> getTtcIndex
    359:359:android.net.Uri getUri() -> getUri
    373:373:int getWeight() -> getWeight
    380:380:boolean isItalic() -> isItalic
android.support.v4.provider.FontsContractCompat$TypefaceResult -> android.support.v4.provider.FontsContractCompat$TypefaceResult:
    213:216:void <init>(android.graphics.Typeface,int) -> <init>
android.support.v4.provider.SelfDestructiveThread -> android.support.v4.provider.SelfDestructiveThread:
    79:84:void <init>(java.lang.String,int,int) -> <init>
    223:232:void onDestruction() -> onDestruction
    214:219:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:116:void post(java.lang.Runnable) -> post
    136:155:void postAndReply(java.util.concurrent.Callable,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
android.support.v4.provider.SelfDestructiveThread$1 -> android.support.v4.provider.SelfDestructiveThread$1:
    58:58:void <init>(android.support.v4.provider.SelfDestructiveThread) -> <init>
    61:67:boolean handleMessage(android.os.Message) -> handleMessage
android.support.v4.provider.SelfDestructiveThread$2 -> android.support.v4.provider.SelfDestructiveThread$2:
    137:137:void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,android.support.v4.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
android.support.v4.provider.SelfDestructiveThread$2$1 -> android.support.v4.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(android.support.v4.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
android.support.v4.provider.SelfDestructiveThread$3 -> android.support.v4.provider.SelfDestructiveThread$3:
    171:171:void <init>(android.support.v4.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:184:void run() -> run
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:android.support.v4.text.BidiFormatter getInstance() -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:308:java.lang.String markAfter(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    328:336:java.lang.String markBefore(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    139:141:void <init>() -> <init>
    205:209:android.support.v4.text.BidiFormatter build() -> build
    198:198:android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:170:void initialize(boolean) -> initialize
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:862:byte dirTypeBackward() -> dirTypeBackward
    816:832:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:728:int getEntryDir() -> getEntryDir
    744:792:int getExitDir() -> getExitDir
    944:956:byte skipEntityBackward() -> skipEntityBackward
    929:930:byte skipEntityForward() -> skipEntityForward
    901:920:byte skipTagBackward() -> skipTagBackward
    872:888:byte skipTagForward() -> skipTagForward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    35:61:void <clinit>() -> <clinit>
    125:139:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    110:121:java.lang.String getScript(java.lang.String) -> getScript
    88:104:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.PrecomputedTextCompat -> android.support.v4.text.PrecomputedTextCompat:
    72:73:void <clinit>() -> <clinit>
    747:747:char charAt(int) -> charAt
    510:510:android.support.v4.text.PrecomputedTextCompat$Params getParams() -> getParams
    499:502:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    722:722:int getSpanEnd(java.lang.Object) -> getSpanEnd
    727:727:int getSpanFlags(java.lang.Object) -> getSpanFlags
    717:717:int getSpanStart(java.lang.Object) -> getSpanStart
    707:710:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    742:742:int length() -> length
    732:732:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    689:690:void removeSpan(java.lang.Object) -> removeSpan
    673:674:void setSpan(java.lang.Object,int,int,int) -> setSpan
    752:752:java.lang.CharSequence subSequence(int,int) -> subSequence
    757:757:java.lang.String toString() -> toString
android.support.v4.text.PrecomputedTextCompat$Params -> android.support.v4.text.PrecomputedTextCompat$Params:
    195:206:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    209:216:void <init>(android.text.PrecomputedText$Params) -> <init>
    271:275:boolean equals(java.lang.Object) -> equals
    249:249:int getBreakStrategy() -> getBreakStrategy
    261:261:int getHyphenationFrequency() -> getHyphenationFrequency
    237:237:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    224:224:android.text.TextPaint getTextPaint() -> getTextPaint
    340:359:int hashCode() -> hashCode
    367:388:java.lang.String toString() -> toString
android.support.v4.text.PrecomputedTextCompat$Params$Builder -> android.support.v4.text.PrecomputedTextCompat$Params$Builder:
    115:128:void <init>(android.text.TextPaint) -> <init>
    190:190:android.support.v4.text.PrecomputedTextCompat$Params build() -> build
    144:145:android.support.v4.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:163:android.support.v4.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:181:android.support.v4.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    79:81:int isRtlText(int) -> isRtlText
    91:95:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:236:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:116:void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:142:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    130:131:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:158:void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    254:254:void <clinit>() -> <clinit>
    245:246:void <init>() -> <init>
    250:251:boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    119:122:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:104:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:android.support.v4.util.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    76:76:void <init>(android.support.v4.util.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
android.support.v4.util.ArraySet -> android.support.v4.util.ArraySet:
    53:54:void <clinit>() -> <clinit>
    243:244:void <init>() -> <init>
    250:258:void <init>(int) -> <init>
    362:405:boolean add(java.lang.Object) -> add
    752:757:boolean addAll(java.util.Collection) -> addAll
    163:199:void allocArrays(int) -> allocArrays
    285:291:void clear() -> clear
    318:318:boolean contains(java.lang.Object) -> contains
    737:743:boolean containsAll(java.util.Collection) -> containsAll
    298:308:void ensureCapacity(int) -> ensureCapacity
    591:614:boolean equals(java.lang.Object) -> equals
    203:236:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    666:714:android.support.v4.util.MapCollections getCollection() -> getCollection
    622:627:int hashCode() -> hashCode
    86:120:int indexOf(java.lang.Object,int) -> indexOf
    328:328:int indexOf(java.lang.Object) -> indexOf
    124:158:int indexOfNull() -> indexOfNull
    346:346:boolean isEmpty() -> isEmpty
    726:726:java.util.Iterator iterator() -> iterator
    465:470:boolean remove(java.lang.Object) -> remove
    767:771:boolean removeAll(java.util.Collection) -> removeAll
    479:526:java.lang.Object removeAt(int) -> removeAt
    782:789:boolean retainAll(java.util.Collection) -> retainAll
    554:554:int size() -> size
    560:562:java.lang.Object[] toArray() -> toArray
    568:577:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    639:657:java.lang.String toString() -> toString
    338:338:java.lang.Object valueAt(int) -> valueAt
android.support.v4.util.ArraySet$1 -> android.support.v4.util.ArraySet$1:
    667:667:void <init>(android.support.v4.util.ArraySet) -> <init>
    710:711:void colClear() -> colClear
    675:675:java.lang.Object colGetEntry(int,int) -> colGetEntry
    690:690:java.util.Map colGetMap() -> colGetMap
    670:670:int colGetSize() -> colGetSize
    680:680:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    685:685:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    695:696:void colPut(java.lang.Object,java.lang.Object) -> colPut
    705:706:void colRemoveAt(int) -> colRemoveAt
    700:700:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    43:45:void <init>(java.lang.String) -> <init>
    48:49:void close() -> close
    52:53:void flush() -> flush
    68:72:void flushBuilder() -> flushBuilder
    56:65:void write(char[],int,int) -> write
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    47:47:void <clinit>() -> <clinit>
    58:59:void <init>() -> <init>
    68:78:void <init>(int) -> <init>
    369:396:void append(long,java.lang.Object) -> append
    353:362:void clear() -> clear
    46:46:java.lang.Object clone() -> clone
    85:89:android.support.v4.util.LongSparseArray clone() -> clone
    128:136:void delete(long) -> delete
    158:181:void gc() -> gc
    106:106:java.lang.Object get(long) -> get
    115:118:java.lang.Object get(long,java.lang.Object) -> get
    312:316:int indexOfKey(long) -> indexOfKey
    272:276:long keyAt(int) -> keyAt
    189:233:void put(long,java.lang.Object) -> put
    149:153:void removeAt(int) -> removeAt
    251:255:int size() -> size
    407:428:java.lang.String toString() -> toString
    286:290:java.lang.Object valueAt(int) -> valueAt
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    51:53:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    83:84:java.lang.Object get(java.lang.Object) -> get
    138:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    348:347:java.lang.String toString() -> toString
    171:187:void trimToSize(int) -> trimToSize
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    32:357:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    43:46:void <init>(android.support.v4.util.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    167:167:void <init>(android.support.v4.util.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    269:269:void <init>(android.support.v4.util.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    79:82:void <init>(android.support.v4.util.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    357:357:void <init>(android.support.v4.util.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.ObjectsCompat -> android.support.v4.util.ObjectsCompat:
    50:53:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:95:int hash(java.lang.Object[]) -> hash
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    94:96:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:117:boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    153:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
android.support.v4.util.Preconditions -> android.support.v4.util.Preconditions:
    51:52:void checkArgument(boolean,java.lang.Object) -> checkArgument
    172:173:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    188:189:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    98:99:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    115:116:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    130:131:void checkState(boolean,java.lang.String) -> checkState
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(android.support.v4.util.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    594:648:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    363:364:java.lang.Object get(java.lang.Object) -> get
    656:663:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    402:402:boolean isEmpty() -> isEmpty
    373:373:java.lang.Object keyAt(int) -> keyAt
    415:465:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    481:494:void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    504:509:java.lang.Object remove(java.lang.Object) -> remove
    518:571:java.lang.Object removeAt(int) -> removeAt
    392:395:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    581:581:int size() -> size
    675:700:java.lang.String toString() -> toString
    382:382:java.lang.Object valueAt(int) -> valueAt
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:82:void <init>(int) -> <init>
    388:415:void append(int,java.lang.Object) -> append
    372:381:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    89:93:android.support.v4.util.SparseArrayCompat clone() -> clone
    132:140:void delete(int) -> delete
    175:198:void gc() -> gc
    110:110:java.lang.Object get(int) -> get
    119:122:java.lang.Object get(int,java.lang.Object) -> get
    289:293:int keyAt(int) -> keyAt
    206:250:void put(int,java.lang.Object) -> put
    146:147:void remove(int) -> remove
    268:272:int size() -> size
    426:447:java.lang.String toString() -> toString
    303:307:java.lang.Object valueAt(int) -> valueAt
android.support.v4.view.AbsSavedState -> android.support.v4.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(android.support.v4.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.view.AbsSavedState$1 -> android.support.v4.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
android.support.v4.view.AbsSavedState$2 -> android.support.v4.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:android.support.v4.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:android.support.v4.view.AbsSavedState[] newArray(int) -> newArray
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    110:110:void <clinit>() -> <clinit>
    117:119:void <init>() -> <init>
    186:186:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    288:294:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    125:125:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    226:227:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    245:247:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    206:207:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    270:270:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    314:317:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    143:144:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    165:166:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    52:54:void <init>(android.support.v4.view.AccessibilityDelegateCompat) -> <init>
    59:59:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    98:101:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    64:65:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:72:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    76:77:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    82:82:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    106:106:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    87:88:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    92:93:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    139:141:void <init>(android.content.Context) -> <init>
    256:256:boolean hasSubMenu() -> hasSubMenu
    196:196:boolean isVisible() -> isVisible
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    243:243:boolean onPerformDefaultAction() -> onPerformDefaultAction
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    182:182:boolean overridesItemVisibility() -> overridesItemVisibility
    312:314:void reset() -> reset
    289:290:void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:305:void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    506:507:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:525:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    62:64:void <clinit>() -> <clinit>
    152:163:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    414:427:void cancel() -> cancel
    430:440:void cancelTaps() -> cancelTaps
    458:462:void dispatchLongPress() -> dispatchLongPress
    166:167:void init(android.content.Context) -> init
    444:454:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    228:410:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    193:194:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    103:105:void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    107:109:void <init>(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    113:136:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    469:471:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    145:149:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.KeyEventDispatcher -> android.support.v4.view.KeyEventDispatcher:
    46:49:void <clinit>() -> <clinit>
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    80:92:boolean dispatchKeyEvent(android.support.v4.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    71:90:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    139:152:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    327:334:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    347:354:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    264:264:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    278:314:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    220:250:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    383:385:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    393:401:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    50:52:void <init>(android.view.ViewGroup) -> <init>
    89:89:int getNestedScrollAxes() -> getNestedScrollAxes
    64:65:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:78:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    100:101:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    111:112:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    81:82:void <init>() -> <init>
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    332:332:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    343:343:float getPageWidth(int) -> getPageWidth
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
android.support.v4.view.PointerIconCompat -> android.support.v4.view.PointerIconCompat:
    107:109:void <init>(java.lang.Object) -> <init>
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:133:android.support.v4.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    452:468:void <clinit>() -> <clinit>
    1754:1762:android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    2995:3004:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    2947:2956:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2259:2267:android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    3505:3508:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    3497:3500:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    1475:1478:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    2355:2359:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2400:2404:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3039:3042:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3160:3168:android.view.Display getDisplay(android.view.View) -> getDisplay
    2038:2041:float getElevation(android.view.View) -> getElevation
    473:482:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2164:2167:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    999:1002:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    730:733:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1297:1300:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1720:1743:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1686:1709:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1542:1545:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1526:1529:int getPaddingStart(android.view.View) -> getPaddingStart
    2095:2101:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2108:2111:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2886:2889:float getZ(android.view.View) -> getZ
    856:873:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3061:3064:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2315:2318:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    886:889:boolean hasTransientState(android.view.View) -> hasTransientState
    3049:3052:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    2855:2858:boolean isLaidOut(android.view.View) -> isLaidOut
    2479:2485:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    2328:2331:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    2964:2992:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    2916:2944:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2234:2242:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    915:920:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    955:960:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    977:982:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    2119:2124:void requestApplyInsets(android.view.View) -> requestApplyInsets
    676:677:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    1511:1514:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    2341:2346:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2371:2390:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2418:2437:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3024:3027:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2027:2030:void setElevation(android.view.View,float) -> setElevation
    2180:2181:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    900:903:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1026:1038:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    774:777:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    2203:2218:void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1563:1568:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    3142:3146:void setPointerIcon(android.view.View,android.support.v4.view.PointerIconCompat) -> setPointerIcon
    3113:3116:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2073:2081:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2520:2525:void stopNestedScroll(android.view.View) -> stopNestedScroll
    2665:2670:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3007:3010:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
android.support.v4.view.ViewCompat$1 -> android.support.v4.view.ViewCompat$1:
    2209:2209:void <init>(android.support.v4.view.OnApplyWindowInsetsListener) -> <init>
    2212:2214:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewCompat$UnhandledKeyEventManager -> android.support.v4.view.ViewCompat$UnhandledKeyEventManager:
    3515:3515:void <clinit>() -> <clinit>
    3511:3530:void <init>() -> <init>
    3540:3546:android.support.v4.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    3550:3564:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    3569:3570:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    3533:3536:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    3628:3638:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    3595:3623:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    3668:3692:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    39:47:void <clinit>() -> <clinit>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    122:251:void <clinit>() -> <clinit>
    391:393:void <init>(android.content.Context) -> <init>
    396:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1017:android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:585:void addOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:727:void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2855:boolean arrowScroll(int) -> arrowScroll
    1298:1381:void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1974:2008:void completeScroll(boolean) -> completeScroll
    1793:1815:void computeScroll() -> computeScroll
    1023:1089:void dataSetChanged() -> dataSetChanged
    2406:2421:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1954:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1971:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    927:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    2015:2021:void enableLayers(boolean) -> enableLayers
    2659:2666:void endDrag() -> endDrag
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1518:android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2401:android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1539:android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:475:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2038:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    1865:1920:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2181:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2889:boolean pageLeft() -> pageLeft
    2893:2897:boolean pageRight() -> pageRight
    1818:1844:boolean pageScrolled(int) -> pageScrolled
    2310:2355:boolean performDrag(float) -> performDrag
    1092:1093:void populate() -> populate
    1096:1143:void populate(int) -> populate
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:563:void removeNonDecorViews() -> removeNonDecorViews
    594:597:void removeOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:739:void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1509:void removeView(android.view.View) -> removeView
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2299:boolean resetTouch() -> resetTouch
    676:696:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:552:void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    622:624:void setCurrentItem(int,boolean) -> setCurrentItem
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:637:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    950:1005:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1295:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    269:269:void <init>(android.support.v4.view.ViewPager) -> <init>
    272:274:void run() -> run
android.support.v4.view.ViewPager$4 -> android.support.v4.view.ViewPager$4:
    428:429:void <init>(android.support.v4.view.ViewPager) -> <init>
    435:471:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    3145:3146:void <init>() -> <init>
    3149:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(android.support.v4.view.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3075:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    3092:3093:void <init>(android.support.v4.view.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    321:321:void <init>() -> <init>
    335:335:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    325:325:void onPageScrolled(int,float,int) -> onPageScrolled
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    379:390:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    416:427:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    339:355:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    294:313:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    217:235:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    176:194:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    251:267:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    37:39:void <init>(android.view.View) -> <init>
    137:140:android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    463:466:void cancel() -> cancel
    236:239:long getDuration() -> getDuration
    317:320:android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    122:125:android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    253:256:android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    727:735:android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    739:759:void setListenerInternal(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListenerInternal
    285:288:android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    774:788:android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    643:646:void start() -> start
    182:185:android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    215:223:android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    678:686:android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
    740:740:void <init>(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    743:744:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    748:749:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    753:754:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompat$2 -> android.support.v4.view.ViewPropertyAnimatorCompat$2:
    778:778:void <init>(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    781:782:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:47:void <init>(android.support.v4.view.ViewPropertyAnimatorCompat) -> <init>
    100:108:void onAnimationCancel(android.view.View) -> onAnimationCancel
    74:96:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:70:void onAnimationStart(android.view.View) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    48:48:void onAnimationCancel(android.view.View) -> onAnimationCancel
    34:34:void onAnimationStart(android.view.View) -> onAnimationStart
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    35:37:void <init>(java.lang.Object) -> <init>
    377:381:boolean equals(java.lang.Object) -> equals
    113:116:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    62:65:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    96:99:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    79:82:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    389:389:int hashCode() -> hashCode
    164:167:boolean isConsumed() -> isConsumed
    213:217:android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    397:397:java.lang.Object unwrap(android.support.v4.view.WindowInsetsCompat) -> unwrap
    393:393:android.support.v4.view.WindowInsetsCompat wrap(java.lang.Object) -> wrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    283:286:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    264:267:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    165:172:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    184:191:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    201:203:void <init>(android.support.v4.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    212:216:boolean equals(java.lang.Object) -> equals
    207:207:int hashCode() -> hashCode
    225:226:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    1319:1321:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1610:1611:void addAction(int) -> addAction
    3419:3436:boolean equals(java.lang.Object) -> equals
    3500:3502:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    1595:1595:int getActions() -> getActions
    1805:1806:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    1829:1830:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    2212:2212:java.lang.CharSequence getClassName() -> getClassName
    2260:2260:java.lang.CharSequence getContentDescription() -> getContentDescription
    2823:2826:android.os.Bundle getExtras() -> getExtras
    2188:2188:java.lang.CharSequence getPackageName() -> getPackageName
    2236:2236:java.lang.CharSequence getText() -> getText
    2319:2322:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3414:3414:int hashCode() -> hashCode
    1853:1853:boolean isCheckable() -> isCheckable
    1877:1877:boolean isChecked() -> isChecked
    2035:2035:boolean isClickable() -> isClickable
    2083:2083:boolean isEnabled() -> isEnabled
    1901:1901:boolean isFocusable() -> isFocusable
    1925:1925:boolean isFocused() -> isFocused
    2059:2059:boolean isLongClickable() -> isLongClickable
    2107:2107:boolean isPassword() -> isPassword
    2131:2131:boolean isScrollable() -> isScrollable
    2011:2011:boolean isSelected() -> isSelected
    3484:3491:void setBooleanProperty(int,boolean) -> setBooleanProperty
    1868:1869:void setCheckable(boolean) -> setCheckable
    1892:1893:void setChecked(boolean) -> setChecked
    2227:2228:void setClassName(java.lang.CharSequence) -> setClassName
    2423:2429:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    2432:2437:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2522:2525:void setContentInvalid(boolean) -> setContentInvalid
    3109:3112:void setDismissable(boolean) -> setDismissable
    2620:2623:void setError(java.lang.CharSequence) -> setError
    2599:2604:void setHintText(java.lang.CharSequence) -> setHintText
    2146:2147:void setScrollable(boolean) -> setScrollable
    3310:3315:void setShowingHintText(boolean) -> setShowingHintText
    2251:2252:void setText(java.lang.CharSequence) -> setText
    3441:3480:java.lang.String toString() -> toString
    1337:1337:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1330:1330:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    560:562:void <init>(java.lang.Object) -> <init>
    530:537:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    684:686:void <init>(java.lang.Object) -> <init>
    651:658:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    120:122:void <init>(java.lang.Object) -> <init>
    128:128:java.lang.Object getProvider() -> getProvider
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    506:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    556:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.animation.LookupTableInterpolator:
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    210:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:627:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:404:android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:832:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:804:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(android.support.v4.widget.AutoScrollHelper) -> <init>
    700:712:void run() -> run
android.support.v4.widget.AutoSizeableTextView -> android.support.v4.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    53:76:void <init>(android.content.Context,int) -> <init>
    79:79:boolean elevationSupported() -> elevationSupported
    105:109:void onAnimationEnd() -> onAnimationEnd
    97:101:void onAnimationStart() -> onAnimationStart
    84:89:void onMeasure(int,int) -> onMeasure
    92:93:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    122:125:void setBackgroundColor(int) -> setBackgroundColor
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    131:136:void <init>(android.support.v4.widget.CircleImageView,int) -> <init>
    146:150:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    140:142:void onResize(float,float) -> onResize
    153:157:void updateRadialGradient(int) -> updateRadialGradient
android.support.v4.widget.CircularProgressDrawable -> android.support.v4.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:146:void <init>(android.content.Context) -> <init>
    516:527:void applyFinishTranslation(float,android.support.v4.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    534:563:void applyTransformation(float,android.support.v4.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:404:void draw(android.graphics.Canvas) -> draw
    476:486:int evaluateColorChange(float,int,int) -> evaluateColorChange
    414:414:int getAlpha() -> getAlpha
    433:433:int getOpacity() -> getOpacity
    438:438:boolean isRunning() -> isRunning
    408:410:void setAlpha(int) -> setAlpha
    280:282:void setArrowEnabled(boolean) -> setArrowEnabled
    299:301:void setArrowScale(float) -> setArrowScale
    419:421:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:395:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:352:void setProgressRotation(float) -> setProgressRotation
    424:425:void setRotation(float) -> setRotation
    151:159:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:333:void setStartEndTrim(float,float) -> setStartEndTrim
    192:194:void setStrokeWidth(float) -> setStrokeWidth
    168:175:void setStyle(int) -> setStyle
    566:616:void setupAnimators() -> setupAnimators
    446:459:void start() -> start
    466:472:void stop() -> stop
    499:506:void updateRingColor(float,android.support.v4.widget.CircularProgressDrawable$Ring) -> updateRingColor
android.support.v4.widget.CircularProgressDrawable$1 -> android.support.v4.widget.CircularProgressDrawable$1:
    568:568:void <init>(android.support.v4.widget.CircularProgressDrawable,android.support.v4.widget.CircularProgressDrawable$Ring) -> <init>
    571:575:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.widget.CircularProgressDrawable$2 -> android.support.v4.widget.CircularProgressDrawable$2:
    580:580:void <init>(android.support.v4.widget.CircularProgressDrawable,android.support.v4.widget.CircularProgressDrawable$Ring) -> <init>
    595:595:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:590:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    599:613:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    584:585:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.widget.CircularProgressDrawable$Ring -> android.support.v4.widget.CircularProgressDrawable$Ring:
    650:659:void <init>() -> <init>
    692:721:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    724:753:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    835:835:int getAlpha() -> getAlpha
    875:875:float getEndTrim() -> getEndTrim
    805:805:int getNextColor() -> getNextColor
    809:809:int getNextColorIndex() -> getNextColorIndex
    855:855:float getStartTrim() -> getStartTrim
    867:867:int getStartingColor() -> getStartingColor
    863:863:float getStartingEndTrim() -> getStartingEndTrim
    927:927:float getStartingRotation() -> getStartingRotation
    859:859:float getStartingStartTrim() -> getStartingStartTrim
    817:818:void goToNextColor() -> goToNextColor
    944:950:void resetOriginals() -> resetOriginals
    828:829:void setAlpha(int) -> setAlpha
    668:670:void setArrowDimensions(float,float) -> setArrowDimensions
    914:917:void setArrowScale(float) -> setArrowScale
    890:891:void setCenterRadius(float) -> setCenterRadius
    778:779:void setColor(int) -> setColor
    821:822:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    797:799:void setColorIndex(int) -> setColorIndex
    761:764:void setColors(int[]) -> setColors
    871:872:void setEndTrim(float) -> setEndTrim
    879:880:void setRotation(float) -> setRotation
    901:904:void setShowArrow(boolean) -> setShowArrow
    851:852:void setStartTrim(float) -> setStartTrim
    842:844:void setStrokeWidth(float) -> setStrokeWidth
    935:938:void storeOriginals() -> storeOriginals
android.support.v4.widget.CompoundButtonCompat -> android.support.v4.widget.CompoundButtonCompat:
    123:145:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    469:473:void onContentChanged() -> onContentChanged
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(android.support.v4.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    39:41:void <init>(android.support.v4.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.DirectedAcyclicGraph -> android.support.v4.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:77:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:57:void addNode(java.lang.Object) -> addNode
    143:150:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:179:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:209:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:215:void poolList(java.util.ArrayList) -> poolList
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> onPull
android.support.v4.widget.ImageViewCompat -> android.support.v4.widget.ImageViewCompat:
    37:41:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    76:80:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:69:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    90:109:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:80:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
android.support.v4.widget.ListViewCompat -> android.support.v4.widget.ListViewCompat:
    67:85:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    175:177:void <clinit>() -> <clinit>
    189:190:void <init>(android.content.Context) -> <init>
    193:194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:215:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    443:444:void addView(android.view.View) -> addView
    452:453:void addView(android.view.View,int) -> addView
    461:462:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    470:471:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1286:1332:boolean arrowScroll(int) -> arrowScroll
    494:501:boolean canScroll() -> canScroll
    1938:1954:int clamp(int,int,int) -> clamp
    1472:1472:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1465:1465:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1458:1458:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1507:1554:void computeScroll() -> computeScroll
    1604:1665:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1451:1451:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1444:1444:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1420:1437:int computeVerticalScrollRange() -> computeVerticalScrollRange
    592:592:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    288:288:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    293:293:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    244:244:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    283:283:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    237:237:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    277:277:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1361:1368:void doScrollY(int) -> doScrollY
    1888:1935:void draw(android.graphics.Canvas) -> draw
    1839:1848:void endDrag() -> endDrag
    1874:1884:void ensureGlows() -> ensureGlows
    604:642:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1107:1168:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1816:1826:void fling(int) -> fling
    1829:1836:void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    1222:1238:boolean fullScroll(int) -> fullScroll
    406:419:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    427:427:int getMaxScrollAmount() -> getMaxScrollAmount
    379:379:int getNestedScrollAxes() -> getNestedScrollAxes
    1079:1087:int getScrollRange() -> getScrollRange
    391:401:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1000:1011:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    231:231:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    271:271:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    646:654:boolean inChild(int,int) -> inChild
    658:663:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    431:439:void initScrollView() -> initScrollView
    666:669:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    256:256:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1340:1340:boolean isOffScreen(android.view.View) -> isOffScreen
    1800:1805:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1348:1352:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1478:1489:void measureChild(android.view.View,int,int) -> measureChild
    1494:1503:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1771:1774:void onAttachedToWindow() -> onAttachedToWindow
    972:996:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    699:794:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1733:1767:void onLayout(boolean,int,int,int,int) -> onLayout
    556:587:void onMeasure(int,int) -> onMeasure
    365:369:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    374:374:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    331:332:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    360:361:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    320:326:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    354:356:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    307:309:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    343:344:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1017:1018:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1693:1712:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1969:1978:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1982:1985:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    547:552:void onScrollChanged(int,int,int,int) -> onScrollChanged
    955:968:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1778:1782:void onSizeChanged(int,int,int,int) -> onSizeChanged
    301:301:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    338:338:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    313:315:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    348:349:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    799:951:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1025:1075:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1184:1206:boolean pageScroll(int) -> pageScroll
    672:676:void recycleVelocityTracker() -> recycleVelocityTracker
    1670:1677:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1719:1722:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    680:684:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1727:1729:void requestLayout() -> requestLayout
    1254:1275:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1858:1871:void scrollTo(int,int) -> scrollTo
    1562:1572:void scrollToChild(android.view.View) -> scrollToChild
    1583:1592:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    524:528:void setFillViewport(boolean) -> setFillViewport
    251:252:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    487:488:void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    542:543:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    386:386:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1377:1400:void smoothScrollBy(int,int) -> smoothScrollBy
    1409:1410:void smoothScrollTo(int,int) -> smoothScrollTo
    221:221:boolean startNestedScroll(int,int) -> startNestedScroll
    261:261:boolean startNestedScroll(int) -> startNestedScroll
    226:227:void stopNestedScroll(int) -> stopNestedScroll
    266:267:void stopNestedScroll() -> stopNestedScroll
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    2027:2027:void <init>() -> <init>
    2084:2093:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2065:2080:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2030:2048:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    2013:2013:void <clinit>() -> <clinit>
    1992:1993:void <init>(android.os.Parcelable) -> <init>
    1996:1998:void <init>(android.os.Parcel) -> <init>
    2008:2009:java.lang.String toString() -> toString
    2002:2004:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    2014:2014:void <init>() -> <init>
    2014:2014:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2017:2017:android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2014:2014:java.lang.Object[] newArray(int) -> newArray
    2022:2022:android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:175:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    42:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:62:void <init>(android.content.Context) -> <init>
    75:75:void draw(android.graphics.Canvas) -> draw
    83:98:int getDefaultSize2(int,int) -> getDefaultSize2
    107:110:void onMeasure(int,int) -> onMeasure
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    84:140:void <clinit>() -> <clinit>
    340:341:void <init>(android.content.Context) -> <init>
    350:379:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1089:1098:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1101:1115:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    672:678:boolean canChildScrollUp() -> canChildScrollUp
    398:404:void createProgressView() -> createProgressView
    903:903:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    908:908:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    885:885:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    879:879:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    587:596:void ensureTarget() -> ensureTarget
    968:998:void finishSpinner(float) -> finishSpinner
    383:393:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    813:813:int getNestedScrollAxes() -> getNestedScrollAxes
    664:664:int getProgressCircleDiameter() -> getProgressCircleDiameter
    279:279:int getProgressViewEndOffset() -> getProgressViewEndOffset
    271:271:int getProgressViewStartOffset() -> getProgressViewStartOffset
    873:873:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    912:912:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    858:858:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    916:965:void moveSpinner(float) -> moveSpinner
    1135:1139:void moveToStart(float) -> moveToStart
    229:231:void onDetachedFromWindow() -> onDetachedFromWindow
    692:704:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    609:630:void onLayout(boolean,int,int,int,int) -> onLayout
    634:655:void onMeasure(int,int) -> onMeasure
    898:898:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    892:892:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    783:809:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    834:847:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    772:777:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1175:1183:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    765:765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    818:828:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1002:1012:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    753:759:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    206:217:void reset() -> reset
    460:462:void setAnimationProgress(float) -> setAnimationProgress
    545:546:void setColorScheme(int[]) -> setColorScheme
    572:574:void setColorSchemeColors(int[]) -> setColorSchemeColors
    556:562:void setColorSchemeResources(int[]) -> setColorSchemeResources
    234:236:void setColorViewAlpha(int) -> setColorViewAlpha
    604:605:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    221:225:void setEnabled(boolean) -> setEnabled
    853:854:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    687:688:void setOnChildScrollUpCallback(android.support.v4.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    411:412:void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    519:520:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    537:538:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    528:529:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    421:436:void setRefreshing(boolean) -> setRefreshing
    465:475:void setRefreshing(boolean,boolean) -> setRefreshing
    317:332:void setSize(int) -> setSize
    310:311:void setSlingshotDistance(int) -> setSlingshotDistance
    1169:1172:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    499:511:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1080:1086:void startDragging(float) -> startDragging
    863:863:boolean startNestedScroll(int) -> startNestedScroll
    495:496:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    491:492:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    478:488:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1150:1166:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    439:453:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    868:869:void stopNestedScroll() -> stopNestedScroll
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    178:178:void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    189:202:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    185:185:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    181:181:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    441:441:void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    444:445:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    478:478:void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    481:482:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    499:499:void <init>(android.support.v4.widget.SwipeRefreshLayout,int,int) -> <init>
    502:504:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    976:976:void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    984:987:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    991:991:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    980:980:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    1117:1117:void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    1120:1131:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    1141:1141:void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    1144:1145:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    1152:1152:void <init>(android.support.v4.widget.SwipeRefreshLayout) -> <init>
    1155:1158:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    293:308:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    766:766:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    776:776:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    224:242:int getMaxLines(android.widget.TextView) -> getMaxLines
    961:978:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    905:939:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    813:825:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    112:119:java.lang.reflect.Field retrieveField(java.lang.String) -> retrieveField
    124:128:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> retrieveIntFromField
    149:157:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    691:716:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    736:757:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    794:802:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    882:889:void setPrecomputedText(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat) -> setPrecomputedText
    281:286:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    840:867:void setTextMetricsParams(android.widget.TextView,android.support.v4.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    517:521:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
android.support.v4.widget.TextViewCompat$OreoCallback -> android.support.v4.widget.TextViewCompat$OreoCallback:
    547:551:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    669:669:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    657:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    628:640:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    663:665:boolean isEditable(android.widget.TextView) -> isEditable
    644:651:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    566:566:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    555:555:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    571:572:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    560:561:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    575:610:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> <init>
    511:518:void cancel() -> cancel
    471:472:void captureChildView(android.view.View,int) -> captureChildView
    1276:1283:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    670:673:int clampMag(int,int,int) -> clampMag
    687:690:float clampMag(float,float,float) -> clampMag
    790:801:void clearMotionHistory() -> clearMotionHistory
    804:805:void clearMotionHistory(int) -> clearMotionHistory
    638:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    369:371:android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    779:787:void dispatchViewReleased(float,float) -> dispatchViewReleased
    694:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1424:1443:void dragTo(int,int,int,int) -> dragTo
    818:845:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1495:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    1499:1506:int getEdgesTouched(int,int) -> getEdgesTouched
    503:503:int getTouchSlop() -> getTouchSlop
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1516:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1421:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1255:1273:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:853:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:868:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:896:void setDragState(int) -> setDragState
    577:578:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    340:340:void <init>(android.support.v4.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
    255:255:int getOrderedChildIndex(int) -> getOrderedChildIndex
    266:266:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    277:277:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    246:246:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    232:232:boolean onEdgeLock(int) -> onEdgeLock
    220:220:void onEdgeTouched(int,int) -> onEdgeTouched
    187:187:void onViewCaptured(android.view.View,int) -> onViewCaptured
android.support.v4.widget.ViewGroupUtils -> android.support.v4.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
android.support.v7.app.ActionBar -> android.support.v7.app.ActionBar:
    92:1368:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1121:1121:void onDestroy() -> onDestroy
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
    1062:1062:android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
android.support.v7.app.ActionBar$LayoutParams -> android.support.v7.app.ActionBar$LayoutParams:
    1377:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1387:void <init>(int,int) -> <init>
    1399:1402:void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    1405:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.app.ActionBar$Tab -> android.support.v7.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
android.support.v7.app.AlertController -> android.support.v7.app.AlertController:
    182:206:void <init>(android.content.Context,android.support.v7.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    408:414:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    231:234:void installContent() -> installContent
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
android.support.v7.app.AlertController$1 -> android.support.v7.app.AlertController$1:
    126:126:void <init>(android.support.v7.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
android.support.v7.app.AlertController$2 -> android.support.v7.app.AlertController$2:
    591:591:void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(android.support.v4.widget.NestedScrollView,int,int,int,int) -> onScrollChange
android.support.v7.app.AlertController$3 -> android.support.v7.app.AlertController$3:
    600:600:void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
android.support.v7.app.AlertController$4 -> android.support.v7.app.AlertController$4:
    608:608:void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.app.AlertController$5 -> android.support.v7.app.AlertController$5:
    619:619:void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
android.support.v7.app.AlertController$AlertParams -> android.support.v7.app.AlertController$AlertParams:
    924:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(android.support.v7.app.AlertController) -> apply
    988:1098:void createListView(android.support.v7.app.AlertController) -> createListView
android.support.v7.app.AlertController$AlertParams$1 -> android.support.v7.app.AlertController$AlertParams$1:
    995:995:void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],android.support.v7.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.app.AlertController$AlertParams$2 -> android.support.v7.app.AlertController$AlertParams$2:
    1009:1017:void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
android.support.v7.app.AlertController$AlertParams$3 -> android.support.v7.app.AlertController$AlertParams$3:
    1065:1065:void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$AlertParams$4 -> android.support.v7.app.AlertController$AlertParams$4:
    1075:1075:void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.app.AlertController$ButtonHandler -> android.support.v7.app.AlertController$ButtonHandler:
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
android.support.v7.app.AlertController$CheckedItemAdapter -> android.support.v7.app.AlertController$CheckedItemAdapter:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
android.support.v7.app.AlertController$RecycleListView -> android.support.v7.app.AlertController$RecycleListView:
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
android.support.v7.app.AlertDialog -> android.support.v7.app.AlertDialog:
    98:100:void <init>(android.content.Context,int) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
android.support.v7.app.AlertDialog$Builder -> android.support.v7.app.AlertDialog$Builder:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    981:992:android.support.v7.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:android.support.v7.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:580:android.support.v7.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    398:399:android.support.v7.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:446:android.support.v7.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:462:android.support.v7.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    643:645:android.support.v7.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:409:android.support.v7.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:419:android.support.v7.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    730:734:android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:511:android.support.v7.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:524:android.support.v7.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    545:547:android.support.v7.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:560:android.support.v7.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    600:601:android.support.v7.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    610:611:android.support.v7.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    620:621:android.support.v7.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:475:android.support.v7.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:488:android.support.v7.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    783:787:android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    831:835:android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:368:android.support.v7.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:378:android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    902:905:android.support.v7.app.AlertDialog$Builder setView(android.view.View) -> setView
android.support.v7.app.AppCompatActivity -> android.support.v7.app.AppCompatActivity:
    62:66:void <init>() -> <init>
    155:156:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    586:591:void closeOptionsMenu() -> closeOptionsMenu
    529:535:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    191:191:android.view.View findViewById(int) -> findViewById
    519:522:android.support.v7.app.AppCompatDelegate getDelegate() -> getDelegate
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    540:543:android.content.res.Resources getResources() -> getResources
    110:110:android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    431:431:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    245:246:void invalidateOptionsMenu() -> invalidateOptionsMenu
    160:168:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    470:471:void onContentChanged() -> onContentChanged
    71:86:void onCreate(android.os.Bundle) -> onCreate
    348:349:void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    210:212:void onDestroy() -> onDestroy
    569:572:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    196:205:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    494:494:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    505:506:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    97:99:void onPostCreate(android.os.Bundle) -> onPostCreate
    172:174:void onPostResume() -> onPostResume
    367:367:void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    510:512:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    178:180:void onStart() -> onStart
    184:186:void onStop() -> onStop
    268:268:void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    257:257:void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    478:478:void onSupportContentChanged() -> onSupportContentChanged
    393:416:boolean onSupportNavigateUp() -> onSupportNavigateUp
    216:218:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    282:282:android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    577:582:void openOptionsMenu() -> openOptionsMenu
    552:564:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    140:141:void setContentView(int) -> setContentView
    145:146:void setContentView(android.view.View) -> setContentView
    150:151:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    130:131:void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    90:93:void setTheme(int) -> setTheme
    240:241:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    464:465:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    448:448:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
android.support.v7.app.AppCompatDelegate -> android.support.v7.app.AppCompatDelegate:
    130:130:void <clinit>() -> <clinit>
    208:208:void <init>() -> <init>
    182:182:android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback) -> create
    191:191:android.support.v7.app.AppCompatDelegate create(android.app.Dialog,android.support.v7.app.AppCompatCallback) -> create
    486:486:int getDefaultNightMode() -> getDefaultNightMode
android.support.v7.app.AppCompatDelegateImpl -> android.support.v7.app.AppCompatDelegateImpl:
    116:159:void <clinit>() -> <clinit>
    244:251:void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback) -> <init>
    484:488:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2002:2017:boolean applyDayNight() -> applyDayNight
    731:765:void applyFixedSizeWindow() -> applyFixedSizeWindow
    1758:1782:void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1643:1654:void checkCloseActionMenu(android.support.v7.view.menu.MenuBuilder) -> checkCloseActionMenu
    1657:1658:void closePanel(int) -> closePanel
    1661:1690:void closePanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    551:555:android.view.ViewGroup createSubDecor() -> createSubDecor
    1234:1266:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    1976:1998:void dismissPopups() -> dismissPopups
    1165:1184:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1848:1872:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1104:1107:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    2117:2120:void ensureAutoNightModeManager() -> ensureAutoNightModeManager
    517:548:void ensureSubDecor() -> ensureSubDecor
    1785:1793:android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    403:404:android.view.View findViewById(int) -> findViewById
    374:385:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    391:396:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2066:2066:int getNightMode() -> getNightMode
    1798:1810:android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    306:307:android.support.v7.app.ActionBar getSupportActionBar() -> getSupportActionBar
    850:854:java.lang.CharSequence getTitle() -> getTitle
    315:315:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    319:322:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1518:1535:boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1424:1427:boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1475:1514:boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1300:1309:void installViewFactory() -> installViewFactory
    929:933:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1839:1845:void invalidatePanelMenu(int) -> invalidatePanelMenu
    1100:1100:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2044:2058:int mapNightMode(int) -> mapNightMode
    1111:1123:boolean onBackPressed() -> onBackPressed
    411:425:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onCreate(android.os.Bundle) -> onCreate
    1316:1316:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1324:1324:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    500:514:void onDestroy() -> onDestroy
    1215:1228:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1693:1700:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1128:1159:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1188:1211:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1704:1753:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    884:891:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    896:897:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    874:880:void onMenuOpened(int) -> onMenuOpened
    858:871:void onPanelClosed(int) -> onPanelClosed
    299:300:void onPostCreate(android.os.Bundle) -> onPostCreate
    449:453:void onPostResume() -> onPostResume
    492:496:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    431:432:void onStart() -> onStart
    436:445:void onStop() -> onStop
    728:728:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1329:1330:void openPanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    311:311:android.support.v7.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    1815:1835:boolean performPanelShortcut(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1539:1639:boolean preparePanel(android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1431:1472:void reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> reopenMenu
    769:803:boolean requestWindowFeature(int) -> requestWindowFeature
    1958:1968:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    457:462:void setContentView(android.view.View) -> setContentView
    466:471:void setContentView(int) -> setContentView
    475:480:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    338:345:void setSupportActionBar(android.support.v7.widget.Toolbar) -> setSupportActionBar
    837:846:void setTitle(java.lang.CharSequence) -> setTitle
    1090:1090:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1274:1292:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    2129:2146:boolean shouldRecreateOnNightModeChange() -> shouldRecreateOnNightModeChange
    901:902:android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback) -> startSupportActionMode
    936:1084:android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    1951:1952:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    2074:2113:boolean updateForNightMode(int) -> updateForNightMode
    1881:1947:int updateStatusGuard(int) -> updateStatusGuard
android.support.v7.app.AppCompatDelegateImpl$1 -> android.support.v7.app.AppCompatDelegateImpl$1:
    132:132:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    148:153:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    135:145:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
android.support.v7.app.AppCompatDelegateImpl$2 -> android.support.v7.app.AppCompatDelegateImpl$2:
    223:223:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    226:234:void run() -> run
android.support.v7.app.AppCompatDelegateImpl$3 -> android.support.v7.app.AppCompatDelegateImpl$3:
    638:638:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    642:654:android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v7.app.AppCompatDelegateImpl$4 -> android.support.v7.app.AppCompatDelegateImpl$4:
    660:660:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    663:664:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
android.support.v7.app.AppCompatDelegateImpl$5 -> android.support.v7.app.AppCompatDelegateImpl$5:
    715:715:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    717:717:void onAttachedFromWindow() -> onAttachedFromWindow
    721:722:void onDetachedFromWindow() -> onDetachedFromWindow
android.support.v7.app.AppCompatDelegateImpl$6 -> android.support.v7.app.AppCompatDelegateImpl$6:
    991:991:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    994:1019:void run() -> run
android.support.v7.app.AppCompatDelegateImpl$6$1 -> android.support.v7.app.AppCompatDelegateImpl$6$1:
    1002:1002:void <init>(android.support.v7.app.AppCompatDelegateImpl$6) -> <init>
    1010:1013:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1005:1006:void onAnimationStart(android.view.View) -> onAnimationStart
android.support.v7.app.AppCompatDelegateImpl$7 -> android.support.v7.app.AppCompatDelegateImpl$7:
    1045:1045:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    1058:1061:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1048:1054:void onAnimationStart(android.view.View) -> onAnimationStart
android.support.v7.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2240:2241:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    2254:2255:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2245:2249:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2155:2157:void <init>(android.support.v7.app.AppCompatDelegateImpl,android.support.v7.view.ActionMode$Callback) -> <init>
    2171:2171:boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2161:2161:boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2176:2203:void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
    2166:2166:boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2184:2184:void <init>(android.support.v7.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2187:2196:void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.AppCompatDelegateImpl$AppCompatWindowCallback -> android.support.v7.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    2526:2528:void <init>(android.support.v7.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2532:2533:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2538:2539:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2556:2556:void onContentChanged() -> onContentChanged
    2544:2549:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2587:2589:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2594:2596:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2560:2582:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2653:2662:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2601:2610:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2638:2646:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    2620:2631:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager -> android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager:
    2673:2676:void <init>(android.support.v7.app.AppCompatDelegateImpl,android.support.v7.app.TwilightManager) -> <init>
    2719:2723:void cleanup() -> cleanup
    2685:2690:void dispatchTimeChanged() -> dispatchTimeChanged
    2680:2681:int getApplyableNightMode() -> getApplyableNightMode
    2693:2716:void setup() -> setup
android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    2699:2699:void <init>(android.support.v7.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2705:2706:void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v7.app.AppCompatDelegateImpl$ListMenuDecorView -> android.support.v7.app.AppCompatDelegateImpl$ListMenuDecorView:
    2490:2492:void <init>(android.support.v7.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2496:2497:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2520:2520:boolean isOutOfBounds(int,int) -> isOutOfBounds
    2502:2511:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2516:2517:void setBackgroundResource(int) -> setBackgroundResource
android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState -> android.support.v7.app.AppCompatDelegateImpl$PanelFeatureState:
    2323:2327:void <init>(int) -> <init>
    2391:2402:android.support.v7.view.menu.MenuView getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback) -> getListMenuView
    2330:2333:boolean hasPanelItems() -> hasPanelItems
    2379:2388:void setMenu(android.support.v7.view.menu.MenuBuilder) -> setMenu
    2347:2376:void setStyle(android.content.Context) -> setStyle
android.support.v7.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> android.support.v7.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2207:2208:void <init>(android.support.v7.app.AppCompatDelegateImpl) -> <init>
    2212:2225:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2229:2235:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.app.AppCompatDialog -> android.support.v7.app.AppCompatDialog:
    57:67:void <init>(android.content.Context,int) -> <init>
    128:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    205:206:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    111:111:android.view.View findViewById(int) -> findViewById
    168:171:android.support.v7.app.AppCompatDelegate getDelegate() -> getDelegate
    175:181:int getThemeResId(android.content.Context,int) -> getThemeResId
    161:162:void invalidateOptionsMenu() -> invalidateOptionsMenu
    76:79:void onCreate(android.os.Bundle) -> onCreate
    133:135:void onStop() -> onStop
    190:190:void onSupportActionModeFinished(android.support.v7.view.ActionMode) -> onSupportActionModeFinished
    186:186:void onSupportActionModeStarted(android.support.v7.view.ActionMode) -> onSupportActionModeStarted
    195:195:android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    94:95:void setContentView(int) -> setContentView
    99:100:void setContentView(android.view.View) -> setContentView
    104:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    122:124:void setTitle(int) -> setTitle
    200:200:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    152:152:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
android.support.v7.app.AppCompatDialog$1 -> android.support.v7.app.AppCompatDialog$1:
    45:45:void <init>(android.support.v7.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
android.support.v7.app.AppCompatViewInflater -> android.support.v7.app.AppCompatViewInflater:
    62:74:void <clinit>() -> <clinit>
    60:366:void <init>() -> <init>
    291:298:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    223:223:android.support.v7.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    187:187:android.support.v7.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    207:207:android.support.v7.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    217:217:android.support.v7.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    192:192:android.support.v7.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    202:202:android.support.v7.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    182:182:android.support.v7.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    229:229:android.support.v7.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    212:212:android.support.v7.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    234:234:android.support.v7.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    239:239:android.support.v7.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    197:197:android.support.v7.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    177:177:android.support.v7.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    82:172:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    251:251:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    311:327:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    255:281:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    336:359:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    243:244:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener -> android.support.v7.app.AppCompatViewInflater$DeclaredOnClickListener:
    373:376:void <init>(android.view.View,java.lang.String) -> <init>
    380:387:void onClick(android.view.View) -> onClick
    397:424:void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
android.support.v7.app.ResourcesFlusher -> android.support.v7.app.ResourcesFlusher:
    46:56:void flush(android.content.res.Resources) -> flush
    60:80:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:109:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:162:void flushNougats(android.content.res.Resources) -> flushNougats
    166:207:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
android.support.v7.app.ToolbarActionBar -> android.support.v7.app.ToolbarActionBar:
    68:74:void <init>(android.support.v7.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    428:428:boolean closeOptionsMenu() -> closeOptionsMenu
    440:444:boolean collapseActionView() -> collapseActionView
    504:513:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    323:323:int getDisplayOptions() -> getDisplayOptions
    399:399:int getHeight() -> getHeight
    543:548:android.view.Menu getMenu() -> getMenu
    146:146:android.content.Context getThemedContext() -> getThemedContext
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    433:435:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    186:187:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    489:490:void onDestroy() -> onDestroy
    476:483:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    468:471:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    423:423:boolean openOptionsMenu() -> openOptionsMenu
    448:461:void populateOptionsMenu() -> populateOptionsMenu
    172:172:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    275:276:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    259:261:void setDisplayOptions(int,int) -> setDisplayOptions
    270:271:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    132:132:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    182:182:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    218:219:void setTitle(java.lang.CharSequence) -> setTitle
    223:224:void setTitle(int) -> setTitle
    228:229:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
android.support.v7.app.ToolbarActionBar$1 -> android.support.v7.app.ToolbarActionBar$1:
    53:53:void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    56:57:void run() -> run
android.support.v7.app.ToolbarActionBar$2 -> android.support.v7.app.ToolbarActionBar$2:
    61:61:void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback -> android.support.v7.app.ToolbarActionBar$ActionMenuPresenterCallback:
    554:555:void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    568:578:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    559:563:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.app.ToolbarActionBar$MenuBuilderCallback -> android.support.v7.app.ToolbarActionBar$MenuBuilderCallback:
    583:584:void <init>(android.support.v7.app.ToolbarActionBar) -> <init>
    588:588:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    593:601:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.app.ToolbarActionBar$ToolbarCallbackWrapper -> android.support.v7.app.ToolbarActionBar$ToolbarCallbackWrapper:
    516:518:void <init>(android.support.v7.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    532:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:527:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
android.support.v7.app.TwilightCalculator -> android.support.v7.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:android.support.v7.app.TwilightCalculator getInstance() -> getInstance
android.support.v7.app.TwilightManager -> android.support.v7.app.TwilightManager:
    69:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:android.support.v7.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:192:void updateState(android.location.Location) -> updateState
android.support.v7.app.TwilightManager$TwilightState -> android.support.v7.app.TwilightManager$TwilightState:
    205:206:void <init>() -> <init>
android.support.v7.app.WindowDecorActionBar -> android.support.v7.app.WindowDecorActionBar:
    79:85:void <clinit>() -> <clinit>
    169:177:void <init>(android.app.Activity,boolean) -> <init>
    179:182:void <init>(android.app.Dialog) -> <init>
    875:911:void animateToMode(boolean) -> animateToMode
    760:763:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    975:979:boolean collapseActionView() -> collapseActionView
    312:317:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    351:360:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:865:void doHide(boolean) -> doHide
    788:834:void doShow(boolean) -> doShow
    674:675:void enableContentAnimations(boolean) -> enableContentAnimations
    237:243:android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    518:518:int getDisplayOptions() -> getDisplayOptions
    669:669:int getHeight() -> getHeight
    513:513:int getNavigationMode() -> getNavigationMode
    921:933:android.content.Context getThemedContext() -> getThemedContext
    712:719:void hideForActionMode() -> hideForActionMode
    723:727:void hideForSystem() -> hideForSystem
    195:206:void init(android.view.View) -> init
    259:260:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:967:void onContentScrollStarted() -> onContentScrollStarted
    971:971:void onContentScrollStopped() -> onContentScrollStopped
    1402:1412:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:322:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1395:1398:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:381:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    474:479:void setDisplayOptions(int,int) -> setDisplayOptions
    375:376:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    249:250:void setElevation(float) -> setElevation
    263:285:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    731:737:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    395:396:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    333:337:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    400:401:void setTitle(int) -> setTitle
    441:442:void setTitle(java.lang.CharSequence) -> setTitle
    446:447:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    916:916:boolean shouldAnimateContextView() -> shouldAnimateContextView
    686:693:void showForActionMode() -> showForActionMode
    697:701:void showForSystem() -> showForSystem
    523:540:android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback) -> startActionMode
    771:785:void updateVisibility(boolean) -> updateVisibility
android.support.v7.app.WindowDecorActionBar$1 -> android.support.v7.app.WindowDecorActionBar$1:
    135:135:void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.WindowDecorActionBar$2 -> android.support.v7.app.WindowDecorActionBar$2:
    152:152:void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> onAnimationEnd
android.support.v7.app.WindowDecorActionBar$3 -> android.support.v7.app.WindowDecorActionBar$3:
    161:161:void <init>(android.support.v7.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v7.app.WindowDecorActionBar$ActionModeImpl -> android.support.v7.app.WindowDecorActionBar$ActionModeImpl:
    993:999:void <init>(android.support.v7.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback) -> <init>
    1060:1064:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1040:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1055:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1122:1125:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1155:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    1070:1072:void setCustomView(android.view.View) -> setCustomView
    1076:1077:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1092:void setSubtitle(int) -> setSubtitle
    1081:1082:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1087:void setTitle(int) -> setTitle
    1106:1108:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
android.support.v7.appcompat.R$styleable -> android.support.v7.appcompat.R$styleable:
    1177:1632:void <clinit>() -> <clinit>
android.support.v7.cardview.R$styleable -> android.support.v7.cardview.R$styleable:
    54:54:void <clinit>() -> <clinit>
android.support.v7.content.res.AppCompatResources -> android.support.v7.content.res.AppCompatResources:
    48:53:void <clinit>() -> <clinit>
    148:156:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    128:142:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    65:84:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    102:102:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    171:176:android.util.TypedValue getTypedValue() -> getTypedValue
    110:122:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    160:165:boolean isColorInt(android.content.Context,int) -> isColorInt
android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry -> android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry:
    184:187:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat -> android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat:
    90:90:void <clinit>() -> <clinit>
    109:110:void <init>() -> <init>
    114:120:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    89:89:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:android.support.v7.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    613:613:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    170:173:android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    200:209:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    482:499:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    471:472:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    258:258:boolean isStateful() -> isStateful
    263:271:void jumpToCurrentState() -> jumpToCurrentState
    604:608:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    277:287:boolean onStateChange(int[]) -> onStateChange
    563:597:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    509:547:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    292:320:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    717:721:void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    213:222:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    448:468:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    369:371:void <init>(android.graphics.drawable.Animatable) -> <init>
    375:376:void start() -> start
    380:381:void stop() -> stop
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    633:642:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    666:668:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    651:662:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    711:711:long generateTransitionKey(int,int) -> generateTransitionKey
    680:680:int getKeyframeIdAt(int) -> getKeyframeIdAt
    672:676:int indexOfKeyframe(int[]) -> indexOfKeyframe
    684:685:int indexOfTransition(int,int) -> indexOfTransition
    689:690:boolean isTransitionReversed(int,int) -> isTransitionReversed
    646:648:void mutate() -> mutate
    701:701:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    707:707:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    694:695:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    432:434:void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    438:439:void start() -> start
    443:444:void stop() -> stop
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    391:406:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    410:410:boolean canReverse() -> canReverse
    420:421:void reverse() -> reverse
    415:416:void start() -> start
    425:426:void stop() -> stop
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    731:733:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    758:775:float getInterpolation(float) -> getInterpolation
    753:753:int getTotalDuration() -> getTotalDuration
    736:749:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    352:352:void <init>() -> <init>
    352:352:void <init>(android.support.v7.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    362:362:boolean canReverse() -> canReverse
    359:359:void reverse() -> reverse
android.support.v7.graphics.drawable.DrawableContainer -> android.support.v7.graphics.drawable.DrawableContainer:
    55:1172:void <init>() -> <init>
    538:576:void animate(boolean) -> animate
    598:599:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    604:604:boolean canApplyTheme() -> canApplyTheme
    89:95:void draw(android.graphics.Canvas) -> draw
    157:157:int getAlpha() -> getAlpha
    99:100:int getChangingConfigurations() -> getChangingConfigurations
    609:613:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    581:581:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    417:417:int getCurrentIndex() -> getCurrentIndex
    299:304:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    345:348:int getIntrinsicHeight() -> getIntrinsicHeight
    337:340:int getIntrinsicWidth() -> getIntrinsicWidth
    361:364:int getMinimumHeight() -> getMinimumHeight
    353:356:int getMinimumWidth() -> getMinimumWidth
    408:409:int getOpacity() -> getOpacity
    135:138:void getOutline(android.graphics.Outline) -> getOutline
    111:129:boolean getPadding(android.graphics.Rect) -> getPadding
    494:533:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    372:378:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    247:247:boolean isAutoMirrored() -> isAutoMirrored
    252:276:void jumpToCurrentState() -> jumpToCurrentState
    619:625:android.graphics.drawable.Drawable mutate() -> mutate
    106:106:boolean needsMirroring() -> needsMirroring
    221:227:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    332:332:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    319:325:boolean onLevelChange(int) -> onLevelChange
    308:314:boolean onStateChange(int[]) -> onStateChange
    1207:1208:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    382:385:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    430:485:boolean selectDrawable(int) -> selectDrawable
    142:153:void setAlpha(int) -> setAlpha
    236:243:void setAutoMirrored(boolean) -> setAutoMirrored
    172:179:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1155:1167:void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    162:168:void setDither(boolean) -> setDither
    280:283:void setHotspot(float,float) -> setHotspot
    287:295:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    183:188:void setTintList(android.content.res.ColorStateList) -> setTintList
    192:197:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    396:403:boolean setVisible(boolean,boolean) -> setVisible
    389:392:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    592:593:void updateDensity(android.content.res.Resources) -> updateDensity
android.support.v7.graphics.drawable.DrawableContainer$1 -> android.support.v7.graphics.drawable.DrawableContainer$1:
    471:471:void <init>(android.support.v7.graphics.drawable.DrawableContainer) -> <init>
    474:476:void run() -> run
android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1172:1172:void <init>() -> <init>
    1189:1189:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1193:1196:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1200:1203:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1181:1183:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1176:1177:android.support.v7.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState -> android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState:
    687:760:void <init>(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState,android.support.v7.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    774:789:int addChild(android.graphics.drawable.Drawable) -> addChild
    898:911:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    916:931:boolean canApplyTheme() -> canApplyTheme
    1136:1135:boolean canConstantState() -> canConstantState
    1047:1064:void computeConstantSize() -> computeConstantSize
    805:814:void createAllFutures() -> createAllFutures
    801:801:int getCapacity() -> getCapacity
    764:764:int getChangingConfigurations() -> getChangingConfigurations
    833:851:android.graphics.drawable.Drawable getChild(int) -> getChild
    826:826:int getChildCount() -> getChildCount
    1020:1023:int getConstantHeight() -> getConstantHeight
    1040:1043:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1030:1033:int getConstantMinimumWidth() -> getConstantMinimumWidth
    971:975:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1010:1013:int getConstantWidth() -> getConstantWidth
    1086:1098:int getOpacity() -> getOpacity
    1127:1130:void growArray(int,int) -> growArray
    796:798:void invalidateCache() -> invalidateCache
    1003:1003:boolean isConstantSize() -> isConstantSize
    817:822:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    996:997:void setConstantSize(boolean) -> setConstantSize
    1067:1068:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1075:1076:void setExitFadeDuration(int) -> setExitFadeDuration
    855:872:boolean setLayoutDirection(int,int) -> setLayoutDirection
    964:965:void setVariablePadding(boolean) -> setVariablePadding
    882:894:void updateDensity(android.content.res.Resources) -> updateDensity
android.support.v7.graphics.drawable.DrawableWrapper -> android.support.v7.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:161:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:108:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:169:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:83:void setAlpha(int) -> setAlpha
    186:187:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    87:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:73:void setDither(boolean) -> setDither
    77:78:void setFilterBitmap(boolean) -> setFilterBitmap
    211:212:void setHotspot(float,float) -> setHotspot
    216:217:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:197:void setTint(int) -> setTint
    201:202:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:207:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:177:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v7.graphics.drawable.StateListDrawable -> android.support.v7.graphics.drawable.StateListDrawable:
    401:406:void <init>(android.support.v7.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    412:416:void <init>(android.support.v7.graphics.drawable.StateListDrawable$StateListState) -> <init>
    389:391:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    78:78:android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    317:317:android.support.v7.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    232:251:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    106:106:boolean isStateful() -> isStateful
    308:312:android.graphics.drawable.Drawable mutate() -> mutate
    111:120:boolean onStateChange(int[]) -> onStateChange
    395:399:void setConstantState(android.support.v7.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
android.support.v7.graphics.drawable.StateListDrawable$StateListState -> android.support.v7.graphics.drawable.StateListDrawable$StateListState:
    330:337:void <init>(android.support.v7.graphics.drawable.StateListDrawable$StateListState,android.support.v7.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    349:351:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    379:383:void growArray(int,int) -> growArray
    355:362:int indexOfStateSet(int[]) -> indexOfStateSet
    341:346:void mutate() -> mutate
    368:368:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    374:374:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
android.support.v7.recyclerview.R$styleable -> android.support.v7.recyclerview.R$styleable:
    177:226:void <clinit>() -> <clinit>
android.support.v7.recyclerview.extensions.AsyncDifferConfig -> android.support.v7.recyclerview.extensions.AsyncDifferConfig:
    46:50:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,android.support.v7.util.DiffUtil$ItemCallback) -> <init>
    63:63:java.util.concurrent.Executor getBackgroundThreadExecutor() -> getBackgroundThreadExecutor
    69:69:android.support.v7.util.DiffUtil$ItemCallback getDiffCallback() -> getDiffCallback
    57:57:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
android.support.v7.recyclerview.extensions.AsyncDifferConfig$Builder -> android.support.v7.recyclerview.extensions.AsyncDifferConfig$Builder:
    142:143:void <clinit>() -> <clinit>
    82:84:void <init>(android.support.v7.util.DiffUtil$ItemCallback) -> <init>
    127:135:android.support.v7.recyclerview.extensions.AsyncDifferConfig build() -> build
android.support.v7.recyclerview.extensions.AsyncListDiffer -> android.support.v7.recyclerview.extensions.AsyncListDiffer:
    131:131:void <clinit>() -> <clinit>
    161:169:void <init>(android.support.v7.util.ListUpdateCallback,android.support.v7.recyclerview.extensions.AsyncDifferConfig) -> <init>
    199:199:java.util.List getCurrentList() -> getCurrentList
    315:319:void latchList(java.util.List,android.support.v7.util.DiffUtil$DiffResult) -> latchList
    215:311:void submitList(java.util.List) -> submitList
android.support.v7.recyclerview.extensions.AsyncListDiffer$1 -> android.support.v7.recyclerview.extensions.AsyncListDiffer$1:
    243:243:void <init>(android.support.v7.recyclerview.extensions.AsyncListDiffer,java.util.List,java.util.List,int) -> <init>
    246:309:void run() -> run
android.support.v7.recyclerview.extensions.AsyncListDiffer$1$1 -> android.support.v7.recyclerview.extensions.AsyncListDiffer$1$1:
    246:246:void <init>(android.support.v7.recyclerview.extensions.AsyncListDiffer$1) -> <init>
    270:282:boolean areContentsTheSame(int,int) -> areContentsTheSame
    259:265:boolean areItemsTheSame(int,int) -> areItemsTheSame
    288:297:java.lang.Object getChangePayload(int,int) -> getChangePayload
    254:254:int getNewListSize() -> getNewListSize
    249:249:int getOldListSize() -> getOldListSize
android.support.v7.recyclerview.extensions.AsyncListDiffer$1$2 -> android.support.v7.recyclerview.extensions.AsyncListDiffer$1$2:
    301:301:void <init>(android.support.v7.recyclerview.extensions.AsyncListDiffer$1,android.support.v7.util.DiffUtil$DiffResult) -> <init>
    304:307:void run() -> run
android.support.v7.recyclerview.extensions.AsyncListDiffer$MainThreadExecutor -> android.support.v7.recyclerview.extensions.AsyncListDiffer$MainThreadExecutor:
    123:123:void <init>() -> <init>
    126:127:void execute(java.lang.Runnable) -> execute
android.support.v7.recyclerview.extensions.ListAdapter -> android.support.v7.recyclerview.extensions.ListAdapter:
    99:102:void <init>(android.support.v7.util.DiffUtil$ItemCallback) -> <init>
    124:124:java.lang.Object getItem(int) -> getItem
    129:129:int getItemCount() -> getItemCount
    119:120:void submitList(java.util.List) -> submitList
android.support.v7.text.AllCapsTransformationMethod -> android.support.v7.text.AllCapsTransformationMethod:
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
android.support.v7.util.AdapterListUpdateCallback -> android.support.v7.util.AdapterListUpdateCallback:
    35:37:void <init>(android.support.v7.widget.RecyclerView$Adapter) -> <init>
    60:61:void onChanged(int,int,java.lang.Object) -> onChanged
    42:43:void onInserted(int,int) -> onInserted
    54:55:void onMoved(int,int) -> onMoved
    48:49:void onRemoved(int,int) -> onRemoved
android.support.v7.util.BatchingListUpdateCallback -> android.support.v7.util.BatchingListUpdateCallback:
    46:48:void <init>(android.support.v7.util.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> dispatchLastEvent
    110:124:void onChanged(int,int,java.lang.Object) -> onChanged
    76:86:void onInserted(int,int) -> onInserted
    104:106:void onMoved(int,int) -> onMoved
    90:100:void onRemoved(int,int) -> onRemoved
android.support.v7.util.DiffUtil -> android.support.v7.util.DiffUtil:
    84:84:void <clinit>() -> <clinit>
    105:105:android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback) -> calculateDiff
    123:198:android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback,boolean) -> calculateDiff
    204:208:android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> diffPartial
android.support.v7.util.DiffUtil$1 -> android.support.v7.util.DiffUtil$1:
    84:84:void <init>() -> <init>
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
    87:88:int compare(android.support.v7.util.DiffUtil$Snake,android.support.v7.util.DiffUtil$Snake) -> compare
android.support.v7.util.DiffUtil$Callback -> android.support.v7.util.DiffUtil$Callback:
    295:295:void <init>() -> <init>
android.support.v7.util.DiffUtil$DiffResult -> android.support.v7.util.DiffUtil$DiffResult:
    567:579:void <init>(android.support.v7.util.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    586:596:void addRootSnake() -> addRootSnake
    873:909:void dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int) -> dispatchAdditions
    913:950:void dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int) -> dispatchRemovals
    816:853:void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback) -> dispatchUpdatesTo
    646:650:void findAddition(int,int,int) -> findAddition
    723:766:boolean findMatchingItem(int,int,int,boolean) -> findMatchingItem
    610:643:void findMatchingItems() -> findMatchingItems
    653:657:void findRemoval(int,int,int) -> findRemoval
    857:868:android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> removePostponedUpdate
android.support.v7.util.DiffUtil$ItemCallback -> android.support.v7.util.DiffUtil$ItemCallback:
    373:373:void <init>() -> <init>
    434:434:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
android.support.v7.util.DiffUtil$PostponedUpdate -> android.support.v7.util.DiffUtil$PostponedUpdate:
    973:977:void <init>(int,int,boolean) -> <init>
android.support.v7.util.DiffUtil$Range -> android.support.v7.util.DiffUtil$Range:
    482:483:void <init>() -> <init>
    485:490:void <init>(int,int,int,int) -> <init>
android.support.v7.util.DiffUtil$Snake -> android.support.v7.util.DiffUtil$Snake:
    442:442:void <init>() -> <init>
android.support.v7.view.ActionBarPolicy -> android.support.v7.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:android.support.v7.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:64:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
android.support.v7.view.ActionMode -> android.support.v7.view.ActionMode:
    41:245:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
android.support.v7.view.ContextThemeWrapper -> android.support.v7.view.ContextThemeWrapper:
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    181:190:void initializeTheme() -> initializeTheme
    177:178:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:130:void setTheme(int) -> setTheme
android.support.v7.view.StandaloneActionMode -> android.support.v7.view.StandaloneActionMode:
    50:59:void <init>(android.content.Context,android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode$Callback,boolean) -> <init>
    105:112:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:101:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    141:141:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:163:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
    94:96:void setCustomView(android.view.View) -> setCustomView
    68:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:79:void setSubtitle(int) -> setSubtitle
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
    73:74:void setTitle(int) -> setTitle
    83:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
android.support.v7.view.SupportActionModeWrapper -> android.support.v7.view.SupportActionModeWrapper:
    48:51:void <init>(android.content.Context,android.support.v7.view.ActionMode) -> <init>
    80:81:void finish() -> finish
    110:110:android.view.View getCustomView() -> getCustomView
    85:85:android.view.Menu getMenu() -> getMenu
    120:120:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    100:100:java.lang.CharSequence getSubtitle() -> getSubtitle
    55:55:java.lang.Object getTag() -> getTag
    90:90:java.lang.CharSequence getTitle() -> getTitle
    125:125:boolean getTitleOptionalHint() -> getTitleOptionalHint
    75:76:void invalidate() -> invalidate
    135:135:boolean isTitleOptional() -> isTitleOptional
    115:116:void setCustomView(android.view.View) -> setCustomView
    70:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    105:106:void setSubtitle(int) -> setSubtitle
    60:61:void setTag(java.lang.Object) -> setTag
    65:66:void setTitle(java.lang.CharSequence) -> setTitle
    95:96:void setTitle(int) -> setTitle
    130:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
android.support.v7.view.SupportActionModeWrapper$CallbackWrapper -> android.support.v7.view.SupportActionModeWrapper$CallbackWrapper:
    149:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    191:203:android.view.ActionMode getActionModeWrapper(android.support.v7.view.ActionMode) -> getActionModeWrapper
    181:186:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    171:171:boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    158:158:boolean onCreateActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onCreateActionMode
    177:178:void onDestroyActionMode(android.support.v7.view.ActionMode) -> onDestroyActionMode
    164:164:boolean onPrepareActionMode(android.support.v7.view.ActionMode,android.view.Menu) -> onPrepareActionMode
android.support.v7.view.SupportMenuInflater -> android.support.v7.view.SupportMenuInflater:
    82:84:void <clinit>() -> <clinit>
    100:104:void <init>(android.content.Context) -> <init>
    230:236:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    223:226:java.lang.Object getRealOwner() -> getRealOwner
    118:134:void inflate(int,android.view.Menu) -> inflate
    144:164:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    241:241:void <clinit>() -> <clinit>
    246:256:void <init>(java.lang.Object,java.lang.String) -> <init>
    263:270:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.view.SupportMenuInflater$MenuState -> android.support.v7.view.SupportMenuInflater$MenuState:
    348:352:void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu) -> <init>
    529:531:void addItem() -> addItem
    534:537:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    457:460:char getShortcut(java.lang.String) -> getShortcut
    541:541:boolean hasAddedItem() -> hasAddedItem
    548:555:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    367:379:void readGroup(android.util.AttributeSet) -> readGroup
    385:454:void readItem(android.util.AttributeSet) -> readItem
    355:361:void resetGroup() -> resetGroup
    465:526:void setItem(android.view.MenuItem) -> setItem
android.support.v7.view.ViewPropertyAnimatorCompatSet -> android.support.v7.view.ViewPropertyAnimatorCompatSet:
    48:50:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:android.support.v7.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat) -> play
    61:64:android.support.v7.view.ViewPropertyAnimatorCompatSet playSequentially(android.support.v4.view.ViewPropertyAnimatorCompat,android.support.v4.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:android.support.v7.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:android.support.v7.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:android.support.v7.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
android.support.v7.view.ViewPropertyAnimatorCompatSet$1 -> android.support.v7.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(android.support.v7.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
android.support.v7.view.WindowCallbackWrapper -> android.support.v7.view.WindowCallbackWrapper:
    50:52:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
android.support.v7.view.menu.ActionMenuItem -> android.support.v7.view.menu.ActionMenuItem:
    83:90:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    434:446:void applyIconTint() -> applyIconTint
    368:368:boolean collapseActionView() -> collapseActionView
    363:363:boolean expandActionView() -> expandActionView
    337:337:android.view.ActionProvider getActionProvider() -> getActionProvider
    327:327:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    389:389:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    415:415:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    430:430:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    124:124:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    144:144:android.view.SubMenu getSubMenu() -> getSubMenu
    347:347:android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    400:400:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean hasSubMenu() -> hasSubMenu
    373:373:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    332:332:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    322:322:android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    342:342:android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:185:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:192:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:198:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:209:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    383:384:android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:215:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:224:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:233:android.view.MenuItem setIcon(int) -> setIcon
    405:410:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    420:425:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:239:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:245:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:252:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    378:378:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:258:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:265:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:275:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    318:318:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    357:358:android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    352:352:android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    280:281:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:287:android.view.MenuItem setTitle(int) -> setTitle
    292:293:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    394:395:android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:299:android.view.MenuItem setVisible(boolean) -> setVisible
android.support.v7.view.menu.ActionMenuItemView -> android.support.v7.view.menu.ActionMenuItemView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(android.support.v7.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:211:void updateTextButtonVisibility() -> updateTextButtonVisibility
android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:301:void <init>(android.support.v7.view.menu.ActionMenuItemView) -> <init>
    305:308:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.view.menu.ActionMenuItemView$PopupCallback -> android.support.v7.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
android.support.v7.view.menu.BaseMenuPresenter -> android.support.v7.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    238:238:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:android.support.v7.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    233:233:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:android.support.v7.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:223:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    247:248:void setId(int) -> setId
    91:125:void updateMenuView(boolean) -> updateMenuView
android.support.v7.view.menu.BaseMenuWrapper -> android.support.v7.view.menu.BaseMenuWrapper:
    38:40:void <init>(android.content.Context,java.lang.Object) -> <init>
    43:62:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    66:82:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    87:93:void internalClear() -> internalClear
    96:109:void internalRemoveGroup(int) -> internalRemoveGroup
    112:126:void internalRemoveItem(int) -> internalRemoveItem
android.support.v7.view.menu.BaseWrapper -> android.support.v7.view.menu.BaseWrapper:
    23:25:void <init>(java.lang.Object) -> <init>
android.support.v7.view.menu.CascadingMenuPopup -> android.support.v7.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    222:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:361:void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    791:791:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    245:254:android.support.v7.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:298:void dismiss() -> dismiss
    655:662:int findIndexOfAddedMenu(android.support.v7.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:523:android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:577:android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder) -> findParentViewForSubmenu
    726:726:boolean flagActionItems() -> flagActionItems
    315:316:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:348:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:722:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    629:645:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:756:void setAnchorView(android.view.View) -> setAnchorView
    623:624:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    241:242:void setForceShowIcon(boolean) -> setForceShowIcon
    740:745:void setGravity(int) -> setGravity
    772:774:void setHorizontalOffset(int) -> setHorizontalOffset
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:785:void setShowTitle(boolean) -> setShowTitle
    778:780:void setVerticalOffset(int) -> setVerticalOffset
    259:279:void show() -> show
    369:503:void showMenu(android.support.v7.view.menu.MenuBuilder) -> showMenu
    616:619:void updateMenuView(boolean) -> updateMenuView
android.support.v7.view.menu.CascadingMenuPopup$1 -> android.support.v7.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
android.support.v7.view.menu.CascadingMenuPopup$2 -> android.support.v7.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.view.menu.CascadingMenuPopup$3 -> android.support.v7.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(android.support.v7.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
android.support.v7.view.menu.CascadingMenuPopup$3$1 -> android.support.v7.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(android.support.v7.view.menu.CascadingMenuPopup$3,android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,android.support.v7.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo -> android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:804:void <init>(android.support.v7.widget.MenuPopupWindow,android.support.v7.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
android.support.v7.view.menu.ExpandedMenuView -> android.support.v7.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.view.menu.ListMenuItemView -> android.support.v7.view.menu.ListMenuItemView:
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:142:void addContentView(android.view.View) -> addContentView
    145:150:void addContentView(android.view.View,int) -> addContentView
    350:358:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:android.support.v7.view.menu.MenuItemImpl getItemData() -> getItemData
    126:138:void initialize(android.support.v7.view.menu.MenuItemImpl,int) -> initialize
    312:317:void insertCheckBox() -> insertCheckBox
    297:301:void insertIconView() -> insertIconView
    304:309:void insertRadioButton() -> insertRadioButton
    104:122:void onFinishInflate() -> onFinishInflate
    285:294:void onMeasure(int,int) -> onMeasure
    321:321:boolean prefersCondensedTitle() -> prefersCondensedTitle
    174:216:void setCheckable(boolean) -> setCheckable
    222:235:void setChecked(boolean) -> setChecked
    153:154:void setForceShowIcon(boolean) -> setForceShowIcon
    342:346:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:281:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:255:void setShortcut(boolean,char) -> setShortcut
    238:241:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    158:165:void setTitle(java.lang.CharSequence) -> setTitle
android.support.v7.view.menu.ListMenuPresenter -> android.support.v7.view.menu.ListMenuPresenter:
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:150:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:139:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    133:134:void updateMenuView(boolean) -> updateMenuView
android.support.v7.view.menu.ListMenuPresenter$MenuAdapter -> android.support.v7.view.menu.ListMenuPresenter$MenuAdapter:
    234:236:void <init>(android.support.v7.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> findExpandedIndex
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
android.support.v7.view.menu.MenuAdapter -> android.support.v7.view.menu.MenuAdapter:
    44:50:void <init>(android.support.v7.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:android.support.v7.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:android.support.v7.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
android.support.v7.view.menu.MenuBuilder -> android.support.v7.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    229:242:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:550:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:460:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:257:void addMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> addMenuPresenter
    269:272:void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:506:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:850:void changeMenuMode() -> changeMenuMode
    610:616:void clear() -> clear
    1219:1224:void clearHeader() -> clearHeader
    1036:1048:void close(boolean) -> close
    1052:1053:void close() -> close
    1379:1379:boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:302:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    306:323:boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1375:boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:748:int findGroupIndex(int,int) -> findGroupIndex
    853:860:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:713:android.view.MenuItem findItem(int) -> findItem
    717:726:int findItemIndex(int) -> findItemIndex
    936:971:android.support.v7.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:920:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1206:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    436:436:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    836:836:android.content.Context getContext() -> getContext
    1401:1401:android.support.v7.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    785:788:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1334:1334:android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:694:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1120:void onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1109:void onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1076:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:988:boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int) -> performItemAction
    865:877:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:573:void removeGroup(int) -> removeGroup
    555:556:void removeItem(int) -> removeItem
    586:586:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:287:void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter) -> removeMenuPresenter
    406:433:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    379:403:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    440:441:void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    245:246:android.support.v7.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:634:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:647:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:517:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:677:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:665:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1290:android.support.v7.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1302:android.support.v7.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1255:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1266:android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1278:android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1314:android.support.v7.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1410:1411:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:771:void setQwertyMode(boolean) -> setQwertyMode
    818:822:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1098:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1089:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
android.support.v7.view.menu.MenuDialogHelper -> android.support.v7.view.menu.MenuDialogHelper:
    42:44:void <init>(android.support.v7.view.menu.MenuBuilder) -> <init>
    139:142:void dismiss() -> dismiss
    169:170:void onClick(android.content.DialogInterface,int) -> onClick
    151:157:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    94:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:164:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
    53:90:void show(android.os.IBinder) -> show
android.support.v7.view.menu.MenuItemImpl -> android.support.v7.view.menu.MenuItemImpl:
    137:146:void <init>(android.support.v7.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:692:void actionFormatChanged() -> actionFormatChanged
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    832:842:boolean collapseActionView() -> collapseActionView
    818:824:boolean expandActionView() -> expandActionView
    782:782:android.view.ActionProvider getActionProvider() -> getActionProvider
    764:770:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    885:885:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    788:788:android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView) -> getTitleForItemView
    899:899:java.lang.CharSequence getTooltipText() -> getTooltipText
    849:855:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    865:865:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    710:710:boolean requiresActionButton() -> requiresActionButton
    776:776:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    745:751:android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    756:759:android.support.v4.internal.view.SupportMenuItem setActionView(int) -> setActionView
    859:861:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    631:636:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    876:880:android.support.v4.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    714:719:void setIsActionButton(boolean) -> setIsActionButton
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    870:871:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    727:741:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    812:813:android.support.v4.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(android.support.v7.view.menu.SubMenuBuilder) -> setSubMenu
    793:807:android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    890:894:android.support.v4.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    722:722:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
android.support.v7.view.menu.MenuItemImpl$1 -> android.support.v7.view.menu.MenuItemImpl$1:
    800:800:void <init>(android.support.v7.view.menu.MenuItemImpl) -> <init>
    803:804:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v7.view.menu.MenuItemWrapperICS -> android.support.v7.view.menu.MenuItemWrapperICS:
    52:53:void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    313:313:boolean collapseActionView() -> collapseActionView
    385:385:android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
    308:308:boolean expandActionView() -> expandActionView
    299:303:android.view.ActionProvider getActionProvider() -> getActionProvider
    283:287:android.view.View getActionView() -> getActionView
    180:180:int getAlphabeticModifiers() -> getAlphabeticModifiers
    175:175:char getAlphabeticShortcut() -> getAlphabeticShortcut
    336:336:java.lang.CharSequence getContentDescription() -> getContentDescription
    62:62:int getGroupId() -> getGroupId
    112:112:android.graphics.drawable.Drawable getIcon() -> getIcon
    358:358:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    369:369:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    123:123:android.content.Intent getIntent() -> getIntent
    57:57:int getItemId() -> getItemId
    245:245:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    158:158:int getNumericModifiers() -> getNumericModifiers
    153:153:char getNumericShortcut() -> getNumericShortcut
    67:67:int getOrder() -> getOrder
    233:233:android.view.SubMenu getSubMenu() -> getSubMenu
    84:84:java.lang.CharSequence getTitle() -> getTitle
    95:95:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    347:347:java.lang.CharSequence getTooltipText() -> getTooltipText
    228:228:boolean hasSubMenu() -> hasSubMenu
    318:318:boolean isActionViewExpanded() -> isActionViewExpanded
    191:191:boolean isCheckable() -> isCheckable
    202:202:boolean isChecked() -> isChecked
    223:223:boolean isEnabled() -> isEnabled
    212:212:boolean isVisible() -> isVisible
    292:294:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    261:265:android.view.MenuItem setActionView(android.view.View) -> setActionView
    271:278:android.view.MenuItem setActionView(int) -> setActionView
    163:164:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    169:170:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    185:186:android.view.MenuItem setCheckable(boolean) -> setCheckable
    196:197:android.view.MenuItem setChecked(boolean) -> setChecked
    330:331:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    217:218:android.view.MenuItem setEnabled(boolean) -> setEnabled
    374:382:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    100:101:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    106:107:android.view.MenuItem setIcon(int) -> setIcon
    352:353:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    363:364:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    117:118:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    141:142:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    147:148:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    323:325:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    238:240:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    128:129:android.view.MenuItem setShortcut(char,char) -> setShortcut
    135:136:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    250:251:void setShowAsAction(int) -> setShowAsAction
    255:256:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    72:73:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    78:79:android.view.MenuItem setTitle(int) -> setTitle
    89:90:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    341:342:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    207:207:android.view.MenuItem setVisible(boolean) -> setVisible
android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    422:425:void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    439:439:boolean hasSubMenu() -> hasSubMenu
    429:429:android.view.View onCreateActionView() -> onCreateActionView
    434:434:boolean onPerformDefaultAction() -> onPerformDefaultAction
    444:445:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    458:461:void <init>(android.view.View) -> <init>
    474:474:android.view.View getWrappedView() -> getWrappedView
    470:471:void onActionViewCollapsed() -> onActionViewCollapsed
    465:466:void onActionViewExpanded() -> onActionViewExpanded
android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    404:406:void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    415:415:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    410:410:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> android.support.v7.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    391:393:void <init>(android.support.v7.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    397:397:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.view.menu.MenuItemWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB:
    39:40:void <init>(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> <init>
    44:44:android.support.v7.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> android.support.v7.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    51:53:void <init>(android.support.v7.view.menu.MenuItemWrapperJB,android.content.Context,android.view.ActionProvider) -> <init>
    67:67:boolean isVisible() -> isVisible
    83:86:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    57:57:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    62:62:boolean overridesItemVisibility() -> overridesItemVisibility
    77:79:void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v7.view.menu.MenuPopup -> android.support.v7.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    99:99:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:android.support.v7.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
android.support.v7.view.menu.MenuPopupHelper -> android.support.v7.view.menu.MenuPopupHelper:
    79:80:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:91:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:259:android.support.v7.view.menu.MenuPopup createPopup() -> createPopup
    298:301:void dismiss() -> dismiss
    156:159:android.support.v7.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:317:void onDismiss() -> onDismiss
    105:106:void setAnchorView(android.view.View) -> setAnchorView
    118:122:void setForceShowIcon(boolean) -> setForceShowIcon
    132:133:void setGravity(int) -> setGravity
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:329:void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:144:void show() -> show
    263:291:void showPopup(int,int,boolean,boolean) -> showPopup
    169:178:boolean tryShow() -> tryShow
    205:214:boolean tryShow(int,int) -> tryShow
android.support.v7.view.menu.MenuPopupHelper$1 -> android.support.v7.view.menu.MenuPopupHelper$1:
    334:334:void <init>(android.support.v7.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
android.support.v7.view.menu.MenuWrapperFactory -> android.support.v7.view.menu.MenuWrapperFactory:
    41:41:android.view.Menu wrapSupportMenu(android.content.Context,android.support.v4.internal.view.SupportMenu) -> wrapSupportMenu
    45:48:android.view.MenuItem wrapSupportMenuItem(android.content.Context,android.support.v4.internal.view.SupportMenuItem) -> wrapSupportMenuItem
    53:53:android.view.SubMenu wrapSupportSubMenu(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> wrapSupportSubMenu
android.support.v7.view.menu.MenuWrapperICS -> android.support.v7.view.menu.MenuWrapperICS:
    35:36:void <init>(android.content.Context,android.support.v4.internal.view.SupportMenu) -> <init>
    40:40:android.view.MenuItem add(java.lang.CharSequence) -> add
    45:45:android.view.MenuItem add(int) -> add
    50:50:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int,int,int,int) -> add
    82:96:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    60:60:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    65:65:android.view.SubMenu addSubMenu(int) -> addSubMenu
    70:70:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    113:115:void clear() -> clear
    154:155:void close() -> close
    139:139:android.view.MenuItem findItem(int) -> findItem
    149:149:android.view.MenuItem getItem(int) -> getItem
    134:134:boolean hasVisibleItems() -> hasVisibleItems
    164:164:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    169:169:boolean performIdentifierAction(int,int) -> performIdentifierAction
    159:159:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    107:109:void removeGroup(int) -> removeGroup
    101:103:void removeItem(int) -> removeItem
    119:120:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    129:130:void setGroupEnabled(int,boolean) -> setGroupEnabled
    124:125:void setGroupVisible(int,boolean) -> setGroupVisible
    174:175:void setQwertyMode(boolean) -> setQwertyMode
    144:144:int size() -> size
android.support.v7.view.menu.StandardMenuPopup -> android.support.v7.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    117:136:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(android.support.v7.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:295:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(android.support.v7.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:154:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
android.support.v7.view.menu.StandardMenuPopup$1 -> android.support.v7.view.menu.StandardMenuPopup$1:
    61:61:void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
android.support.v7.view.menu.StandardMenuPopup$2 -> android.support.v7.view.menu.StandardMenuPopup$2:
    80:80:void <init>(android.support.v7.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
android.support.v7.view.menu.SubMenuBuilder -> android.support.v7.view.menu.SubMenuBuilder:
    42:46:void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    89:90:boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:android.support.v7.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:80:void setCallback(android.support.v7.view.menu.MenuBuilder$Callback) -> setCallback
    151:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:102:android.view.SubMenu setIcon(int) -> setIcon
    50:51:void setQwertyMode(boolean) -> setQwertyMode
android.support.v7.view.menu.SubMenuWrapperICS -> android.support.v7.view.menu.SubMenuWrapperICS:
    38:39:void <init>(android.content.Context,android.support.v4.internal.view.SupportSubMenu) -> <init>
    78:79:void clearHeader() -> clearHeader
    95:95:android.view.MenuItem getItem() -> getItem
    43:43:android.support.v4.internal.view.SupportSubMenu getWrappedObject() -> getWrappedObject
    60:61:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    66:67:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    48:49:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    54:55:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    72:73:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    83:84:android.view.SubMenu setIcon(int) -> setIcon
    89:90:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
android.support.v7.widget.AbsActionBarView -> android.support.v7.widget.AbsActionBarView:
    52:53:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(android.support.v7.widget.AbsActionBarView,int) -> access$001
    34:34:void access$101(android.support.v7.widget.AbsActionBarView,int) -> access$101
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    256:256:int next(int,int,boolean) -> next
    73:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:135:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:110:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:270:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    185:191:void setVisibility(int) -> setVisibility
    158:174:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
android.support.v7.widget.AbsActionBarView$VisibilityAnimListener -> android.support.v7.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(android.support.v7.widget.AbsActionBarView) -> <init>
    300:301:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:296:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:288:void onAnimationStart(android.view.View) -> onAnimationStart
    279:281:android.support.v7.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
android.support.v7.widget.ActionBarBackgroundDrawable -> android.support.v7.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(android.support.v7.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
android.support.v7.widget.ActionBarContainer -> android.support.v7.widget.ActionBarContainer:
    54:55:void <init>(android.content.Context) -> <init>
    58:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    158:168:void drawableStateChanged() -> drawableStateChanged
    257:258:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    233:233:android.view.View getTabContainer() -> getTabContainer
    253:253:boolean isCollapsed(android.view.View) -> isCollapsed
    172:182:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    83:86:void onFinishInflate() -> onFinishInflate
    212:215:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    199:199:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    293:337:void onLayout(boolean,int,int,int,int) -> onLayout
    263:289:void onMeasure(int,int) -> onMeasure
    204:207:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    89:104:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    125:139:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    107:122:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    219:230:void setTabContainer(android.support.v7.widget.ScrollingTabContainerView) -> setTabContainer
    192:195:void setTransitioning(boolean) -> setTransitioning
    143:148:void setVisibility(int) -> setVisibility
    240:240:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    246:249:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    152:153:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.v7.widget.ActionBarContextView -> android.support.v7.widget.ActionBarContextView:
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    193:197:void closeMode() -> closeMode
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    161:190:void initForMode(android.support.v7.view.ActionMode) -> initForMode
    134:158:void initTitle() -> initTitle
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:203:void killMode() -> killMode
    88:93:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:368:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:350:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:98:void setContentHeight(int) -> setContentHeight
    101:113:void setCustomView(android.view.View) -> setCustomView
    121:123:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    354:354:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    207:210:boolean showOverflowMenu() -> showOverflowMenu
android.support.v7.widget.ActionBarContextView$1 -> android.support.v7.widget.ActionBarContextView$1:
    170:170:void <init>(android.support.v7.widget.ActionBarContextView,android.support.v7.view.ActionMode) -> <init>
    173:174:void onClick(android.view.View) -> onClick
android.support.v7.widget.ActionBarOverlayLayout -> android.support.v7.widget.ActionBarOverlayLayout:
    129:129:void <clinit>() -> <clinit>
    137:138:void <init>(android.content.Context) -> <init>
    141:145:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    603:605:void addActionBarHideOffset() -> addActionBarHideOffset
    264:282:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    684:685:boolean canShowOverflowMenu() -> canShowOverflowMenu
    335:335:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    738:740:void dismissPopups() -> dismissPopups
    451:460:void draw(android.graphics.Canvas) -> draw
    287:315:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    54:54:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    320:320:android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    54:54:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    325:325:android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    330:330:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    569:569:int getActionBarHideOffset() -> getActionBarHideOffset
    544:550:android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    532:532:int getNestedScrollAxes() -> getNestedScrollAxes
    627:628:java.lang.CharSequence getTitle() -> getTitle
    580:585:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    708:709:boolean hideOverflowMenu() -> hideOverflowMenu
    148:158:void init(android.content.Context) -> init
    633:645:void initFeature(int) -> initFeature
    193:193:boolean isInOverlayMode() -> isInOverlayMode
    696:697:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    690:691:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    223:226:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    162:164:void onDetachedFromWindow() -> onDetachedFromWindow
    425:447:void onLayout(boolean,int,int,int,int) -> onLayout
    340:421:void onMeasure(int,int) -> onMeasure
    508:509:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    527:527:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    523:523:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    488:490:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    477:483:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    469:470:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    494:504:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    230:251:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    255:260:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    593:595:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    588:590:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    536:541:void pullChildren() -> pullChildren
    598:600:void removeActionBarHideOffset() -> removeActionBarHideOffset
    573:577:void setActionBarHideOffset(int) -> setActionBarHideOffset
    167:178:void setActionBarVisibilityCallback(android.support.v7.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    197:198:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    555:562:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    666:668:void setIcon(int) -> setIcon
    672:674:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    678:680:void setLogo(int) -> setLogo
    720:722:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    714:716:void setMenuPrepared() -> setMenuPrepared
    181:190:void setOverlayMode(boolean) -> setOverlayMode
    219:219:void setShowingForActionMode(boolean) -> setShowingForActionMode
    650:650:void setUiOptions(int) -> setUiOptions
    615:617:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    621:623:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    464:464:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    608:610:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    702:703:boolean showOverflowMenu() -> showOverflowMenu
android.support.v7.widget.ActionBarOverlayLayout$1 -> android.support.v7.widget.ActionBarOverlayLayout$1:
    96:96:void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    105:107:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    99:101:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.ActionBarOverlayLayout$2 -> android.support.v7.widget.ActionBarOverlayLayout$2:
    110:110:void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    113:116:void run() -> run
android.support.v7.widget.ActionBarOverlayLayout$3 -> android.support.v7.widget.ActionBarOverlayLayout$3:
    119:119:void <init>(android.support.v7.widget.ActionBarOverlayLayout) -> <init>
    122:126:void run() -> run
android.support.v7.widget.ActionBarOverlayLayout$LayoutParams -> android.support.v7.widget.ActionBarOverlayLayout$LayoutParams:
    744:745:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    748:749:void <init>(int,int) -> <init>
    752:753:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.widget.ActionMenuPresenter -> android.support.v7.widget.ActionMenuPresenter:
    88:89:void <init>(android.content.Context) -> <init>
    53:53:android.support.v7.view.menu.MenuBuilder access$000(android.support.v7.widget.ActionMenuPresenter) -> access$000
    53:53:android.support.v7.view.menu.MenuBuilder access$100(android.support.v7.widget.ActionMenuPresenter) -> access$100
    53:53:android.support.v7.view.menu.MenuView access$200(android.support.v7.widget.ActionMenuPresenter) -> access$200
    53:53:android.support.v7.view.menu.MenuBuilder access$300(android.support.v7.widget.ActionMenuPresenter) -> access$300
    53:53:android.support.v7.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter) -> access$400
    53:53:android.support.v7.view.menu.MenuView access$500(android.support.v7.widget.ActionMenuPresenter) -> access$500
    211:221:void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView) -> bindItemView
    381:383:boolean dismissPopupMenus() -> dismissPopupMenus
    279:280:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    321:332:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    421:557:boolean flagActionItems() -> flagActionItems
    195:206:android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    185:190:android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    175:180:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    362:373:boolean hideOverflowMenu() -> hideOverflowMenu
    392:396:boolean hideSubMenus() -> hideSubMenus
    93:134:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    407:407:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    403:403:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    562:564:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    137:143:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    285:317:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    162:163:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    600:602:void setMenuView(android.support.v7.widget.ActionMenuView) -> setMenuView
    166:172:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    152:154:void setReserveOverflow(boolean) -> setReserveOverflow
    225:225:boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl) -> shouldIncludeItem
    340:353:boolean showOverflowMenu() -> showOverflowMenu
    230:275:void updateMenuView(boolean) -> updateMenuView
android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu -> android.support.v7.widget.ActionMenuPresenter$ActionButtonSubmenu:
    747:757:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.SubMenuBuilder,android.view.View) -> <init>
    761:765:void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback -> android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    814:815:void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    819:819:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable -> android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable:
    796:798:void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    802:810:void run() -> run
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton:
    642:681:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context) -> <init>
    701:701:boolean needsDividerAfter() -> needsDividerAfter
    696:696:boolean needsDividerBefore() -> needsDividerBefore
    685:691:boolean performClick() -> performClick
    706:723:boolean setFrame(int,int,int,int) -> setFrame
android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 -> android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1:
    652:652:void <init>(android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,android.support.v7.widget.ActionMenuPresenter) -> <init>
    655:659:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    664:665:boolean onForwardingStarted() -> onForwardingStarted
    673:678:boolean onForwardingStopped() -> onForwardingStopped
android.support.v7.widget.ActionMenuPresenter$OverflowPopup -> android.support.v7.widget.ActionMenuPresenter$OverflowPopup:
    729:733:void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    737:743:void onDismiss() -> onDismiss
android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback -> android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback:
    769:770:void <init>(android.support.v7.widget.ActionMenuPresenter) -> <init>
    783:790:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    774:778:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.widget.ActionMenuView -> android.support.v7.widget.ActionMenuView:
    76:77:void <init>(android.content.Context) -> <init>
    80:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    48:48:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:640:void initialize(android.support.v7.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(android.support.v7.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    404:434:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    439:540:void onLayout(boolean,int,int,int,int) -> onLayout
    147:174:void onMeasure(int,int) -> onMeasure
    178:387:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:android.support.v7.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:142:void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    97:105:void setPopupTheme(int) -> setPopupTheme
    122:124:void setPresenter(android.support.v7.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback -> android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder) -> onOpenSubMenu
android.support.v7.widget.ActionMenuView$LayoutParams -> android.support.v7.widget.ActionMenuView$LayoutParams:
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(android.support.v7.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
android.support.v7.widget.ActionMenuView$MenuBuilderCallback -> android.support.v7.widget.ActionMenuView$MenuBuilderCallback:
    775:776:void <init>(android.support.v7.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.widget.ActivityChooserView$InnerLayout -> android.support.v7.widget.ActivityChooserView$InnerLayout:
    864:864:void <clinit>() -> <clinit>
    869:873:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
android.support.v7.widget.AdapterHelper -> android.support.v7.widget.AdapterHelper:
    72:73:void <init>(android.support.v7.widget.AdapterHelper$Callback) -> <init>
    75:79:void <init>(android.support.v7.widget.AdapterHelper$Callback,boolean) -> <init>
    432:433:void applyAdd(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:232:void dispatchAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:android.support.v7.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    540:544:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    528:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:457:void postponeAndUpdateViewHolders(android.support.v7.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(android.support.v7.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
android.support.v7.widget.AdapterHelper$UpdateOp -> android.support.v7.widget.AdapterHelper$UpdateOp:
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:661:java.lang.String cmdToString() -> cmdToString
    681:685:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
android.support.v7.widget.AlertDialogLayout -> android.support.v7.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
android.support.v7.widget.AppCompatAutoCompleteTextView -> android.support.v7.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    199:201:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:94:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatBackgroundHelper -> android.support.v7.widget.AppCompatBackgroundHelper:
    41:44:void <init>(android.view.View) -> <init>
    173:192:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:135:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:70:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:88:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:81:void onSetBackgroundResource(int) -> onSetBackgroundResource
    138:148:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:97:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:111:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    151:163:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
android.support.v7.widget.AppCompatButton -> android.support.v7.widget.AppCompatButton:
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    155:162:void drawableStateChanged() -> drawableStateChanged
    321:328:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    305:312:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    289:296:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    337:344:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    271:280:int getAutoSizeTextType() -> getAutoSizeTextType
    121:122:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    149:150:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    174:176:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    180:182:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    186:190:void onLayout(boolean,int,int,int,int) -> onLayout
    205:209:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    237:246:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    255:262:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    218:225:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    91:95:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    83:87:void setBackgroundResource(int) -> setBackgroundResource
    368:370:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    357:360:void setSupportAllCaps(boolean) -> setSupportAllCaps
    106:109:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    134:137:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    166:170:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    194:201:void setTextSize(int,float) -> setTextSize
android.support.v7.widget.AppCompatCheckBox -> android.support.v7.widget.AppCompatCheckBox:
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    83:85:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    109:110:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    134:135:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    70:74:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    78:79:void setButtonDrawable(int) -> setButtonDrawable
    96:99:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    121:124:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
android.support.v7.widget.AppCompatCheckedTextView -> android.support.v7.widget.AppCompatCheckedTextView:
    40:40:void <clinit>() -> <clinit>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:86:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:70:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    100:102:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:78:void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatCompoundButtonHelper -> android.support.v7.widget.AppCompatCompoundButtonHelper:
    51:53:void <init>(android.widget.CompoundButton) -> <init>
    115:133:void applyButtonTint() -> applyButtonTint
    136:144:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    90:90:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    101:101:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    56:78:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    105:112:void onSetButtonDrawable() -> onSetButtonDrawable
    83:87:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    94:98:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
android.support.v7.widget.AppCompatDrawableManager -> android.support.v7.widget.AppCompatDrawableManager:
    78:174:void <clinit>() -> <clinit>
    69:800:void <init>() -> <init>
    489:493:void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate) -> addDelegate
    415:414:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    568:577:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    502:507:boolean arrayContains(int[],int) -> arrayContains
    746:756:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    586:586:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    596:621:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    226:226:long createCacheKey(android.util.TypedValue) -> createCacheKey
    590:590:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    580:580:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    231:258:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    625:667:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    717:718:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    89:88:android.support.v7.widget.AppCompatDrawableManager get() -> get
    394:393:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    191:191:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    196:195:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    727:726:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    522:521:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    559:563:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    511:517:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    100:105:void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager) -> installDefaultInflateDelegates
    762:763:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    308:389:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    218:217:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    430:429:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    739:743:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    263:304:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    693:713:void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]) -> tintDrawable
    442:485:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$AsldcInflateDelegate:
    801:801:void <init>() -> <init>
    806:810:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate:
    784:785:void <init>() -> <init>
    791:795:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache -> android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache:
    673:674:void <init>(int) -> <init>
    685:688:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    677:677:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    681:681:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate -> android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate:
    767:768:void <init>() -> <init>
    774:778:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
android.support.v7.widget.AppCompatEditText -> android.support.v7.widget.AppCompatEditText:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    55:55:java.lang.CharSequence getText() -> getText
    85:90:android.text.Editable getText() -> getText
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    196:198:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatHintHelper -> android.support.v7.widget.AppCompatHintHelper:
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
android.support.v7.widget.AppCompatImageButton -> android.support.v7.widget.AppCompatImageButton:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:248:void drawableStateChanged() -> drawableStateChanged
    152:153:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:208:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:236:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:126:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:118:void setBackgroundResource(int) -> setBackgroundResource
    98:102:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:94:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:86:void setImageResource(int) -> setImageResource
    106:110:void setImageURI(android.net.Uri) -> setImageURI
    137:140:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:168:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:195:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:223:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
android.support.v7.widget.AppCompatImageHelper -> android.support.v7.widget.AppCompatImageHelper:
    45:47:void <init>(android.widget.ImageView) -> <init>
    196:215:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:158:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:106:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:80:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    85:96:void setImageResource(int) -> setImageResource
    110:116:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:130:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    174:186:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
android.support.v7.widget.AppCompatImageView -> android.support.v7.widget.AppCompatImageView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:259:void drawableStateChanged() -> drawableStateChanged
    162:163:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:191:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:219:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:247:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:136:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:128:void setBackgroundResource(int) -> setBackgroundResource
    108:112:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:104:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:96:void setImageResource(int) -> setImageResource
    116:120:void setImageURI(android.net.Uri) -> setImageURI
    147:150:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:206:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:234:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
android.support.v7.widget.AppCompatMultiAutoCompleteTextView -> android.support.v7.widget.AppCompatMultiAutoCompleteTextView:
    55:55:void <clinit>() -> <clinit>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    90:91:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
android.support.v7.widget.AppCompatPopupWindow -> android.support.v7.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
android.support.v7.widget.AppCompatProgressBarHelper -> android.support.v7.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTime() -> getSampleTime
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
android.support.v7.widget.AppCompatRadioButton -> android.support.v7.widget.AppCompatRadioButton:
    60:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:88:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    112:113:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    137:138:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    73:77:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    81:82:void setButtonDrawable(int) -> setButtonDrawable
    99:102:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    124:127:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
android.support.v7.widget.AppCompatRatingBar -> android.support.v7.widget.AppCompatRatingBar:
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:55:void onMeasure(int,int) -> onMeasure
android.support.v7.widget.AppCompatSeekBar -> android.support.v7.widget.AppCompatSeekBar:
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:63:void drawableStateChanged() -> drawableStateChanged
    67:69:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:54:void onDraw(android.graphics.Canvas) -> onDraw
android.support.v7.widget.AppCompatSeekBarHelper -> android.support.v7.widget.AppCompatSeekBarHelper:
    42:44:void <init>(android.widget.SeekBar) -> <init>
    125:142:void applyTickMarkTint() -> applyTickMarkTint
    162:182:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    151:156:void drawableStateChanged() -> drawableStateChanged
    145:148:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:74:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:93:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
android.support.v7.widget.AppCompatSpinner -> android.support.v7.widget.AppCompatSpinner:
    71:71:void <clinit>() -> <clinit>
    133:134:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:149:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:168:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    196:283:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    543:583:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    536:540:void drawableStateChanged() -> drawableStateChanged
    358:363:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    333:338:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    377:382:int getDropDownWidth() -> getDropDownWidth
    314:319:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    290:295:android.content.Context getPopupContext() -> getPopupContext
    457:457:java.lang.CharSequence getPrompt() -> getPrompt
    501:502:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    530:531:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    404:409:void onDetachedFromWindow() -> onDetachedFromWindow
    421:430:void onMeasure(int,int) -> onMeasure
    413:416:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    434:443:boolean performClick() -> performClick
    69:69:void setAdapter(android.widget.Adapter) -> setAdapter
    389:400:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    470:474:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    462:466:void setBackgroundResource(int) -> setBackgroundResource
    343:348:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    324:329:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    368:373:void setDropDownWidth(int) -> setDropDownWidth
    300:305:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    309:310:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    448:453:void setPrompt(java.lang.CharSequence) -> setPrompt
    486:489:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    515:518:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
android.support.v7.widget.AppCompatSpinner$1 -> android.support.v7.widget.AppCompatSpinner$1:
    246:246:void <init>(android.support.v7.widget.AppCompatSpinner,android.view.View,android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    249:249:android.support.v7.view.menu.ShowableListMenu getPopup() -> getPopup
    254:257:boolean onForwardingStarted() -> onForwardingStarted
android.support.v7.widget.AppCompatSpinner$DropDownAdapter -> android.support.v7.widget.AppCompatSpinner$DropDownAdapter:
    604:626:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    679:683:boolean areAllItemsEnabled() -> areAllItemsEnabled
    630:630:int getCount() -> getCount
    650:651:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    635:635:java.lang.Object getItem(int) -> getItem
    640:640:long getItemId(int) -> getItemId
    703:703:int getItemViewType(int) -> getItemViewType
    645:645:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    708:708:int getViewTypeCount() -> getViewTypeCount
    656:656:boolean hasStableIds() -> hasStableIds
    713:713:boolean isEmpty() -> isEmpty
    693:697:boolean isEnabled(int) -> isEnabled
    661:664:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    668:671:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
android.support.v7.widget.AppCompatSpinner$DropdownPopup -> android.support.v7.widget.AppCompatSpinner$DropdownPopup:
    722:740:void <init>(android.support.v7.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    717:717:void access$001(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> access$001
    758:792:void computeContentWidth() -> computeContentWidth
    749:749:java.lang.CharSequence getHintText() -> getHintText
    849:849:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    744:746:void setAdapter(android.widget.ListAdapter) -> setAdapter
    754:755:void setPromptText(java.lang.CharSequence) -> setPromptText
    796:843:void show() -> show
android.support.v7.widget.AppCompatSpinner$DropdownPopup$1 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$1:
    729:729:void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.support.v7.widget.AppCompatSpinner) -> <init>
    732:738:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.AppCompatSpinner$DropdownPopup$2 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$2:
    818:818:void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup) -> <init>
    821:830:void onGlobalLayout() -> onGlobalLayout
android.support.v7.widget.AppCompatSpinner$DropdownPopup$3 -> android.support.v7.widget.AppCompatSpinner$DropdownPopup$3:
    833:833:void <init>(android.support.v7.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    836:840:void onDismiss() -> onDismiss
android.support.v7.widget.AppCompatTextHelper -> android.support.v7.widget.AppCompatTextHelper:
    64:67:void <init>(android.widget.TextView) -> <init>
    370:373:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo) -> applyCompoundDrawableTint
    352:367:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    408:409:void autoSizeText() -> autoSizeText
    377:384:android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int) -> createTintInfo
    453:453:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    449:449:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    445:445:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    457:457:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    441:441:int getAutoSizeTextType() -> getAutoSizeTextType
    414:414:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    71:239:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    304:311:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    390:393:void onLayout(boolean,int,int,int,int) -> onLayout
    314:345:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    348:349:void setAllCaps(boolean) -> setAllCaps
    430:432:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    436:437:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    422:423:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    398:403:void setTextSize(int,float) -> setTextSize
    418:419:void setTextSizeInternal(int,float) -> setTextSizeInternal
    242:279:void updateTypefaceAndStyle(android.content.Context,android.support.v7.widget.TintTypedArray) -> updateTypefaceAndStyle
android.support.v7.widget.AppCompatTextHelper$1 -> android.support.v7.widget.AppCompatTextHelper$1:
    252:252:void <init>(android.support.v7.widget.AppCompatTextHelper,java.lang.ref.WeakReference) -> <init>
    261:261:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    255:256:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
android.support.v7.widget.AppCompatTextView -> android.support.v7.widget.AppCompatTextView:
    79:80:void <init>(android.content.Context) -> <init>
    83:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:95:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    464:473:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    179:186:void drawableStateChanged() -> drawableStateChanged
    349:356:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    330:337:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    311:318:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    368:375:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    290:299:int getAutoSizeTextType() -> getAutoSizeTextType
    406:406:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    411:411:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    137:138:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    165:166:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    477:478:java.lang.CharSequence getText() -> getText
    437:437:android.support.v4.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    380:380:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    190:194:void onLayout(boolean,int,int,int,int) -> onLayout
    500:502:void onMeasure(int,int) -> onMeasure
    209:213:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    249:258:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    271:278:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    226:233:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    107:111:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    99:103:void setBackgroundResource(int) -> setBackgroundResource
    425:427:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    386:391:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    396:402:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    416:417:void setLineHeight(int) -> setLineHeight
    460:461:void setPrecomputedText(android.support.v4.text.PrecomputedTextCompat) -> setPrecomputedText
    122:125:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    150:153:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    171:175:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    494:496:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    447:448:void setTextMetricsParamsCompat(android.support.v4.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    198:205:void setTextSize(int,float) -> setTextSize
android.support.v7.widget.AppCompatTextViewAutoSizeHelper -> android.support.v7.widget.AppCompatTextViewAutoSizeHelper:
    61:70:void <clinit>() -> <clinit>
    99:102:void <init>(android.widget.TextView) -> <init>
    547:582:void autoSizeText() -> autoSizeText
    447:471:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:591:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    711:727:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    733:755:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    642:644:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    404:404:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    388:388:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    372:372:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    417:417:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    358:358:int getAutoSizeTextType() -> getAutoSizeTextType
    786:799:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    764:776:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    811:811:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    105:180:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    265:281:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    308:338:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    198:228:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:635:void setRawTextSize(float) -> setRawTextSize
    596:601:void setTextSizeInternal(int,float) -> setTextSizeInternal
    510:537:boolean setupAutoSizeText() -> setupAutoSizeText
    421:431:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    434:442:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    666:703:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    820:820:boolean supportsAutoSizeText() -> supportsAutoSizeText
    485:486:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
android.support.v7.widget.ButtonBarLayout -> android.support.v7.widget.ButtonBarLayout:
    50:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:150:int getMinimumHeight() -> getMinimumHeight
    140:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    171:171:boolean isStacked() -> isStacked
    68:137:void onMeasure(int,int) -> onMeasure
    57:64:void setAllowStacking(boolean) -> setAllowStacking
    154:168:void setStacked(boolean) -> setStacked
android.support.v7.widget.CardView -> android.support.v7.widget.CardView:
    81:93:void <clinit>() -> <clinit>
    113:114:void <init>(android.content.Context) -> <init>
    117:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    121:164:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(android.support.v7.widget.CardView,int,int,int,int) -> access$001
    79:79:void access$101(android.support.v7.widget.CardView,int) -> access$101
    79:79:void access$201(android.support.v7.widget.CardView,int) -> access$201
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
android.support.v7.widget.CardView$1 -> android.support.v7.widget.CardView$1:
    447:447:void <init>(android.support.v7.widget.CardView) -> <init>
    485:485:android.graphics.drawable.Drawable getCardBackground() -> getCardBackground
    490:490:android.view.View getCardView() -> getCardView
    463:463:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    458:458:boolean getUseCompatPadding() -> getUseCompatPadding
    452:454:void setCardBackground(android.graphics.drawable.Drawable) -> setCardBackground
    475:481:void setMinWidthHeightInternal(int,int) -> setMinWidthHeightInternal
    468:471:void setShadowPadding(int,int,int,int) -> setShadowPadding
android.support.v7.widget.CardViewApi17Impl -> android.support.v7.widget.CardViewApi17Impl:
    25:25:void <init>() -> <init>
    29:37:void initStatic() -> initStatic
android.support.v7.widget.CardViewApi17Impl$1 -> android.support.v7.widget.CardViewApi17Impl$1:
    30:30:void <init>(android.support.v7.widget.CardViewApi17Impl) -> <init>
    34:35:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
android.support.v7.widget.CardViewApi21Impl -> android.support.v7.widget.CardViewApi21Impl:
    26:26:void <init>() -> <init>
    118:118:android.content.res.ColorStateList getBackgroundColor(android.support.v7.widget.CardViewDelegate) -> getBackgroundColor
    122:122:android.support.v7.widget.RoundRectDrawable getCardBackground(android.support.v7.widget.CardViewDelegate) -> getCardBackground
    83:83:float getElevation(android.support.v7.widget.CardViewDelegate) -> getElevation
    58:58:float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> getMaxElevation
    68:68:float getMinHeight(android.support.v7.widget.CardViewDelegate) -> getMinHeight
    63:63:float getMinWidth(android.support.v7.widget.CardViewDelegate) -> getMinWidth
    73:73:float getRadius(android.support.v7.widget.CardViewDelegate) -> getRadius
    47:47:void initStatic() -> initStatic
    31:38:void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    103:104:void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> onCompatPaddingChanged
    108:109:void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    113:114:void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    78:79:void setElevation(android.support.v7.widget.CardViewDelegate,float) -> setElevation
    51:54:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> setMaxElevation
    42:43:void setRadius(android.support.v7.widget.CardViewDelegate,float) -> setRadius
    88:99:void updatePadding(android.support.v7.widget.CardViewDelegate) -> updatePadding
android.support.v7.widget.CardViewBaseImpl -> android.support.v7.widget.CardViewBaseImpl:
    27:29:void <init>() -> <init>
    93:93:android.support.v7.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float) -> createBackground
    125:125:android.content.res.ColorStateList getBackgroundColor(android.support.v7.widget.CardViewDelegate) -> getBackgroundColor
    146:146:float getElevation(android.support.v7.widget.CardViewDelegate) -> getElevation
    157:157:float getMaxElevation(android.support.v7.widget.CardViewDelegate) -> getMaxElevation
    167:167:float getMinHeight(android.support.v7.widget.CardViewDelegate) -> getMinHeight
    162:162:float getMinWidth(android.support.v7.widget.CardViewDelegate) -> getMinWidth
    136:136:float getRadius(android.support.v7.widget.CardViewDelegate) -> getRadius
    171:171:android.support.v7.widget.RoundRectDrawableWithShadow getShadowBackground(android.support.v7.widget.CardViewDelegate) -> getShadowBackground
    37:78:void initStatic() -> initStatic
    83:88:void initialize(android.support.v7.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> initialize
    110:110:void onCompatPaddingChanged(android.support.v7.widget.CardViewDelegate) -> onCompatPaddingChanged
    114:116:void onPreventCornerOverlapChanged(android.support.v7.widget.CardViewDelegate) -> onPreventCornerOverlapChanged
    120:121:void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList) -> setBackgroundColor
    141:142:void setElevation(android.support.v7.widget.CardViewDelegate,float) -> setElevation
    151:153:void setMaxElevation(android.support.v7.widget.CardViewDelegate,float) -> setMaxElevation
    130:132:void setRadius(android.support.v7.widget.CardViewDelegate,float) -> setRadius
    99:105:void updatePadding(android.support.v7.widget.CardViewDelegate) -> updatePadding
android.support.v7.widget.CardViewBaseImpl$1 -> android.support.v7.widget.CardViewBaseImpl$1:
    38:38:void <init>(android.support.v7.widget.CardViewBaseImpl) -> <init>
    42:76:void drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint) -> drawRoundRect
android.support.v7.widget.ChildHelper -> android.support.v7.widget.ChildHelper:
    48:52:void <init>(android.support.v7.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:330:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:352:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
android.support.v7.widget.ChildHelper$Bucket -> android.support.v7.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:509:java.lang.String toString() -> toString
android.support.v7.widget.ContentFrameLayout -> android.support.v7.widget.ContentFrameLayout:
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:77:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:210:void onAttachedToWindow() -> onAttachedToWindow
    214:218:void onDetachedFromWindow() -> onDetachedFromWindow
    99:172:void onMeasure(int,int) -> onMeasure
    80:81:void setAttachListener(android.support.v7.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
android.support.v7.widget.DefaultItemAnimator -> android.support.v7.widget.DefaultItemAnimator:
    38:70:void <init>() -> <init>
    222:225:boolean animateAdd(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAdd
    229:252:void animateAddImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateAddImpl
    321:344:boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:397:void animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:274:boolean animateMove(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:316:void animateMoveImpl(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:195:boolean animateRemove(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemove
    199:218:void animateRemoveImpl(android.support.v7.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:644:void cancelAll(java.util.List) -> cancelAll
    550:553:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:519:void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    400:408:void endChangeAnimation(java.util.List,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:417:void endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    419:426:boolean endChangeAnimationIfNecessary(android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.support.v7.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:527:void resetAnimation(android.support.v7.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:189:void runPendingAnimations() -> runPendingAnimations
android.support.v7.widget.DefaultItemAnimator$1 -> android.support.v7.widget.DefaultItemAnimator$1:
    121:121:void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
android.support.v7.widget.DefaultItemAnimator$2 -> android.support.v7.widget.DefaultItemAnimator$2:
    145:145:void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
android.support.v7.widget.DefaultItemAnimator$3 -> android.support.v7.widget.DefaultItemAnimator$3:
    168:168:void <init>(android.support.v7.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
android.support.v7.widget.DefaultItemAnimator$4 -> android.support.v7.widget.DefaultItemAnimator$4:
    203:203:void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v7.widget.DefaultItemAnimator$5 -> android.support.v7.widget.DefaultItemAnimator$5:
    233:233:void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v7.widget.DefaultItemAnimator$6 -> android.support.v7.widget.DefaultItemAnimator$6:
    292:292:void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v7.widget.DefaultItemAnimator$7 -> android.support.v7.widget.DefaultItemAnimator$7:
    358:358:void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v7.widget.DefaultItemAnimator$8 -> android.support.v7.widget.DefaultItemAnimator$8:
    380:380:void <init>(android.support.v7.widget.DefaultItemAnimator,android.support.v7.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v7.widget.DefaultItemAnimator$ChangeInfo -> android.support.v7.widget.DefaultItemAnimator$ChangeInfo:
    73:76:void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
android.support.v7.widget.DefaultItemAnimator$MoveInfo -> android.support.v7.widget.DefaultItemAnimator$MoveInfo:
    61:67:void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
android.support.v7.widget.DialogTitle -> android.support.v7.widget.DialogTitle:
    43:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:52:void <init>(android.content.Context) -> <init>
    56:83:void onMeasure(int,int) -> onMeasure
    91:93:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
android.support.v7.widget.DrawableUtils -> android.support.v7.widget.DrawableUtils:
    46:60:void <clinit>() -> <clinit>
    129:163:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    118:122:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    171:181:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    69:109:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    187:188:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
android.support.v7.widget.DropDownListView -> android.support.v7.widget.DropDownListView:
    118:128:void <init>(android.content.Context,boolean) -> <init>
    629:643:void clearPressedItem() -> clearPressedItem
    542:544:void clickPressedItem(android.view.View,int) -> clickPressedItem
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:572:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    290:369:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:473:void onDetachedFromWindow() -> onDetachedFromWindow
    482:534:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:466:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:626:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:601:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:581:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:555:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:690:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:376:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:562:void updateSelectorStateCompat() -> updateSelectorStateCompat
android.support.v7.widget.DropDownListView$GateKeeperDrawable -> android.support.v7.widget.DropDownListView$GateKeeperDrawable:
    382:384:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:403:void draw(android.graphics.Canvas) -> draw
    387:388:void setEnabled(boolean) -> setEnabled
    407:410:void setHotspot(float,float) -> setHotspot
    414:417:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:395:boolean setState(int[]) -> setState
    421:424:boolean setVisible(boolean,boolean) -> setVisible
android.support.v7.widget.DropDownListView$ResolveHoverRunnable -> android.support.v7.widget.DropDownListView$ResolveHoverRunnable:
    700:701:void <init>(android.support.v7.widget.DropDownListView) -> <init>
    711:713:void cancel() -> cancel
    716:717:void post() -> post
    706:708:void run() -> run
android.support.v7.widget.FastScroller -> android.support.v7.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    141:161:void <init>(android.support.v7.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    267:268:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    325:338:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    300:322:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    551:553:int[] getHorizontalRange() -> getHorizontalRange
    542:544:int[] getVerticalRange() -> getVerticalRange
    253:264:void hide(int) -> hide
    470:484:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    513:513:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    505:505:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    277:286:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    390:413:boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    452:452:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    418:449:void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    271:273:void resetHideDelay(int) -> resetHideDelay
    488:499:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    233:245:void show() -> show
    348:384:void updateScrollPosition(int,int) -> updateScrollPosition
    455:467:void verticalScrollTo(float) -> verticalScrollTo
android.support.v7.widget.FastScroller$1 -> android.support.v7.widget.FastScroller$1:
    123:123:void <init>(android.support.v7.widget.FastScroller) -> <init>
    126:127:void run() -> run
android.support.v7.widget.FastScroller$2 -> android.support.v7.widget.FastScroller$2:
    130:130:void <init>(android.support.v7.widget.FastScroller) -> <init>
    133:135:void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
android.support.v7.widget.FastScroller$AnimatorListener -> android.support.v7.widget.FastScroller$AnimatorListener:
    560:561:void <init>(android.support.v7.widget.FastScroller) -> <init>
    581:582:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    566:577:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.FastScroller$AnimatorUpdater -> android.support.v7.widget.FastScroller$AnimatorUpdater:
    586:587:void <init>(android.support.v7.widget.FastScroller) -> <init>
    591:595:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v7.widget.FitWindowsFrameLayout -> android.support.v7.widget.FitWindowsFrameLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.widget.FitWindowsLinearLayout -> android.support.v7.widget.FitWindowsLinearLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(android.support.v7.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
android.support.v7.widget.ForwardingListener -> android.support.v7.widget.ForwardingListener:
    68:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:232:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:262:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
android.support.v7.widget.ForwardingListener$DisallowIntercept -> android.support.v7.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
android.support.v7.widget.ForwardingListener$TriggerLongPress -> android.support.v7.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(android.support.v7.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
android.support.v7.widget.GapWorker -> android.support.v7.widget.GapWorker:
    31:188:void <clinit>() -> <clinit>
    29:63:void <init>() -> <init>
    161:162:void add(android.support.v7.widget.RecyclerView) -> add
    215:260:void buildTaskList() -> buildTaskList
    342:351:void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    354:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    263:272:boolean isPrefetchPositionAttached(android.support.v7.widget.RecyclerView,int) -> isPrefetchPositionAttached
    175:186:void postFromTraversal(android.support.v7.widget.RecyclerView,int,int) -> postFromTraversal
    365:367:void prefetch(long) -> prefetch
    310:339:void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    277:303:android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    165:169:void remove(android.support.v7.widget.RecyclerView) -> remove
    372:402:void run() -> run
android.support.v7.widget.GapWorker$1 -> android.support.v7.widget.GapWorker$1:
    188:188:void <init>() -> <init>
    188:188:int compare(java.lang.Object,java.lang.Object) -> compare
    192:209:int compare(android.support.v7.widget.GapWorker$Task,android.support.v7.widget.GapWorker$Task) -> compare
android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl -> android.support.v7.widget.GapWorker$LayoutPrefetchRegistryImpl:
    63:63:void <init>() -> <init>
    110:111:void addPosition(int,int) -> addPosition
    150:154:void clearPrefetchPositions() -> clearPrefetchPositions
    77:106:void collectPrefetchPositionsFromView(android.support.v7.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    137:143:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    72:74:void setPrefetchVector(int,int) -> setPrefetchVector
android.support.v7.widget.GapWorker$Task -> android.support.v7.widget.GapWorker$Task:
    37:37:void <init>() -> <init>
    45:50:void clear() -> clear
android.support.v7.widget.GridLayoutManager -> android.support.v7.widget.GridLayoutManager:
    72:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    84:86:void <init>(android.content.Context,int) -> <init>
    771:788:void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    190:197:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    310:311:void calculateItemBorders(int) -> calculateItemBorders
    321:340:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    252:252:boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    185:187:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    511:521:void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    387:412:void ensureAnchorIsInCorrectSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    364:367:void ensureViewSet() -> ensureViewSet
    417:446:android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    227:231:android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    243:246:android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    132:140:int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    118:126:int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    344:348:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    797:797:int getSpanCount() -> getSpanCount
    451:463:int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanGroupIndex
    467:484:int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanIndex
    488:505:int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int) -> getSpanSize
    746:749:void guessMeasurement(float,int) -> guessMeasurement
    526:700:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    712:733:void measureChild(android.view.View,int,boolean) -> measureChild
    753:763:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    355:361:void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    995:1112:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    146:164:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    201:202:void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    206:207:void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    222:223:void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    211:212:void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    217:218:void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    168:176:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    180:182:void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    372:374:int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    380:382:int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    286:304:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    810:815:void setSpanCount(int) -> setSpanCount
    107:108:void setStackFromEnd(boolean) -> setStackFromEnd
    1117:1117:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    276:282:void updateMeasurements() -> updateMeasurements
android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup -> android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1123:1123:void <init>() -> <init>
    1132:1132:int getSpanIndex(int,int) -> getSpanIndex
    1127:1127:int getSpanSize(int) -> getSpanSize
android.support.v7.widget.GridLayoutManager$LayoutParams -> android.support.v7.widget.GridLayoutManager$LayoutParams:
    1155:1156:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1159:1160:void <init>(int,int) -> <init>
    1163:1164:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1167:1168:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1189:1189:int getSpanIndex() -> getSpanIndex
    1199:1199:int getSpanSize() -> getSpanSize
android.support.v7.widget.GridLayoutManager$SpanSizeLookup -> android.support.v7.widget.GridLayoutManager$SpanSizeLookup:
    830:834:void <init>() -> <init>
    873:882:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    970:988:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    860:861:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
android.support.v7.widget.LayoutState -> android.support.v7.widget.LayoutState:
    25:74:void <init>() -> <init>
    90:90:boolean hasMore(android.support.v7.widget.RecyclerView$State) -> hasMore
    100:102:android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> next
    107:107:java.lang.String toString() -> toString
android.support.v7.widget.LinearLayoutCompat -> android.support.v7.widget.LinearLayoutCompat:
    145:146:void <init>(android.content.Context) -> <init>
    149:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    153:185:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1751:1751:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    322:360:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    295:319:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    363:366:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    369:372:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1317:1336:void forceUniformHeight(int,int) -> forceUniformHeight
    895:914:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1734:1739:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1721:1721:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1744:1744:android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    423:428:int getBaseline() -> getBaseline
    480:480:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1347:1347:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    221:221:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    268:268:int getDividerPadding() -> getDividerPadding
    278:278:int getDividerWidth() -> getDividerWidth
    1700:1700:int getGravity() -> getGravity
    1389:1389:int getLocationOffset(android.view.View) -> getLocationOffset
    1401:1401:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1667:1667:int getOrientation() -> getOrientation
    212:212:int getShowDividers() -> getShowDividers
    505:505:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    518:518:int getVirtualChildCount() -> getVirtualChildCount
    529:529:float getWeightSum() -> getWeightSum
    566:580:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1521:1642:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1426:1506:void layoutVertical(int,int,int,int) -> layoutVertical
    1377:1379:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    928:1311:void measureHorizontal(int,int) -> measureHorizontal
    1358:1358:int measureNullChild(int) -> measureNullChild
    595:891:void measureVertical(int,int) -> measureVertical
    283:292:void onDraw(android.graphics.Canvas) -> onDraw
    1756:1758:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1762:1764:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1406:1411:void onLayout(boolean,int,int,int,int) -> onLayout
    550:555:void onMeasure(int,int) -> onMeasure
    392:393:void setBaselineAligned(boolean) -> setBaselineAligned
    488:490:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1645:1646:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    232:245:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    257:258:void setDividerPadding(int) -> setDividerPadding
    1679:1691:void setGravity(int) -> setGravity
    1704:1709:void setHorizontalGravity(int) -> setHorizontalGravity
    418:419:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1654:1658:void setOrientation(int) -> setOrientation
    195:199:void setShowDividers(int) -> setShowDividers
    1712:1717:void setVerticalGravity(int) -> setVerticalGravity
    545:546:void setWeightSum(float) -> setWeightSum
    203:203:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
android.support.v7.widget.LinearLayoutCompat$LayoutParams -> android.support.v7.widget.LinearLayoutCompat$LayoutParams:
    1789:1797:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1803:1805:void <init>(int,int) -> <init>
    1826:1827:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
android.support.v7.widget.LinearLayoutManager -> android.support.v7.widget.LinearLayoutManager:
    153:154:void <init>(android.content.Context) -> <init>
    163:166:void <init>(android.content.Context,int,boolean) -> <init>
    177:182:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1349:1352:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    289:289:boolean canScrollHorizontally() -> canScrollHorizontally
    297:297:boolean canScrollVertically() -> canScrollVertically
    1308:1311:void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1228:1254:void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1217:1221:void collectPrefetchPositionsForLayoutState(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1090:1090:int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1080:1080:int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1100:1100:int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1120:1124:int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeScrollExtent
    1109:1113:int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeScrollOffset
    1131:1135:int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> computeScrollRange
    456:464:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1095:1095:int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1085:1085:int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1105:1105:int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    1646:1653:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    998:998:android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    987:990:void ensureLayoutState() -> ensureLayoutState
    1502:1552:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean) -> fill
    1830:1830:android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findFirstPartiallyOrCompletelyInvisibleChild
    1775:1775:android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findFirstReferenceChild
    1731:1735:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1713:1717:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1857:1858:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1835:1835:android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findLastPartiallyOrCompletelyInvisibleChild
    1779:1779:android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findLastReferenceChild
    1897:1898:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    1946:1968:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1924:1941:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1816:1817:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1824:1825:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1785:1809:android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1753:1754:android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1770:1771:android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    401:414:android.view.View findViewByPosition(int) -> findViewByPosition
    908:913:int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    933:939:int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    194:194:android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1701:1701:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1691:1691:android.view.View getChildClosestToStart() -> getChildClosestToStart
    438:441:int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State) -> getExtraLayoutSpace
    324:324:int getOrientation() -> getOrientation
    186:186:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    983:983:boolean isLayoutRTL() -> isLayoutRTL
    1557:1626:void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    702:704:void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    690:690:void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    228:233:void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    1975:2016:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    237:242:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    483:668:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    672:677:void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    273:282:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    246:268:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2094:2121:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1478:1479:void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1361:1376:void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1434:1464:void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    1389:1420:void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    1211:1212:boolean resolveIsInfinite() -> resolveIsInfinite
    356:361:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1322:1323:int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollBy
    1060:1063:int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    1017:1023:void scrollToPosition(int) -> scrollToPosition
    1045:1051:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1072:1075:int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    334:347:void setOrientation(int) -> setOrientation
    388:394:void setReverseLayout(boolean) -> setReverseLayout
    304:310:void setStackFromEnd(boolean) -> setStackFromEnd
    1630:1632:boolean shouldMeasureTwice() -> shouldMeasureTwice
    448:452:void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2085:2085:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    781:814:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    822:823:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    753:771:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1176:1208:void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State) -> updateLayoutState
    954:955:void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    958:965:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    968:969:void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    972:980:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
android.support.v7.widget.LinearLayoutManager$AnchorInfo -> android.support.v7.widget.LinearLayoutManager$AnchorInfo:
    2379:2381:void <init>() -> <init>
    2395:2398:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2464:2472:void assignFromView(android.view.View,int) -> assignFromView
    2417:2461:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2411:2413:boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State) -> isViewValidAsAnchor
    2384:2388:void reset() -> reset
    2402:2402:java.lang.String toString() -> toString
android.support.v7.widget.LinearLayoutManager$LayoutChunkResult -> android.support.v7.widget.LinearLayoutManager$LayoutChunkResult:
    2475:2475:void <init>() -> <init>
    2482:2486:void resetInternal() -> resetInternal
android.support.v7.widget.LinearLayoutManager$LayoutState -> android.support.v7.widget.LinearLayoutManager$LayoutState:
    2127:2206:void <init>() -> <init>
    2259:2260:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2263:2270:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2217:2217:boolean hasMore(android.support.v7.widget.RecyclerView$State) -> hasMore
    2227:2232:android.view.View next(android.support.v7.widget.RecyclerView$Recycler) -> next
    2243:2255:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2273:2298:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
android.support.v7.widget.LinearLayoutManager$SavedState -> android.support.v7.widget.LinearLayoutManager$SavedState:
    2355:2355:void <clinit>() -> <clinit>
    2319:2321:void <init>() -> <init>
    2323:2327:void <init>(android.os.Parcel) -> <init>
    2329:2333:void <init>(android.support.v7.widget.LinearLayoutManager$SavedState) -> <init>
    2345:2345:int describeContents() -> describeContents
    2336:2336:boolean hasValidAnchor() -> hasValidAnchor
    2340:2341:void invalidateAnchor() -> invalidateAnchor
    2350:2353:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.LinearLayoutManager$SavedState$1 -> android.support.v7.widget.LinearLayoutManager$SavedState$1:
    2356:2356:void <init>() -> <init>
    2356:2356:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2359:2359:android.support.v7.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2356:2356:java.lang.Object[] newArray(int) -> newArray
    2364:2364:android.support.v7.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
android.support.v7.widget.LinearSmoothScroller -> android.support.v7.widget.LinearSmoothScroller:
    93:95:void <init>(android.content.Context) -> <init>
    269:271:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    328:330:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    303:305:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    163:163:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    180:180:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    194:194:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    255:260:int clampApplyScroll(int,int) -> clampApplyScroll
    207:207:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    221:221:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    233:238:void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
android.support.v7.widget.ListPopupWindow -> android.support.v7.widget.ListPopupWindow:
    84:102:void <clinit>() -> <clinit>
    242:243:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    255:272:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1136:1277:int buildDropDown() -> buildDropDown
    826:833:void clearListSelection() -> clearListSelection
    930:930:android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    752:757:void dismiss() -> dismiss
    454:454:android.view.View getAnchorView() -> getAnchorView
    417:417:android.graphics.drawable.Drawable getBackground() -> getBackground
    471:471:int getHorizontalOffset() -> getHorizontalOffset
    926:926:android.widget.ListView getListView() -> getListView
    1421:1430:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    487:490:int getVerticalOffset() -> getVerticalOffset
    529:529:int getWidth() -> getWidth
    848:848:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    339:339:boolean isModal() -> isModal
    840:840:boolean isShowing() -> isShowing
    769:776:void removePromptView() -> removePromptView
    281:294:void setAdapter(android.widget.ListAdapter) -> setAdapter
    464:465:void setAnchorView(android.view.View) -> setAnchorView
    435:436:void setAnimationStyle(int) -> setAnimationStyle
    426:427:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    549:556:void setContentWidth(int) -> setContentWidth
    522:523:void setDropDownGravity(int) -> setDropDownGravity
    512:513:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    480:481:void setHorizontalOffset(int) -> setHorizontalOffset
    791:792:void setInputMethodMode(int) -> setInputMethodMode
    329:331:void setModal(boolean) -> setModal
    765:766:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    603:604:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1318:1320:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1411:1418:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    306:307:void setPromptPosition(int) -> setPromptPosition
    810:819:void setSelection(int) -> setSelection
    499:501:void setVerticalOffset(int) -> setVerticalOffset
    539:540:void setWidth(int) -> setWidth
    647:745:void show() -> show
android.support.v7.widget.ListPopupWindow$2 -> android.support.v7.widget.ListPopupWindow$2:
    1147:1147:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1151:1155:void run() -> run
android.support.v7.widget.ListPopupWindow$3 -> android.support.v7.widget.ListPopupWindow$3:
    1166:1166:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1171:1178:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1182:1182:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.ListPopupWindow$ListSelectorHider -> android.support.v7.widget.ListPopupWindow$ListSelectorHider:
    1341:1342:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1346:1347:void run() -> run
android.support.v7.widget.ListPopupWindow$PopupDataSetObserver -> android.support.v7.widget.ListPopupWindow$PopupDataSetObserver:
    1323:1324:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1328:1332:void onChanged() -> onChanged
    1336:1337:void onInvalidated() -> onInvalidated
android.support.v7.widget.ListPopupWindow$PopupScrollListener -> android.support.v7.widget.ListPopupWindow$PopupScrollListener:
    1387:1388:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1394:1394:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1398:1403:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor -> android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor:
    1366:1367:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1371:1382:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
android.support.v7.widget.ListPopupWindow$ResizePopupRunnable -> android.support.v7.widget.ListPopupWindow$ResizePopupRunnable:
    1351:1352:void <init>(android.support.v7.widget.ListPopupWindow) -> <init>
    1356:1362:void run() -> run
android.support.v7.widget.MenuPopupWindow -> android.support.v7.widget.MenuPopupWindow:
    60:65:void <clinit>() -> <clinit>
    70:71:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    75:77:android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    113:116:void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    121:124:void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    81:84:void setEnterTransition(java.lang.Object) -> setEnterTransition
    87:90:void setExitTransition(java.lang.Object) -> setExitTransition
    93:94:void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    101:108:void setTouchModal(boolean) -> setTouchModal
android.support.v7.widget.MenuPopupWindow$MenuDropDownListView -> android.support.v7.widget.MenuPopupWindow$MenuDropDownListView:
    138:150:void <init>(android.content.Context,boolean) -> <init>
    129:129:boolean hasFocus() -> hasFocus
    129:129:boolean hasWindowFocus() -> hasWindowFocus
    129:129:boolean isFocused() -> isFocused
    129:129:boolean isInTouchMode() -> isInTouchMode
    129:129:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    129:129:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    184:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    162:178:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    129:129:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    153:154:void setHoverListener(android.support.v7.widget.MenuItemHoverListener) -> setHoverListener
    129:129:void setSelector(android.graphics.drawable.Drawable) -> setSelector
android.support.v7.widget.OpReorderer -> android.support.v7.widget.OpReorderer:
    25:27:void <init>(android.support.v7.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,android.support.v7.widget.AdapterHelper$UpdateOp,int,android.support.v7.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
android.support.v7.widget.OrientationHelper -> android.support.v7.widget.OrientationHelper:
    32:32:void <init>(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper$1) -> <init>
    46:48:void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    258:258:android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:243:android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
android.support.v7.widget.OrientationHelper$1 -> android.support.v7.widget.OrientationHelper$1:
    258:258:void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:272:void offsetChildren(int) -> offsetChildren
android.support.v7.widget.OrientationHelper$2 -> android.support.v7.widget.OrientationHelper$2:
    356:356:void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:370:void offsetChildren(int) -> offsetChildren
android.support.v7.widget.PopupMenu -> android.support.v7.widget.PopupMenu:
    68:69:void <init>(android.content.Context,android.view.View) -> <init>
    83:84:void <init>(android.content.Context,android.view.View,int) -> <init>
    104:133:void <init>(android.content.Context,android.view.View,int,int,int) -> <init>
    209:209:android.view.Menu getMenu() -> getMenu
    219:219:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    229:230:void inflate(int) -> inflate
android.support.v7.widget.PopupMenu$1 -> android.support.v7.widget.PopupMenu$1:
    109:109:void <init>(android.support.v7.widget.PopupMenu) -> <init>
    112:115:boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    120:120:void onMenuModeChange(android.support.v7.view.menu.MenuBuilder) -> onMenuModeChange
android.support.v7.widget.PopupMenu$2 -> android.support.v7.widget.PopupMenu$2:
    125:125:void <init>(android.support.v7.widget.PopupMenu) -> <init>
    128:131:void onDismiss() -> onDismiss
android.support.v7.widget.RecyclerView -> android.support.v7.widget.RecyclerView:
    215:595:void <clinit>() -> <clinit>
    643:644:void <init>(android.content.Context) -> <init>
    647:648:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    651:727:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2440:2459:void absorbGlows(int,int) -> absorbGlows
    207:207:void access$000(android.support.v7.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    207:207:void access$100(android.support.v7.widget.RecyclerView,int) -> access$100
    207:207:boolean access$200(android.support.v7.widget.RecyclerView) -> access$200
    207:207:void access$300(android.support.v7.widget.RecyclerView,int,int) -> access$300
    1426:1437:void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2772:2775:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1563:1577:void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1592:1593:void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1268:1272:void addOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    2908:2909:void addOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1701:1705:void addOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4153:4157:void animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4171:4189:void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4161:4166:void animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    2877:2892:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4464:4464:boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3239:3241:void cancelTouch() -> cancelTouch
    4290:4290:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5592:5608:void clearNestedRecyclerViewIfNotNested(android.support.v7.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4344:4352:void clearOldPositions() -> clearOldPositions
    2007:2010:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1982:1985:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2030:2033:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2079:2082:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2055:2058:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2102:2105:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2417:2437:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1856:1860:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    778:827:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3402:3410:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4117:4118:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7267:7278:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7253:7264:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3471:3479:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3627:3653:void dispatchLayout() -> dispatchLayout
    3823:3908:void dispatchLayoutStep1() -> dispatchLayoutStep1
    3915:3934:void dispatchLayoutStep2() -> dispatchLayoutStep2
    3941:4025:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11332:11332:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11337:11337:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11320:11320:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11326:11326:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11307:11307:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11314:11314:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    2941:2968:boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    2924:2937:boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    4984:5001:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    4944:4965:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11219:11233:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    1414:1415:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1406:1407:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    4219:4276:void draw(android.graphics.Canvas) -> draw
    4820:4820:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2502:2512:void ensureBottomGlow() -> ensureBottomGlow
    2462:2472:void ensureLeftGlow() -> ensureLeftGlow
    2475:2485:void ensureRightGlow() -> ensureRightGlow
    2488:2499:void ensureTopGlow() -> ensureTopGlow
    734:737:java.lang.String exceptionLabel() -> exceptionLabel
    3805:3813:void fillRemainingScrollValues(android.support.v7.widget.RecyclerView$State) -> fillRemainingScrollValues
    4803:4815:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4582:4587:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4600:4601:android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    4091:4114:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5570:5585:android.support.v7.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3692:3715:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4714:4731:android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4776:4777:android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4736:4758:android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2275:2322:boolean fling(int,int) -> fling
    2577:2651:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4295:4296:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4303:4304:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4311:4312:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1221:1221:android.support.v7.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11236:11239:int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1248:1251:int getBaseline() -> getBaseline
    4148:4148:long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    13220:13223:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4643:4644:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4559:4564:android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4606:4609:android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1094:1094:boolean getClipToPadding() -> getClipToPadding
    760:760:android.support.v7.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    4886:4892:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    3793:3801:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2542:2542:android.support.v7.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    830:836:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3546:3546:android.support.v7.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    4895:4916:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1618:1618:int getItemDecorationCount() -> getItemDecorationCount
    1469:1469:android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2360:2360:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2350:2350:int getMinFlingVelocity() -> getMinFlingVelocity
    5617:5620:long getNanoTime() -> getNanoTime
    1370:1370:android.support.v7.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4531:4531:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1482:1482:android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1530:1530:int getScrollState() -> getScrollState
    13250:13253:android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4045:4072:void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    11296:11296:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11301:11301:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5017:5018:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1897:1907:boolean hasUpdatedView() -> hasUpdatedView
    963:1043:void initAdapterManager() -> initAdapterManager
    748:752:void initAutofill() -> initAutofill
    840:960:void initChildrenHelper() -> initChildrenHelper
    11248:11251:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2515:2516:void invalidateGlows() -> invalidateGlows
    3467:3467:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    2848:2848:boolean isAttachedToWindow() -> isAttachedToWindow
    3501:3501:boolean isComputingLayout() -> isComputingLayout
    11271:11271:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2663:2664:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1750:1755:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4209:4215:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4492:4501:void markKnownViewsInvalid() -> markKnownViewsInvalid
    4868:4872:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    4830:4834:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4389:4403:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4355:4386:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4407:4433:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2789:2819:void onAttachedToWindow() -> onAttachedToWindow
    4847:4847:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    4859:4859:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2823:2841:void onDetachedFromWindow() -> onDetachedFromWindow
    4280:4286:void onDraw(android.graphics.Canvas) -> onDraw
    3444:3445:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3448:3449:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3452:3464:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3256:3301:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    2973:3072:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4193:4197:void onLayout(boolean,int,int,int,int) -> onLayout
    3306:3393:void onMeasure(int,int) -> onMeasure
    3244:3252:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2779:2784:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1389:1399:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1375:1384:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4979:4979:void onScrollStateChanged(int) -> onScrollStateChanged
    4941:4941:void onScrolled(int,int) -> onScrolled
    3414:3419:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3087:3088:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3554:3558:void postAnimationRunner() -> postAnimationRunner
    3561:3561:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3571:3599:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4482:4485:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2367:2391:void pullGlows(float,float,float,float) -> pullGlows
    4081:4088:void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3719:3726:void recoverFocusFromState() -> recoverFocusFromState
    2394:2414:void releaseGlows() -> releaseGlows
    1166:1179:void removeAndRecycleViews() -> removeAndRecycleViews
    1446:1458:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4124:4141:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1645:1655:void removeItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1281:1285:void removeOnChildAttachStateChangeListener(android.support.v7.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    2917:2921:void removeOnItemTouchListener(android.support.v7.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1713:1716:void removeOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5258:5273:void repositionShadowingViews() -> repositionShadowingViews
    2722:2726:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2738:2763:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2767:2767:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3077:3083:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4201:4206:void requestLayout() -> requestLayout
    3677:3680:void resetFocusInfo() -> resetFocusInfo
    3231:3236:void resetTouch() -> resetTouch
    3656:3674:void saveFocusInfo() -> saveFocusInfo
    4330:4341:void saveOldPositions() -> saveOldPositions
    1792:1805:void scrollBy(int,int) -> scrollBy
    1922:1959:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1820:1845:void scrollStep(int,int,int[]) -> scrollStep
    1786:1788:void scrollTo(int,int) -> scrollTo
    1736:1747:void scrollToPosition(int) -> scrollToPosition
    3529:3533:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    769:771:void setAccessibilityDelegateCompat(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1155:1159:void setAdapter(android.support.v7.widget.RecyclerView$Adapter) -> setAdapter
    1192:1211:void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1671:1676:void setChildDrawingOrderCallback(android.support.v7.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11209:11215:boolean setChildImportantForAccessibilityInternal(android.support.v7.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1070:1078:void setClipToPadding(boolean) -> setClipToPadding
    2528:2531:void setEdgeEffectFactory(android.support.v7.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1057:1058:void setHasFixedSize(boolean) -> setHasFixedSize
    3433:3441:void setItemAnimator(android.support.v7.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1520:1521:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2193:2211:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1310:1349:void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager) -> setLayoutManager
    11266:11267:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1360:1361:void setOnFlingListener(android.support.v7.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1688:1689:void setOnScrollListener(android.support.v7.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4549:4550:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1494:1495:void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1235:1236:void setRecyclerListener(android.support.v7.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1534:1546:void setScrollState(int) -> setScrollState
    1107:1121:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1505:1506:void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3513:3524:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2230:2231:void smoothScrollBy(int,int) -> smoothScrollBy
    2242:2259:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    1773:1782:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2120:2124:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11276:11276:boolean startNestedScroll(int) -> startNestedScroll
    11281:11281:boolean startNestedScroll(int,int) -> startNestedScroll
    2137:2168:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11286:11287:void stopNestedScroll() -> stopNestedScroll
    11291:11292:void stopNestedScroll(int) -> stopNestedScroll
    2330:2332:void stopScroll() -> stopScroll
    2338:2342:void stopScrollersInternal() -> stopScrollersInternal
    4442:4461:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
android.support.v7.widget.RecyclerView$1 -> android.support.v7.widget.RecyclerView$1:
    391:391:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    394:396:void run() -> run
android.support.v7.widget.RecyclerView$2 -> android.support.v7.widget.RecyclerView$2:
    585:585:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    588:592:void run() -> run
android.support.v7.widget.RecyclerView$3 -> android.support.v7.widget.RecyclerView$3:
    595:595:void <init>() -> <init>
    598:599:float getInterpolation(float) -> getInterpolation
android.support.v7.widget.RecyclerView$4 -> android.support.v7.widget.RecyclerView$4:
    607:607:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    617:618:void processAppeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    611:613:void processDisappeared(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    623:635:void processPersistent(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    638:639:void unused(android.support.v7.widget.RecyclerView$ViewHolder) -> unused
android.support.v7.widget.RecyclerView$5 -> android.support.v7.widget.RecyclerView$5:
    840:840:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    851:856:void addView(android.view.View,int) -> addView
    911:923:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    927:942:void detachViewFromParent(int) -> detachViewFromParent
    885:885:android.view.View getChildAt(int) -> getChildAt
    843:843:int getChildCount() -> getChildCount
    905:905:android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    860:860:int indexOfChild(android.view.View) -> indexOfChild
    946:950:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    954:958:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    890:901:void removeAllViews() -> removeAllViews
    865:881:void removeViewAt(int) -> removeViewAt
android.support.v7.widget.RecyclerView$6 -> android.support.v7.widget.RecyclerView$6:
    963:963:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    1008:1023:void dispatchUpdate(android.support.v7.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    966:978:android.support.v7.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    998:1000:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1032:1034:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1038:1041:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    983:986:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    991:993:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1004:1005:void onDispatchFirstPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1027:1028:void onDispatchSecondPass(android.support.v7.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
android.support.v7.widget.RecyclerView$Adapter -> android.support.v7.widget.RecyclerView$Adapter:
    6700:6702:void <init>() -> <init>
    6815:6830:void bindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    6793:6803:android.support.v7.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    6873:6873:long getItemId(int) -> getItemId
    6845:6845:int getItemViewType(int) -> getItemViewType
    6891:6891:boolean hasStableIds() -> hasStableIds
    7070:7071:void notifyDataSetChanged() -> notifyDataSetChanged
    7195:7196:void notifyItemMoved(int,int) -> notifyItemMoved
    7163:7164:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7214:7215:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7248:7249:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7231:7232:void notifyItemRemoved(int) -> notifyItemRemoved
    7029:7029:void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView) -> onAttachedToRecyclerView
    6781:6782:void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7038:7038:void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView) -> onDetachedFromRecyclerView
    6949:6949:boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    6963:6963:void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    6975:6975:void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    6912:6912:void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7003:7004:void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7017:7018:void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
android.support.v7.widget.RecyclerView$AdapterDataObservable -> android.support.v7.widget.RecyclerView$AdapterDataObservable:
    11986:11986:void <init>() -> <init>
    11996:11999:void notifyChanged() -> notifyChanged
    12037:12040:void notifyItemMoved(int,int) -> notifyItemMoved
    12011:12014:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12021:12024:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    12031:12034:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
android.support.v7.widget.RecyclerView$AdapterDataObserver -> android.support.v7.widget.RecyclerView$AdapterDataObserver:
    11452:11452:void <init>() -> <init>
    11455:11455:void onChanged() -> onChanged
    11459:11459:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11464:11465:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    11469:11469:void onItemRangeInserted(int,int) -> onItemRangeInserted
    11477:11477:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    11473:11473:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
android.support.v7.widget.RecyclerView$EdgeEffectFactory -> android.support.v7.widget.RecyclerView$EdgeEffectFactory:
    5337:5339:void <init>() -> <init>
    5368:5368:android.widget.EdgeEffect createEdgeEffect(android.support.v7.widget.RecyclerView,int) -> createEdgeEffect
android.support.v7.widget.RecyclerView$ItemAnimator -> android.support.v7.widget.RecyclerView$ItemAnimator:
    12483:13151:void <init>() -> <init>
    12868:12879:int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13087:13087:boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    12952:12956:void dispatchAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13095:13100:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12572:12572:long getAddDuration() -> getAddDuration
    12608:12608:long getChangeDuration() -> getChangeDuration
    12554:12554:long getMoveDuration() -> getMoveDuration
    12590:12590:long getRemoveDuration() -> getRemoveDuration
    13024:13032:boolean isRunning(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    13113:13113:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    12967:12967:void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    12697:12697:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12668:12668:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12629:12630:void setListener(android.support.v7.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13180:13181:void <init>() -> <init>
    13192:13192:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder) -> setFrom
    13208:13213:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(android.support.v7.widget.RecyclerView$ViewHolder,int) -> setFrom
android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener -> android.support.v7.widget.RecyclerView$ItemAnimatorRestoreListener:
    12441:12442:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    12446:12458:void onAnimationFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAnimationFinished
android.support.v7.widget.RecyclerView$ItemDecoration -> android.support.v7.widget.RecyclerView$ItemDecoration:
    10444:10444:void <init>() -> <init>
    10496:10497:void getItemOffsets(android.graphics.Rect,int,android.support.v7.widget.RecyclerView) -> getItemOffsets
    10521:10523:void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    10455:10456:void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    10464:10464:void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDraw
    10477:10478:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    10486:10486:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView) -> onDrawOver
android.support.v7.widget.RecyclerView$LayoutManager -> android.support.v7.widget.RecyclerView$LayoutManager:
    7296:10422:void <init>() -> <init>
    8253:8254:void addDisappearingView(android.view.View) -> addDisappearingView
    8271:8272:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8282:8283:void addView(android.view.View) -> addView
    8294:8295:void addView(android.view.View,int) -> addView
    8298:8349:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7631:7634:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8539:8549:void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams) -> attachView
    8560:8561:void attachView(android.view.View,int) -> attachView
    9442:9448:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8149:8149:boolean canScrollHorizontally() -> canScrollHorizontally
    8159:8159:boolean canScrollVertically() -> canScrollVertically
    8064:8064:boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7610:7616:int chooseSize(int,int,int) -> chooseSize
    7816:7816:void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    7844:7844:void collectInitialPrefetchPositions(int,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    9892:9892:int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    9907:9907:int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    9922:9922:int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    9937:9937:int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    9952:9952:int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    9967:9967:int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    8927:8932:void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8519:8520:void detachViewAt(int) -> detachViewAt
    8526:8527:void detachViewInternal(int,android.view.View) -> detachViewInternal
    7847:7849:void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView) -> dispatchAttachedToWindow
    7852:7854:void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8438:8448:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8466:8478:android.view.View findViewByPosition(int) -> findViewByPosition
    8081:8086:android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8105:8105:android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8397:8397:int getBaseline() -> getBaseline
    9477:9477:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8668:8668:android.view.View getChildAt(int) -> getChildAt
    8658:8658:int getChildCount() -> getChildCount
    9181:9222:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9573:9606:int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> getChildRectangleOnScreenScrollAmount
    7964:7964:boolean getClipToPadding() -> getClipToPadding
    10267:10268:int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9421:9421:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9373:9374:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9385:9385:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9249:9250:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9235:9236:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9409:9409:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9397:9397:int getDecoratedTop(android.view.View) -> getDecoratedTop
    8824:8829:android.view.View getFocusedChild() -> getFocusedChild
    8734:8734:int getHeight() -> getHeight
    8702:8702:int getHeightMode() -> getHeightMode
    8224:8224:int getLayoutDirection() -> getLayoutDirection
    9492:9492:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10022:10022:int getMinimumHeight() -> getMinimumHeight
    10014:10014:int getMinimumWidth() -> getMinimumWidth
    8774:8774:int getPaddingBottom() -> getPaddingBottom
    8744:8744:int getPaddingLeft() -> getPaddingLeft
    8764:8764:int getPaddingRight() -> getPaddingRight
    8754:8754:int getPaddingTop() -> getPaddingTop
    8408:8408:int getPosition(android.view.View) -> getPosition
    10374:10383:android.support.v7.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9507:9507:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10247:10248:int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    10231:10231:int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9462:9462:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9340:9363:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8718:8718:int getWidth() -> getWidth
    8685:8685:int getWidthMode() -> getWidthMode
    10408:10416:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    7864:7864:boolean isAttachedToWindow() -> isAttachedToWindow
    7725:7725:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9705:9718:boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    7792:7792:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10284:10284:boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> isLayoutHierarchical
    9075:9084:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8211:8211:boolean isSmoothScrolling() -> isSmoothScrolling
    9683:9691:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9320:9325:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9104:9121:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8591:8594:void moveView(int,int) -> moveView
    8858:8861:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    8870:8873:void offsetChildrenVertical(int) -> offsetChildrenVertical
    9770:9770:void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter) -> onAdapterChanged
    9798:9798:boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    7919:7919:void onAttachedToWindow(android.support.v7.widget.RecyclerView) -> onAttachedToWindow
    7928:7928:void onDetachedFromWindow(android.support.v7.widget.RecyclerView) -> onDetachedFromWindow
    7955:7956:void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    9535:9535:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    10136:10137:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10152:10153:void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10087:10088:void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10117:10132:void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10167:10173:void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10192:10198:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9556:9556:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    9822:9822:void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    9809:9809:void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    9877:9877:void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    9833:9833:void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    9846:9846:void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int) -> onItemsUpdated
    9859:9860:void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8019:8020:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    8034:8034:void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    9995:9996:void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int) -> onMeasure
    9730:9730:boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    9752:9752:boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10042:10042:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10036:10036:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10062:10062:void onScrollStateChanged(int) -> onScrollStateChanged
    10051:10054:void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10289:10289:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10305:10331:boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10337:10337:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10358:10358:boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10077:10083:void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    8963:8990:void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8635:8637:void removeAndRecycleView(android.view.View,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8646:8649:void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    7898:7901:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8360:8361:void removeView(android.view.View) -> removeView
    8372:8376:void removeViewAt(int) -> removeViewAt
    9625:9625:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9645:9656:boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7581:7584:void requestLayout() -> requestLayout
    10211:10212:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    8935:8951:void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8122:8122:int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    8172:8172:void scrollToPosition(int) -> scrollToPosition
    8139:8139:int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    10387:10391:void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7491:7502:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7570:7575:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10006:10007:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7518:7547:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    7475:7488:void setRecyclerView(android.support.v7.widget.RecyclerView) -> setRecyclerView
    9042:9045:boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10404:10404:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9028:9030:boolean shouldReMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8185:8186:void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8199:8205:void startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    10045:10048:void stopSmoothScroller() -> stopSmoothScroller
    7751:7751:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
android.support.v7.widget.RecyclerView$LayoutManager$1 -> android.support.v7.widget.RecyclerView$LayoutManager$1:
    7305:7305:void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    7318:7318:android.view.View getChildAt(int) -> getChildAt
    7340:7342:int getChildEnd(android.view.View) -> getChildEnd
    7333:7335:int getChildStart(android.view.View) -> getChildStart
    7328:7328:int getParentEnd() -> getParentEnd
    7323:7323:int getParentStart() -> getParentStart
android.support.v7.widget.RecyclerView$LayoutManager$2 -> android.support.v7.widget.RecyclerView$LayoutManager$2:
    7351:7351:void <init>(android.support.v7.widget.RecyclerView$LayoutManager) -> <init>
    7364:7364:android.view.View getChildAt(int) -> getChildAt
    7387:7389:int getChildEnd(android.view.View) -> getChildEnd
    7380:7382:int getChildStart(android.view.View) -> getChildStart
    7374:7375:int getParentEnd() -> getParentEnd
    7369:7369:int getParentStart() -> getParentStart
android.support.v7.widget.RecyclerView$LayoutManager$Properties -> android.support.v7.widget.RecyclerView$LayoutManager$Properties:
    10422:10422:void <init>() -> <init>
android.support.v7.widget.RecyclerView$LayoutParams -> android.support.v7.widget.RecyclerView$LayoutParams:
    11356:11357:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11360:11361:void <init>(int,int) -> <init>
    11364:11365:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11368:11369:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11372:11373:void <init>(android.support.v7.widget.RecyclerView$LayoutParams) -> <init>
    11432:11432:int getViewLayoutPosition() -> getViewLayoutPosition
    11414:11414:boolean isItemChanged() -> isItemChanged
    11403:11403:boolean isItemRemoved() -> isItemRemoved
    11392:11392:boolean isViewInvalid() -> isViewInvalid
android.support.v7.widget.RecyclerView$OnScrollListener -> android.support.v7.widget.RecyclerView$OnScrollListener:
    10609:10609:void <init>() -> <init>
    10617:10617:void onScrollStateChanged(android.support.v7.widget.RecyclerView,int) -> onScrollStateChanged
    10630:10630:void onScrolled(android.support.v7.widget.RecyclerView,int,int) -> onScrolled
android.support.v7.widget.RecyclerView$RecycledViewPool -> android.support.v7.widget.RecyclerView$RecycledViewPool:
    5380:5405:void <init>() -> <init>
    5523:5524:void attach() -> attach
    5411:5415:void clear() -> clear
    5527:5528:void detach() -> detach
    5507:5510:void factorInBindTime(int,long) -> factorInBindTime
    5501:5504:void factorInCreateTime(int,long) -> factorInCreateTime
    5449:5454:android.support.v7.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5556:5561:android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5544:5553:void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5481:5491:void putRecycledView(android.support.v7.widget.RecyclerView$ViewHolder) -> putRecycledView
    5494:5497:long runningAverage(long,long) -> runningAverage
    5518:5519:boolean willBindInTime(int,long,long) -> willBindInTime
    5513:5514:boolean willCreateInTime(int,long,long) -> willCreateInTime
android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData -> android.support.v7.widget.RecyclerView$RecycledViewPool$ScrapData:
    5397:5401:void <init>() -> <init>
android.support.v7.widget.RecyclerView$Recycler -> android.support.v7.widget.RecyclerView$Recycler:
    5637:5647:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    6250:6260:void addViewHolderToRecycledViewPool(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6039:6052:void attachAccessibilityDelegateOnBind(android.support.v7.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5660:5662:void clear() -> clear
    6627:6642:void clearOldPositions() -> clearOldPositions
    6330:6334:void clearScrap() -> clearScrap
    5828:5830:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6481:6491:void dispatchViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6339:6340:android.support.v7.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6585:6588:android.support.v7.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6322:6322:int getScrapCount() -> getScrapCount
    5692:5692:java.util.List getScrapList() -> getScrapList
    6429:6477:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6375:6424:android.support.v7.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6326:6326:android.view.View getScrapViewAt(int) -> getScrapViewAt
    5854:5854:android.view.View getViewForPosition(int) -> getViewForPosition
    5858:5858:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6055:6058:void invalidateDisplayListInt(android.support.v7.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6061:6079:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6645:6653:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6611:6624:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6529:6540:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6501:6526:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6549:6568:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6495:6497:void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6268:6273:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6116:6124:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6141:6147:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6094:6104:void recycleView(android.view.View) -> recycleView
    6155:6159:void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6285:6302:void scrapView(android.view.View) -> scrapView
    6575:6582:void setRecycledViewPool(android.support.v7.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6571:6572:void setViewCacheExtension(android.support.v7.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5670:5672:void setViewCacheSize(int) -> setViewCacheSize
    5744:5759:boolean tryBindViewHolderByDeadline(android.support.v7.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    5882:5885:android.support.v7.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6311:6319:void unscrapView(android.support.v7.widget.RecyclerView$ViewHolder) -> unscrapView
    5675:5683:void updateViewCacheSize() -> updateViewCacheSize
    5706:5715:boolean validateViewHolderForOffsetPosition(android.support.v7.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6592:6608:void viewRangeUpdate(int,int) -> viewRangeUpdate
android.support.v7.widget.RecyclerView$RecyclerViewDataObserver -> android.support.v7.widget.RecyclerView$RecyclerViewDataObserver:
    5276:5277:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    5281:5288:void onChanged() -> onChanged
    5292:5296:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5300:5304:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5316:5320:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5308:5312:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    5323:5329:void triggerUpdateProcessor() -> triggerUpdateProcessor
android.support.v7.widget.RecyclerView$SavedState -> android.support.v7.widget.RecyclerView$SavedState:
    12078:12078:void <clinit>() -> <clinit>
    12056:12059:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12065:12066:void <init>(android.os.Parcelable) -> <init>
    12075:12076:void copyFrom(android.support.v7.widget.RecyclerView$SavedState) -> copyFrom
    12070:12072:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.RecyclerView$SavedState$1 -> android.support.v7.widget.RecyclerView$SavedState$1:
    12078:12078:void <init>() -> <init>
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12081:12081:android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12086:12086:android.support.v7.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object[] newArray(int) -> newArray
    12091:12091:android.support.v7.widget.RecyclerView$SavedState[] newArray(int) -> newArray
android.support.v7.widget.RecyclerView$SmoothScroller -> android.support.v7.widget.RecyclerView$SmoothScroller:
    11507:11509:void <init>() -> <init>
    11562:11569:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11707:11707:android.view.View findViewByPosition(int) -> findViewByPosition
    11700:11700:int getChildCount() -> getChildCount
    11693:11693:int getChildPosition(android.view.View) -> getChildPosition
    11578:11578:android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11630:11630:int getTargetPosition() -> getTargetPosition
    11612:11612:boolean isPendingInitialRun() -> isPendingInitialRun
    11620:11620:boolean isRunning() -> isRunning
    11733:11737:void normalize(android.graphics.PointF) -> normalize
    11637:11687:void onAnimation(int,int) -> onAnimation
    11720:11726:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11547:11548:void setTargetPosition(int) -> setTargetPosition
    11524:11534:void start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager) -> start
    11588:11602:void stop() -> stop
android.support.v7.widget.RecyclerView$SmoothScroller$Action -> android.support.v7.widget.RecyclerView$SmoothScroller$Action:
    11805:11806:void <init>(int,int) -> <init>
    11825:11830:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    11852:11852:boolean hasJumpTarget() -> hasJumpTarget
    11848:11849:void jumpTo(int) -> jumpTo
    11856:11886:void runIfNecessary(android.support.v7.widget.RecyclerView) -> runIfNecessary
    11952:11957:void update(int,int,int,android.view.animation.Interpolator) -> update
    11889:11893:void validate() -> validate
android.support.v7.widget.RecyclerView$State -> android.support.v7.widget.RecyclerView$State:
    12106:12177:void <init>() -> <init>
    12112:12115:void assertLayoutStep(int) -> assertLayoutStep
    12366:12366:int getItemCount() -> getItemCount
    12321:12321:int getTargetScrollPosition() -> getTargetScrollPosition
    12330:12330:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12245:12245:boolean isPreLayout() -> isPreLayout
    12214:12219:void prepareForNestedPrefetch(android.support.v7.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12395:12395:java.lang.String toString() -> toString
    12256:12256:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
android.support.v7.widget.RecyclerView$ViewFlinger -> android.support.v7.widget.RecyclerView$ViewFlinger:
    5033:5035:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    5202:5220:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5159:5161:void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    5196:5198:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5164:5168:void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    5180:5185:void fling(int,int) -> fling
    5171:5177:void postOnAnimation() -> postOnAnimation
    5039:5156:void run() -> run
    5188:5189:void smoothScrollBy(int,int) -> smoothScrollBy
    5192:5193:void smoothScrollBy(int,int,int,int) -> smoothScrollBy
    5224:5225:void smoothScrollBy(int,int,int) -> smoothScrollBy
    5228:5230:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5233:5247:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5250:5252:void stop() -> stop
android.support.v7.widget.RecyclerView$ViewHolder -> android.support.v7.widget.RecyclerView$ViewHolder:
    10804:10804:void <clinit>() -> <clinit>
    10831:10833:void <init>(android.view.View) -> <init>
    11041:11047:void addChangePayload(java.lang.Object) -> addChangePayload
    11037:11038:void addFlags(int) -> addFlags
    10861:10863:void clearOldPosition() -> clearOldPosition
    11057:11061:void clearPayload() -> clearPayload
    10988:10989:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    10992:10993:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11050:11054:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11195:11195:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    10839:10842:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    10937:10940:int getAdapterPosition() -> getAdapterPosition
    10965:10965:long getItemId() -> getItemId
    10972:10972:int getItemViewType() -> getItemViewType
    10911:10911:int getLayoutPosition() -> getLayoutPosition
    10955:10955:int getOldPosition() -> getOldPosition
    11064:11073:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11021:11021:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11029:11029:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11013:11013:boolean isBound() -> isBound
    11005:11005:boolean isInvalid() -> isInvalid
    11178:11179:boolean isRecyclable() -> isRecyclable
    11017:11017:boolean isRemoved() -> isRemoved
    10976:10976:boolean isScrap() -> isScrap
    11025:11025:boolean isTmpDetached() -> isTmpDetached
    11199:11199:boolean isUpdated() -> isUpdated
    11009:11009:boolean needsUpdate() -> needsUpdate
    10845:10858:void offsetPosition(int,boolean) -> offsetPosition
    11097:11105:void onEnteredHiddenState(android.support.v7.widget.RecyclerView) -> onEnteredHiddenState
    11111:11114:void onLeftHiddenState(android.support.v7.widget.RecyclerView) -> onLeftHiddenState
    11078:11090:void resetInternal() -> resetInternal
    10866:10869:void saveOldPosition() -> saveOldPosition
    11033:11034:void setFlags(int,int) -> setFlags
    11153:11170:void setIsRecyclable(boolean) -> setIsRecyclable
    11000:11002:void setScrapContainer(android.support.v7.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11187:11187:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    10872:10872:boolean shouldIgnore() -> shouldIgnore
    11118:11136:java.lang.String toString() -> toString
    10980:10981:void unScrap() -> unScrap
    10984:10984:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
android.support.v7.widget.RecyclerViewAccessibilityDelegate -> android.support.v7.widget.RecyclerViewAccessibilityDelegate:
    37:40:void <init>(android.support.v7.widget.RecyclerView) -> <init>
    86:86:android.support.v4.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    69:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    60:65:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    48:55:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    43:43:boolean shouldIgnore() -> shouldIgnore
android.support.v7.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> android.support.v7.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    105:107:void <init>(android.support.v7.widget.RecyclerViewAccessibilityDelegate) -> <init>
    111:117:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    121:129:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v7.widget.ResourcesWrapper -> android.support.v7.widget.ResourcesWrapper:
    48:50:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:210:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:223:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:217:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:283:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:277:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:236:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
android.support.v7.widget.RoundRectDrawable -> android.support.v7.widget.RoundRectDrawable:
    55:62:void <init>(android.content.res.ColorStateList,float) -> <init>
    206:207:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> createTintFilter
    87:102:void draw(android.graphics.Canvas) -> draw
    164:164:android.content.res.ColorStateList getColor() -> getColor
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    82:82:float getPadding() -> getPadding
    155:155:float getRadius() -> getRadius
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    65:67:void setBackground(android.content.res.ColorStateList) -> setBackground
    159:161:void setColor(android.content.res.ColorStateList) -> setColor
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    70:79:void setPadding(float,boolean,boolean) -> setPadding
    131:137:void setRadius(float) -> setRadius
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    105:117:void updateBounds(android.graphics.Rect) -> updateBounds
android.support.v7.widget.RoundRectDrawableWithShadow -> android.support.v7.widget.RoundRectDrawableWithShadow:
    41:41:void <clinit>() -> <clinit>
    92:105:void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float) -> <init>
    334:338:void buildComponents(android.graphics.Rect) -> buildComponents
    297:328:void buildShadowCorners() -> buildShadowCorners
    189:192:float calculateHorizontalPadding(float,float,boolean) -> calculateHorizontalPadding
    180:183:float calculateVerticalPadding(float,float,boolean) -> calculateVerticalPadding
    238:246:void draw(android.graphics.Canvas) -> draw
    249:294:void drawShadow(android.graphics.Canvas) -> drawShadow
    382:382:android.content.res.ColorStateList getColor() -> getColor
    341:341:float getCornerRadius() -> getCornerRadius
    345:346:void getMaxShadowAndCornerPadding(android.graphics.Rect) -> getMaxShadowAndCornerPadding
    361:361:float getMaxShadowSize() -> getMaxShadowSize
    371:373:float getMinHeight() -> getMinHeight
    365:367:float getMinWidth() -> getMinWidth
    220:220:int getOpacity() -> getOpacity
    170:175:boolean getPadding(android.graphics.Rect) -> getPadding
    357:357:float getShadowSize() -> getShadowSize
    210:210:boolean isStateful() -> isStateful
    137:139:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    198:205:boolean onStateChange(int[]) -> onStateChange
    124:126:void setAddPaddingForCorners(boolean) -> setAddPaddingForCorners
    130:133:void setAlpha(int) -> setAlpha
    108:110:void setBackground(android.content.res.ColorStateList) -> setBackground
    377:379:void setColor(android.content.res.ColorStateList) -> setColor
    215:216:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    224:225:void setCornerRadius(float) -> setCornerRadius
    353:354:void setMaxShadowSize(float) -> setMaxShadowSize
    142:143:void setShadowSize(float,float) -> setShadowSize
    349:350:void setShadowSize(float) -> setShadowSize
    116:120:int toEven(float) -> toEven
android.support.v7.widget.RtlSpacingHelper -> android.support.v7.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
android.support.v7.widget.ScrollbarHelper -> android.support.v7.widget.ScrollbarHelper:
    63:65:int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:34:int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:84:int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
android.support.v7.widget.ScrollingTabContainerView -> android.support.v7.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    260:273:void animateToTab(int) -> animateToTab
    214:220:android.widget.Spinner createSpinner() -> createSpinner
    293:306:android.support.v7.widget.ScrollingTabContainerView$TabView createTabView(android.support.v7.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:282:void onAttachedToWindow() -> onAttachedToWindow
    225:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:290:void onDetachedFromWindow() -> onDetachedFromWindow
    371:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:138:void onMeasure(int,int) -> onMeasure
    378:378:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    154:170:void performCollapse() -> performCollapse
    173:179:boolean performExpand() -> performExpand
    150:151:void setAllowCollapse(boolean) -> setAllowCollapse
    199:201:void setContentHeight(int) -> setContentHeight
    183:196:void setTabSelected(int) -> setTabSelected
android.support.v7.widget.ScrollingTabContainerView$1 -> android.support.v7.widget.ScrollingTabContainerView$1:
    264:264:void <init>(android.support.v7.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:270:void run() -> run
android.support.v7.widget.ScrollingTabContainerView$TabAdapter -> android.support.v7.widget.ScrollingTabContainerView$TabAdapter:
    522:523:void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    527:527:int getCount() -> getCount
    532:532:java.lang.Object getItem(int) -> getItem
    537:537:long getItemId(int) -> getItemId
    542:547:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
android.support.v7.widget.ScrollingTabContainerView$TabClickListener -> android.support.v7.widget.ScrollingTabContainerView$TabClickListener:
    552:553:void <init>(android.support.v7.widget.ScrollingTabContainerView) -> <init>
    557:564:void onClick(android.view.View) -> onClick
android.support.v7.widget.ScrollingTabContainerView$TabView -> android.support.v7.widget.ScrollingTabContainerView$TabView:
    390:406:void <init>(android.support.v7.widget.ScrollingTabContainerView,android.content.Context,android.support.v7.app.ActionBar$Tab,boolean) -> <init>
    409:411:void bindTab(android.support.v7.app.ActionBar$Tab) -> bindTab
    517:517:android.support.v7.app.ActionBar$Tab getTab() -> getTab
    424:427:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    431:435:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    439:446:void onMeasure(int,int) -> onMeasure
    415:420:void setSelected(boolean) -> setSelected
    449:514:void update() -> update
android.support.v7.widget.SearchView -> android.support.v7.widget.SearchView:
    175:175:void <clinit>() -> <clinit>
    266:267:void <init>(android.content.Context) -> <init>
    270:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    274:386:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1363:1384:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    496:501:void clearFocus() -> clearFocus
    1536:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1655:1691:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1581:1636:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1566:1570:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1201:1202:void dismissSuggestions() -> dismissSuggestions
    1696:1698:void forceSuggestionQuery() -> forceSuggestionQuery
    850:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1087:1088:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    451:451:int getImeOptions() -> getImeOptions
    473:473:int getInputType() -> getInputType
    776:776:int getMaxWidth() -> getMaxWidth
    863:864:int getPreferredHeight() -> getPreferredHeight
    858:859:int getPreferredWidth() -> getPreferredWidth
    558:558:java.lang.CharSequence getQuery() -> getQuery
    618:625:java.lang.CharSequence getQueryHint() -> getQueryHint
    393:393:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    389:389:int getSuggestionRowLayout() -> getSuggestionRowLayout
    754:754:android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    892:905:boolean hasVoiceSearch() -> hasVoiceSearch
    682:682:boolean isIconified() -> isIconified
    1701:1701:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    909:909:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1493:1503:void launchIntent(android.content.Intent) -> launchIntent
    1515:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1476:1486:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1278:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1290:1297:void onActionViewExpanded() -> onActionViewExpanded
    1205:1222:void onCloseClicked() -> onCloseClicked
    963:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1387:1392:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1398:1401:boolean onItemSelected(int) -> onItemSelected
    831:847:void onLayout(boolean,int,int,int,int) -> onLayout
    782:827:void onMeasure(int,int) -> onMeasure
    972:973:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1352:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1344:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1225:1231:void onSearchClicked() -> onSearchClicked
    1187:1198:void onSubmitQuery() -> onSubmitQuery
    1042:1081:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1173:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1257:1264:void onTextFocusChanged() -> onTextFocusChanged
    1235:1254:void onVoiceClicked() -> onVoiceClicked
    1268:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    944:945:void postUpdateFocusedState() -> postUpdateFocusedState
    479:490:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1443:1463:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    428:429:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    668:673:void setIconified(boolean) -> setIconified
    641:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    440:441:void setImeOptions(int) -> setImeOptions
    463:464:void setInputType(int) -> setInputType
    763:766:void setMaxWidth(int) -> setMaxWidth
    519:520:void setOnCloseListener(android.support.v7.widget.SearchView$OnCloseListener) -> setOnCloseListener
    528:529:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    510:511:void setOnQueryTextListener(android.support.v7.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    549:550:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    537:538:void setOnSuggestionListener(android.support.v7.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    570:580:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1509:1512:void setQuery(java.lang.CharSequence) -> setQuery
    593:595:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    722:727:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    405:419:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    694:696:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    744:747:void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    932:941:void updateCloseButton() -> updateCloseButton
    948:959:void updateFocusedState() -> updateFocusedState
    1101:1103:void updateQueryHint() -> updateQueryHint
    1109:1143:void updateSearchAutoComplete() -> updateSearchAutoComplete
    922:929:void updateSubmitArea() -> updateSubmitArea
    913:919:void updateSubmitButton(boolean) -> updateSubmitButton
    868:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1152:1158:void updateVoiceButton(boolean) -> updateVoiceButton
android.support.v7.widget.SearchView$1 -> android.support.v7.widget.SearchView$1:
    177:177:void <init>(android.support.v7.widget.SearchView) -> <init>
    180:181:void run() -> run
android.support.v7.widget.SearchView$10 -> android.support.v7.widget.SearchView$10:
    1708:1708:void <init>(android.support.v7.widget.SearchView) -> <init>
    1720:1720:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1710:1710:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1715:1716:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
android.support.v7.widget.SearchView$2 -> android.support.v7.widget.SearchView$2:
    184:184:void <init>(android.support.v7.widget.SearchView) -> <init>
    187:190:void run() -> run
android.support.v7.widget.SearchView$3 -> android.support.v7.widget.SearchView$3:
    330:330:void <init>(android.support.v7.widget.SearchView) -> <init>
    333:336:void onFocusChange(android.view.View,boolean) -> onFocusChange
android.support.v7.widget.SearchView$4 -> android.support.v7.widget.SearchView$4:
    375:375:void <init>(android.support.v7.widget.SearchView) -> <init>
    379:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
android.support.v7.widget.SearchView$5 -> android.support.v7.widget.SearchView$5:
    975:975:void <init>(android.support.v7.widget.SearchView) -> <init>
    978:989:void onClick(android.view.View) -> onClick
android.support.v7.widget.SearchView$6 -> android.support.v7.widget.SearchView$6:
    997:997:void <init>(android.support.v7.widget.SearchView) -> <init>
    1001:1031:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
android.support.v7.widget.SearchView$7 -> android.support.v7.widget.SearchView$7:
    1160:1160:void <init>(android.support.v7.widget.SearchView) -> <init>
    1167:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
android.support.v7.widget.SearchView$8 -> android.support.v7.widget.SearchView$8:
    1406:1406:void <init>(android.support.v7.widget.SearchView) -> <init>
    1414:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v7.widget.SearchView$9 -> android.support.v7.widget.SearchView$9:
    1418:1418:void <init>(android.support.v7.widget.SearchView) -> <init>
    1426:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1436:1436:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
android.support.v7.widget.SearchView$AutoCompleteTextViewReflector -> android.support.v7.widget.SearchView$AutoCompleteTextViewReflector:
    2025:2047:void <init>() -> <init>
    2059:2065:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2050:2056:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2068:2074:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
android.support.v7.widget.SearchView$SavedState -> android.support.v7.widget.SearchView$SavedState:
    1324:1324:void <clinit>() -> <clinit>
    1303:1304:void <init>(android.os.Parcelable) -> <init>
    1307:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1319:1320:java.lang.String toString() -> toString
    1313:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.SearchView$SavedState$1 -> android.support.v7.widget.SearchView$SavedState$1:
    1324:1324:void <init>() -> <init>
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1327:1327:android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1332:1332:android.support.v7.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object[] newArray(int) -> newArray
    1337:1337:android.support.v7.widget.SearchView$SavedState[] newArray(int) -> newArray
android.support.v7.widget.SearchView$SearchAutoComplete -> android.support.v7.widget.SearchView$SearchAutoComplete:
    1837:1838:void <init>(android.content.Context) -> <init>
    1841:1842:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1845:1847:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1926:1926:boolean enoughToFilter() -> enoughToFilter
    1959:1967:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1871:1871:boolean isEmpty() -> isEmpty
    1978:1983:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1851:1855:void onFinishInflate() -> onFinishInflate
    1916:1918:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1931:1952:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1898:1912:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1890:1890:void performCompletion() -> performCompletion
    1880:1880:void replaceText(java.lang.CharSequence) -> replaceText
    1996:2017:void setImeVisibility(boolean) -> setImeVisibility
    1858:1859:void setSearchView(android.support.v7.widget.SearchView) -> setSearchView
    1863:1865:void setThreshold(int) -> setThreshold
    1987:1993:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
android.support.v7.widget.SearchView$SearchAutoComplete$1 -> android.support.v7.widget.SearchView$SearchAutoComplete$1:
    1829:1829:void <init>(android.support.v7.widget.SearchView$SearchAutoComplete) -> <init>
    1832:1833:void run() -> run
android.support.v7.widget.SearchView$UpdatableTouchDelegate -> android.support.v7.widget.SearchView$UpdatableTouchDelegate:
    1755:1762:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1773:1814:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1765:1769:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
android.support.v7.widget.SimpleItemAnimator -> android.support.v7.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:138:boolean animatePersistence(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    404:404:void onAddFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(android.support.v7.widget.RecyclerView$ViewHolder) -> onRemoveStarting
android.support.v7.widget.StaggeredGridLayoutManager -> android.support.v7.widget.StaggeredGridLayoutManager:
    229:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1808:1811:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:819:void applyPendingSavedState(android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1867:1873:boolean areAllEndsEqual() -> areAllEndsEqual
    1877:1883:boolean areAllStartsEqual() -> areAllStartsEqual
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1752:1765:void attachViewToSpans(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,android.support.v7.widget.LayoutState) -> attachViewToSpans
    2045:2049:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2029:2029:boolean canScrollHorizontally() -> canScrollHorizontally
    2024:2024:boolean canScrollVertically() -> canScrollVertically
    270:271:boolean checkForGaps() -> checkForGaps
    2275:2275:boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:416:boolean checkSpanForGap(android.support.v7.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2125:2128:void collectAdjacentPrefetchPositions(int,int,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1095:int computeScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeScrollExtent
    1072:1075:int computeScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeScrollOffset
    1112:1115:int computeScrollRange(android.support.v7.widget.RecyclerView$State) -> computeScrollRange
    2054:2066:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State) -> computeVerticalScrollRange
    2394:2401:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1734:1739:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1743:1748:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:261:void createOrientationHelpers() -> createOrientationHelpers
    1577:1730:int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State) -> fill
    2220:2228:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1389:1408:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1359:1379:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1329:1331:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2237:2244:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1413:1422:void fixEndGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixEndGap
    1432:1441:void fixStartGap(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> fixStartGap
    2250:2254:android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2261:2261:android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2266:2269:android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1346:1349:int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2210:2211:int getFirstChildPosition() -> getFirstChildPosition
    2205:2206:int getLastChildPosition() -> getLastChildPosition
    1887:1894:int getMaxEnd(int) -> getMaxEnd
    1845:1852:int getMaxStart(int) -> getMaxStart
    1898:1905:int getMinEnd(int) -> getMinEnd
    1856:1863:int getMinStart(int) -> getMinStart
    1982:2018:android.support.v7.widget.StaggeredGridLayoutManager$Span getNextSpan(android.support.v7.widget.LayoutState) -> getNextSpan
    1337:1340:int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> getRowCountForAccessibility
    1533:1573:void handleUpdate(int,int,int) -> handleUpdate
    339:399:android.view.View hasGapsToFix() -> hasGapsToFix
    549:551:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1488:1492:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1496:1500:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:331:void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2286:2380:android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onFocusSearchFailed
    1304:1321:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1300:void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1509:1510:void onItemsAdded(android.support.v7.widget.RecyclerView,int,int) -> onItemsAdded
    1514:1516:void onItemsChanged(android.support.v7.widget.RecyclerView) -> onItemsChanged
    1520:1521:void onItemsMoved(android.support.v7.widget.RecyclerView,int,int,int) -> onItemsMoved
    1504:1505:void onItemsRemoved(android.support.v7.widget.RecyclerView,int,int) -> onItemsRemoved
    1526:1527:void onItemsUpdated(android.support.v7.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:606:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> onLayoutChildren
    611:722:void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:731:void onLayoutCompleted(android.support.v7.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1277:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:319:void onScrollStateChanged(int) -> onScrollStateChanged
    1972:1975:boolean preferLastSpan(int) -> preferLastSpan
    2162:2174:void prepareLayoutStateForDelta(int,android.support.v7.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1815:1818:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1768:1769:void recycle(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState) -> recycle
    1938:1966:void recycleFromEnd(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1909:1935:void recycleFromStart(android.support.v7.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:780:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:565:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2177:2178:int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollBy
    2035:2035:int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollHorizontallyBy
    2079:2085:void scrollToPosition(int) -> scrollToPosition
    2041:2041:int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State) -> scrollVerticallyBy
    1481:1484:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:461:void setOrientation(int) -> setOrientation
    477:483:void setReverseLayout(boolean) -> setReverseLayout
    429:440:void setSpanCount(int) -> setSpanCount
    2072:2075:void smoothScrollToPosition(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1821:1827:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:844:boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:850:boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:833:void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1450:1478:void updateLayoutState(int,android.support.v7.widget.RecyclerView$State) -> updateLayoutState
    927:931:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1830:1842:void updateRemainingSpans(android.support.v7.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1209:1214:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
android.support.v7.widget.StaggeredGridLayoutManager$1 -> android.support.v7.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(android.support.v7.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo -> android.support.v7.widget.StaggeredGridLayoutManager$AnchorInfo:
    3266:3268:void <init>(android.support.v7.widget.StaggeredGridLayoutManager) -> <init>
    3293:3295:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3298:3303:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3271:3279:void reset() -> reset
    3282:3290:void saveSpanReferenceLines(android.support.v7.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams -> android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams:
    2452:2453:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2456:2457:void <init>(int,int) -> <init>
    2460:2461:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2464:2465:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2500:2503:int getSpanIndex() -> getSpanIndex
    2490:2490:boolean isFullSpan() -> isFullSpan
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2840:3074:void <init>() -> <init>
    3009:3029:void addFullSpanItem(android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2917:2921:void clear() -> clear
    2905:2914:void ensureSize(int) -> ensureSize
    2851:2859:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3053:3068:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3032:3041:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2884:2885:int getSpan(int) -> getSpan
    2866:2879:int invalidateAfter(int) -> invalidateAfter
    2983:3005:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2954:2955:void offsetForAddition(int,int) -> offsetForAddition
    2924:2925:void offsetForRemoval(int,int) -> offsetForRemoval
    2966:2976:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2936:2951:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2892:2894:void setSpan(int,android.support.v7.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2897:2901:int sizeForPosition(int) -> sizeForPosition
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3130:3130:void <clinit>() -> <clinit>
    3084:3093:void <init>(android.os.Parcel) -> <init>
    3095:3096:void <init>() -> <init>
    3104:3104:int describeContents() -> describeContents
    3099:3099:int getGapForSpan(int) -> getGapForSpan
    3122:3126:java.lang.String toString() -> toString
    3109:3118:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3131:3131:void <init>() -> <init>
    3131:3131:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3134:3134:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3131:3131:java.lang.Object[] newArray(int) -> newArray
    3139:3139:android.support.v7.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
android.support.v7.widget.StaggeredGridLayoutManager$SavedState -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState:
    3238:3238:void <clinit>() -> <clinit>
    3162:3163:void <init>() -> <init>
    3165:3185:void <init>(android.os.Parcel) -> <init>
    3187:3198:void <init>(android.support.v7.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3217:3217:int describeContents() -> describeContents
    3209:3213:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3201:3206:void invalidateSpanInfo() -> invalidateSpanInfo
    3222:3236:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1 -> android.support.v7.widget.StaggeredGridLayoutManager$SavedState$1:
    3239:3239:void <init>() -> <init>
    3239:3239:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3242:3242:android.support.v7.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3239:3239:java.lang.Object[] newArray(int) -> newArray
    3247:3247:android.support.v7.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
android.support.v7.widget.StaggeredGridLayoutManager$Span -> android.support.v7.widget.StaggeredGridLayoutManager$Span:
    2517:2519:void <init>(android.support.v7.widget.StaggeredGridLayoutManager,int) -> <init>
    2602:2612:void appendToSpan(android.view.View) -> appendToSpan
    2617:2634:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2567:2577:void calculateCachedEnd() -> calculateCachedEnd
    2533:2543:void calculateCachedStart() -> calculateCachedStart
    2637:2640:void clear() -> clear
    2702:2704:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2720:2722:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2758:2785:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2795:2795:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2679:2679:int getDeletedSize() -> getDeletedSize
    2555:2563:int getEndLine(int) -> getEndLine
    2581:2585:int getEndLine() -> getEndLine
    2803:2832:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2683:2683:android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2522:2529:int getStartLine(int) -> getStartLine
    2547:2551:int getStartLine() -> getStartLine
    2643:2645:void invalidateCache() -> invalidateCache
    2687:2693:void onOffset(int) -> onOffset
    2652:2663:void popEnd() -> popEnd
    2666:2676:void popStart() -> popStart
    2589:2599:void prependToSpan(android.view.View) -> prependToSpan
    2648:2649:void setLine(int) -> setLine
android.support.v7.widget.SuggestionsAdapter -> android.support.v7.widget.SuggestionsAdapter:
    95:106:void <init>(android.content.Context,android.support.v7.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    275:325:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    217:237:void changeCursor(android.database.Cursor) -> changeCursor
    583:588:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    415:438:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    336:347:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    647:653:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    625:636:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    676:677:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    606:612:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    550:576:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    699:702:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    507:508:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    473:483:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    362:370:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    374:378:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    737:778:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    681:690:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    450:460:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    135:135:boolean hasStableIds() -> hasStableIds
    244:250:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    181:184:void notifyDataSetChanged() -> notifyDataSetChanged
    189:192:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    329:333:void onClick(android.view.View) -> onClick
    146:154:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    118:119:void setQueryRefinement(int) -> setQueryRefinement
    388:403:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    352:359:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    592:595:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    195:208:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
android.support.v7.widget.SuggestionsAdapter$ChildViewCache -> android.support.v7.widget.SuggestionsAdapter$ChildViewCache:
    264:270:void <init>(android.view.View) -> <init>
android.support.v7.widget.SwitchCompat -> android.support.v7.widget.SwitchCompat:
    101:183:void <clinit>() -> <clinit>
    193:194:void <init>(android.content.Context) -> <init>
    204:205:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:291:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1024:1031:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    694:711:void applyThumbTint() -> applyThumbTint
    571:588:void applyTrackTint() -> applyTrackTint
    1034:1037:void cancelPositionAnimator() -> cancelPositionAnimator
    984:988:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1426:1426:float constrain(float,float,float) -> constrain
    1133:1194:void draw(android.graphics.Canvas) -> draw
    1353:1364:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1331:1349:void drawableStateChanged() -> drawableStateChanged
    1263:1270:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1275:1282:int getCompoundPaddingRight() -> getCompoundPaddingRight
    792:792:boolean getShowText() -> getShowText
    733:733:boolean getSplitTrack() -> getSplitTrack
    446:446:int getSwitchMinWidth() -> getSwitchMinWidth
    421:421:int getSwitchPadding() -> getSwitchPadding
    1040:1040:boolean getTargetCheckedState() -> getTargetCheckedState
    761:761:java.lang.CharSequence getTextOff() -> getTextOff
    742:742:java.lang.CharSequence getTextOn() -> getTextOn
    630:630:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1293:1298:int getThumbOffset() -> getThumbOffset
    1302:1316:int getThumbScrollRange() -> getThumbScrollRange
    469:469:int getThumbTextPadding() -> getThumbTextPadding
    661:661:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    690:690:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    509:509:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    539:539:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    567:567:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    888:901:boolean hitThumb(float,float) -> hitThumb
    1373:1387:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    874:880:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1322:1326:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1198:1259:void onDraw(android.graphics.Canvas) -> onDraw
    1391:1393:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1397:1410:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1077:1129:void onLayout(boolean,int,int,int,int) -> onLayout
    797:861:void onMeasure(int,int) -> onMeasure
    865:871:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    906:980:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1060:1073:void setChecked(boolean) -> setChecked
    1418:1420:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    781:785:void setShowText(boolean) -> setShowText
    723:725:void setSplitTrack(boolean) -> setSplitTrack
    433:435:void setSwitchMinWidth(int) -> setSwitchMinWidth
    409:411:void setSwitchPadding(int) -> setSwitchPadding
    300:336:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    364:382:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    392:399:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    339:355:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    770:772:void setTextOff(java.lang.CharSequence) -> setTextOff
    751:753:void setTextOn(java.lang.CharSequence) -> setTextOn
    599:607:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1049:1051:void setThumbPosition(float) -> setThumbPosition
    618:619:void setThumbResource(int) -> setThumbResource
    457:459:void setThumbTextPadding(int) -> setThumbTextPadding
    648:652:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    676:680:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    480:488:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    498:499:void setTrackResource(int) -> setTrackResource
    526:530:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    553:557:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    996:1021:void stopDrag(android.view.MotionEvent) -> stopDrag
    1055:1056:void toggle() -> toggle
    1368:1368:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
android.support.v7.widget.SwitchCompat$1 -> android.support.v7.widget.SwitchCompat$1:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    102:102:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Float get(android.support.v7.widget.SwitchCompat) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
    110:111:void set(android.support.v7.widget.SwitchCompat,java.lang.Float) -> set
android.support.v7.widget.ThemeUtils -> android.support.v7.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:68:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:78:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:105:android.util.TypedValue getTypedValue() -> getTypedValue
android.support.v7.widget.TintContextWrapper -> android.support.v7.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:83:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
android.support.v7.widget.TintInfo -> android.support.v7.widget.TintInfo:
    22:22:void <init>() -> <init>
    29:33:void clear() -> clear
android.support.v7.widget.TintResources -> android.support.v7.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
android.support.v7.widget.TintTypedArray -> android.support.v7.widget.TintTypedArray:
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    185:185:float getDimension(int,float) -> getDimension
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:89:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,android.support.v4.content.res.ResourcesCompat$FontCallback) -> getFont
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    209:209:int getResourceId(int,int) -> getResourceId
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    233:233:boolean hasValue(int) -> hasValue
    54:54:android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    245:246:void recycle() -> recycle
android.support.v7.widget.Toolbar -> android.support.v7.widget.Toolbar:
    225:226:void <init>(android.content.Context) -> <init>
    229:230:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    233:343:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2131:2137:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2019:2045:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1390:1407:void addSystemView(android.view.View,boolean) -> addSystemView
    507:507:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2101:2101:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    715:720:void collapseActionView() -> collapseActionView
    585:588:void dismissPopupMenus() -> dismissPopupMenus
    1371:1387:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2168:2171:void ensureContentInsets() -> ensureContentInsets
    685:688:void ensureLogoView() -> ensureLogoView
    1033:1043:void ensureMenu() -> ensureMenu
    1046:1056:void ensureMenuView() -> ensureMenuView
    1361:1368:void ensureNavButtonView() -> ensureNavButtonView
    142:142:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2096:2096:android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2078:2078:android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2083:2090:android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2048:2055:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    1968:1973:int getChildTop(android.view.View,int) -> getChildTop
    2000:2005:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1146:1146:int getContentInsetEnd() -> getContentInsetEnd
    1268:1270:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1189:1189:int getContentInsetLeft() -> getContentInsetLeft
    1209:1209:int getContentInsetRight() -> getContentInsetRight
    1126:1126:int getContentInsetStart() -> getContentInsetStart
    1225:1227:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1320:1327:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1340:1342:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1355:1357:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1306:1308:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2066:2068:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    643:643:android.graphics.drawable.Drawable getLogo() -> getLogo
    681:681:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1007:1008:android.view.Menu getMenu() -> getMenu
    1059:1059:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    889:889:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    981:981:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2177:2177:android.support.v7.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1028:1029:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2181:2181:android.content.Context getPopupContext() -> getPopupContext
    369:369:int getPopupTheme() -> getPopupTheme
    784:784:java.lang.CharSequence getSubtitle() -> getSubtitle
    728:728:java.lang.CharSequence getTitle() -> getTitle
    466:466:int getTitleMarginBottom() -> getTitleMarginBottom
    444:444:int getTitleMarginEnd() -> getTitleMarginEnd
    400:400:int getTitleMarginStart() -> getTitleMarginStart
    422:422:int getTitleMarginTop() -> getTitleMarginTop
    2072:2073:int getVerticalMargins(android.view.View) -> getVerticalMargins
    1923:1938:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2111:2114:android.support.v7.widget.DecorToolbar getWrapper() -> getWrapper
    701:701:boolean hasExpandedActionView() -> hasExpandedActionView
    541:541:boolean hideOverflowMenu() -> hideOverflowMenu
    2140:2140:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    523:523:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    517:517:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    1943:1951:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    1956:1964:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1532:1549:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1507:1524:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1451:1453:void onDetachedFromWindow() -> onDetachedFromWindow
    1486:1502:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1705:1920:void onLayout(boolean,int,int,int,int) -> onLayout
    1571:1701:void onMeasure(int,int) -> onMeasure
    1423:1442:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    483:489:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1411:1418:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1462:1478:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1445:1447:void postShowOverflowMenu() -> postShowOverflowMenu
    2118:2128:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2150:2152:void setCollapsible(boolean) -> setCollapsible
    1286:1295:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1244:1253:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1105:1107:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    501:502:void setLogo(int) -> setLogo
    621:633:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    655:656:void setLogoDescription(int) -> setLogoDescription
    667:673:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    547:579:void setMenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.widget.ActionMenuPresenter) -> setMenu
    2160:2165:void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    903:904:void setNavigationContentDescription(int) -> setNavigationContentDescription
    917:923:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    940:941:void setNavigationIcon(int) -> setNavigationIcon
    958:970:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    994:996:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1083:1084:void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1017:1019:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    353:361:void setPopupTheme(int) -> setPopupTheme
    795:796:void setSubtitle(int) -> setSubtitle
    806:830:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    848:852:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    872:876:void setSubtitleTextColor(int) -> setSubtitleTextColor
    740:741:void setTitle(int) -> setTitle
    752:776:void setTitle(java.lang.CharSequence) -> setTitle
    477:479:void setTitleMarginBottom(int) -> setTitleMarginBottom
    455:458:void setTitleMarginEnd(int) -> setTitleMarginEnd
    411:414:void setTitleMarginStart(int) -> setTitleMarginStart
    433:436:void setTitleMarginTop(int) -> setTitleMarginTop
    837:841:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    860:864:void setTitleTextColor(int) -> setTitleTextColor
    1556:1566:boolean shouldCollapse() -> shouldCollapse
    2062:2062:boolean shouldLayout(android.view.View) -> shouldLayout
    532:532:boolean showOverflowMenu() -> showOverflowMenu
android.support.v7.widget.Toolbar$1 -> android.support.v7.widget.Toolbar$1:
    200:200:void <init>(android.support.v7.widget.Toolbar) -> <init>
    203:206:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
android.support.v7.widget.Toolbar$2 -> android.support.v7.widget.Toolbar$2:
    218:218:void <init>(android.support.v7.widget.Toolbar) -> <init>
    220:221:void run() -> run
android.support.v7.widget.Toolbar$3 -> android.support.v7.widget.Toolbar$3:
    1380:1380:void <init>(android.support.v7.widget.Toolbar) -> <init>
    1383:1384:void onClick(android.view.View) -> onClick
android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter -> android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2309:2310:void <init>(android.support.v7.widget.Toolbar) -> <init>
    2407:2420:boolean collapseItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> collapseItemActionView
    2370:2400:boolean expandItemActionView(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl) -> expandItemActionView
    2365:2365:boolean flagActionItems() -> flagActionItems
    2315:2319:void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder) -> initForMenu
    2361:2361:void onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2356:2356:boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2329:2348:void updateMenuView(boolean) -> updateMenuView
android.support.v7.widget.Toolbar$LayoutParams -> android.support.v7.widget.Toolbar$LayoutParams:
    2216:2217:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2220:2222:void <init>(int,int) -> <init>
    2234:2237:void <init>(android.support.v7.widget.Toolbar$LayoutParams) -> <init>
    2240:2241:void <init>(android.support.v7.app.ActionBar$LayoutParams) -> <init>
    2244:2248:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2251:2252:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2255:2259:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
android.support.v7.widget.Toolbar$SavedState -> android.support.v7.widget.Toolbar$SavedState:
    2287:2287:void <clinit>() -> <clinit>
    2271:2274:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2277:2278:void <init>(android.os.Parcelable) -> <init>
    2282:2285:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v7.widget.Toolbar$SavedState$1 -> android.support.v7.widget.Toolbar$SavedState$1:
    2287:2287:void <init>() -> <init>
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2290:2290:android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2295:2295:android.support.v7.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object[] newArray(int) -> newArray
    2300:2300:android.support.v7.widget.Toolbar$SavedState[] newArray(int) -> newArray
android.support.v7.widget.ToolbarWidgetWrapper -> android.support.v7.widget.ToolbarWidgetWrapper:
    96:98:void <init>(android.support.v7.widget.Toolbar,boolean) -> <init>
    101:192:void <init>(android.support.v7.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    375:376:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    656:656:int getHeight() -> getHeight
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:287:void initIndeterminateProgress() -> initIndeterminateProgress
    281:282:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    448:449:void setCollapsible(boolean) -> setCollapsible
    540:547:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:418:void setDisplayOptions(int) -> setDisplayOptions
    422:434:void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    454:454:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    317:319:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:371:void setMenu(android.view.Menu,android.support.v7.view.menu.MenuPresenter$Callback) -> setMenu
    672:673:void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:361:void setMenuPrepared() -> setMenuPrepared
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:627:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:277:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:662:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:android.support.v4.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:637:void updateHomeAccessibility() -> updateHomeAccessibility
    611:616:void updateNavigationIcon() -> updateNavigationIcon
    322:331:void updateToolbarLogo() -> updateToolbarLogo
android.support.v7.widget.ToolbarWidgetWrapper$1 -> android.support.v7.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(android.support.v7.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
android.support.v7.widget.ToolbarWidgetWrapper$2 -> android.support.v7.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(android.support.v7.widget.ToolbarWidgetWrapper,int) -> <init>
    586:587:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:582:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:575:void onAnimationStart(android.view.View) -> onAnimationStart
android.support.v7.widget.TooltipCompat -> android.support.v7.widget.TooltipCompat:
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
android.support.v7.widget.TooltipCompatHandler -> android.support.v7.widget.TooltipCompatHandler:
    108:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:225:void cancelPendingShow() -> cancelPendingShow
    250:252:void clearAnchorPos() -> clearAnchorPos
    192:207:void hide() -> hide
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:221:void scheduleShow() -> scheduleShow
    210:217:void setPendingHandler(android.support.v7.widget.TooltipCompatHandler) -> setPendingHandler
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:189:void show(boolean) -> show
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
android.support.v7.widget.TooltipCompatHandler$1 -> android.support.v7.widget.TooltipCompatHandler$1:
    54:54:void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
android.support.v7.widget.TooltipCompatHandler$2 -> android.support.v7.widget.TooltipCompatHandler$2:
    60:60:void <init>(android.support.v7.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
android.support.v7.widget.TooltipPopup -> android.support.v7.widget.TooltipPopup:
    58:73:void <init>(android.content.Context) -> <init>
    104:184:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    187:207:android.view.View getAppRootView(android.view.View) -> getAppRootView
    90:96:void hide() -> hide
    99:99:boolean isShowing() -> isShowing
    77:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
android.support.v7.widget.VectorEnabledTintResources -> android.support.v7.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    55:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
android.support.v7.widget.ViewBoundsCheck -> android.support.v7.widget.ViewBoundsCheck:
    131:134:void <init>(android.support.v7.widget.ViewBoundsCheck$Callback) -> <init>
    217:242:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    252:259:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
android.support.v7.widget.ViewBoundsCheck$BoundFlags -> android.support.v7.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    152:153:void addFlags(int) -> addFlags
    170:193:boolean boundsMatch() -> boundsMatch
    160:166:int compare(int,int) -> compare
    156:157:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
android.support.v7.widget.ViewInfoStore -> android.support.v7.widget.ViewInfoStore:
    35:288:void <init>() -> <init>
    143:150:void addToAppearedInPreLayoutHolders(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    196:202:void addToDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    130:131:void addToOldChangeHolders(long,android.support.v7.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    180:187:void addToPostLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    62:69:void addToPreLayout(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    52:54:void clear() -> clear
    171:171:android.support.v7.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    72:73:boolean isDisappearing(android.support.v7.widget.RecyclerView$ViewHolder) -> isDisappearing
    159:160:boolean isInPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> isInPreLayout
    271:272:void onDetach() -> onDetach
    275:276:void onViewDetached(android.support.v7.widget.RecyclerView$ViewHolder) -> onViewDetached
    99:121:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(android.support.v7.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    95:95:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    84:84:android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    217:251:void process(android.support.v7.widget.ViewInfoStore$ProcessCallback) -> process
    209:214:void removeFromDisappearedInLayout(android.support.v7.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    258:268:void removeViewHolder(android.support.v7.widget.RecyclerView$ViewHolder) -> removeViewHolder
android.support.v7.widget.ViewInfoStore$InfoRecord -> android.support.v7.widget.ViewInfoStore$InfoRecord:
    305:305:void <clinit>() -> <clinit>
    307:308:void <init>() -> <init>
    324:325:void drainCache() -> drainCache
    311:312:android.support.v7.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    316:320:void recycle(android.support.v7.widget.ViewInfoStore$InfoRecord) -> recycle
android.support.v7.widget.ViewStubCompat -> android.support.v7.widget.ViewStubCompat:
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    159:159:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    155:155:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:150:void onMeasure(int,int) -> onMeasure
    97:98:void setInflatedId(int) -> setInflatedId
    137:138:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:130:void setLayoutResource(int) -> setLayoutResource
    248:249:void setOnInflateListener(android.support.v7.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:186:void setVisibility(int) -> setVisibility
android.support.v7.widget.ViewUtils -> android.support.v7.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
android.support.v7.widget.helper.ItemTouchHelper -> android.support.v7.widget.helper.ItemTouchHelper:
    446:448:void <init>(android.support.v7.widget.helper.ItemTouchHelper$Callback) -> <init>
    1290:1313:void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    467:482:void attachToRecyclerView(android.support.v7.widget.RecyclerView) -> attachToRecyclerView
    1237:1260:int checkHorizontalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    980:982:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1264:1286:int checkVerticalSwipe(android.support.v7.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    494:508:void destroyCallbacks() -> destroyCallbacks
    914:926:void endRecoverAnimation(android.support.v7.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1155:1165:android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1039:1054:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    800:845:java.util.List findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder) -> findSwapTargets
    950:972:android.support.v7.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    931:932:void getItemOffsets(android.graphics.Rect,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> getItemOffsets
    527:537:void getSelectedDxDy(float[]) -> getSelectedDxDy
    723:729:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    451:454:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    853:886:void moveIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    936:940:void obtainVelocityTracker() -> obtainVelocityTracker
    890:890:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    894:907:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    554:563:void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDraw
    541:549:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State) -> onDrawOver
    700:719:void postDispatchSwipe(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    943:947:void releaseVelocityTracker() -> releaseVelocityTracker
    1317:1324:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    737:793:boolean scrollIfNecessary() -> scrollIfNecessary
    574:695:void select(android.support.v7.widget.RecyclerView$ViewHolder,int) -> select
    485:491:void setupCallbacks() -> setupCallbacks
    511:514:void startGestureDetection() -> startGestureDetection
    517:524:void stopGestureDetection() -> stopGestureDetection
    1191:1233:int swipeIfNecessary(android.support.v7.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1170:1188:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
android.support.v7.widget.helper.ItemTouchHelper$1 -> android.support.v7.widget.helper.ItemTouchHelper$1:
    257:257:void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    260:267:void run() -> run
android.support.v7.widget.helper.ItemTouchHelper$2 -> android.support.v7.widget.helper.ItemTouchHelper$2:
    313:313:void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    317:357:boolean onInterceptTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    420:424:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    362:416:void onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
android.support.v7.widget.helper.ItemTouchHelper$3 -> android.support.v7.widget.helper.ItemTouchHelper$3:
    635:635:void <init>(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,android.support.v7.widget.RecyclerView$ViewHolder) -> <init>
    638:660:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
android.support.v7.widget.helper.ItemTouchHelper$4 -> android.support.v7.widget.helper.ItemTouchHelper$4:
    700:700:void <init>(android.support.v7.widget.helper.ItemTouchHelper,android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation,int) -> <init>
    703:717:void run() -> run
android.support.v7.widget.helper.ItemTouchHelper$5 -> android.support.v7.widget.helper.ItemTouchHelper$5:
    1294:1294:void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    1297:1308:int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
android.support.v7.widget.helper.ItemTouchHelper$Callback -> android.support.v7.widget.helper.ItemTouchHelper$Callback:
    1401:1408:void <clinit>() -> <clinit>
    1385:1421:void <init>() -> <init>
    1626:1626:boolean canDropOver(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> canDropOver
    1802:1853:android.support.v7.widget.RecyclerView$ViewHolder chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2038:2039:void clearView(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> clearView
    1573:1588:int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    1482:1497:int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    1593:1594:int getAbsoluteMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2132:2138:long getAnimationDuration(android.support.v7.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1690:1690:int getBoundingBoxMargin() -> getBoundingBoxMargin
    1901:1905:int getMaxDragScroll(android.support.v7.widget.RecyclerView) -> getMaxDragScroll
    1720:1720:float getMoveThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    1706:1706:float getSwipeThreshold(android.support.v7.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    1770:1770:float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    1598:1599:boolean hasDragFlag(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> hasDragFlag
    2166:2184:int interpolateOutOfBoundsScroll(android.support.v7.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1678:1678:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    1663:1663:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    1529:1529:int makeFlag(int,int) -> makeFlag
    1512:1514:int makeMovementFlags(int,int) -> makeMovementFlags
    2071:2073:void onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2105:2107:void onChildDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1978:1992:void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    1997:2022:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1944:1973:void onMoved(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,int,android.support.v7.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1895:1898:void onSelectedChanged(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
android.support.v7.widget.helper.ItemTouchHelper$Callback$1 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$1:
    1401:1401:void <init>() -> <init>
    1404:1404:float getInterpolation(float) -> getInterpolation
android.support.v7.widget.helper.ItemTouchHelper$Callback$2 -> android.support.v7.widget.helper.ItemTouchHelper$Callback$2:
    1408:1408:void <init>() -> <init>
    1411:1412:float getInterpolation(float) -> getInterpolation
android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener -> android.support.v7.widget.helper.ItemTouchHelper$ItemTouchHelperGestureListener:
    2316:2317:void <init>(android.support.v7.widget.helper.ItemTouchHelper) -> <init>
    2324:2325:void doNotReactToLongPress() -> doNotReactToLongPress
    2329:2329:boolean onDown(android.view.MotionEvent) -> onDown
    2334:2365:void onLongPress(android.view.MotionEvent) -> onLongPress
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation:
    2401:2420:void <init>(android.support.v7.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2432:2433:void cancel() -> cancel
    2471:2472:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2463:2467:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2477:2477:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2459:2459:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    2423:2424:void setDuration(long) -> setDuration
    2436:2437:void setFraction(float) -> setFraction
    2427:2429:void start() -> start
    2444:2454:void update() -> update
android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1 -> android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation$1:
    2411:2411:void <init>(android.support.v7.widget.helper.ItemTouchHelper$RecoverAnimation) -> <init>
    2414:2415:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback -> android.support.v7.widget.helper.ItemTouchHelper$SimpleCallback:
    2233:2236:void <init>(int,int) -> <init>
    2287:2287:int getDragDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getDragDirs
    2293:2293:int getMovementFlags(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getMovementFlags
    2272:2272:int getSwipeDirs(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> getSwipeDirs
android.support.v7.widget.helper.ItemTouchUIUtilImpl -> android.support.v7.widget.helper.ItemTouchUIUtilImpl:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    75:85:void clearView(android.view.View) -> clearView
    53:65:float findMaxElevation(android.support.v7.widget.RecyclerView,android.view.View) -> findMaxElevation
    36:50:void onDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    71:71:void onDrawOver(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    89:89:void onSelected(android.view.View) -> onSelected
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    9:9:void <init>() -> <init>
    11:20:android.support.v4.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    24:33:void write(android.support.v4.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    9:9:void <init>() -> <init>
    11:13:android.support.v4.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:19:void write(android.support.v4.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    9:9:void <init>() -> <init>
    11:14:android.support.v4.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    18:21:void write(android.support.v4.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    9:9:void <init>() -> <init>
    11:16:android.support.v4.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    20:25:void write(android.support.v4.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.text.emoji.flatbuffer.MetadataItem -> androidx.text.emoji.flatbuffer.MetadataItem:
    30:30:void <init>() -> <init>
    46:47:androidx.text.emoji.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer) -> __assign
    41:43:void __init(int,java.nio.ByteBuffer) -> __init
    81:82:int codepoints(int) -> codepoints
    86:87:int codepointsLength() -> codepointsLength
    56:57:boolean emojiStyle() -> emojiStyle
    76:77:short height() -> height
    51:52:int id() -> id
    61:62:short sdkAdded() -> sdkAdded
    71:72:short width() -> width
androidx.text.emoji.flatbuffer.MetadataList -> androidx.text.emoji.flatbuffer.MetadataList:
    30:30:void <init>() -> <init>
    46:47:androidx.text.emoji.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer) -> __assign
    41:43:void __init(int,java.nio.ByteBuffer) -> __init
    32:32:androidx.text.emoji.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer) -> getRootAsMetadataList
    36:37:androidx.text.emoji.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.text.emoji.flatbuffer.MetadataList) -> getRootAsMetadataList
    60:61:androidx.text.emoji.flatbuffer.MetadataItem list(androidx.text.emoji.flatbuffer.MetadataItem,int) -> list
    65:66:int listLength() -> listLength
    51:52:int version() -> version
androidx.text.emoji.flatbuffer.Table -> androidx.text.emoji.flatbuffer.Table:
    34:46:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    82:82:int __indirect(int) -> __indirect
    66:67:int __offset(int) -> __offset
    150:151:int __vector(int) -> __vector
    138:140:int __vector_len(int) -> __vector_len
androidx.text.emoji.flatbuffer.Table$1 -> androidx.text.emoji.flatbuffer.Table$1:
    34:34:void <init>() -> <init>
    34:34:java.lang.Object initialValue() -> initialValue
    37:37:java.nio.charset.CharsetDecoder initialValue() -> initialValue
androidx.text.emoji.flatbuffer.Table$2 -> androidx.text.emoji.flatbuffer.Table$2:
    40:40:void <init>() -> <init>
    40:40:java.lang.Object initialValue() -> initialValue
    43:43:java.nio.charset.Charset initialValue() -> initialValue
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    58:58:void <clinit>() -> <clinit>
    36:38:void <init>(android.os.Parcel) -> <init>
    49:49:int describeContents() -> describeContents
    54:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    61:61:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    66:66:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    55:1492:void <init>() -> <init>
    1479:1480:java.lang.Class findParcelClass(androidx.versionedparcelable.VersionedParcelable) -> findParcelClass
    1485:1487:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    79:79:boolean isStream() -> isStream
    436:439:byte[] readByteArray(byte[],int) -> readByteArray
    1438:1442:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    373:376:int readInt(int,int) -> readInt
    445:448:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    415:418:java.lang.String readString(java.lang.String,int) -> readString
    1366:1369:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1382:1386:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    242:242:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    277:279:void writeByteArray(byte[],int) -> writeByteArray
    298:300:void writeInt(int,int) -> writeInt
    355:357:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    334:336:void writeString(java.lang.String,int) -> writeString
    1460:1464:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    927:929:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    934:943:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    946:950:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    46:47:void <init>(android.os.Parcel) -> <init>
    49:55:void <init>(android.os.Parcel,int,int,java.lang.String) -> <init>
    93:105:void closeField() -> closeField
    113:113:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    219:225:byte[] readByteArray() -> readByteArray
    72:78:boolean readField(int) -> readField
    189:189:int readInt() -> readInt
    231:231:android.os.Parcelable readParcelable() -> readParcelable
    209:209:java.lang.String readString() -> readString
    58:67:int readUntilField(int) -> readUntilField
    83:89:void setOutputField(int) -> setOutputField
    119:125:void writeByteArray(byte[]) -> writeByteArray
    139:140:void writeInt(int) -> writeInt
    169:170:void writeParcelable(android.os.Parcelable) -> writeParcelable
    159:160:void writeString(java.lang.String) -> writeString
com.android.databinding.library.baseAdapters.DataBinderMapperImpl -> com.android.databinding.library.baseAdapters.DataBinderMapperImpl:
    19:22:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    70:71:java.util.List collectDependencies() -> collectDependencies
    26:33:android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int) -> getDataBinder
    38:39:android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View[],int) -> getDataBinder
com.google.protobuf.AbstractMessage -> com.google.protobuf.AbstractMessage:
    50:267:void <init>() -> <init>
    173:183:boolean equals(java.lang.Object) -> equals
    137:168:int getSerializedSize() -> getSerializedSize
    189:193:int hashCode() -> hashCode
    248:248:int hashEnum(com.google.protobuf.Internal$EnumLite) -> hashEnum
    253:257:int hashEnumList(java.util.List) -> hashEnumList
    199:212:int hashFields(int,java.util.Map) -> hashFields
    237:237:com.google.protobuf.UninitializedMessageException newUninitializedMessageException() -> newUninitializedMessageException
    106:106:java.lang.String toString() -> toString
    110:132:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.AbstractMessage$1 -> com.google.protobuf.AbstractMessage$1:
    535:535:void <clinit>() -> <clinit>
com.google.protobuf.AbstractMessage$Builder -> com.google.protobuf.AbstractMessage$Builder:
    268:268:void <init>() -> <init>
    369:374:void addRepeatedField(com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    267:267:java.lang.Object clone() -> clone
    688:706:void eagerlyMergeMessageSetExtension(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistry$ExtensionInfo,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet) -> eagerlyMergeMessageSetExtension
    779:781:java.util.List findMissingFields(com.google.protobuf.MessageOrBuilder) -> findMissingFields
    789:817:void findMissingFields(com.google.protobuf.MessageOrBuilder,java.lang.String,java.util.List) -> findMissingFields
    406:409:com.google.protobuf.Message getOriginalMessage(com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor) -> getOriginalMessage
    394:397:boolean hasOriginalMessage(com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor) -> hasOriginalMessage
    446:586:boolean mergeFieldFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet,int) -> mergeFieldFrom
    267:267:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    267:267:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    267:267:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    267:267:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    292:293:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    345:358:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    869:869:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    715:749:void mergeMessageSetExtensionFromBytes(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistry$ExtensionInfo,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet) -> mergeMessageSetExtensionFromBytes
    619:664:void mergeMessageSetExtensionFromCodedStream(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet) -> mergeMessageSetExtensionFromCodedStream
    419:423:void mergeOriginalMessage(com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.Message$Builder) -> mergeOriginalMessage
    752:756:com.google.protobuf.AbstractMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet) -> mergeUnknownFields
    770:770:com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message) -> newUninitializedMessageException
    382:387:void setField(com.google.protobuf.Message$Builder,com.google.protobuf.FieldSet,com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    822:836:java.lang.String subMessagePrefix(java.lang.String,com.google.protobuf.Descriptors$FieldDescriptor,int) -> subMessagePrefix
com.google.protobuf.AbstractMessageLite -> com.google.protobuf.AbstractMessageLite:
    46:107:void <init>() -> <init>
    99:99:com.google.protobuf.UninitializedMessageException newUninitializedMessageException() -> newUninitializedMessageException
    62:68:byte[] toByteArray() -> toByteArray
    49:54:com.google.protobuf.ByteString toByteString() -> toByteString
com.google.protobuf.AbstractMessageLite$Builder -> com.google.protobuf.AbstractMessageLite$Builder:
    108:231:void <init>() -> <init>
    318:333:void addAll(java.lang.Iterable,java.util.Collection) -> addAll
    336:341:void checkForNullValues(java.lang.Iterable) -> checkForNullValues
    146:151:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
com.google.protobuf.AbstractParser -> com.google.protobuf.AbstractParser:
    78:78:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    70:75:com.google.protobuf.MessageLite checkMessageInitialized(com.google.protobuf.MessageLite) -> checkMessageInitialized
    56:59:com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.MessageLite) -> newUninitializedMessageException
    49:49:java.lang.Object parseFrom(com.google.protobuf.ByteString) -> parseFrom
    49:49:java.lang.Object parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    49:49:java.lang.Object parseFrom(byte[]) -> parseFrom
    49:49:java.lang.Object parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    128:128:com.google.protobuf.MessageLite parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    133:133:com.google.protobuf.MessageLite parseFrom(com.google.protobuf.ByteString) -> parseFrom
    176:176:com.google.protobuf.MessageLite parseFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    188:188:com.google.protobuf.MessageLite parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    193:193:com.google.protobuf.MessageLite parseFrom(byte[]) -> parseFrom
    49:49:java.lang.Object parsePartialFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    103:112:com.google.protobuf.MessageLite parsePartialFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    140:149:com.google.protobuf.MessageLite parsePartialFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.ByteString -> com.google.protobuf.ByteString:
    60:81:void <clinit>() -> <clinit>
    84:84:void <init>() -> <init>
    192:194:com.google.protobuf.ByteString copyFrom(byte[],int,int) -> copyFrom
    204:204:com.google.protobuf.ByteString copyFrom(byte[]) -> copyFrom
    255:257:com.google.protobuf.ByteString copyFromUtf8(java.lang.String) -> copyFromUtf8
    467:468:void copyTo(byte[],int,int,int) -> copyTo
    60:60:java.util.Iterator iterator() -> iterator
    898:898:com.google.protobuf.ByteString$CodedBuilder newCodedBuilder(int) -> newCodedBuilder
    514:517:byte[] toByteArray() -> toByteArray
    967:967:java.lang.String toString() -> toString
    572:574:java.lang.String toStringUtf8() -> toStringUtf8
com.google.protobuf.ByteString$CodedBuilder -> com.google.protobuf.ByteString$CodedBuilder:
    902:902:void <init>(int,com.google.protobuf.ByteString$1) -> <init>
    906:909:void <init>(int) -> <init>
    912:917:com.google.protobuf.ByteString build() -> build
    921:921:com.google.protobuf.CodedOutputStream getCodedOutput() -> getCodedOutput
com.google.protobuf.CodedInputStream -> com.google.protobuf.CodedInputStream:
    564:570:void <init>(byte[],int,int) -> <init>
    123:124:void checkLastTagWas(int) -> checkLastTagWas
    515:515:int decodeZigZag32(int) -> decodeZigZag32
    529:529:long decodeZigZag64(long) -> decodeZigZag64
    687:692:int getBytesUntilLimit() -> getBytesUntilLimit
    701:701:boolean isAtEnd() -> isAtEnd
    70:86:com.google.protobuf.CodedInputStream newInstance(byte[],int,int) -> newInstance
    678:680:void popLimit(int) -> popLimit
    645:646:int pushLimit(int) -> pushLimit
    213:213:boolean readBool() -> readBool
    318:329:com.google.protobuf.ByteString readBytes() -> readBytes
    178:178:double readDouble() -> readDouble
    343:343:int readEnum() -> readEnum
    208:208:int readFixed32() -> readFixed32
    203:203:long readFixed64() -> readFixed64
    183:183:float readFloat() -> readFloat
    236:237:void readGroup(int,com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite) -> readGroup
    198:198:int readInt32() -> readInt32
    193:193:long readInt64() -> readInt64
    286:288:void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite) -> readMessage
    303:305:com.google.protobuf.MessageLite readMessage(com.google.protobuf.Parser,com.google.protobuf.ExtensionRegistryLite) -> readMessage
    768:771:byte readRawByte() -> readRawByte
    781:782:byte[] readRawBytes(int) -> readRawBytes
    474:478:int readRawLittleEndian32() -> readRawLittleEndian32
    486:494:long readRawLittleEndian64() -> readRawLittleEndian64
    373:403:int readRawVarint32() -> readRawVarint32
    459:469:long readRawVarint64() -> readRawVarint64
    348:348:int readSFixed32() -> readSFixed32
    353:353:long readSFixed64() -> readSFixed64
    358:358:int readSInt32() -> readSInt32
    363:363:long readSInt64() -> readSInt64
    218:227:java.lang.String readString() -> readString
    99:108:int readTag() -> readTag
    335:335:int readUInt32() -> readUInt32
    188:188:long readUInt64() -> readUInt64
    661:670:void recomputeBufferSizeAfterLimit() -> recomputeBufferSizeAfterLimit
    720:721:boolean refillBuffer(boolean) -> refillBuffer
    135:138:boolean skipField(int) -> skipField
    167:169:void skipMessage() -> skipMessage
    888:889:void skipRawBytes(int) -> skipRawBytes
com.google.protobuf.CodedOutputStream -> com.google.protobuf.CodedOutputStream:
    77:82:void <init>(byte[],int,int) -> <init>
    869:870:void checkNoSpaceLeft() -> checkNoSpaceLeft
    489:489:int computeBoolSize(int,boolean) -> computeBoolSize
    706:706:int computeBoolSizeNoTag(boolean) -> computeBoolSizeNoTag
    539:539:int computeBytesSize(int,com.google.protobuf.ByteString) -> computeBytesSize
    767:767:int computeBytesSizeNoTag(com.google.protobuf.ByteString) -> computeBytesSizeNoTag
    430:430:int computeDoubleSize(int,double) -> computeDoubleSize
    645:645:int computeDoubleSizeNoTag(double) -> computeDoubleSizeNoTag
    565:565:int computeEnumSize(int,int) -> computeEnumSize
    784:784:int computeEnumSizeNoTag(int) -> computeEnumSizeNoTag
    480:480:int computeFixed32Size(int,int) -> computeFixed32Size
    698:698:int computeFixed32SizeNoTag(int) -> computeFixed32SizeNoTag
    471:471:int computeFixed64Size(int,long) -> computeFixed64Size
    690:690:int computeFixed64SizeNoTag(long) -> computeFixed64SizeNoTag
    653:653:int computeFloatSizeNoTag(float) -> computeFloatSizeNoTag
    507:507:int computeGroupSize(int,com.google.protobuf.MessageLite) -> computeGroupSize
    728:728:int computeGroupSizeNoTag(com.google.protobuf.MessageLite) -> computeGroupSizeNoTag
    462:462:int computeInt32Size(int,int) -> computeInt32Size
    677:681:int computeInt32SizeNoTag(int) -> computeInt32SizeNoTag
    454:454:int computeInt64Size(int,long) -> computeInt64Size
    669:669:int computeInt64SizeNoTag(long) -> computeInt64SizeNoTag
    633:633:int computeLazyFieldMessageSetExtensionSize(int,com.google.protobuf.LazyField) -> computeLazyFieldMessageSetExtensionSize
    548:548:int computeLazyFieldSize(int,com.google.protobuf.LazyField) -> computeLazyFieldSize
    758:759:int computeLazyFieldSizeNoTag(com.google.protobuf.LazyField) -> computeLazyFieldSizeNoTag
    609:609:int computeMessageSetExtensionSize(int,com.google.protobuf.MessageLite) -> computeMessageSetExtensionSize
    530:530:int computeMessageSize(int,com.google.protobuf.MessageLite) -> computeMessageSize
    749:750:int computeMessageSizeNoTag(com.google.protobuf.MessageLite) -> computeMessageSizeNoTag
    621:621:int computeRawMessageSetExtensionSize(int,com.google.protobuf.ByteString) -> computeRawMessageSetExtensionSize
    1024:1028:int computeRawVarint32Size(int) -> computeRawVarint32Size
    1046:1055:int computeRawVarint64Size(long) -> computeRawVarint64Size
    792:792:int computeSFixed32SizeNoTag(int) -> computeSFixed32SizeNoTag
    800:800:int computeSFixed64SizeNoTag(long) -> computeSFixed64SizeNoTag
    808:808:int computeSInt32SizeNoTag(int) -> computeSInt32SizeNoTag
    816:816:int computeSInt64SizeNoTag(long) -> computeSInt64SizeNoTag
    715:719:int computeStringSizeNoTag(java.lang.String) -> computeStringSizeNoTag
    999:999:int computeTagSize(int) -> computeTagSize
    556:556:int computeUInt32Size(int,int) -> computeUInt32Size
    776:776:int computeUInt32SizeNoTag(int) -> computeUInt32SizeNoTag
    446:446:int computeUInt64Size(int,long) -> computeUInt64Size
    661:661:int computeUInt64SizeNoTag(long) -> computeUInt64SizeNoTag
    1094:1094:int encodeZigZag32(int) -> encodeZigZag32
    1109:1109:long encodeZigZag64(long) -> encodeZigZag64
    116:116:com.google.protobuf.CodedOutputStream newInstance(byte[]) -> newInstance
    129:129:com.google.protobuf.CodedOutputStream newInstance(byte[],int,int) -> newInstance
    826:828:void refreshBuffer() -> refreshBuffer
    852:855:int spaceLeft() -> spaceLeft
    186:188:void writeBool(int,boolean) -> writeBool
    347:348:void writeBoolNoTag(boolean) -> writeBoolNoTag
    228:230:void writeBytes(int,com.google.protobuf.ByteString) -> writeBytes
    385:387:void writeBytesNoTag(com.google.protobuf.ByteString) -> writeBytesNoTag
    137:139:void writeDouble(int,double) -> writeDouble
    307:308:void writeDoubleNoTag(double) -> writeDoubleNoTag
    245:247:void writeEnum(int,int) -> writeEnum
    399:400:void writeEnumNoTag(int) -> writeEnumNoTag
    179:181:void writeFixed32(int,int) -> writeFixed32
    342:343:void writeFixed32NoTag(int) -> writeFixed32NoTag
    172:174:void writeFixed64(int,long) -> writeFixed64
    337:338:void writeFixed64NoTag(long) -> writeFixed64NoTag
    312:313:void writeFloatNoTag(float) -> writeFloatNoTag
    200:203:void writeGroup(int,com.google.protobuf.MessageLite) -> writeGroup
    362:363:void writeGroupNoTag(com.google.protobuf.MessageLite) -> writeGroupNoTag
    165:167:void writeInt32(int,int) -> writeInt32
    327:333:void writeInt32NoTag(int) -> writeInt32NoTag
    158:160:void writeInt64(int,long) -> writeInt64
    322:323:void writeInt64NoTag(long) -> writeInt64NoTag
    221:223:void writeMessage(int,com.google.protobuf.MessageLite) -> writeMessage
    379:381:void writeMessageNoTag(com.google.protobuf.MessageLite) -> writeMessageNoTag
    284:288:void writeMessageSetExtension(int,com.google.protobuf.MessageLite) -> writeMessageSetExtension
    891:896:void writeRawByte(byte) -> writeRawByte
    900:901:void writeRawByte(int) -> writeRawByte
    905:906:void writeRawBytes(com.google.protobuf.ByteString) -> writeRawBytes
    910:911:void writeRawBytes(byte[]) -> writeRawBytes
    916:942:void writeRawBytes(byte[],int,int) -> writeRawBytes
    947:975:void writeRawBytes(com.google.protobuf.ByteString,int,int) -> writeRawBytes
    1060:1064:void writeRawLittleEndian32(int) -> writeRawLittleEndian32
    1070:1078:void writeRawLittleEndian64(long) -> writeRawLittleEndian64
    297:301:void writeRawMessageSetExtension(int,com.google.protobuf.ByteString) -> writeRawMessageSetExtension
    1008:1013:void writeRawVarint32(int) -> writeRawVarint32
    1034:1039:void writeRawVarint64(long) -> writeRawVarint64
    404:405:void writeSFixed32NoTag(int) -> writeSFixed32NoTag
    409:410:void writeSFixed64NoTag(long) -> writeSFixed64NoTag
    414:415:void writeSInt32NoTag(int) -> writeSInt32NoTag
    419:420:void writeSInt64NoTag(long) -> writeSInt64NoTag
    355:358:void writeStringNoTag(java.lang.String) -> writeStringNoTag
    994:995:void writeTag(int,int) -> writeTag
    235:237:void writeUInt32(int,int) -> writeUInt32
    391:392:void writeUInt32NoTag(int) -> writeUInt32NoTag
    151:153:void writeUInt64(int,long) -> writeUInt64
    317:318:void writeUInt64NoTag(long) -> writeUInt64NoTag
com.google.protobuf.CodedOutputStream$OutOfSpaceException -> com.google.protobuf.CodedOutputStream$OutOfSpaceException:
    884:886:void <init>() -> <init>
com.google.protobuf.DescriptorProtos -> com.google.protobuf.DescriptorProtos:
    28259:28497:void <clinit>() -> <clinit>
    6:6:com.google.protobuf.Descriptors$Descriptor access$000() -> access$000
    6:6:com.google.protobuf.Descriptors$Descriptor access$002(com.google.protobuf.Descriptors$Descriptor) -> access$002
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$102(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$102
    6:6:com.google.protobuf.Descriptors$Descriptor access$10400() -> access$10400
    6:6:com.google.protobuf.Descriptors$Descriptor access$10402(com.google.protobuf.Descriptors$Descriptor) -> access$10402
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$10500() -> access$10500
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$10502(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$10502
    6:6:com.google.protobuf.Descriptors$Descriptor access$12100() -> access$12100
    6:6:com.google.protobuf.Descriptors$Descriptor access$12102(com.google.protobuf.Descriptors$Descriptor) -> access$12102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$12200() -> access$12200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$12202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$12202
    6:6:com.google.protobuf.Descriptors$Descriptor access$13100() -> access$13100
    6:6:com.google.protobuf.Descriptors$Descriptor access$13102(com.google.protobuf.Descriptors$Descriptor) -> access$13102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13200() -> access$13200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$13202
    6:6:com.google.protobuf.Descriptors$Descriptor access$14500() -> access$14500
    6:6:com.google.protobuf.Descriptors$Descriptor access$14502(com.google.protobuf.Descriptors$Descriptor) -> access$14502
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$14600() -> access$14600
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$14602(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$14602
    6:6:com.google.protobuf.Descriptors$Descriptor access$15400() -> access$15400
    6:6:com.google.protobuf.Descriptors$Descriptor access$15402(com.google.protobuf.Descriptors$Descriptor) -> access$15402
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15500() -> access$15500
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15502(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$15502
    6:6:com.google.protobuf.Descriptors$Descriptor access$16100() -> access$16100
    6:6:com.google.protobuf.Descriptors$Descriptor access$16102(com.google.protobuf.Descriptors$Descriptor) -> access$16102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16200() -> access$16200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$16202
    6:6:com.google.protobuf.Descriptors$Descriptor access$16800() -> access$16800
    6:6:com.google.protobuf.Descriptors$Descriptor access$16802(com.google.protobuf.Descriptors$Descriptor) -> access$16802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16900() -> access$16900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$16902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$16902
    6:6:com.google.protobuf.Descriptors$Descriptor access$17500() -> access$17500
    6:6:com.google.protobuf.Descriptors$Descriptor access$17502(com.google.protobuf.Descriptors$Descriptor) -> access$17502
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17600() -> access$17600
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17602(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$17602
    6:6:com.google.protobuf.Descriptors$Descriptor access$17800() -> access$17800
    6:6:com.google.protobuf.Descriptors$Descriptor access$17802(com.google.protobuf.Descriptors$Descriptor) -> access$17802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17900() -> access$17900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$17902
    6:6:com.google.protobuf.Descriptors$Descriptor access$19800() -> access$19800
    6:6:com.google.protobuf.Descriptors$Descriptor access$19802(com.google.protobuf.Descriptors$Descriptor) -> access$19802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$19900() -> access$19900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$19902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$19902
    6:6:com.google.protobuf.Descriptors$Descriptor access$20100() -> access$20100
    6:6:com.google.protobuf.Descriptors$Descriptor access$20102(com.google.protobuf.Descriptors$Descriptor) -> access$20102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$20200() -> access$20200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$20202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$20202
    6:6:com.google.protobuf.Descriptors$FileDescriptor access$21602(com.google.protobuf.Descriptors$FileDescriptor) -> access$21602
    6:6:com.google.protobuf.Descriptors$Descriptor access$2500() -> access$2500
    6:6:com.google.protobuf.Descriptors$Descriptor access$2502(com.google.protobuf.Descriptors$Descriptor) -> access$2502
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2600() -> access$2600
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2602(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$2602
    6:6:com.google.protobuf.Descriptors$Descriptor access$2800() -> access$2800
    6:6:com.google.protobuf.Descriptors$Descriptor access$2802(com.google.protobuf.Descriptors$Descriptor) -> access$2802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2900() -> access$2900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$2902
    6:6:com.google.protobuf.Descriptors$Descriptor access$4800() -> access$4800
    6:6:com.google.protobuf.Descriptors$Descriptor access$4802(com.google.protobuf.Descriptors$Descriptor) -> access$4802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4900() -> access$4900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$4902
    6:6:com.google.protobuf.Descriptors$Descriptor access$6300() -> access$6300
    6:6:com.google.protobuf.Descriptors$Descriptor access$6302(com.google.protobuf.Descriptors$Descriptor) -> access$6302
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6400() -> access$6400
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6402(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$6402
    6:6:com.google.protobuf.Descriptors$Descriptor access$700() -> access$700
    6:6:com.google.protobuf.Descriptors$Descriptor access$702(com.google.protobuf.Descriptors$Descriptor) -> access$702
    6:6:com.google.protobuf.Descriptors$Descriptor access$7300() -> access$7300
    6:6:com.google.protobuf.Descriptors$Descriptor access$7302(com.google.protobuf.Descriptors$Descriptor) -> access$7302
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$7400() -> access$7400
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$7402(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$7402
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$800() -> access$800
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$802(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$802
    6:6:com.google.protobuf.Descriptors$Descriptor access$8300() -> access$8300
    6:6:com.google.protobuf.Descriptors$Descriptor access$8302(com.google.protobuf.Descriptors$Descriptor) -> access$8302
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$8400() -> access$8400
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$8402(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$8402
    6:6:com.google.protobuf.Descriptors$Descriptor access$9300() -> access$9300
    6:6:com.google.protobuf.Descriptors$Descriptor access$9302(com.google.protobuf.Descriptors$Descriptor) -> access$9302
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$9400() -> access$9400
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$9402(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$9402
    28254:28254:com.google.protobuf.Descriptors$FileDescriptor getDescriptor() -> getDescriptor
com.google.protobuf.DescriptorProtos$1 -> com.google.protobuf.DescriptorProtos$1:
    28366:28366:void <init>() -> <init>
    28369:28490:com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor) -> assignDescriptors
com.google.protobuf.DescriptorProtos$DescriptorProto -> com.google.protobuf.DescriptorProtos$DescriptorProto:
    4540:7244:void <clinit>() -> <clinit>
    4395:4395:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    4395:4395:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    4400:4402:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    4403:4403:void <init>(boolean) -> <init>
    4423:4527:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    4395:4395:java.lang.Object access$4000(com.google.protobuf.DescriptorProtos$DescriptorProto) -> access$4000
    4395:4395:java.lang.Object access$4002(com.google.protobuf.DescriptorProtos$DescriptorProto,java.lang.Object) -> access$4002
    4395:4395:java.util.List access$4100(com.google.protobuf.DescriptorProtos$DescriptorProto) -> access$4100
    4395:4395:java.util.List access$4102(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List) -> access$4102
    4395:4395:java.util.List access$4200(com.google.protobuf.DescriptorProtos$DescriptorProto) -> access$4200
    4395:4395:java.util.List access$4202(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List) -> access$4202
    4395:4395:java.util.List access$4300(com.google.protobuf.DescriptorProtos$DescriptorProto) -> access$4300
    4395:4395:java.util.List access$4302(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List) -> access$4302
    4395:4395:java.util.List access$4400(com.google.protobuf.DescriptorProtos$DescriptorProto) -> access$4400
    4395:4395:java.util.List access$4402(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List) -> access$4402
    4395:4395:java.util.List access$4500(com.google.protobuf.DescriptorProtos$DescriptorProto) -> access$4500
    4395:4395:java.util.List access$4502(com.google.protobuf.DescriptorProtos$DescriptorProto,java.util.List) -> access$4502
    4395:4395:com.google.protobuf.DescriptorProtos$MessageOptions access$4602(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.DescriptorProtos$MessageOptions) -> access$4602
    4395:4395:int access$4702(com.google.protobuf.DescriptorProtos$DescriptorProto,int) -> access$4702
    4407:4407:com.google.protobuf.DescriptorProtos$DescriptorProto getDefaultInstance() -> getDefaultInstance
    4395:4395:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    4411:4411:com.google.protobuf.DescriptorProtos$DescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    5210:5210:com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int) -> getEnumType
    5204:5204:int getEnumTypeCount() -> getEnumTypeCount
    5138:5138:com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int) -> getExtension
    5132:5132:int getExtensionCount() -> getExtensionCount
    5227:5227:java.util.List getExtensionRangeList() -> getExtensionRangeList
    5102:5102:com.google.protobuf.DescriptorProtos$FieldDescriptorProto getField(int) -> getField
    5096:5096:int getFieldCount() -> getFieldCount
    5046:5056:java.lang.String getName() -> getName
    5064:5072:com.google.protobuf.ByteString getNameBytes() -> getNameBytes
    5174:5174:com.google.protobuf.DescriptorProtos$DescriptorProto getNestedType(int) -> getNestedType
    5168:5168:int getNestedTypeCount() -> getNestedTypeCount
    5269:5269:com.google.protobuf.DescriptorProtos$MessageOptions getOptions() -> getOptions
    4552:4552:com.google.protobuf.Parser getParserForType() -> getParserForType
    5355:5389:int getSerializedSize() -> getSerializedSize
    4418:4418:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    5040:5040:boolean hasName() -> hasName
    5263:5263:boolean hasOptions() -> hasOptions
    5279:5286:void initFields() -> initFields
    4535:4535:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    5289:5323:boolean isInitialized() -> isInitialized
    5452:5452:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilder() -> newBuilder
    5455:5455:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilder(com.google.protobuf.DescriptorProtos$DescriptorProto) -> newBuilder
    4395:4395:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    4395:4395:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    5453:5453:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilderForType() -> newBuilderForType
    5462:5463:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    4395:4395:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    4395:4395:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    5457:5457:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder toBuilder() -> toBuilder
    5328:5351:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$DescriptorProto$1 -> com.google.protobuf.DescriptorProtos$DescriptorProto$1:
    4541:4541:void <init>() -> <init>
    4541:4541:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    4546:4546:com.google.protobuf.DescriptorProtos$DescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$DescriptorProto$Builder -> com.google.protobuf.DescriptorProtos$DescriptorProto$Builder:
    5472:5472:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    5488:5490:void <init>() -> <init>
    5494:5496:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    5472:5472:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder access$3700() -> access$3700
    5472:5472:com.google.protobuf.Message build() -> build
    5472:5472:com.google.protobuf.MessageLite build() -> build
    5568:5570:com.google.protobuf.DescriptorProtos$DescriptorProto build() -> build
    5472:5472:com.google.protobuf.Message buildPartial() -> buildPartial
    5576:5638:com.google.protobuf.DescriptorProtos$DescriptorProto buildPartial() -> buildPartial
    5472:5472:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    5472:5472:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    5472:5472:java.lang.Object clone() -> clone
    5555:5555:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder clone() -> clone
    5508:5508:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder create() -> create
    6645:6649:void ensureEnumTypeIsMutable() -> ensureEnumTypeIsMutable
    6165:6169:void ensureExtensionIsMutable() -> ensureExtensionIsMutable
    6885:6889:void ensureExtensionRangeIsMutable() -> ensureExtensionRangeIsMutable
    5925:5929:void ensureFieldIsMutable() -> ensureFieldIsMutable
    6405:6409:void ensureNestedTypeIsMutable() -> ensureNestedTypeIsMutable
    5472:5472:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    5564:5564:com.google.protobuf.DescriptorProtos$DescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    5560:5560:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    6869:6878:com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder() -> getEnumTypeFieldBuilder
    6389:6398:com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder() -> getExtensionFieldBuilder
    7109:7118:com.google.protobuf.RepeatedFieldBuilder getExtensionRangeFieldBuilder() -> getExtensionRangeFieldBuilder
    6149:6158:com.google.protobuf.RepeatedFieldBuilder getFieldFieldBuilder() -> getFieldFieldBuilder
    6629:6638:com.google.protobuf.RepeatedFieldBuilder getNestedTypeFieldBuilder() -> getNestedTypeFieldBuilder
    7227:7235:com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder() -> getOptionsFieldBuilder
    5482:5482:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    5498:5506:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    5472:5472:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    5472:5472:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    5472:5472:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    5472:5472:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    5472:5472:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    5642:5646:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    5651:5791:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$DescriptorProto) -> mergeFrom
    5832:5839:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    7175:7188:com.google.protobuf.DescriptorProtos$DescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$MessageOptions) -> mergeOptions
com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange -> com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange:
    4663:5027:void <clinit>() -> <clinit>
    4581:4581:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    4581:4581:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    4586:4588:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    4589:4589:void <init>(boolean) -> <init>
    4609:4650:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    4581:4581:int access$3402(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange,int) -> access$3402
    4581:4581:int access$3502(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange,int) -> access$3502
    4581:4581:int access$3602(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange,int) -> access$3602
    4593:4593:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange getDefaultInstance() -> getDefaultInstance
    4581:4581:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    4597:4597:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange getDefaultInstanceForType() -> getDefaultInstanceForType
    4708:4708:int getEnd() -> getEnd
    4675:4675:com.google.protobuf.Parser getParserForType() -> getParserForType
    4738:4752:int getSerializedSize() -> getSerializedSize
    4692:4692:int getStart() -> getStart
    4604:4604:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    4702:4702:boolean hasEnd() -> hasEnd
    4686:4686:boolean hasStart() -> hasStart
    4712:4714:void initFields() -> initFields
    4658:4658:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    4717:4721:boolean isInitialized() -> isInitialized
    4815:4815:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilder() -> newBuilder
    4818:4818:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilder(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange) -> newBuilder
    4581:4581:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    4581:4581:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    4816:4816:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilderForType() -> newBuilderForType
    4825:4826:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    4581:4581:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    4581:4581:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    4820:4820:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder toBuilder() -> toBuilder
    4726:4734:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1 -> com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$1:
    4664:4664:void <init>() -> <init>
    4664:4664:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    4669:4669:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder -> com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder:
    4831:4831:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    4847:4849:void <init>() -> <init>
    4853:4855:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    4831:4831:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder access$3100() -> access$3100
    4831:4831:com.google.protobuf.Message build() -> build
    4831:4831:com.google.protobuf.MessageLite build() -> build
    4887:4889:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange build() -> build
    4831:4831:com.google.protobuf.Message buildPartial() -> buildPartial
    4895:4908:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange buildPartial() -> buildPartial
    4831:4831:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    4831:4831:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    4831:4831:java.lang.Object clone() -> clone
    4874:4874:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder clone() -> clone
    4861:4861:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder create() -> create
    4831:4831:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    4883:4883:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange getDefaultInstanceForType() -> getDefaultInstanceForType
    4879:4879:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    4841:4841:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    4857:4859:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    4831:4831:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    4831:4831:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    4831:4831:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    4831:4831:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    4831:4831:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    4912:4916:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    4921:4929:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder mergeFrom(com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange) -> mergeFrom
    4940:4947:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    5006:5009:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setEnd(int) -> setEnd
    4973:4976:com.google.protobuf.DescriptorProtos$DescriptorProto$ExtensionRange$Builder setStart(int) -> setStart
com.google.protobuf.DescriptorProtos$EnumDescriptorProto -> com.google.protobuf.DescriptorProtos$EnumDescriptorProto:
    9521:10408:void <clinit>() -> <clinit>
    9420:9420:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    9420:9420:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    9425:9427:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    9428:9428:void <init>(boolean) -> <init>
    9448:9508:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    9420:9420:java.lang.Object access$6900(com.google.protobuf.DescriptorProtos$EnumDescriptorProto) -> access$6900
    9420:9420:java.lang.Object access$6902(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,java.lang.Object) -> access$6902
    9420:9420:java.util.List access$7000(com.google.protobuf.DescriptorProtos$EnumDescriptorProto) -> access$7000
    9420:9420:java.util.List access$7002(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,java.util.List) -> access$7002
    9420:9420:com.google.protobuf.DescriptorProtos$EnumOptions access$7102(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.DescriptorProtos$EnumOptions) -> access$7102
    9420:9420:int access$7202(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,int) -> access$7202
    9432:9432:com.google.protobuf.DescriptorProtos$EnumDescriptorProto getDefaultInstance() -> getDefaultInstance
    9420:9420:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    9436:9436:com.google.protobuf.DescriptorProtos$EnumDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    9550:9560:java.lang.String getName() -> getName
    9568:9576:com.google.protobuf.ByteString getNameBytes() -> getNameBytes
    9629:9629:com.google.protobuf.DescriptorProtos$EnumOptions getOptions() -> getOptions
    9533:9533:com.google.protobuf.Parser getParserForType() -> getParserForType
    9681:9699:int getSerializedSize() -> getSerializedSize
    9443:9443:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    9606:9606:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto getValue(int) -> getValue
    9600:9600:int getValueCount() -> getValueCount
    9544:9544:boolean hasName() -> hasName
    9623:9623:boolean hasOptions() -> hasOptions
    9639:9642:void initFields() -> initFields
    9516:9516:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    9645:9661:boolean isInitialized() -> isInitialized
    9762:9762:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder newBuilder() -> newBuilder
    9765:9765:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumDescriptorProto) -> newBuilder
    9420:9420:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    9420:9420:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    9763:9763:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder newBuilderForType() -> newBuilderForType
    9772:9773:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    9420:9420:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    9420:9420:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    9767:9767:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder toBuilder() -> toBuilder
    9666:9677:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1 -> com.google.protobuf.DescriptorProtos$EnumDescriptorProto$1:
    9522:9522:void <init>() -> <init>
    9522:9522:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    9527:9527:com.google.protobuf.DescriptorProtos$EnumDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder -> com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder:
    9782:9782:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    9798:9800:void <init>() -> <init>
    9804:9806:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    9782:9782:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder access$6600() -> access$6600
    9782:9782:com.google.protobuf.Message build() -> build
    9782:9782:com.google.protobuf.MessageLite build() -> build
    9850:9852:com.google.protobuf.DescriptorProtos$EnumDescriptorProto build() -> build
    9782:9782:com.google.protobuf.Message buildPartial() -> buildPartial
    9858:9884:com.google.protobuf.DescriptorProtos$EnumDescriptorProto buildPartial() -> buildPartial
    9782:9782:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    9782:9782:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    9782:9782:java.lang.Object clone() -> clone
    9837:9837:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder clone() -> clone
    9814:9814:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder create() -> create
    10049:10053:void ensureValueIsMutable() -> ensureValueIsMutable
    9782:9782:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    9846:9846:com.google.protobuf.DescriptorProtos$EnumDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    9842:9842:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    10391:10399:com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder() -> getOptionsFieldBuilder
    10273:10282:com.google.protobuf.RepeatedFieldBuilder getValueFieldBuilder() -> getValueFieldBuilder
    9792:9792:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    9808:9812:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    9782:9782:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9782:9782:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9782:9782:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9782:9782:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9782:9782:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9888:9892:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9897:9933:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumDescriptorProto) -> mergeFrom
    9956:9963:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10339:10352:com.google.protobuf.DescriptorProtos$EnumDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$EnumOptions) -> mergeOptions
com.google.protobuf.DescriptorProtos$EnumOptions -> com.google.protobuf.DescriptorProtos$EnumOptions:
    19126:19898:void <clinit>() -> <clinit>
    19038:19038:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    19038:19038:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1) -> <init>
    19043:19045:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    19046:19046:void <init>(boolean) -> <init>
    19066:19113:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    19038:19038:boolean access$15102(com.google.protobuf.DescriptorProtos$EnumOptions,boolean) -> access$15102
    19038:19038:java.util.List access$15200(com.google.protobuf.DescriptorProtos$EnumOptions) -> access$15200
    19038:19038:java.util.List access$15202(com.google.protobuf.DescriptorProtos$EnumOptions,java.util.List) -> access$15202
    19038:19038:int access$15302(com.google.protobuf.DescriptorProtos$EnumOptions,int) -> access$15302
    19165:19165:boolean getAllowAlias() -> getAllowAlias
    19050:19050:com.google.protobuf.DescriptorProtos$EnumOptions getDefaultInstance() -> getDefaultInstance
    19038:19038:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    19054:19054:com.google.protobuf.DescriptorProtos$EnumOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    19138:19138:com.google.protobuf.Parser getParserForType() -> getParserForType
    19265:19280:int getSerializedSize() -> getSerializedSize
    19210:19210:com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int) -> getUninterpretedOption
    19200:19200:int getUninterpretedOptionCount() -> getUninterpretedOptionCount
    19061:19061:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    19154:19154:boolean hasAllowAlias() -> hasAllowAlias
    19225:19227:void initFields() -> initFields
    19121:19121:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    19230:19244:boolean isInitialized() -> isInitialized
    19343:19343:com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilder() -> newBuilder
    19346:19346:com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumOptions) -> newBuilder
    19038:19038:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    19038:19038:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    19344:19344:com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilderForType() -> newBuilderForType
    19353:19354:com.google.protobuf.DescriptorProtos$EnumOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    19038:19038:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    19038:19038:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    19348:19348:com.google.protobuf.DescriptorProtos$EnumOptions$Builder toBuilder() -> toBuilder
    19249:19261:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$EnumOptions$1 -> com.google.protobuf.DescriptorProtos$EnumOptions$1:
    19127:19127:void <init>() -> <init>
    19127:19127:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    19132:19132:com.google.protobuf.DescriptorProtos$EnumOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$EnumOptions$Builder -> com.google.protobuf.DescriptorProtos$EnumOptions$Builder:
    19359:19359:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    19375:19377:void <init>() -> <init>
    19381:19383:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    19359:19359:com.google.protobuf.DescriptorProtos$EnumOptions$Builder access$14800() -> access$14800
    19359:19359:com.google.protobuf.Message build() -> build
    19359:19359:com.google.protobuf.MessageLite build() -> build
    19420:19422:com.google.protobuf.DescriptorProtos$EnumOptions build() -> build
    19359:19359:com.google.protobuf.Message buildPartial() -> buildPartial
    19428:19446:com.google.protobuf.DescriptorProtos$EnumOptions buildPartial() -> buildPartial
    19359:19359:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    19359:19359:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    19359:19359:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    19359:19359:java.lang.Object clone() -> clone
    19407:19407:com.google.protobuf.DescriptorProtos$EnumOptions$Builder clone() -> clone
    19390:19390:com.google.protobuf.DescriptorProtos$EnumOptions$Builder create() -> create
    19584:19588:void ensureUninterpretedOptionIsMutable() -> ensureUninterpretedOptionIsMutable
    19359:19359:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    19416:19416:com.google.protobuf.DescriptorProtos$EnumOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    19412:19412:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    19880:19889:com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder() -> getUninterpretedOptionFieldBuilder
    19369:19369:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    19385:19388:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    19359:19359:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    19359:19359:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    19359:19359:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    19359:19359:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    19359:19359:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    19450:19454:com.google.protobuf.DescriptorProtos$EnumOptions$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    19459:19491:com.google.protobuf.DescriptorProtos$EnumOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumOptions) -> mergeFrom
    19512:19519:com.google.protobuf.DescriptorProtos$EnumOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    19560:19563:com.google.protobuf.DescriptorProtos$EnumOptions$Builder setAllowAlias(boolean) -> setAllowAlias
com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto -> com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto:
    10557:11172:void <clinit>() -> <clinit>
    10462:10462:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    10462:10462:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    10467:10469:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    10470:10470:void <init>(boolean) -> <init>
    10490:10544:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    10462:10462:java.lang.Object access$7900(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto) -> access$7900
    10462:10462:java.lang.Object access$7902(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,java.lang.Object) -> access$7902
    10462:10462:int access$8002(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,int) -> access$8002
    10462:10462:com.google.protobuf.DescriptorProtos$EnumValueOptions access$8102(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,com.google.protobuf.DescriptorProtos$EnumValueOptions) -> access$8102
    10462:10462:int access$8202(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,int) -> access$8202
    10474:10474:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto getDefaultInstance() -> getDefaultInstance
    10462:10462:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    10478:10478:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    10586:10596:java.lang.String getName() -> getName
    10604:10612:com.google.protobuf.ByteString getNameBytes() -> getNameBytes
    10629:10629:int getNumber() -> getNumber
    10645:10645:com.google.protobuf.DescriptorProtos$EnumValueOptions getOptions() -> getOptions
    10569:10569:com.google.protobuf.Parser getParserForType() -> getParserForType
    10691:10709:int getSerializedSize() -> getSerializedSize
    10485:10485:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    10580:10580:boolean hasName() -> hasName
    10623:10623:boolean hasNumber() -> hasNumber
    10639:10639:boolean hasOptions() -> hasOptions
    10655:10658:void initFields() -> initFields
    10552:10552:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    10661:10671:boolean isInitialized() -> isInitialized
    10772:10772:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder newBuilder() -> newBuilder
    10775:10775:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto) -> newBuilder
    10462:10462:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    10462:10462:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    10773:10773:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder newBuilderForType() -> newBuilderForType
    10782:10783:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    10462:10462:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    10462:10462:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    10777:10777:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder toBuilder() -> toBuilder
    10676:10687:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1 -> com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$1:
    10558:10558:void <init>() -> <init>
    10558:10558:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    10563:10563:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder -> com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder:
    10792:10792:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    10808:10810:void <init>() -> <init>
    10814:10816:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    10792:10792:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder access$7600() -> access$7600
    10792:10792:com.google.protobuf.Message build() -> build
    10792:10792:com.google.protobuf.MessageLite build() -> build
    10855:10857:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto build() -> build
    10792:10792:com.google.protobuf.Message buildPartial() -> buildPartial
    10863:10884:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto buildPartial() -> buildPartial
    10792:10792:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    10792:10792:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    10792:10792:java.lang.Object clone() -> clone
    10842:10842:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder clone() -> clone
    10823:10823:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder create() -> create
    10792:10792:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    10851:10851:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    10847:10847:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    11155:11163:com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder() -> getOptionsFieldBuilder
    10802:10802:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    10818:10821:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    10792:10792:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10792:10792:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    10792:10792:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10792:10792:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    10792:10792:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10888:10892:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    10897:10910:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto) -> mergeFrom
    10927:10934:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    11103:11116:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$EnumValueOptions) -> mergeOptions
    11034:11037:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto$Builder setNumber(int) -> setNumber
com.google.protobuf.DescriptorProtos$EnumValueOptions -> com.google.protobuf.DescriptorProtos$EnumValueOptions:
    20038:20711:void <clinit>() -> <clinit>
    19955:19955:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    19955:19955:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1) -> <init>
    19960:19962:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    19963:19963:void <init>(boolean) -> <init>
    19983:20025:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    19955:19955:java.util.List access$16000(com.google.protobuf.DescriptorProtos$EnumValueOptions) -> access$16000
    19955:19955:java.util.List access$16002(com.google.protobuf.DescriptorProtos$EnumValueOptions,java.util.List) -> access$16002
    19967:19967:com.google.protobuf.DescriptorProtos$EnumValueOptions getDefaultInstance() -> getDefaultInstance
    19955:19955:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    19971:19971:com.google.protobuf.DescriptorProtos$EnumValueOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    20050:20050:com.google.protobuf.Parser getParserForType() -> getParserForType
    20146:20157:int getSerializedSize() -> getSerializedSize
    20095:20095:com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int) -> getUninterpretedOption
    20085:20085:int getUninterpretedOptionCount() -> getUninterpretedOptionCount
    19978:19978:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    20110:20111:void initFields() -> initFields
    20033:20033:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    20114:20128:boolean isInitialized() -> isInitialized
    20220:20220:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilder() -> newBuilder
    20223:20223:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$EnumValueOptions) -> newBuilder
    19955:19955:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    19955:19955:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    20221:20221:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilderForType() -> newBuilderForType
    20230:20231:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    19955:19955:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    19955:19955:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    20225:20225:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder toBuilder() -> toBuilder
    20133:20142:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$EnumValueOptions$1 -> com.google.protobuf.DescriptorProtos$EnumValueOptions$1:
    20039:20039:void <init>() -> <init>
    20039:20039:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    20044:20044:com.google.protobuf.DescriptorProtos$EnumValueOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder -> com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder:
    20236:20236:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    20252:20254:void <init>() -> <init>
    20258:20260:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    20236:20236:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder access$15700() -> access$15700
    20236:20236:com.google.protobuf.Message build() -> build
    20236:20236:com.google.protobuf.MessageLite build() -> build
    20295:20297:com.google.protobuf.DescriptorProtos$EnumValueOptions build() -> build
    20236:20236:com.google.protobuf.Message buildPartial() -> buildPartial
    20303:20315:com.google.protobuf.DescriptorProtos$EnumValueOptions buildPartial() -> buildPartial
    20236:20236:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    20236:20236:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    20236:20236:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    20236:20236:java.lang.Object clone() -> clone
    20282:20282:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder clone() -> clone
    20267:20267:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder create() -> create
    20397:20401:void ensureUninterpretedOptionIsMutable() -> ensureUninterpretedOptionIsMutable
    20236:20236:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    20291:20291:com.google.protobuf.DescriptorProtos$EnumValueOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    20287:20287:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    20693:20702:com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder() -> getUninterpretedOptionFieldBuilder
    20246:20246:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    20262:20265:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    20236:20236:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    20236:20236:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    20236:20236:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    20236:20236:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    20236:20236:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    20319:20323:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    20328:20357:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$EnumValueOptions) -> mergeFrom
    20378:20385:com.google.protobuf.DescriptorProtos$EnumValueOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
com.google.protobuf.DescriptorProtos$FieldDescriptorProto -> com.google.protobuf.DescriptorProtos$FieldDescriptorProto:
    7568:9351:void <clinit>() -> <clinit>
    7436:7436:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    7436:7436:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    7441:7443:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    7444:7444:void <init>(boolean) -> <init>
    7464:7555:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    7436:7436:java.lang.Object access$5400(com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> access$5400
    7436:7436:java.lang.Object access$5402(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,java.lang.Object) -> access$5402
    7436:7436:int access$5502(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,int) -> access$5502
    7436:7436:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label access$5602(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label) -> access$5602
    7436:7436:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type access$5702(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type) -> access$5702
    7436:7436:java.lang.Object access$5800(com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> access$5800
    7436:7436:java.lang.Object access$5802(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,java.lang.Object) -> access$5802
    7436:7436:java.lang.Object access$5900(com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> access$5900
    7436:7436:java.lang.Object access$5902(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,java.lang.Object) -> access$5902
    7436:7436:java.lang.Object access$6000(com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> access$6000
    7436:7436:java.lang.Object access$6002(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,java.lang.Object) -> access$6002
    7436:7436:com.google.protobuf.DescriptorProtos$FieldOptions access$6102(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.DescriptorProtos$FieldOptions) -> access$6102
    7436:7436:int access$6202(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,int) -> access$6202
    7448:7448:com.google.protobuf.DescriptorProtos$FieldDescriptorProto getDefaultInstance() -> getDefaultInstance
    7436:7436:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    7452:7452:com.google.protobuf.DescriptorProtos$FieldDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    8242:8252:java.lang.String getDefaultValue() -> getDefaultValue
    8268:8276:com.google.protobuf.ByteString getDefaultValueBytes() -> getDefaultValueBytes
    8178:8188:java.lang.String getExtendee() -> getExtendee
    8201:8209:com.google.protobuf.ByteString getExtendeeBytes() -> getExtendeeBytes
    8059:8059:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label getLabel() -> getLabel
    8000:8010:java.lang.String getName() -> getName
    8018:8026:com.google.protobuf.ByteString getNameBytes() -> getNameBytes
    8043:8043:int getNumber() -> getNumber
    8293:8293:com.google.protobuf.DescriptorProtos$FieldOptions getOptions() -> getOptions
    7580:7580:com.google.protobuf.Parser getParserForType() -> getParserForType
    8359:8397:int getSerializedSize() -> getSerializedSize
    8085:8085:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type getType() -> getType
    8117:8127:java.lang.String getTypeName() -> getTypeName
    8143:8151:com.google.protobuf.ByteString getTypeNameBytes() -> getTypeNameBytes
    7459:7459:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    8228:8228:boolean hasDefaultValue() -> hasDefaultValue
    8167:8167:boolean hasExtendee() -> hasExtendee
    8053:8053:boolean hasLabel() -> hasLabel
    7994:7994:boolean hasName() -> hasName
    8037:8037:boolean hasNumber() -> hasNumber
    8287:8287:boolean hasOptions() -> hasOptions
    8074:8074:boolean hasType() -> hasType
    8103:8103:boolean hasTypeName() -> hasTypeName
    8303:8311:void initFields() -> initFields
    7563:7563:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    8314:8324:boolean isInitialized() -> isInitialized
    8460:8460:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder newBuilder() -> newBuilder
    8463:8463:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder newBuilder(com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> newBuilder
    7436:7436:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    7436:7436:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    8461:8461:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder newBuilderForType() -> newBuilderForType
    8470:8471:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    7436:7436:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    7436:7436:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    8465:8465:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder toBuilder() -> toBuilder
    8329:8355:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1 -> com.google.protobuf.DescriptorProtos$FieldDescriptorProto$1:
    7569:7569:void <init>() -> <init>
    7569:7569:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    7574:7574:com.google.protobuf.DescriptorProtos$FieldDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder -> com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder:
    8480:8480:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    8496:8498:void <init>() -> <init>
    8502:8504:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    8480:8480:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder access$5100() -> access$5100
    8480:8480:com.google.protobuf.Message build() -> build
    8480:8480:com.google.protobuf.MessageLite build() -> build
    8553:8555:com.google.protobuf.DescriptorProtos$FieldDescriptorProto build() -> build
    8480:8480:com.google.protobuf.Message buildPartial() -> buildPartial
    8561:8602:com.google.protobuf.DescriptorProtos$FieldDescriptorProto buildPartial() -> buildPartial
    8480:8480:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    8480:8480:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    8480:8480:java.lang.Object clone() -> clone
    8540:8540:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder clone() -> clone
    8511:8511:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder create() -> create
    8480:8480:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    8549:8549:com.google.protobuf.DescriptorProtos$FieldDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    8545:8545:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    9334:9342:com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder() -> getOptionsFieldBuilder
    8490:8490:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    8506:8509:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    8480:8480:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8480:8480:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8480:8480:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8480:8480:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8480:8480:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8606:8610:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8615:8649:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> mergeFrom
    8666:8673:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9282:9295:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$FieldOptions) -> mergeOptions
    8806:8807:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder setLabel(com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label) -> setLabel
    8773:8776:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder setNumber(int) -> setNumber
    8857:8858:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Builder setType(com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type) -> setType
com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label -> com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label:
    7891:7964:void <clinit>() -> <clinit>
    7978:7981:void <init>(java.lang.String,int,int,int) -> <init>
    7928:7928:int getNumber() -> getNumber
    7882:7882:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label valueOf(java.lang.String) -> valueOf
    7931:7932:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label valueOf(int) -> valueOf
    7882:7882:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label[] values() -> values
com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label$1 -> com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Label$1:
    7945:7945:void <init>() -> <init>
com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type -> com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type:
    7596:7857:void <clinit>() -> <clinit>
    7871:7874:void <init>(java.lang.String,int,int,int) -> <init>
    7806:7806:int getNumber() -> getNumber
    7586:7586:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type valueOf(java.lang.String) -> valueOf
    7809:7810:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type valueOf(int) -> valueOf
    7586:7586:com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type[] values() -> values
com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type$1 -> com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type$1:
    7838:7838:void <init>() -> <init>
com.google.protobuf.DescriptorProtos$FieldOptions -> com.google.protobuf.DescriptorProtos$FieldOptions:
    17246:18961:void <clinit>() -> <clinit>
    17127:17127:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    17127:17127:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1) -> <init>
    17132:17134:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    17135:17135:void <init>(boolean) -> <init>
    17155:17233:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    17127:17127:com.google.protobuf.DescriptorProtos$FieldOptions$CType access$13702(com.google.protobuf.DescriptorProtos$FieldOptions,com.google.protobuf.DescriptorProtos$FieldOptions$CType) -> access$13702
    17127:17127:boolean access$13802(com.google.protobuf.DescriptorProtos$FieldOptions,boolean) -> access$13802
    17127:17127:boolean access$13902(com.google.protobuf.DescriptorProtos$FieldOptions,boolean) -> access$13902
    17127:17127:boolean access$14002(com.google.protobuf.DescriptorProtos$FieldOptions,boolean) -> access$14002
    17127:17127:java.lang.Object access$14100(com.google.protobuf.DescriptorProtos$FieldOptions) -> access$14100
    17127:17127:java.lang.Object access$14102(com.google.protobuf.DescriptorProtos$FieldOptions,java.lang.Object) -> access$14102
    17127:17127:boolean access$14202(com.google.protobuf.DescriptorProtos$FieldOptions,boolean) -> access$14202
    17127:17127:java.util.List access$14300(com.google.protobuf.DescriptorProtos$FieldOptions) -> access$14300
    17127:17127:java.util.List access$14302(com.google.protobuf.DescriptorProtos$FieldOptions,java.util.List) -> access$14302
    17127:17127:int access$14402(com.google.protobuf.DescriptorProtos$FieldOptions,int) -> access$14402
    17388:17388:com.google.protobuf.DescriptorProtos$FieldOptions$CType getCtype() -> getCtype
    17139:17139:com.google.protobuf.DescriptorProtos$FieldOptions getDefaultInstance() -> getDefaultInstance
    17127:17127:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    17143:17143:com.google.protobuf.DescriptorProtos$FieldOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    17526:17526:boolean getDeprecated() -> getDeprecated
    17605:17613:com.google.protobuf.ByteString getExperimentalMapKeyBytes() -> getExperimentalMapKeyBytes
    17496:17496:boolean getLazy() -> getLazy
    17418:17418:boolean getPacked() -> getPacked
    17258:17258:com.google.protobuf.Parser getParserForType() -> getParserForType
    17758:17793:int getSerializedSize() -> getSerializedSize
    17683:17683:com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int) -> getUninterpretedOption
    17673:17673:int getUninterpretedOptionCount() -> getUninterpretedOptionCount
    17150:17150:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    17638:17638:boolean getWeak() -> getWeak
    17375:17375:boolean hasCtype() -> hasCtype
    17513:17513:boolean hasDeprecated() -> hasDeprecated
    17551:17551:boolean hasExperimentalMapKey() -> hasExperimentalMapKey
    17459:17459:boolean hasLazy() -> hasLazy
    17405:17405:boolean hasPacked() -> hasPacked
    17628:17628:boolean hasWeak() -> hasWeak
    17698:17705:void initFields() -> initFields
    17241:17241:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    17708:17722:boolean isInitialized() -> isInitialized
    17856:17856:com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilder() -> newBuilder
    17859:17859:com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$FieldOptions) -> newBuilder
    17127:17127:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    17127:17127:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    17857:17857:com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilderForType() -> newBuilderForType
    17866:17867:com.google.protobuf.DescriptorProtos$FieldOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    17127:17127:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    17127:17127:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    17861:17861:com.google.protobuf.DescriptorProtos$FieldOptions$Builder toBuilder() -> toBuilder
    17727:17754:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$FieldOptions$1 -> com.google.protobuf.DescriptorProtos$FieldOptions$1:
    17247:17247:void <init>() -> <init>
    17247:17247:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    17252:17252:com.google.protobuf.DescriptorProtos$FieldOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$FieldOptions$Builder -> com.google.protobuf.DescriptorProtos$FieldOptions$Builder:
    17872:17872:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    17888:17890:void <init>() -> <init>
    17894:17896:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    17872:17872:com.google.protobuf.DescriptorProtos$FieldOptions$Builder access$13400() -> access$13400
    17872:17872:com.google.protobuf.Message build() -> build
    17872:17872:com.google.protobuf.MessageLite build() -> build
    17943:17945:com.google.protobuf.DescriptorProtos$FieldOptions build() -> build
    17872:17872:com.google.protobuf.Message buildPartial() -> buildPartial
    17951:17989:com.google.protobuf.DescriptorProtos$FieldOptions buildPartial() -> buildPartial
    17872:17872:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    17872:17872:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    17872:17872:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    17872:17872:java.lang.Object clone() -> clone
    17930:17930:com.google.protobuf.DescriptorProtos$FieldOptions$Builder clone() -> clone
    17903:17903:com.google.protobuf.DescriptorProtos$FieldOptions$Builder create() -> create
    18647:18651:void ensureUninterpretedOptionIsMutable() -> ensureUninterpretedOptionIsMutable
    17872:17872:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    17939:17939:com.google.protobuf.DescriptorProtos$FieldOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    17935:17935:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    18943:18952:com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder() -> getUninterpretedOptionFieldBuilder
    17882:17882:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    17898:17901:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    17872:17872:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    17872:17872:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    17872:17872:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    17872:17872:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    17872:17872:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    17993:17997:com.google.protobuf.DescriptorProtos$FieldOptions$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    18002:18051:com.google.protobuf.DescriptorProtos$FieldOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FieldOptions) -> mergeFrom
    18072:18079:com.google.protobuf.DescriptorProtos$FieldOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    18126:18127:com.google.protobuf.DescriptorProtos$FieldOptions$Builder setCtype(com.google.protobuf.DescriptorProtos$FieldOptions$CType) -> setCtype
    18408:18411:com.google.protobuf.DescriptorProtos$FieldOptions$Builder setDeprecated(boolean) -> setDeprecated
    18323:18326:com.google.protobuf.DescriptorProtos$FieldOptions$Builder setLazy(boolean) -> setLazy
    18190:18193:com.google.protobuf.DescriptorProtos$FieldOptions$Builder setPacked(boolean) -> setPacked
    18624:18627:com.google.protobuf.DescriptorProtos$FieldOptions$Builder setWeak(boolean) -> setWeak
com.google.protobuf.DescriptorProtos$FieldOptions$CType -> com.google.protobuf.DescriptorProtos$FieldOptions$CType:
    17273:17338:void <clinit>() -> <clinit>
    17352:17355:void <init>(java.lang.String,int,int,int) -> <init>
    17302:17302:int getNumber() -> getNumber
    17264:17264:com.google.protobuf.DescriptorProtos$FieldOptions$CType valueOf(java.lang.String) -> valueOf
    17305:17306:com.google.protobuf.DescriptorProtos$FieldOptions$CType valueOf(int) -> valueOf
    17264:17264:com.google.protobuf.DescriptorProtos$FieldOptions$CType[] values() -> values
com.google.protobuf.DescriptorProtos$FieldOptions$CType$1 -> com.google.protobuf.DescriptorProtos$FieldOptions$CType$1:
    17319:17319:void <init>() -> <init>
com.google.protobuf.DescriptorProtos$FileDescriptorProto -> com.google.protobuf.DescriptorProtos$FileDescriptorProto:
    1242:4226:void <clinit>() -> <clinit>
    1031:1031:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    1031:1031:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    1036:1038:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    1039:1039:void <init>(boolean) -> <init>
    1059:1229:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    1031:1031:java.lang.Object access$1300(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$1300
    1031:1031:java.lang.Object access$1302(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.lang.Object) -> access$1302
    1031:1031:java.lang.Object access$1400(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$1400
    1031:1031:java.lang.Object access$1402(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.lang.Object) -> access$1402
    1031:1031:com.google.protobuf.LazyStringList access$1500(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$1500
    1031:1031:com.google.protobuf.LazyStringList access$1502(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.LazyStringList) -> access$1502
    1031:1031:java.util.List access$1600(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$1600
    1031:1031:java.util.List access$1602(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List) -> access$1602
    1031:1031:java.util.List access$1700(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$1700
    1031:1031:java.util.List access$1702(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List) -> access$1702
    1031:1031:java.util.List access$1800(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$1800
    1031:1031:java.util.List access$1802(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List) -> access$1802
    1031:1031:java.util.List access$1900(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$1900
    1031:1031:java.util.List access$1902(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List) -> access$1902
    1031:1031:java.util.List access$2000(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$2000
    1031:1031:java.util.List access$2002(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List) -> access$2002
    1031:1031:java.util.List access$2100(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> access$2100
    1031:1031:java.util.List access$2102(com.google.protobuf.DescriptorProtos$FileDescriptorProto,java.util.List) -> access$2102
    1031:1031:com.google.protobuf.DescriptorProtos$FileOptions access$2202(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.DescriptorProtos$FileOptions) -> access$2202
    1031:1031:com.google.protobuf.DescriptorProtos$SourceCodeInfo access$2302(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.DescriptorProtos$SourceCodeInfo) -> access$2302
    1031:1031:int access$2402(com.google.protobuf.DescriptorProtos$FileDescriptorProto,int) -> access$2402
    1043:1043:com.google.protobuf.DescriptorProtos$FileDescriptorProto getDefaultInstance() -> getDefaultInstance
    1031:1031:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    1047:1047:com.google.protobuf.DescriptorProtos$FileDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    1400:1400:java.lang.String getDependency(int) -> getDependency
    1390:1390:int getDependencyCount() -> getDependencyCount
    1380:1380:java.util.List getDependencyList() -> getDependencyList
    1569:1569:com.google.protobuf.DescriptorProtos$EnumDescriptorProto getEnumType(int) -> getEnumType
    1563:1563:int getEnumTypeCount() -> getEnumTypeCount
    1641:1641:com.google.protobuf.DescriptorProtos$FieldDescriptorProto getExtension(int) -> getExtension
    1635:1635:int getExtensionCount() -> getExtensionCount
    1529:1529:com.google.protobuf.DescriptorProtos$DescriptorProto getMessageType(int) -> getMessageType
    1519:1519:int getMessageTypeCount() -> getMessageTypeCount
    1279:1289:java.lang.String getName() -> getName
    1301:1309:com.google.protobuf.ByteString getNameBytes() -> getNameBytes
    1664:1664:com.google.protobuf.DescriptorProtos$FileOptions getOptions() -> getOptions
    1334:1344:java.lang.String getPackage() -> getPackage
    1356:1364:com.google.protobuf.ByteString getPackageBytes() -> getPackageBytes
    1254:1254:com.google.protobuf.Parser getParserForType() -> getParserForType
    1446:1446:int getPublicDependency(int) -> getPublicDependency
    1436:1436:int getPublicDependencyCount() -> getPublicDependencyCount
    1426:1426:java.util.List getPublicDependencyList() -> getPublicDependencyList
    1809:1874:int getSerializedSize() -> getSerializedSize
    1605:1605:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getService(int) -> getService
    1599:1599:int getServiceCount() -> getServiceCount
    1700:1700:com.google.protobuf.DescriptorProtos$SourceCodeInfo getSourceCodeInfo() -> getSourceCodeInfo
    1054:1054:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    1462:1462:java.util.List getWeakDependencyList() -> getWeakDependencyList
    1269:1269:boolean hasName() -> hasName
    1658:1658:boolean hasOptions() -> hasOptions
    1324:1324:boolean hasPackage() -> hasPackage
    1687:1687:boolean hasSourceCodeInfo() -> hasSourceCodeInfo
    1717:1728:void initFields() -> initFields
    1237:1237:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1731:1765:boolean isInitialized() -> isInitialized
    1937:1937:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilder() -> newBuilder
    1940:1940:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilder(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> newBuilder
    1031:1031:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    1031:1031:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1938:1938:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilderForType() -> newBuilderForType
    1947:1948:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1897:1897:com.google.protobuf.DescriptorProtos$FileDescriptorProto parseFrom(byte[]) -> parseFrom
    1903:1903:com.google.protobuf.DescriptorProtos$FileDescriptorProto parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    1031:1031:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    1031:1031:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    1942:1942:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder toBuilder() -> toBuilder
    1770:1805:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$FileDescriptorProto$1 -> com.google.protobuf.DescriptorProtos$FileDescriptorProto$1:
    1243:1243:void <init>() -> <init>
    1243:1243:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    1248:1248:com.google.protobuf.DescriptorProtos$FileDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder -> com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder:
    1957:1957:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    1973:1975:void <init>() -> <init>
    1979:1981:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    1957:1957:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder access$1000() -> access$1000
    1957:1957:com.google.protobuf.Message build() -> build
    1957:1957:com.google.protobuf.MessageLite build() -> build
    2061:2063:com.google.protobuf.DescriptorProtos$FileDescriptorProto build() -> build
    1957:1957:com.google.protobuf.Message buildPartial() -> buildPartial
    2069:2150:com.google.protobuf.DescriptorProtos$FileDescriptorProto buildPartial() -> buildPartial
    1957:1957:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    1957:1957:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    1957:1957:java.lang.Object clone() -> clone
    2048:2048:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder clone() -> clone
    1993:1993:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder create() -> create
    2570:2574:void ensureDependencyIsMutable() -> ensureDependencyIsMutable
    3207:3211:void ensureEnumTypeIsMutable() -> ensureEnumTypeIsMutable
    3687:3691:void ensureExtensionIsMutable() -> ensureExtensionIsMutable
    2895:2899:void ensureMessageTypeIsMutable() -> ensureMessageTypeIsMutable
    2699:2703:void ensurePublicDependencyIsMutable() -> ensurePublicDependencyIsMutable
    3447:3451:void ensureServiceIsMutable() -> ensureServiceIsMutable
    2793:2797:void ensureWeakDependencyIsMutable() -> ensureWeakDependencyIsMutable
    1957:1957:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    2057:2057:com.google.protobuf.DescriptorProtos$FileDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    2053:2053:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    3431:3440:com.google.protobuf.RepeatedFieldBuilder getEnumTypeFieldBuilder() -> getEnumTypeFieldBuilder
    3911:3920:com.google.protobuf.RepeatedFieldBuilder getExtensionFieldBuilder() -> getExtensionFieldBuilder
    3191:3200:com.google.protobuf.RepeatedFieldBuilder getMessageTypeFieldBuilder() -> getMessageTypeFieldBuilder
    4029:4037:com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder() -> getOptionsFieldBuilder
    3671:3680:com.google.protobuf.RepeatedFieldBuilder getServiceFieldBuilder() -> getServiceFieldBuilder
    4209:4217:com.google.protobuf.SingleFieldBuilder getSourceCodeInfoFieldBuilder() -> getSourceCodeInfoFieldBuilder
    1967:1967:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1983:1991:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    1957:1957:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1957:1957:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1957:1957:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1957:1957:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1957:1957:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2154:2158:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    2163:2315:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> mergeFrom
    2356:2364:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3977:3990:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$FileOptions) -> mergeOptions
    4129:4142:com.google.protobuf.DescriptorProtos$FileDescriptorProto$Builder mergeSourceCodeInfo(com.google.protobuf.DescriptorProtos$SourceCodeInfo) -> mergeSourceCodeInfo
com.google.protobuf.DescriptorProtos$FileOptions -> com.google.protobuf.DescriptorProtos$FileOptions:
    13698:15654:void <clinit>() -> <clinit>
    13564:13564:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    13564:13564:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1) -> <init>
    13569:13571:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    13572:13572:void <init>(boolean) -> <init>
    13592:13685:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    13564:13564:java.lang.Object access$11000(com.google.protobuf.DescriptorProtos$FileOptions) -> access$11000
    13564:13564:java.lang.Object access$11002(com.google.protobuf.DescriptorProtos$FileOptions,java.lang.Object) -> access$11002
    13564:13564:java.lang.Object access$11100(com.google.protobuf.DescriptorProtos$FileOptions) -> access$11100
    13564:13564:java.lang.Object access$11102(com.google.protobuf.DescriptorProtos$FileOptions,java.lang.Object) -> access$11102
    13564:13564:boolean access$11202(com.google.protobuf.DescriptorProtos$FileOptions,boolean) -> access$11202
    13564:13564:boolean access$11302(com.google.protobuf.DescriptorProtos$FileOptions,boolean) -> access$11302
    13564:13564:com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode access$11402(com.google.protobuf.DescriptorProtos$FileOptions,com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode) -> access$11402
    13564:13564:java.lang.Object access$11500(com.google.protobuf.DescriptorProtos$FileOptions) -> access$11500
    13564:13564:java.lang.Object access$11502(com.google.protobuf.DescriptorProtos$FileOptions,java.lang.Object) -> access$11502
    13564:13564:boolean access$11602(com.google.protobuf.DescriptorProtos$FileOptions,boolean) -> access$11602
    13564:13564:boolean access$11702(com.google.protobuf.DescriptorProtos$FileOptions,boolean) -> access$11702
    13564:13564:boolean access$11802(com.google.protobuf.DescriptorProtos$FileOptions,boolean) -> access$11802
    13564:13564:java.util.List access$11900(com.google.protobuf.DescriptorProtos$FileOptions) -> access$11900
    13564:13564:java.util.List access$11902(com.google.protobuf.DescriptorProtos$FileOptions,java.util.List) -> access$11902
    13564:13564:int access$12002(com.google.protobuf.DescriptorProtos$FileOptions,int) -> access$12002
    14141:14141:boolean getCcGenericServices() -> getCcGenericServices
    13576:13576:com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstance() -> getDefaultInstance
    13564:13564:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    13580:13580:com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    14090:14098:com.google.protobuf.ByteString getGoPackageBytes() -> getGoPackageBytes
    14025:14025:boolean getJavaGenerateEqualsAndHash() -> getJavaGenerateEqualsAndHash
    14157:14157:boolean getJavaGenericServices() -> getJavaGenericServices
    13995:13995:boolean getJavaMultipleFiles() -> getJavaMultipleFiles
    13952:13960:com.google.protobuf.ByteString getJavaOuterClassnameBytes() -> getJavaOuterClassnameBytes
    13885:13893:com.google.protobuf.ByteString getJavaPackageBytes() -> getJavaPackageBytes
    14041:14041:com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode getOptimizeFor() -> getOptimizeFor
    13710:13710:com.google.protobuf.Parser getParserForType() -> getParserForType
    14173:14173:boolean getPyGenericServices() -> getPyGenericServices
    14305:14352:int getSerializedSize() -> getSerializedSize
    14218:14218:com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int) -> getUninterpretedOption
    14208:14208:int getUninterpretedOptionCount() -> getUninterpretedOptionCount
    13587:13587:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    14122:14122:boolean hasCcGenericServices() -> hasCcGenericServices
    14056:14056:boolean hasGoPackage() -> hasGoPackage
    14012:14012:boolean hasJavaGenerateEqualsAndHash() -> hasJavaGenerateEqualsAndHash
    14151:14151:boolean hasJavaGenericServices() -> hasJavaGenericServices
    13980:13980:boolean hasJavaMultipleFiles() -> hasJavaMultipleFiles
    13912:13912:boolean hasJavaOuterClassname() -> hasJavaOuterClassname
    13847:13847:boolean hasJavaPackage() -> hasJavaPackage
    14035:14035:boolean hasOptimizeFor() -> hasOptimizeFor
    14167:14167:boolean hasPyGenericServices() -> hasPyGenericServices
    14233:14243:void initFields() -> initFields
    13693:13693:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    14246:14260:boolean isInitialized() -> isInitialized
    14415:14415:com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder() -> newBuilder
    14418:14418:com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$FileOptions) -> newBuilder
    13564:13564:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    13564:13564:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    14416:14416:com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilderForType() -> newBuilderForType
    14425:14426:com.google.protobuf.DescriptorProtos$FileOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    13564:13564:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    13564:13564:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    14420:14420:com.google.protobuf.DescriptorProtos$FileOptions$Builder toBuilder() -> toBuilder
    14265:14301:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$FileOptions$1 -> com.google.protobuf.DescriptorProtos$FileOptions$1:
    13699:13699:void <init>() -> <init>
    13699:13699:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    13704:13704:com.google.protobuf.DescriptorProtos$FileOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$FileOptions$Builder -> com.google.protobuf.DescriptorProtos$FileOptions$Builder:
    14431:14431:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    14447:14449:void <init>() -> <init>
    14453:14455:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    14431:14431:com.google.protobuf.DescriptorProtos$FileOptions$Builder access$10700() -> access$10700
    14431:14431:com.google.protobuf.Message build() -> build
    14431:14431:com.google.protobuf.MessageLite build() -> build
    14508:14510:com.google.protobuf.DescriptorProtos$FileOptions build() -> build
    14431:14431:com.google.protobuf.Message buildPartial() -> buildPartial
    14516:14566:com.google.protobuf.DescriptorProtos$FileOptions buildPartial() -> buildPartial
    14431:14431:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    14431:14431:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    14431:14431:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    14431:14431:java.lang.Object clone() -> clone
    14495:14495:com.google.protobuf.DescriptorProtos$FileOptions$Builder clone() -> clone
    14462:14462:com.google.protobuf.DescriptorProtos$FileOptions$Builder create() -> create
    15340:15344:void ensureUninterpretedOptionIsMutable() -> ensureUninterpretedOptionIsMutable
    14431:14431:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    14504:14504:com.google.protobuf.DescriptorProtos$FileOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    14500:14500:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    15636:15645:com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder() -> getUninterpretedOptionFieldBuilder
    14441:14441:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    14457:14460:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    14431:14431:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    14431:14431:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    14431:14431:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    14431:14431:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    14431:14431:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    14570:14574:com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    14579:14641:com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$FileOptions) -> mergeFrom
    14662:14669:com.google.protobuf.DescriptorProtos$FileOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    15242:15245:com.google.protobuf.DescriptorProtos$FileOptions$Builder setCcGenericServices(boolean) -> setCcGenericServices
    15023:15026:com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaGenerateEqualsAndHash(boolean) -> setJavaGenerateEqualsAndHash
    15288:15291:com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaGenericServices(boolean) -> setJavaGenericServices
    14960:14963:com.google.protobuf.DescriptorProtos$FileOptions$Builder setJavaMultipleFiles(boolean) -> setJavaMultipleFiles
    15063:15064:com.google.protobuf.DescriptorProtos$FileOptions$Builder setOptimizeFor(com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode) -> setOptimizeFor
    15321:15324:com.google.protobuf.DescriptorProtos$FileOptions$Builder setPyGenericServices(boolean) -> setPyGenericServices
com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode -> com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode:
    13729:13810:void <clinit>() -> <clinit>
    13824:13827:void <init>(java.lang.String,int,int,int) -> <init>
    13774:13774:int getNumber() -> getNumber
    13720:13720:com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode valueOf(java.lang.String) -> valueOf
    13777:13778:com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode valueOf(int) -> valueOf
    13720:13720:com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode[] values() -> values
com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode$1 -> com.google.protobuf.DescriptorProtos$FileOptions$OptimizeMode$1:
    13791:13791:void <init>() -> <init>
com.google.protobuf.DescriptorProtos$MessageOptions -> com.google.protobuf.DescriptorProtos$MessageOptions:
    15878:16848:void <clinit>() -> <clinit>
    15785:15785:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    15785:15785:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1) -> <init>
    15790:15792:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    15793:15793:void <init>(boolean) -> <init>
    15813:15865:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    15785:15785:boolean access$12702(com.google.protobuf.DescriptorProtos$MessageOptions,boolean) -> access$12702
    15785:15785:boolean access$12802(com.google.protobuf.DescriptorProtos$MessageOptions,boolean) -> access$12802
    15785:15785:java.util.List access$12900(com.google.protobuf.DescriptorProtos$MessageOptions) -> access$12900
    15785:15785:java.util.List access$12902(com.google.protobuf.DescriptorProtos$MessageOptions,java.util.List) -> access$12902
    15785:15785:int access$13002(com.google.protobuf.DescriptorProtos$MessageOptions,int) -> access$13002
    15797:15797:com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstance() -> getDefaultInstance
    15785:15785:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    15801:15801:com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    15949:15949:boolean getMessageSetWireFormat() -> getMessageSetWireFormat
    15977:15977:boolean getNoStandardDescriptorAccessor() -> getNoStandardDescriptorAccessor
    15890:15890:com.google.protobuf.Parser getParserForType() -> getParserForType
    16081:16100:int getSerializedSize() -> getSerializedSize
    16022:16022:com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int) -> getUninterpretedOption
    16012:16012:int getUninterpretedOptionCount() -> getUninterpretedOptionCount
    15808:15808:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    15922:15922:boolean hasMessageSetWireFormat() -> hasMessageSetWireFormat
    15965:15965:boolean hasNoStandardDescriptorAccessor() -> hasNoStandardDescriptorAccessor
    16037:16040:void initFields() -> initFields
    15873:15873:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    16043:16057:boolean isInitialized() -> isInitialized
    16163:16163:com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder() -> newBuilder
    16166:16166:com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$MessageOptions) -> newBuilder
    15785:15785:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    15785:15785:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    16164:16164:com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilderForType() -> newBuilderForType
    16173:16174:com.google.protobuf.DescriptorProtos$MessageOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    15785:15785:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    15785:15785:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    16168:16168:com.google.protobuf.DescriptorProtos$MessageOptions$Builder toBuilder() -> toBuilder
    16062:16077:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$MessageOptions$1 -> com.google.protobuf.DescriptorProtos$MessageOptions$1:
    15879:15879:void <init>() -> <init>
    15879:15879:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    15884:15884:com.google.protobuf.DescriptorProtos$MessageOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$MessageOptions$Builder -> com.google.protobuf.DescriptorProtos$MessageOptions$Builder:
    16179:16179:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    16195:16197:void <init>() -> <init>
    16201:16203:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    16179:16179:com.google.protobuf.DescriptorProtos$MessageOptions$Builder access$12400() -> access$12400
    16179:16179:com.google.protobuf.Message build() -> build
    16179:16179:com.google.protobuf.MessageLite build() -> build
    16242:16244:com.google.protobuf.DescriptorProtos$MessageOptions build() -> build
    16179:16179:com.google.protobuf.Message buildPartial() -> buildPartial
    16250:16272:com.google.protobuf.DescriptorProtos$MessageOptions buildPartial() -> buildPartial
    16179:16179:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    16179:16179:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    16179:16179:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    16179:16179:java.lang.Object clone() -> clone
    16229:16229:com.google.protobuf.DescriptorProtos$MessageOptions$Builder clone() -> clone
    16210:16210:com.google.protobuf.DescriptorProtos$MessageOptions$Builder create() -> create
    16534:16538:void ensureUninterpretedOptionIsMutable() -> ensureUninterpretedOptionIsMutable
    16179:16179:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    16238:16238:com.google.protobuf.DescriptorProtos$MessageOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    16234:16234:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    16830:16839:com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder() -> getUninterpretedOptionFieldBuilder
    16189:16189:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    16205:16208:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    16179:16179:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    16179:16179:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    16179:16179:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    16179:16179:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    16179:16179:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    16276:16280:com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    16285:16320:com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MessageOptions) -> mergeFrom
    16341:16348:com.google.protobuf.DescriptorProtos$MessageOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    16437:16440:com.google.protobuf.DescriptorProtos$MessageOptions$Builder setMessageSetWireFormat(boolean) -> setMessageSetWireFormat
    16509:16512:com.google.protobuf.DescriptorProtos$MessageOptions$Builder setNoStandardDescriptorAccessor(boolean) -> setNoStandardDescriptorAccessor
com.google.protobuf.DescriptorProtos$MethodDescriptorProto -> com.google.protobuf.DescriptorProtos$MethodDescriptorProto:
    12418:13284:void <clinit>() -> <clinit>
    12318:12318:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    12318:12318:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    12323:12325:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    12326:12326:void <init>(boolean) -> <init>
    12346:12405:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    12318:12318:java.lang.Object access$10000(com.google.protobuf.DescriptorProtos$MethodDescriptorProto) -> access$10000
    12318:12318:java.lang.Object access$10002(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,java.lang.Object) -> access$10002
    12318:12318:java.lang.Object access$10100(com.google.protobuf.DescriptorProtos$MethodDescriptorProto) -> access$10100
    12318:12318:java.lang.Object access$10102(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,java.lang.Object) -> access$10102
    12318:12318:com.google.protobuf.DescriptorProtos$MethodOptions access$10202(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,com.google.protobuf.DescriptorProtos$MethodOptions) -> access$10202
    12318:12318:int access$10302(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,int) -> access$10302
    12318:12318:java.lang.Object access$9900(com.google.protobuf.DescriptorProtos$MethodDescriptorProto) -> access$9900
    12318:12318:java.lang.Object access$9902(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,java.lang.Object) -> access$9902
    12330:12330:com.google.protobuf.DescriptorProtos$MethodDescriptorProto getDefaultInstance() -> getDefaultInstance
    12318:12318:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    12334:12334:com.google.protobuf.DescriptorProtos$MethodDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    12500:12510:java.lang.String getInputType() -> getInputType
    12523:12531:com.google.protobuf.ByteString getInputTypeBytes() -> getInputTypeBytes
    12447:12457:java.lang.String getName() -> getName
    12465:12473:com.google.protobuf.ByteString getNameBytes() -> getNameBytes
    12591:12591:com.google.protobuf.DescriptorProtos$MethodOptions getOptions() -> getOptions
    12548:12558:java.lang.String getOutputType() -> getOutputType
    12566:12574:com.google.protobuf.ByteString getOutputTypeBytes() -> getOutputTypeBytes
    12430:12430:com.google.protobuf.Parser getParserForType() -> getParserForType
    12641:12663:int getSerializedSize() -> getSerializedSize
    12341:12341:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    12489:12489:boolean hasInputType() -> hasInputType
    12441:12441:boolean hasName() -> hasName
    12585:12585:boolean hasOptions() -> hasOptions
    12542:12542:boolean hasOutputType() -> hasOutputType
    12601:12605:void initFields() -> initFields
    12413:12413:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    12608:12618:boolean isInitialized() -> isInitialized
    12726:12726:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder newBuilder() -> newBuilder
    12729:12729:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder newBuilder(com.google.protobuf.DescriptorProtos$MethodDescriptorProto) -> newBuilder
    12318:12318:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    12318:12318:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    12727:12727:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder newBuilderForType() -> newBuilderForType
    12736:12737:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    12318:12318:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    12318:12318:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    12731:12731:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder toBuilder() -> toBuilder
    12623:12637:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1 -> com.google.protobuf.DescriptorProtos$MethodDescriptorProto$1:
    12419:12419:void <init>() -> <init>
    12419:12419:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    12424:12424:com.google.protobuf.DescriptorProtos$MethodDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder -> com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder:
    12746:12746:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    12762:12764:void <init>() -> <init>
    12768:12770:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    12746:12746:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder access$9600() -> access$9600
    12746:12746:com.google.protobuf.Message build() -> build
    12746:12746:com.google.protobuf.MessageLite build() -> build
    12811:12813:com.google.protobuf.DescriptorProtos$MethodDescriptorProto build() -> build
    12746:12746:com.google.protobuf.Message buildPartial() -> buildPartial
    12819:12844:com.google.protobuf.DescriptorProtos$MethodDescriptorProto buildPartial() -> buildPartial
    12746:12746:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    12746:12746:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    12746:12746:java.lang.Object clone() -> clone
    12798:12798:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder clone() -> clone
    12777:12777:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder create() -> create
    12746:12746:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    12807:12807:com.google.protobuf.DescriptorProtos$MethodDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    12803:12803:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    13267:13275:com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder() -> getOptionsFieldBuilder
    12756:12756:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    12772:12775:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    12746:12746:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    12746:12746:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    12746:12746:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    12746:12746:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    12746:12746:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    12848:12852:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    12857:12877:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MethodDescriptorProto) -> mergeFrom
    12894:12901:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    13215:13228:com.google.protobuf.DescriptorProtos$MethodDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$MethodOptions) -> mergeOptions
com.google.protobuf.DescriptorProtos$MethodOptions -> com.google.protobuf.DescriptorProtos$MethodOptions:
    21664:22337:void <clinit>() -> <clinit>
    21581:21581:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    21581:21581:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1) -> <init>
    21586:21588:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    21589:21589:void <init>(boolean) -> <init>
    21609:21651:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    21581:21581:java.util.List access$17400(com.google.protobuf.DescriptorProtos$MethodOptions) -> access$17400
    21581:21581:java.util.List access$17402(com.google.protobuf.DescriptorProtos$MethodOptions,java.util.List) -> access$17402
    21593:21593:com.google.protobuf.DescriptorProtos$MethodOptions getDefaultInstance() -> getDefaultInstance
    21581:21581:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    21597:21597:com.google.protobuf.DescriptorProtos$MethodOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    21676:21676:com.google.protobuf.Parser getParserForType() -> getParserForType
    21772:21783:int getSerializedSize() -> getSerializedSize
    21721:21721:com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int) -> getUninterpretedOption
    21711:21711:int getUninterpretedOptionCount() -> getUninterpretedOptionCount
    21604:21604:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    21736:21737:void initFields() -> initFields
    21659:21659:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    21740:21754:boolean isInitialized() -> isInitialized
    21846:21846:com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilder() -> newBuilder
    21849:21849:com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$MethodOptions) -> newBuilder
    21581:21581:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    21581:21581:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    21847:21847:com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilderForType() -> newBuilderForType
    21856:21857:com.google.protobuf.DescriptorProtos$MethodOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    21581:21581:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    21581:21581:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    21851:21851:com.google.protobuf.DescriptorProtos$MethodOptions$Builder toBuilder() -> toBuilder
    21759:21768:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$MethodOptions$1 -> com.google.protobuf.DescriptorProtos$MethodOptions$1:
    21665:21665:void <init>() -> <init>
    21665:21665:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    21670:21670:com.google.protobuf.DescriptorProtos$MethodOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$MethodOptions$Builder -> com.google.protobuf.DescriptorProtos$MethodOptions$Builder:
    21862:21862:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    21878:21880:void <init>() -> <init>
    21884:21886:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    21862:21862:com.google.protobuf.DescriptorProtos$MethodOptions$Builder access$17100() -> access$17100
    21862:21862:com.google.protobuf.Message build() -> build
    21862:21862:com.google.protobuf.MessageLite build() -> build
    21921:21923:com.google.protobuf.DescriptorProtos$MethodOptions build() -> build
    21862:21862:com.google.protobuf.Message buildPartial() -> buildPartial
    21929:21941:com.google.protobuf.DescriptorProtos$MethodOptions buildPartial() -> buildPartial
    21862:21862:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    21862:21862:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    21862:21862:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    21862:21862:java.lang.Object clone() -> clone
    21908:21908:com.google.protobuf.DescriptorProtos$MethodOptions$Builder clone() -> clone
    21893:21893:com.google.protobuf.DescriptorProtos$MethodOptions$Builder create() -> create
    22023:22027:void ensureUninterpretedOptionIsMutable() -> ensureUninterpretedOptionIsMutable
    21862:21862:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    21917:21917:com.google.protobuf.DescriptorProtos$MethodOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    21913:21913:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    22319:22328:com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder() -> getUninterpretedOptionFieldBuilder
    21872:21872:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    21888:21891:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    21862:21862:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    21862:21862:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    21862:21862:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    21862:21862:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    21862:21862:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    21945:21949:com.google.protobuf.DescriptorProtos$MethodOptions$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    21954:21983:com.google.protobuf.DescriptorProtos$MethodOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$MethodOptions) -> mergeFrom
    22004:22011:com.google.protobuf.DescriptorProtos$MethodOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
com.google.protobuf.DescriptorProtos$ServiceDescriptorProto -> com.google.protobuf.DescriptorProtos$ServiceDescriptorProto:
    11342:12229:void <clinit>() -> <clinit>
    11241:11241:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    11241:11241:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    11246:11248:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    11249:11249:void <init>(boolean) -> <init>
    11269:11329:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    11241:11241:java.lang.Object access$8900(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto) -> access$8900
    11241:11241:java.lang.Object access$8902(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,java.lang.Object) -> access$8902
    11241:11241:java.util.List access$9000(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto) -> access$9000
    11241:11241:java.util.List access$9002(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,java.util.List) -> access$9002
    11241:11241:com.google.protobuf.DescriptorProtos$ServiceOptions access$9102(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,com.google.protobuf.DescriptorProtos$ServiceOptions) -> access$9102
    11241:11241:int access$9202(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,int) -> access$9202
    11253:11253:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getDefaultInstance() -> getDefaultInstance
    11241:11241:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    11257:11257:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    11427:11427:com.google.protobuf.DescriptorProtos$MethodDescriptorProto getMethod(int) -> getMethod
    11421:11421:int getMethodCount() -> getMethodCount
    11371:11381:java.lang.String getName() -> getName
    11389:11397:com.google.protobuf.ByteString getNameBytes() -> getNameBytes
    11450:11450:com.google.protobuf.DescriptorProtos$ServiceOptions getOptions() -> getOptions
    11354:11354:com.google.protobuf.Parser getParserForType() -> getParserForType
    11502:11520:int getSerializedSize() -> getSerializedSize
    11264:11264:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    11365:11365:boolean hasName() -> hasName
    11444:11444:boolean hasOptions() -> hasOptions
    11460:11463:void initFields() -> initFields
    11337:11337:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    11466:11482:boolean isInitialized() -> isInitialized
    11583:11583:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder newBuilder() -> newBuilder
    11586:11586:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder newBuilder(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto) -> newBuilder
    11241:11241:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    11241:11241:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    11584:11584:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder newBuilderForType() -> newBuilderForType
    11593:11594:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    11241:11241:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    11241:11241:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    11588:11588:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder toBuilder() -> toBuilder
    11487:11498:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1 -> com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$1:
    11343:11343:void <init>() -> <init>
    11343:11343:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    11348:11348:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder -> com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder:
    11603:11603:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    11619:11621:void <init>() -> <init>
    11625:11627:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    11603:11603:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder access$8600() -> access$8600
    11603:11603:com.google.protobuf.Message build() -> build
    11603:11603:com.google.protobuf.MessageLite build() -> build
    11671:11673:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto build() -> build
    11603:11603:com.google.protobuf.Message buildPartial() -> buildPartial
    11679:11705:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto buildPartial() -> buildPartial
    11603:11603:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    11603:11603:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    11603:11603:java.lang.Object clone() -> clone
    11658:11658:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder clone() -> clone
    11635:11635:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder create() -> create
    11870:11874:void ensureMethodIsMutable() -> ensureMethodIsMutable
    11603:11603:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    11667:11667:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto getDefaultInstanceForType() -> getDefaultInstanceForType
    11663:11663:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    12094:12103:com.google.protobuf.RepeatedFieldBuilder getMethodFieldBuilder() -> getMethodFieldBuilder
    12212:12220:com.google.protobuf.SingleFieldBuilder getOptionsFieldBuilder() -> getOptionsFieldBuilder
    11613:11613:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    11629:11633:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    11603:11603:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    11603:11603:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    11603:11603:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    11603:11603:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    11603:11603:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    11709:11713:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    11718:11754:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder mergeFrom(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto) -> mergeFrom
    11777:11784:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    12160:12173:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto$Builder mergeOptions(com.google.protobuf.DescriptorProtos$ServiceOptions) -> mergeOptions
com.google.protobuf.DescriptorProtos$ServiceOptions -> com.google.protobuf.DescriptorProtos$ServiceOptions:
    20851:21524:void <clinit>() -> <clinit>
    20768:20768:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    20768:20768:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder,com.google.protobuf.DescriptorProtos$1) -> <init>
    20773:20775:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    20776:20776:void <init>(boolean) -> <init>
    20796:20838:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    20768:20768:java.util.List access$16700(com.google.protobuf.DescriptorProtos$ServiceOptions) -> access$16700
    20768:20768:java.util.List access$16702(com.google.protobuf.DescriptorProtos$ServiceOptions,java.util.List) -> access$16702
    20780:20780:com.google.protobuf.DescriptorProtos$ServiceOptions getDefaultInstance() -> getDefaultInstance
    20768:20768:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    20784:20784:com.google.protobuf.DescriptorProtos$ServiceOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    20863:20863:com.google.protobuf.Parser getParserForType() -> getParserForType
    20959:20970:int getSerializedSize() -> getSerializedSize
    20908:20908:com.google.protobuf.DescriptorProtos$UninterpretedOption getUninterpretedOption(int) -> getUninterpretedOption
    20898:20898:int getUninterpretedOptionCount() -> getUninterpretedOptionCount
    20791:20791:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    20923:20924:void initFields() -> initFields
    20846:20846:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    20927:20941:boolean isInitialized() -> isInitialized
    21033:21033:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilder() -> newBuilder
    21036:21036:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilder(com.google.protobuf.DescriptorProtos$ServiceOptions) -> newBuilder
    20768:20768:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    20768:20768:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    21034:21034:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilderForType() -> newBuilderForType
    21043:21044:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    20768:20768:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    20768:20768:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    21038:21038:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder toBuilder() -> toBuilder
    20946:20955:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$ServiceOptions$1 -> com.google.protobuf.DescriptorProtos$ServiceOptions$1:
    20852:20852:void <init>() -> <init>
    20852:20852:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    20857:20857:com.google.protobuf.DescriptorProtos$ServiceOptions parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$ServiceOptions$Builder -> com.google.protobuf.DescriptorProtos$ServiceOptions$Builder:
    21049:21049:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    21065:21067:void <init>() -> <init>
    21071:21073:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    21049:21049:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder access$16400() -> access$16400
    21049:21049:com.google.protobuf.Message build() -> build
    21049:21049:com.google.protobuf.MessageLite build() -> build
    21108:21110:com.google.protobuf.DescriptorProtos$ServiceOptions build() -> build
    21049:21049:com.google.protobuf.Message buildPartial() -> buildPartial
    21116:21128:com.google.protobuf.DescriptorProtos$ServiceOptions buildPartial() -> buildPartial
    21049:21049:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    21049:21049:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    21049:21049:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    21049:21049:java.lang.Object clone() -> clone
    21095:21095:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder clone() -> clone
    21080:21080:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder create() -> create
    21210:21214:void ensureUninterpretedOptionIsMutable() -> ensureUninterpretedOptionIsMutable
    21049:21049:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    21104:21104:com.google.protobuf.DescriptorProtos$ServiceOptions getDefaultInstanceForType() -> getDefaultInstanceForType
    21100:21100:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    21506:21515:com.google.protobuf.RepeatedFieldBuilder getUninterpretedOptionFieldBuilder() -> getUninterpretedOptionFieldBuilder
    21059:21059:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    21075:21078:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    21049:21049:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    21049:21049:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    21049:21049:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    21049:21049:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    21049:21049:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    21132:21136:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    21141:21170:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder mergeFrom(com.google.protobuf.DescriptorProtos$ServiceOptions) -> mergeFrom
    21191:21198:com.google.protobuf.DescriptorProtos$ServiceOptions$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
com.google.protobuf.DescriptorProtos$SourceCodeInfo -> com.google.protobuf.DescriptorProtos$SourceCodeInfo:
    24681:28146:void <clinit>() -> <clinit>
    24598:24598:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    24598:24598:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    24603:24605:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    24606:24606:void <init>(boolean) -> <init>
    24626:24668:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    24598:24598:java.util.List access$21500(com.google.protobuf.DescriptorProtos$SourceCodeInfo) -> access$21500
    24598:24598:java.util.List access$21502(com.google.protobuf.DescriptorProtos$SourceCodeInfo,java.util.List) -> access$21502
    24610:24610:com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstance() -> getDefaultInstance
    24598:24598:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    24614:24614:com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    24693:24693:com.google.protobuf.Parser getParserForType() -> getParserForType
    26832:26842:int getSerializedSize() -> getSerializedSize
    24621:24621:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    26810:26811:void initFields() -> initFields
    24676:24676:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    26814:26818:boolean isInitialized() -> isInitialized
    26905:26905:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder() -> newBuilder
    26908:26908:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilder(com.google.protobuf.DescriptorProtos$SourceCodeInfo) -> newBuilder
    24598:24598:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    24598:24598:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    26906:26906:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilderForType() -> newBuilderForType
    26915:26916:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    24598:24598:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    24598:24598:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    26910:26910:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder toBuilder() -> toBuilder
    26823:26828:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$SourceCodeInfo$1 -> com.google.protobuf.DescriptorProtos$SourceCodeInfo$1:
    24682:24682:void <init>() -> <init>
    24682:24682:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    24687:24687:com.google.protobuf.DescriptorProtos$SourceCodeInfo parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder -> com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder:
    26926:26926:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    26942:26944:void <init>() -> <init>
    26948:26950:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    26926:26926:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder access$21200() -> access$21200
    26926:26926:com.google.protobuf.Message build() -> build
    26926:26926:com.google.protobuf.MessageLite build() -> build
    26985:26987:com.google.protobuf.DescriptorProtos$SourceCodeInfo build() -> build
    26926:26926:com.google.protobuf.Message buildPartial() -> buildPartial
    26993:27005:com.google.protobuf.DescriptorProtos$SourceCodeInfo buildPartial() -> buildPartial
    26926:26926:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    26926:26926:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    26926:26926:java.lang.Object clone() -> clone
    26972:26972:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder clone() -> clone
    26957:26957:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder create() -> create
    27076:27080:void ensureLocationIsMutable() -> ensureLocationIsMutable
    26926:26926:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    26981:26981:com.google.protobuf.DescriptorProtos$SourceCodeInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    26977:26977:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    28128:28137:com.google.protobuf.RepeatedFieldBuilder getLocationFieldBuilder() -> getLocationFieldBuilder
    26936:26936:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    26952:26955:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    26926:26926:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    26926:26926:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    26926:26926:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    26926:26926:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    26926:26926:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    27009:27013:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    27018:27046:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.DescriptorProtos$SourceCodeInfo) -> mergeFrom
    27057:27064:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location -> com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location:
    25103:26538:void <clinit>() -> <clinit>
    24973:24973:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    24973:24973:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    24978:24980:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    24981:24981:void <init>(boolean) -> <init>
    25001:25090:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    24973:24973:java.util.List access$20700(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location) -> access$20700
    24973:24973:java.util.List access$20702(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location,java.util.List) -> access$20702
    24973:24973:java.util.List access$20800(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location) -> access$20800
    24973:24973:java.util.List access$20802(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location,java.util.List) -> access$20802
    24973:24973:java.lang.Object access$20900(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location) -> access$20900
    24973:24973:java.lang.Object access$20902(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location,java.lang.Object) -> access$20902
    24973:24973:java.lang.Object access$21000(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location) -> access$21000
    24973:24973:java.lang.Object access$21002(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location,java.lang.Object) -> access$21002
    24973:24973:int access$21102(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location,int) -> access$21102
    24985:24985:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location getDefaultInstance() -> getDefaultInstance
    24973:24973:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    24989:24989:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location getDefaultInstanceForType() -> getDefaultInstanceForType
    25411:25419:com.google.protobuf.ByteString getLeadingCommentsBytes() -> getLeadingCommentsBytes
    25115:25115:com.google.protobuf.Parser getParserForType() -> getParserForType
    25153:25153:java.util.List getPathList() -> getPathList
    25509:25551:int getSerializedSize() -> getSerializedSize
    25237:25237:java.util.List getSpanList() -> getSpanList
    25454:25462:com.google.protobuf.ByteString getTrailingCommentsBytes() -> getTrailingCommentsBytes
    24996:24996:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    25313:25313:boolean hasLeadingComments() -> hasLeadingComments
    25430:25430:boolean hasTrailingComments() -> hasTrailingComments
    25467:25471:void initFields() -> initFields
    25098:25098:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    25474:25478:boolean isInitialized() -> isInitialized
    25614:25614:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder newBuilder() -> newBuilder
    25617:25617:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder newBuilder(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location) -> newBuilder
    24973:24973:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    24973:24973:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    25615:25615:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder newBuilderForType() -> newBuilderForType
    25624:25625:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    24973:24973:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    24973:24973:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    25619:25619:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder toBuilder() -> toBuilder
    25483:25505:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1 -> com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$1:
    25104:25104:void <init>() -> <init>
    25104:25104:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    25109:25109:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder -> com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder:
    25630:25630:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    25646:25648:void <init>() -> <init>
    25652:25654:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    25630:25630:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder access$20400() -> access$20400
    25630:25630:com.google.protobuf.Message build() -> build
    25630:25630:com.google.protobuf.MessageLite build() -> build
    25690:25692:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location build() -> build
    25630:25630:com.google.protobuf.Message buildPartial() -> buildPartial
    25698:25721:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location buildPartial() -> buildPartial
    25630:25630:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    25630:25630:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    25630:25630:java.lang.Object clone() -> clone
    25677:25677:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder clone() -> clone
    25660:25660:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder create() -> create
    25795:25799:void ensurePathIsMutable() -> ensurePathIsMutable
    26043:26047:void ensureSpanIsMutable() -> ensureSpanIsMutable
    25630:25630:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    25686:25686:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location getDefaultInstanceForType() -> getDefaultInstanceForType
    25682:25682:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    25640:25640:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    25656:25658:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    25630:25630:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    25630:25630:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    25630:25630:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    25630:25630:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    25630:25630:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    25725:25729:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    25734:25766:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder mergeFrom(com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location) -> mergeFrom
    25777:25784:com.google.protobuf.DescriptorProtos$SourceCodeInfo$Location$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
com.google.protobuf.DescriptorProtos$UninterpretedOption -> com.google.protobuf.DescriptorProtos$UninterpretedOption:
    22580:24327:void <clinit>() -> <clinit>
    22467:22467:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    22467:22467:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    22472:22474:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    22475:22475:void <init>(boolean) -> <init>
    22495:22567:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    22467:22467:java.util.List access$19000(com.google.protobuf.DescriptorProtos$UninterpretedOption) -> access$19000
    22467:22467:java.util.List access$19002(com.google.protobuf.DescriptorProtos$UninterpretedOption,java.util.List) -> access$19002
    22467:22467:java.lang.Object access$19100(com.google.protobuf.DescriptorProtos$UninterpretedOption) -> access$19100
    22467:22467:java.lang.Object access$19102(com.google.protobuf.DescriptorProtos$UninterpretedOption,java.lang.Object) -> access$19102
    22467:22467:long access$19202(com.google.protobuf.DescriptorProtos$UninterpretedOption,long) -> access$19202
    22467:22467:long access$19302(com.google.protobuf.DescriptorProtos$UninterpretedOption,long) -> access$19302
    22467:22467:double access$19402(com.google.protobuf.DescriptorProtos$UninterpretedOption,double) -> access$19402
    22467:22467:com.google.protobuf.ByteString access$19502(com.google.protobuf.DescriptorProtos$UninterpretedOption,com.google.protobuf.ByteString) -> access$19502
    22467:22467:java.lang.Object access$19600(com.google.protobuf.DescriptorProtos$UninterpretedOption) -> access$19600
    22467:22467:java.lang.Object access$19602(com.google.protobuf.DescriptorProtos$UninterpretedOption,java.lang.Object) -> access$19602
    22467:22467:int access$19702(com.google.protobuf.DescriptorProtos$UninterpretedOption,int) -> access$19702
    23369:23377:com.google.protobuf.ByteString getAggregateValueBytes() -> getAggregateValueBytes
    22479:22479:com.google.protobuf.DescriptorProtos$UninterpretedOption getDefaultInstance() -> getDefaultInstance
    22467:22467:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    22483:22483:com.google.protobuf.DescriptorProtos$UninterpretedOption getDefaultInstanceForType() -> getDefaultInstanceForType
    23319:23319:double getDoubleValue() -> getDoubleValue
    23262:23270:com.google.protobuf.ByteString getIdentifierValueBytes() -> getIdentifierValueBytes
    23206:23206:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart getName(int) -> getName
    23200:23200:int getNameCount() -> getNameCount
    23303:23303:long getNegativeIntValue() -> getNegativeIntValue
    22592:22592:com.google.protobuf.Parser getParserForType() -> getParserForType
    23287:23287:long getPositiveIntValue() -> getPositiveIntValue
    23434:23468:int getSerializedSize() -> getSerializedSize
    23335:23335:com.google.protobuf.ByteString getStringValue() -> getStringValue
    22490:22490:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    23345:23345:boolean hasAggregateValue() -> hasAggregateValue
    23313:23313:boolean hasDoubleValue() -> hasDoubleValue
    23228:23228:boolean hasIdentifierValue() -> hasIdentifierValue
    23297:23297:boolean hasNegativeIntValue() -> hasNegativeIntValue
    23281:23281:boolean hasPositiveIntValue() -> hasPositiveIntValue
    23329:23329:boolean hasStringValue() -> hasStringValue
    23382:23389:void initFields() -> initFields
    22575:22575:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    23392:23402:boolean isInitialized() -> isInitialized
    23531:23531:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder newBuilder() -> newBuilder
    23534:23534:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder newBuilder(com.google.protobuf.DescriptorProtos$UninterpretedOption) -> newBuilder
    22467:22467:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    22467:22467:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    23532:23532:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder newBuilderForType() -> newBuilderForType
    23541:23542:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    22467:22467:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    22467:22467:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    23536:23536:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder toBuilder() -> toBuilder
    23407:23430:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$UninterpretedOption$1 -> com.google.protobuf.DescriptorProtos$UninterpretedOption$1:
    22581:22581:void <init>() -> <init>
    22581:22581:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    22586:22586:com.google.protobuf.DescriptorProtos$UninterpretedOption parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder -> com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder:
    23556:23556:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    23572:23574:void <init>() -> <init>
    23578:23580:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    23556:23556:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder access$18700() -> access$18700
    23556:23556:com.google.protobuf.Message build() -> build
    23556:23556:com.google.protobuf.MessageLite build() -> build
    23627:23629:com.google.protobuf.DescriptorProtos$UninterpretedOption build() -> build
    23556:23556:com.google.protobuf.Message buildPartial() -> buildPartial
    23635:23673:com.google.protobuf.DescriptorProtos$UninterpretedOption buildPartial() -> buildPartial
    23556:23556:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    23556:23556:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    23556:23556:java.lang.Object clone() -> clone
    23614:23614:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder clone() -> clone
    23587:23587:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder create() -> create
    23772:23776:void ensureNameIsMutable() -> ensureNameIsMutable
    23556:23556:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    23623:23623:com.google.protobuf.DescriptorProtos$UninterpretedOption getDefaultInstanceForType() -> getDefaultInstanceForType
    23619:23619:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    23996:24005:com.google.protobuf.RepeatedFieldBuilder getNameFieldBuilder() -> getNameFieldBuilder
    23566:23566:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    23582:23585:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    23556:23556:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    23556:23556:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    23556:23556:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    23556:23556:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    23556:23556:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    23677:23681:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    23686:23736:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder mergeFrom(com.google.protobuf.DescriptorProtos$UninterpretedOption) -> mergeFrom
    23753:23760:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    24196:24199:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder setDoubleValue(double) -> setDoubleValue
    24163:24166:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder setNegativeIntValue(long) -> setNegativeIntValue
    24130:24133:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder setPositiveIntValue(long) -> setPositiveIntValue
    24229:24230:com.google.protobuf.DescriptorProtos$UninterpretedOption$Builder setStringValue(com.google.protobuf.ByteString) -> setStringValue
com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart -> com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart:
    22716:23174:void <clinit>() -> <clinit>
    22634:22634:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.DescriptorProtos$1) -> <init>
    22634:22634:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.DescriptorProtos$1) -> <init>
    22639:22641:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    22642:22642:void <init>(boolean) -> <init>
    22662:22703:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    22634:22634:java.lang.Object access$18400(com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart) -> access$18400
    22634:22634:java.lang.Object access$18402(com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart,java.lang.Object) -> access$18402
    22634:22634:boolean access$18502(com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart,boolean) -> access$18502
    22634:22634:int access$18602(com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart,int) -> access$18602
    22646:22646:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart getDefaultInstance() -> getDefaultInstance
    22634:22634:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    22650:22650:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart getDefaultInstanceForType() -> getDefaultInstanceForType
    22788:22788:boolean getIsExtension() -> getIsExtension
    22763:22771:com.google.protobuf.ByteString getNamePartBytes() -> getNamePartBytes
    22728:22728:com.google.protobuf.Parser getParserForType() -> getParserForType
    22826:22840:int getSerializedSize() -> getSerializedSize
    22657:22657:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    22782:22782:boolean hasIsExtension() -> hasIsExtension
    22739:22739:boolean hasNamePart() -> hasNamePart
    22792:22794:void initFields() -> initFields
    22711:22711:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    22797:22809:boolean isInitialized() -> isInitialized
    22903:22903:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder newBuilder() -> newBuilder
    22906:22906:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder newBuilder(com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart) -> newBuilder
    22634:22634:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    22634:22634:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    22904:22904:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder newBuilderForType() -> newBuilderForType
    22913:22914:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    22634:22634:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    22634:22634:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    22908:22908:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder toBuilder() -> toBuilder
    22814:22822:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1 -> com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$1:
    22717:22717:void <init>() -> <init>
    22717:22717:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    22722:22722:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder -> com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder:
    22927:22927:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,com.google.protobuf.DescriptorProtos$1) -> <init>
    22943:22945:void <init>() -> <init>
    22949:22951:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    22927:22927:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder access$18100() -> access$18100
    22927:22927:com.google.protobuf.Message build() -> build
    22927:22927:com.google.protobuf.MessageLite build() -> build
    22983:22985:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart build() -> build
    22927:22927:com.google.protobuf.Message buildPartial() -> buildPartial
    22991:23004:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart buildPartial() -> buildPartial
    22927:22927:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    22927:22927:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    22927:22927:java.lang.Object clone() -> clone
    22970:22970:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder clone() -> clone
    22957:22957:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder create() -> create
    22927:22927:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    22979:22979:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart getDefaultInstanceForType() -> getDefaultInstanceForType
    22975:22975:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    22937:22937:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    22953:22955:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    22927:22927:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    22927:22927:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    22927:22927:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    22927:22927:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    22927:22927:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    23008:23012:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    23017:23027:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder mergeFrom(com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart) -> mergeFrom
    23046:23053:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    23153:23156:com.google.protobuf.DescriptorProtos$UninterpretedOption$NamePart$Builder setIsExtension(boolean) -> setIsExtension
com.google.protobuf.Descriptors -> com.google.protobuf.Descriptors:
    62:62:java.lang.String access$1400(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String) -> access$1400
    1528:1533:java.lang.String computeFullName(com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,java.lang.String) -> computeFullName
com.google.protobuf.Descriptors$1 -> com.google.protobuf.Descriptors$1:
    1115:1036:void <clinit>() -> <clinit>
com.google.protobuf.Descriptors$Descriptor -> com.google.protobuf.Descriptors$Descriptor:
    440:440:void <init>(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1) -> <init>
    584:616:void <init>(com.google.protobuf.DescriptorProtos$DescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int) -> <init>
    440:440:void access$500(com.google.protobuf.Descriptors$Descriptor) -> access$500
    440:440:void access$800(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.DescriptorProtos$DescriptorProto) -> access$800
    620:631:void crossLink() -> crossLink
    536:536:com.google.protobuf.Descriptors$FieldDescriptor findFieldByNumber(int) -> findFieldByNumber
    486:486:java.util.List getFields() -> getFields
    476:476:com.google.protobuf.Descriptors$FileDescriptor getFile() -> getFile
    473:473:java.lang.String getFullName() -> getFullName
    460:460:java.lang.String getName() -> getName
    496:496:java.util.List getNestedTypes() -> getNestedTypes
    482:482:com.google.protobuf.DescriptorProtos$MessageOptions getOptions() -> getOptions
    507:512:boolean isExtensionNumber(int) -> isExtensionNumber
    635:652:void setProto(com.google.protobuf.DescriptorProtos$DescriptorProto) -> setProto
    440:440:com.google.protobuf.Message toProto() -> toProto
    457:457:com.google.protobuf.DescriptorProtos$DescriptorProto toProto() -> toProto
com.google.protobuf.Descriptors$DescriptorPool -> com.google.protobuf.Descriptors$DescriptorPool:
    1623:1641:void <init>(com.google.protobuf.Descriptors$FileDescriptor[]) -> <init>
    1615:1615:java.util.Map access$1300(com.google.protobuf.Descriptors$DescriptorPool) -> access$1300
    1615:1615:java.util.Map access$1800(com.google.protobuf.Descriptors$DescriptorPool) -> access$1800
    1926:1934:void addEnumValueByNumber(com.google.protobuf.Descriptors$EnumValueDescriptor) -> addEnumValueByNumber
    1907:1912:void addFieldByNumber(com.google.protobuf.Descriptors$FieldDescriptor) -> addFieldByNumber
    1855:1875:void addPackage(java.lang.String,com.google.protobuf.Descriptors$FileDescriptor) -> addPackage
    1797:1822:void addSymbol(com.google.protobuf.Descriptors$GenericDescriptor) -> addSymbol
    1663:1663:com.google.protobuf.Descriptors$GenericDescriptor findSymbol(java.lang.String) -> findSymbol
    1671:1691:com.google.protobuf.Descriptors$GenericDescriptor findSymbol(java.lang.String,com.google.protobuf.Descriptors$DescriptorPool$SearchFilter) -> findSymbol
    1645:1650:void importPublicDependencies(com.google.protobuf.Descriptors$FileDescriptor) -> importPublicDependencies
    1702:1702:boolean isAggregate(com.google.protobuf.Descriptors$GenericDescriptor) -> isAggregate
    1696:1696:boolean isType(com.google.protobuf.Descriptors$GenericDescriptor) -> isType
    1721:1780:com.google.protobuf.Descriptors$GenericDescriptor lookupSymbol(java.lang.String,com.google.protobuf.Descriptors$GenericDescriptor,com.google.protobuf.Descriptors$DescriptorPool$SearchFilter) -> lookupSymbol
    1942:1944:void validateSymbolName(com.google.protobuf.Descriptors$GenericDescriptor) -> validateSymbolName
com.google.protobuf.Descriptors$DescriptorPool$DescriptorIntPair -> com.google.protobuf.Descriptors$DescriptorPool$DescriptorIntPair:
    1882:1885:void <init>(com.google.protobuf.Descriptors$GenericDescriptor,int) -> <init>
    1893:1897:boolean equals(java.lang.Object) -> equals
    1889:1889:int hashCode() -> hashCode
com.google.protobuf.Descriptors$DescriptorPool$PackageDescriptor -> com.google.protobuf.Descriptors$DescriptorPool$PackageDescriptor:
    1836:1840:void <init>(java.lang.String,java.lang.String,com.google.protobuf.Descriptors$FileDescriptor) -> <init>
    1833:1833:com.google.protobuf.Descriptors$FileDescriptor getFile() -> getFile
    1832:1832:java.lang.String getFullName() -> getFullName
    1831:1831:java.lang.String getName() -> getName
    1830:1830:com.google.protobuf.Message toProto() -> toProto
com.google.protobuf.Descriptors$DescriptorPool$SearchFilter -> com.google.protobuf.Descriptors$DescriptorPool$SearchFilter:
    1620:1619:void <clinit>() -> <clinit>
    1619:1619:void <init>(java.lang.String,int) -> <init>
    1619:1619:com.google.protobuf.Descriptors$DescriptorPool$SearchFilter valueOf(java.lang.String) -> valueOf
    1619:1619:com.google.protobuf.Descriptors$DescriptorPool$SearchFilter[] values() -> values
com.google.protobuf.Descriptors$DescriptorValidationException -> com.google.protobuf.Descriptors$DescriptorValidationException:
    1554:1554:void <init>(com.google.protobuf.Descriptors$FileDescriptor,java.lang.String,com.google.protobuf.Descriptors$1) -> <init>
    1554:1554:void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,com.google.protobuf.Descriptors$1) -> <init>
    1554:1554:void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,java.lang.Throwable,com.google.protobuf.Descriptors$1) -> <init>
    1577:1585:void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String) -> <init>
    1591:1593:void <init>(com.google.protobuf.Descriptors$GenericDescriptor,java.lang.String,java.lang.Throwable) -> <init>
    1598:1606:void <init>(com.google.protobuf.Descriptors$FileDescriptor,java.lang.String) -> <init>
com.google.protobuf.Descriptors$EnumDescriptor -> com.google.protobuf.Descriptors$EnumDescriptor:
    1169:1169:void <init>(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,com.google.protobuf.Descriptors$1) -> <init>
    1240:1250:void <init>(com.google.protobuf.DescriptorProtos$EnumDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int) -> <init>
    1169:1169:void access$900(com.google.protobuf.Descriptors$EnumDescriptor,com.google.protobuf.DescriptorProtos$EnumDescriptorProto) -> access$900
    1209:1214:com.google.protobuf.Descriptors$EnumValueDescriptor findValueByName(java.lang.String) -> findValueByName
    1225:1225:com.google.protobuf.Descriptors$EnumValueDescriptor findValueByNumber(int) -> findValueByNumber
    1190:1190:com.google.protobuf.Descriptors$FileDescriptor getFile() -> getFile
    1187:1187:java.lang.String getFullName() -> getFullName
    1181:1181:java.lang.String getName() -> getName
    1200:1200:java.util.List getValues() -> getValues
    1265:1270:void setProto(com.google.protobuf.DescriptorProtos$EnumDescriptorProto) -> setProto
    1169:1169:com.google.protobuf.Message toProto() -> toProto
    1178:1178:com.google.protobuf.DescriptorProtos$EnumDescriptorProto toProto() -> toProto
com.google.protobuf.Descriptors$EnumValueDescriptor -> com.google.protobuf.Descriptors$EnumValueDescriptor:
    1281:1281:void <init>(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$EnumDescriptor,int,com.google.protobuf.Descriptors$1) -> <init>
    1325:1335:void <init>(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$EnumDescriptor,int) -> <init>
    1281:1281:void access$2000(com.google.protobuf.Descriptors$EnumValueDescriptor,com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto) -> access$2000
    1305:1305:com.google.protobuf.Descriptors$FileDescriptor getFile() -> getFile
    1302:1302:java.lang.String getFullName() -> getFullName
    1293:1293:java.lang.String getName() -> getName
    1296:1296:int getNumber() -> getNumber
    1308:1308:com.google.protobuf.Descriptors$EnumDescriptor getType() -> getType
    1339:1340:void setProto(com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto) -> setProto
    1281:1281:com.google.protobuf.Message toProto() -> toProto
    1290:1290:com.google.protobuf.DescriptorProtos$EnumValueDescriptorProto toProto() -> toProto
com.google.protobuf.Descriptors$FieldDescriptor -> com.google.protobuf.Descriptors$FieldDescriptor:
    706:883:void <clinit>() -> <clinit>
    658:658:void <init>(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,boolean,com.google.protobuf.Descriptors$1) -> <init>
    916:927:void <init>(com.google.protobuf.DescriptorProtos$FieldDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$Descriptor,int,boolean) -> <init>
    658:658:void access$1100(com.google.protobuf.Descriptors$FieldDescriptor,com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> access$1100
    658:658:void access$700(com.google.protobuf.Descriptors$FieldDescriptor) -> access$700
    658:658:int compareTo(java.lang.Object) -> compareTo
    822:823:int compareTo(com.google.protobuf.Descriptors$FieldDescriptor) -> compareTo
    963:1022:void crossLink() -> crossLink
    762:762:com.google.protobuf.Descriptors$Descriptor getContainingType() -> getContainingType
    743:744:java.lang.Object getDefaultValue() -> getDefaultValue
    804:805:com.google.protobuf.Descriptors$EnumDescriptor getEnumType() -> getEnumType
    786:787:com.google.protobuf.Descriptors$Descriptor getExtensionScope() -> getExtensionScope
    694:694:com.google.protobuf.Descriptors$FileDescriptor getFile() -> getFile
    680:680:java.lang.String getFullName() -> getFullName
    665:665:int getIndex() -> getIndex
    686:686:com.google.protobuf.Descriptors$FieldDescriptor$JavaType getJavaType() -> getJavaType
    690:690:com.google.protobuf.WireFormat$JavaType getLiteJavaType() -> getLiteJavaType
    701:701:com.google.protobuf.WireFormat$FieldType getLiteType() -> getLiteType
    795:796:com.google.protobuf.Descriptors$Descriptor getMessageType() -> getMessageType
    671:671:java.lang.String getName() -> getName
    674:674:int getNumber() -> getNumber
    752:752:com.google.protobuf.DescriptorProtos$FieldOptions getOptions() -> getOptions
    697:697:com.google.protobuf.Descriptors$FieldDescriptor$Type getType() -> getType
    1162:1162:com.google.protobuf.MessageLite$Builder internalMergeFrom(com.google.protobuf.MessageLite$Builder,com.google.protobuf.MessageLite) -> internalMergeFrom
    755:755:boolean isExtension() -> isExtension
    716:716:boolean isOptional() -> isOptional
    731:731:boolean isPackable() -> isPackable
    726:726:boolean isPacked() -> isPacked
    721:721:boolean isRepeated() -> isRepeated
    711:711:boolean isRequired() -> isRequired
    1151:1152:void setProto(com.google.protobuf.DescriptorProtos$FieldDescriptorProto) -> setProto
    658:658:com.google.protobuf.Message toProto() -> toProto
    668:668:com.google.protobuf.DescriptorProtos$FieldDescriptorProto toProto() -> toProto
com.google.protobuf.Descriptors$FieldDescriptor$JavaType -> com.google.protobuf.Descriptors$FieldDescriptor$JavaType:
    890:889:void <clinit>() -> <clinit>
    900:902:void <init>(java.lang.String,int,java.lang.Object) -> <init>
    889:889:java.lang.Object access$1700(com.google.protobuf.Descriptors$FieldDescriptor$JavaType) -> access$1700
    889:889:com.google.protobuf.Descriptors$FieldDescriptor$JavaType valueOf(java.lang.String) -> valueOf
    889:889:com.google.protobuf.Descriptors$FieldDescriptor$JavaType[] values() -> values
com.google.protobuf.Descriptors$FieldDescriptor$Type -> com.google.protobuf.Descriptors$FieldDescriptor$Type:
    845:844:void <clinit>() -> <clinit>
    864:866:void <init>(java.lang.String,int,com.google.protobuf.Descriptors$FieldDescriptor$JavaType) -> <init>
    873:873:com.google.protobuf.Descriptors$FieldDescriptor$JavaType getJavaType() -> getJavaType
    844:844:com.google.protobuf.Descriptors$FieldDescriptor$Type valueOf(java.lang.String) -> valueOf
    876:876:com.google.protobuf.Descriptors$FieldDescriptor$Type valueOf(com.google.protobuf.DescriptorProtos$FieldDescriptorProto$Type) -> valueOf
    844:844:com.google.protobuf.Descriptors$FieldDescriptor$Type[] values() -> values
com.google.protobuf.Descriptors$FileDescriptor -> com.google.protobuf.Descriptors$FileDescriptor:
    350:389:void <init>(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$DescriptorPool) -> <init>
    69:69:com.google.protobuf.Descriptors$DescriptorPool access$1200(com.google.protobuf.Descriptors$FileDescriptor) -> access$1200
    235:240:com.google.protobuf.Descriptors$FileDescriptor buildFrom(com.google.protobuf.DescriptorProtos$FileDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor[]) -> buildFrom
    393:404:void crossLink() -> crossLink
    88:88:java.util.List getMessageTypes() -> getMessageTypes
    74:74:java.lang.String getName() -> getName
    81:81:java.lang.String getPackage() -> getPackage
    113:113:java.util.List getPublicDependencies() -> getPublicDependencies
    276:285:void internalBuildGeneratedFileFrom(java.lang.String[],com.google.protobuf.Descriptors$FileDescriptor[],com.google.protobuf.Descriptors$FileDescriptor$InternalDescriptorAssigner) -> internalBuildGeneratedFileFrom
    417:434:void setProto(com.google.protobuf.DescriptorProtos$FileDescriptorProto) -> setProto
    71:71:com.google.protobuf.DescriptorProtos$FileDescriptorProto toProto() -> toProto
com.google.protobuf.Descriptors$MethodDescriptor -> com.google.protobuf.Descriptors$MethodDescriptor:
    1436:1436:void <init>(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$ServiceDescriptor,int,com.google.protobuf.Descriptors$1) -> <init>
    1486:1495:void <init>(com.google.protobuf.DescriptorProtos$MethodDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,com.google.protobuf.Descriptors$ServiceDescriptor,int) -> <init>
    1436:1436:void access$2200(com.google.protobuf.Descriptors$MethodDescriptor) -> access$2200
    1436:1436:void access$2300(com.google.protobuf.Descriptors$MethodDescriptor,com.google.protobuf.DescriptorProtos$MethodDescriptorProto) -> access$2300
    1498:1502:void crossLink() -> crossLink
    1456:1456:com.google.protobuf.Descriptors$FileDescriptor getFile() -> getFile
    1453:1453:java.lang.String getFullName() -> getFullName
    1447:1447:java.lang.String getName() -> getName
    1519:1520:void setProto(com.google.protobuf.DescriptorProtos$MethodDescriptorProto) -> setProto
    1436:1436:com.google.protobuf.Message toProto() -> toProto
    1444:1444:com.google.protobuf.DescriptorProtos$MethodDescriptorProto toProto() -> toProto
com.google.protobuf.Descriptors$ServiceDescriptor -> com.google.protobuf.Descriptors$ServiceDescriptor:
    1346:1346:void <init>(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,int,com.google.protobuf.Descriptors$1) -> <init>
    1400:1413:void <init>(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto,com.google.protobuf.Descriptors$FileDescriptor,int) -> <init>
    1346:1346:void access$1000(com.google.protobuf.Descriptors$ServiceDescriptor,com.google.protobuf.DescriptorProtos$ServiceDescriptorProto) -> access$1000
    1346:1346:void access$600(com.google.protobuf.Descriptors$ServiceDescriptor) -> access$600
    1416:1419:void crossLink() -> crossLink
    1366:1366:com.google.protobuf.Descriptors$FileDescriptor getFile() -> getFile
    1363:1363:java.lang.String getFullName() -> getFullName
    1357:1357:java.lang.String getName() -> getName
    1423:1428:void setProto(com.google.protobuf.DescriptorProtos$ServiceDescriptorProto) -> setProto
    1346:1346:com.google.protobuf.Message toProto() -> toProto
    1354:1354:com.google.protobuf.DescriptorProtos$ServiceDescriptorProto toProto() -> toProto
com.google.protobuf.DynamicMessage -> com.google.protobuf.DynamicMessage:
    47:47:void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet,com.google.protobuf.UnknownFieldSet,com.google.protobuf.DynamicMessage$1) -> <init>
    57:61:void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet,com.google.protobuf.UnknownFieldSet) -> <init>
    47:47:com.google.protobuf.Descriptors$Descriptor access$200(com.google.protobuf.DynamicMessage) -> access$200
    47:47:com.google.protobuf.FieldSet access$300(com.google.protobuf.DynamicMessage) -> access$300
    47:47:com.google.protobuf.UnknownFieldSet access$400(com.google.protobuf.DynamicMessage) -> access$400
    47:47:boolean access$600(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet) -> access$600
    152:152:java.util.Map getAllFields() -> getAllFields
    68:68:com.google.protobuf.DynamicMessage getDefaultInstance(com.google.protobuf.Descriptors$Descriptor) -> getDefaultInstance
    47:47:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    148:148:com.google.protobuf.DynamicMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    144:144:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    246:246:com.google.protobuf.Parser getParserForType() -> getParserForType
    222:234:int getSerializedSize() -> getSerializedSize
    186:186:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    156:157:boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor) -> hasField
    192:201:boolean isInitialized(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.FieldSet) -> isInitialized
    206:206:boolean isInitialized() -> isInitialized
    129:129:com.google.protobuf.DynamicMessage$Builder newBuilder(com.google.protobuf.Descriptors$Descriptor) -> newBuilder
    47:47:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    238:238:com.google.protobuf.DynamicMessage$Builder newBuilderForType() -> newBuilderForType
    47:47:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    47:47:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    242:242:com.google.protobuf.DynamicMessage$Builder toBuilder() -> toBuilder
    267:268:void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor) -> verifyContainingType
    211:218:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.DynamicMessage$1 -> com.google.protobuf.DynamicMessage$1:
    246:246:void <init>(com.google.protobuf.DynamicMessage) -> <init>
    246:246:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    251:255:com.google.protobuf.DynamicMessage parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.DynamicMessage$Builder -> com.google.protobuf.DynamicMessage$Builder:
    278:278:void <init>(com.google.protobuf.Descriptors$Descriptor,com.google.protobuf.DynamicMessage$1) -> <init>
    284:288:void <init>(com.google.protobuf.Descriptors$Descriptor) -> <init>
    278:278:com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    437:440:com.google.protobuf.DynamicMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    278:278:com.google.protobuf.Message build() -> build
    278:278:com.google.protobuf.MessageLite build() -> build
    323:324:com.google.protobuf.DynamicMessage build() -> build
    278:278:com.google.protobuf.Message buildPartial() -> buildPartial
    345:348:com.google.protobuf.DynamicMessage buildPartial() -> buildPartial
    278:278:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    278:278:java.lang.Object clone() -> clone
    353:356:com.google.protobuf.DynamicMessage$Builder clone() -> clone
    470:473:void ensureIsMutable() -> ensureIsMutable
    372:372:java.util.Map getAllFields() -> getAllFields
    364:364:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    392:401:java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor) -> getField
    444:444:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    387:388:boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor) -> hasField
    360:360:boolean isInitialized() -> isInitialized
    278:278:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    278:278:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    306:318:com.google.protobuf.DynamicMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    278:278:com.google.protobuf.AbstractMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet) -> mergeUnknownFields
    454:458:com.google.protobuf.DynamicMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet) -> mergeUnknownFields
    278:278:com.google.protobuf.Message$Builder newBuilderForField(com.google.protobuf.Descriptors$FieldDescriptor) -> newBuilderForField
    376:379:com.google.protobuf.DynamicMessage$Builder newBuilderForField(com.google.protobuf.Descriptors$FieldDescriptor) -> newBuilderForField
    278:278:com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    405:408:com.google.protobuf.DynamicMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    278:278:com.google.protobuf.Message$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet) -> setUnknownFields
    448:449:com.google.protobuf.DynamicMessage$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet) -> setUnknownFields
    463:464:void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor) -> verifyContainingType
com.google.protobuf.ExtensionRegistry -> com.google.protobuf.ExtensionRegistry:
    216:216:void <clinit>() -> <clinit>
    195:198:void <init>() -> <init>
    211:215:void <init>(boolean) -> <init>
    152:152:com.google.protobuf.ExtensionRegistry$ExtensionInfo findExtensionByNumber(com.google.protobuf.Descriptors$Descriptor,int) -> findExtensionByNumber
    101:101:com.google.protobuf.ExtensionRegistry getEmptyRegistry() -> getEmptyRegistry
com.google.protobuf.ExtensionRegistry$DescriptorIntPair -> com.google.protobuf.ExtensionRegistry$DescriptorIntPair:
    248:251:void <init>(com.google.protobuf.Descriptors$Descriptor,int) -> <init>
    259:263:boolean equals(java.lang.Object) -> equals
    255:255:int hashCode() -> hashCode
com.google.protobuf.ExtensionRegistryLite -> com.google.protobuf.ExtensionRegistryLite:
    80:159:void <clinit>() -> <clinit>
    137:141:void <init>() -> <init>
    143:150:void <init>(com.google.protobuf.ExtensionRegistryLite) -> <init>
    156:158:void <init>(boolean) -> <init>
    97:97:com.google.protobuf.ExtensionRegistryLite getEmptyRegistry() -> getEmptyRegistry
    83:83:boolean isEagerlyParseMessageSets() -> isEagerlyParseMessageSets
com.google.protobuf.FieldSet -> com.google.protobuf.FieldSet:
    102:102:void <clinit>() -> <clinit>
    76:78:void <init>() -> <init>
    84:87:void <init>(boolean) -> <init>
    339:340:void addRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> addRepeatedField
    50:50:java.lang.Object clone() -> clone
    134:146:com.google.protobuf.FieldSet clone() -> clone
    181:188:void cloneFieldEntry(java.util.Map,java.util.Map$Entry) -> cloneFieldEntry
    779:783:int computeElementSize(com.google.protobuf.WireFormat$FieldType,int,java.lang.Object) -> computeElementSize
    798:801:int computeElementSizeNoTag(com.google.protobuf.WireFormat$FieldType,java.lang.Object) -> computeElementSizeNoTag
    839:858:int computeFieldSize(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> computeFieldSize
    99:99:com.google.protobuf.FieldSet emptySet() -> emptySet
    161:176:java.util.Map getAllFields() -> getAllFields
    223:227:java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite) -> getField
    736:744:int getMessageSetSerializedSize() -> getMessageSetSerializedSize
    749:761:int getMessageSetSerializedSize(java.util.Map$Entry) -> getMessageSetSerializedSize
    719:729:int getSerializedSize() -> getSerializedSize
    465:468:int getWireFormatForFieldType(com.google.protobuf.WireFormat$FieldType,boolean) -> getWireFormatForFieldType
    208:209:boolean hasField(com.google.protobuf.FieldSet$FieldDescriptorLite) -> hasField
    121:121:boolean isImmutable() -> isImmutable
    414:425:boolean isInitialized() -> isInitialized
    431:454:boolean isInitialized(java.util.Map$Entry) -> isInitialized
    196:200:java.util.Iterator iterator() -> iterator
    107:112:void makeImmutable() -> makeImmutable
    477:484:void mergeFrom(com.google.protobuf.FieldSet) -> mergeFrom
    489:521:void mergeFromField(java.util.Map$Entry) -> mergeFromField
    92:92:com.google.protobuf.FieldSet newFieldSet() -> newFieldSet
    540:541:java.lang.Object readPrimitiveField(com.google.protobuf.CodedInputStream,com.google.protobuf.WireFormat$FieldType) -> readPrimitiveField
    237:259:void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> setField
    367:368:void verifyType(com.google.protobuf.WireFormat$FieldType,java.lang.Object) -> verifyType
    632:638:void writeElement(com.google.protobuf.CodedOutputStream,com.google.protobuf.WireFormat$FieldType,int,java.lang.Object) -> writeElement
    654:677:void writeElementNoTag(com.google.protobuf.CodedOutputStream,com.google.protobuf.WireFormat$FieldType,java.lang.Object) -> writeElementNoTag
    684:712:void writeField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object,com.google.protobuf.CodedOutputStream) -> writeField
    593:600:void writeMessageSetTo(com.google.protobuf.CodedOutputStream) -> writeMessageSetTo
    605:613:void writeMessageSetTo(java.util.Map$Entry,com.google.protobuf.CodedOutputStream) -> writeMessageSetTo
    577:586:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.FieldSet$1 -> com.google.protobuf.FieldSet$1:
    540:372:void <clinit>() -> <clinit>
com.google.protobuf.GeneratedMessage -> com.google.protobuf.GeneratedMessage:
    66:66:void <clinit>() -> <clinit>
    68:69:void <init>() -> <init>
    71:72:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    57:57:java.lang.reflect.Method access$1300(java.lang.Class,java.lang.String,java.lang.Class[]) -> access$1300
    57:57:java.lang.Object access$1400(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> access$1400
    57:57:java.util.Map access$800(com.google.protobuf.GeneratedMessage) -> access$800
    153:153:java.util.Map getAllFields() -> getAllFields
    103:118:java.util.Map getAllFieldsMutable() -> getAllFieldsMutable
    98:98:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    163:163:java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor) -> getField
    1415:1417:java.lang.reflect.Method getMethodOrDie(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethodOrDie
    75:75:com.google.protobuf.Parser getParserForType() -> getParserForType
    180:180:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    158:158:boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor) -> hasField
    1427:1429:java.lang.Object invokeOrDie(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> invokeOrDie
    123:148:boolean isInitialized() -> isInitialized
    201:201:void makeExtensionsImmutable() -> makeExtensionsImmutable
    193:193:boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
com.google.protobuf.GeneratedMessage$Builder -> com.google.protobuf.GeneratedMessage$Builder:
    244:245:void <init>() -> <init>
    247:249:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    229:229:java.util.Map access$1100(com.google.protobuf.GeneratedMessage$Builder) -> access$1100
    228:228:com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    398:399:com.google.protobuf.GeneratedMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    228:228:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    228:228:java.lang.Object clone() -> clone
    286:286:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    252:253:void dispose() -> dispose
    314:314:java.util.Map getAllFields() -> getAllFields
    319:334:java.util.Map getAllFieldsMutable() -> getAllFieldsMutable
    309:309:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    354:360:java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor) -> getField
    485:488:com.google.protobuf.GeneratedMessage$BuilderParent getParentForChildren() -> getParentForChildren
    452:452:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    349:349:boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor) -> hasField
    278:278:boolean isClean() -> isClean
    269:270:void markClean() -> markClean
    228:228:com.google.protobuf.AbstractMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet) -> mergeUnknownFields
    412:417:com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet) -> mergeUnknownFields
    339:339:com.google.protobuf.Message$Builder newBuilderForField(com.google.protobuf.Descriptors$FieldDescriptor) -> newBuilderForField
    259:262:void onBuilt() -> onBuilt
    496:502:void onChanged() -> onChanged
    228:228:com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    366:367:com.google.protobuf.GeneratedMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    228:228:com.google.protobuf.Message$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet) -> setUnknownFields
    404:406:com.google.protobuf.GeneratedMessage$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet) -> setUnknownFields
com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl -> com.google.protobuf.GeneratedMessage$Builder$BuilderParentImpl:
    472:472:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    472:472:void <init>(com.google.protobuf.GeneratedMessage$Builder,com.google.protobuf.GeneratedMessage$1) -> <init>
    476:477:void markDirty() -> markDirty
com.google.protobuf.GeneratedMessage$ExtendableBuilder -> com.google.protobuf.GeneratedMessage$ExtendableBuilder:
    864:864:void <init>() -> <init>
    868:869:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    856:856:com.google.protobuf.FieldSet access$300(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> access$300
    855:855:com.google.protobuf.GeneratedMessage$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    855:855:com.google.protobuf.Message$Builder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    1144:1151:com.google.protobuf.GeneratedMessage$ExtendableBuilder addRepeatedField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> addRepeatedField
    1014:1015:com.google.protobuf.FieldSet buildExtensions() -> buildExtensions
    855:855:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    855:855:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    855:855:java.lang.Object clone() -> clone
    882:882:com.google.protobuf.GeneratedMessage$ExtendableBuilder clone() -> clone
    887:890:void ensureExtensionsIsMutable() -> ensureExtensionsIsMutable
    1043:1045:java.util.Map getAllFields() -> getAllFields
    1050:1065:java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor) -> getField
    1092:1096:boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor) -> hasField
    1156:1159:void mergeExtensionFields(com.google.protobuf.GeneratedMessage$ExtendableMessage) -> mergeExtensionFields
    855:855:com.google.protobuf.GeneratedMessage$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    855:855:com.google.protobuf.Message$Builder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    1103:1110:com.google.protobuf.GeneratedMessage$ExtendableBuilder setField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object) -> setField
    1162:1163:void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor) -> verifyContainingType
com.google.protobuf.GeneratedMessage$ExtendableMessage -> com.google.protobuf.GeneratedMessage$ExtendableMessage:
    570:572:void <init>() -> <init>
    576:578:void <init>(com.google.protobuf.GeneratedMessage$ExtendableBuilder) -> <init>
    563:563:com.google.protobuf.FieldSet access$600(com.google.protobuf.GeneratedMessage$ExtendableMessage) -> access$600
    647:647:boolean extensionsAreInitialized() -> extensionsAreInitialized
    738:738:int extensionsSerializedSize() -> extensionsSerializedSize
    753:755:java.util.Map getAllFields() -> getAllFields
    748:748:java.util.Map getExtensionFields() -> getExtensionFields
    770:785:java.lang.Object getField(com.google.protobuf.Descriptors$FieldDescriptor) -> getField
    760:764:boolean hasField(com.google.protobuf.Descriptors$FieldDescriptor) -> hasField
    671:672:void makeExtensionsImmutable() -> makeExtensionsImmutable
    730:730:com.google.protobuf.GeneratedMessage$ExtendableMessage$ExtensionWriter newExtensionWriter() -> newExtensionWriter
    661:661:boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    811:812:void verifyContainingType(com.google.protobuf.Descriptors$FieldDescriptor) -> verifyContainingType
com.google.protobuf.GeneratedMessage$ExtendableMessage$ExtensionWriter -> com.google.protobuf.GeneratedMessage$ExtendableMessage$ExtensionWriter:
    680:680:void <init>(com.google.protobuf.GeneratedMessage$ExtendableMessage,boolean,com.google.protobuf.GeneratedMessage$1) -> <init>
    689:694:void <init>(com.google.protobuf.GeneratedMessage$ExtendableMessage,boolean) -> <init>
    698:726:void writeUntil(int,com.google.protobuf.CodedOutputStream) -> writeUntil
com.google.protobuf.GeneratedMessage$FieldAccessorTable -> com.google.protobuf.GeneratedMessage$FieldAccessorTable:
    1476:1481:void <init>(com.google.protobuf.Descriptors$Descriptor,java.lang.String[]) -> <init>
    1449:1449:com.google.protobuf.Descriptors$Descriptor access$000(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$000
    1449:1449:com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor access$100(com.google.protobuf.GeneratedMessage$FieldAccessorTable,com.google.protobuf.Descriptors$FieldDescriptor) -> access$100
    1493:1525:com.google.protobuf.GeneratedMessage$FieldAccessorTable ensureFieldAccessorsInitialized(java.lang.Class,java.lang.Class) -> ensureFieldAccessorsInitialized
    1535:1536:com.google.protobuf.GeneratedMessage$FieldAccessorTable$FieldAccessor getField(com.google.protobuf.Descriptors$FieldDescriptor) -> getField
com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor -> com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedEnumFieldAccessor:
    1788:1794:void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class) -> <init>
    1839:1840:void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> addRepeated
    1802:1806:java.lang.Object get(com.google.protobuf.GeneratedMessage) -> get
    1812:1816:java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder) -> get
com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor -> com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedFieldAccessor:
    1667:1688:void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class) -> <init>
    1718:1719:void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> addRepeated
    1735:1736:void clear(com.google.protobuf.GeneratedMessage$Builder) -> clear
    1691:1691:java.lang.Object get(com.google.protobuf.GeneratedMessage) -> get
    1694:1694:java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder) -> get
    1721:1721:boolean has(com.google.protobuf.GeneratedMessage) -> has
    1725:1725:boolean has(com.google.protobuf.GeneratedMessage$Builder) -> has
    1738:1738:com.google.protobuf.Message$Builder newBuilder() -> newBuilder
    1701:1705:void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> set
com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor -> com.google.protobuf.GeneratedMessage$FieldAccessorTable$RepeatedMessageFieldAccessor:
    1894:1897:void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class) -> <init>
    1921:1922:void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> addRepeated
    1902:1909:java.lang.Object coerceType(java.lang.Object) -> coerceType
    1925:1925:com.google.protobuf.Message$Builder newBuilder() -> newBuilder
com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor -> com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularEnumFieldAccessor:
    1755:1761:void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class) -> <init>
    1768:1768:java.lang.Object get(com.google.protobuf.GeneratedMessage) -> get
    1773:1773:java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder) -> get
    1778:1779:void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> set
com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor -> com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularFieldAccessor:
    1575:1585:void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class) -> <init>
    1622:1622:void addRepeated(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> addRepeated
    1599:1599:java.lang.Object get(com.google.protobuf.GeneratedMessage) -> get
    1602:1602:java.lang.Object get(com.google.protobuf.GeneratedMessage$Builder) -> get
    1626:1626:boolean has(com.google.protobuf.GeneratedMessage) -> has
    1629:1629:boolean has(com.google.protobuf.GeneratedMessage$Builder) -> has
    1643:1643:com.google.protobuf.Message$Builder newBuilder() -> newBuilder
    1605:1606:void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> set
com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor -> com.google.protobuf.GeneratedMessage$FieldAccessorTable$SingularMessageFieldAccessor:
    1851:1856:void <init>(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.String,java.lang.Class,java.lang.Class) -> <init>
    1862:1869:java.lang.Object coerceType(java.lang.Object) -> coerceType
    1880:1880:com.google.protobuf.Message$Builder newBuilder() -> newBuilder
    1876:1877:void set(com.google.protobuf.GeneratedMessage$Builder,java.lang.Object) -> set
com.google.protobuf.InvalidProtocolBufferException -> com.google.protobuf.InvalidProtocolBufferException:
    46:47:void <init>(java.lang.String) -> <init>
    66:66:com.google.protobuf.MessageLite getUnfinishedMessage() -> getUnfinishedMessage
    94:94:com.google.protobuf.InvalidProtocolBufferException invalidEndTag() -> invalidEndTag
    89:89:com.google.protobuf.InvalidProtocolBufferException invalidTag() -> invalidTag
    99:99:com.google.protobuf.InvalidProtocolBufferException invalidWireType() -> invalidWireType
    84:84:com.google.protobuf.InvalidProtocolBufferException malformedVarint() -> malformedVarint
    78:78:com.google.protobuf.InvalidProtocolBufferException negativeSize() -> negativeSize
    104:104:com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded() -> recursionLimitExceeded
    57:58:com.google.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.protobuf.MessageLite) -> setUnfinishedMessage
    110:110:com.google.protobuf.InvalidProtocolBufferException sizeLimitExceeded() -> sizeLimitExceeded
    70:70:com.google.protobuf.InvalidProtocolBufferException truncatedMessage() -> truncatedMessage
com.google.protobuf.LazyField -> com.google.protobuf.LazyField:
    60:64:void <init>(com.google.protobuf.MessageLite,com.google.protobuf.ExtensionRegistryLite,com.google.protobuf.ByteString) -> <init>
    128:144:void ensureInitialized() -> ensureInitialized
    117:118:boolean equals(java.lang.Object) -> equals
    89:92:int getSerializedSize() -> getSerializedSize
    67:68:com.google.protobuf.MessageLite getValue() -> getValue
    111:112:int hashCode() -> hashCode
    76:80:com.google.protobuf.MessageLite setValue(com.google.protobuf.MessageLite) -> setValue
    96:106:com.google.protobuf.ByteString toByteString() -> toByteString
    123:124:java.lang.String toString() -> toString
com.google.protobuf.LazyField$LazyEntry -> com.google.protobuf.LazyField$LazyEntry:
    153:153:void <init>(java.util.Map$Entry,com.google.protobuf.LazyField$1) -> <init>
    156:158:void <init>(java.util.Map$Entry) -> <init>
    173:173:com.google.protobuf.LazyField getField() -> getField
    161:161:java.lang.Object getKey() -> getKey
    165:169:java.lang.Object getValue() -> getValue
    177:178:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.protobuf.LazyField$LazyIterator -> com.google.protobuf.LazyField$LazyIterator:
    189:191:void <init>(java.util.Iterator) -> <init>
    194:194:boolean hasNext() -> hasNext
    186:186:java.lang.Object next() -> next
    199:203:java.util.Map$Entry next() -> next
    207:208:void remove() -> remove
com.google.protobuf.LazyStringArrayList -> com.google.protobuf.LazyStringArrayList:
    67:67:void <clinit>() -> <clinit>
    72:74:void <init>() -> <init>
    76:79:void <init>(com.google.protobuf.LazyStringList) -> <init>
    64:64:void add(int,java.lang.Object) -> add
    113:115:void add(int,java.lang.String) -> add
    151:153:void add(com.google.protobuf.ByteString) -> add
    123:123:boolean addAll(java.util.Collection) -> addAll
    130:134:boolean addAll(int,java.util.Collection) -> addAll
    168:171:java.lang.String asString(java.lang.Object) -> asString
    145:147:void clear() -> clear
    64:64:java.lang.Object get(int) -> get
    87:96:java.lang.String get(int) -> get
    157:163:com.google.protobuf.ByteString getByteString(int) -> getByteString
    176:176:java.util.List getUnderlyingElements() -> getUnderlyingElements
    64:64:java.lang.Object remove(int) -> remove
    139:141:java.lang.String remove(int) -> remove
    64:64:java.lang.Object set(int,java.lang.Object) -> set
    107:108:java.lang.String set(int,java.lang.String) -> set
    102:102:int size() -> size
com.google.protobuf.LiteralByteString -> com.google.protobuf.LiteralByteString:
    62:64:void <init>(byte[]) -> <init>
    71:71:byte byteAt(int) -> byteAt
    117:118:void copyToInternal(byte[],int,int,int) -> copyToInternal
    171:190:boolean equals(java.lang.Object) -> equals
    206:207:boolean equalsRange(com.google.protobuf.LiteralByteString,int,int) -> equalsRange
    347:347:int getOffsetIntoBytes() -> getOffsetIntoBytes
    244:254:int hashCode() -> hashCode
    156:157:boolean isValidUtf8() -> isValidUtf8
    52:52:java.util.Iterator iterator() -> iterator
    294:294:com.google.protobuf.ByteString$ByteIterator iterator() -> iterator
    285:285:com.google.protobuf.CodedInputStream newCodedInput() -> newCodedInput
    277:277:java.io.InputStream newInput() -> newInput
    264:269:int partialHash(int,int,int) -> partialHash
    76:76:int size() -> size
    148:148:java.lang.String toString(java.lang.String) -> toString
com.google.protobuf.LiteralByteString$LiteralByteIterator -> com.google.protobuf.LiteralByteString$LiteralByteIterator:
    297:297:void <init>(com.google.protobuf.LiteralByteString,com.google.protobuf.LiteralByteString$1) -> <init>
    301:304:void <init>(com.google.protobuf.LiteralByteString) -> <init>
    307:307:boolean hasNext() -> hasNext
    297:297:java.lang.Object next() -> next
    312:312:java.lang.Byte next() -> next
    317:319:byte nextByte() -> nextByte
    324:324:void remove() -> remove
com.google.protobuf.RepeatedFieldBuilder -> com.google.protobuf.RepeatedFieldBuilder:
    136:141:void <init>(java.util.List,boolean,com.google.protobuf.GeneratedMessage$BuilderParent,boolean) -> <init>
    365:388:com.google.protobuf.RepeatedFieldBuilder addAllMessages(java.lang.Iterable) -> addAllMessages
    318:319:com.google.protobuf.RepeatedFieldBuilder addMessage(com.google.protobuf.GeneratedMessage) -> addMessage
    481:518:java.util.List build() -> build
    458:471:void clear() -> clear
    145:146:void dispose() -> dispose
    153:157:void ensureMutableMessageList() -> ensureMutableMessageList
    181:181:int getCount() -> getCount
    216:231:com.google.protobuf.GeneratedMessage getMessage(int,boolean) -> getMessage
    587:588:void incrementModCounts() -> incrementModCounts
    190:190:boolean isEmpty() -> isEmpty
    578:579:void markDirty() -> markDirty
    568:574:void onChanged() -> onChanged
    440:451:void remove(int) -> remove
    293:294:com.google.protobuf.RepeatedFieldBuilder setMessage(int,com.google.protobuf.GeneratedMessage) -> setMessage
com.google.protobuf.SingleFieldBuilder -> com.google.protobuf.SingleFieldBuilder:
    86:88:void <init>(com.google.protobuf.GeneratedMessage,com.google.protobuf.GeneratedMessage$BuilderParent,boolean) -> <init>
    125:126:com.google.protobuf.GeneratedMessage build() -> build
    208:216:com.google.protobuf.SingleFieldBuilder clear() -> clear
    97:98:void dispose() -> dispose
    137:146:com.google.protobuf.GeneratedMessage$Builder getBuilder() -> getBuilder
    110:114:com.google.protobuf.GeneratedMessage getMessage() -> getMessage
    239:240:void markDirty() -> markDirty
    192:198:com.google.protobuf.SingleFieldBuilder mergeFrom(com.google.protobuf.GeneratedMessage) -> mergeFrom
    226:235:void onChanged() -> onChanged
    172:173:com.google.protobuf.SingleFieldBuilder setMessage(com.google.protobuf.GeneratedMessage) -> setMessage
com.google.protobuf.SmallSortedMap -> com.google.protobuf.SmallSortedMap:
    87:87:void <init>(int,com.google.protobuf.SmallSortedMap$1) -> <init>
    153:157:void <init>(int) -> <init>
    87:87:void access$200(com.google.protobuf.SmallSortedMap) -> access$200
    87:87:java.util.List access$400(com.google.protobuf.SmallSortedMap) -> access$400
    87:87:java.lang.Object access$500(com.google.protobuf.SmallSortedMap,int) -> access$500
    87:87:java.util.Map access$600(com.google.protobuf.SmallSortedMap) -> access$600
    315:341:int binarySearchInArray(java.lang.Comparable) -> binarySearchInArray
    364:365:void checkMutable() -> checkMutable
    262:269:void clear() -> clear
    214:215:boolean containsKey(java.lang.Object) -> containsKey
    389:393:void ensureEntryArrayMutable() -> ensureEntryArrayMutable
    353:356:java.util.Set entrySet() -> entrySet
    227:232:java.lang.Object get(java.lang.Object) -> get
    185:185:java.util.Map$Entry getArrayEntryAt(int) -> getArrayEntryAt
    180:180:int getNumArrayEntries() -> getNumArrayEntries
    195:195:java.lang.Iterable getOverflowEntries() -> getOverflowEntries
    377:381:java.util.SortedMap getOverflowEntriesMutable() -> getOverflowEntriesMutable
    175:175:boolean isImmutable() -> isImmutable
    161:171:void makeImmutable() -> makeImmutable
    100:100:com.google.protobuf.SmallSortedMap newFieldMap(int) -> newFieldMap
    237:257:java.lang.Object put(java.lang.Comparable,java.lang.Object) -> put
    279:291:java.lang.Object remove(java.lang.Object) -> remove
    296:306:java.lang.Object removeArrayEntryAt(int) -> removeArrayEntryAt
    202:202:int size() -> size
com.google.protobuf.SmallSortedMap$1 -> com.google.protobuf.SmallSortedMap$1:
    100:100:void <init>(int) -> <init>
    104:122:void makeImmutable() -> makeImmutable
    100:100:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.protobuf.SmallSortedMap$EmptySet -> com.google.protobuf.SmallSortedMap$EmptySet:
    591:606:void <clinit>() -> <clinit>
    589:589:java.util.Iterator access$700() -> access$700
    615:615:java.lang.Iterable iterable() -> iterable
com.google.protobuf.SmallSortedMap$EmptySet$1 -> com.google.protobuf.SmallSortedMap$EmptySet$1:
    591:591:void <init>() -> <init>
    594:594:boolean hasNext() -> hasNext
    598:598:java.lang.Object next() -> next
    602:602:void remove() -> remove
com.google.protobuf.SmallSortedMap$EmptySet$2 -> com.google.protobuf.SmallSortedMap$EmptySet$2:
    606:606:void <init>() -> <init>
    609:609:java.util.Iterator iterator() -> iterator
com.google.protobuf.SmallSortedMap$Entry -> com.google.protobuf.SmallSortedMap$Entry:
    406:407:void <init>(com.google.protobuf.SmallSortedMap,java.util.Map$Entry) -> <init>
    409:412:void <init>(com.google.protobuf.SmallSortedMap,java.lang.Comparable,java.lang.Object) -> <init>
    400:400:int compareTo(java.lang.Object) -> compareTo
    426:426:int compareTo(com.google.protobuf.SmallSortedMap$Entry) -> compareTo
    439:447:boolean equals(java.lang.Object) -> equals
    463:463:boolean equals(java.lang.Object,java.lang.Object) -> equals
    400:400:java.lang.Object getKey() -> getKey
    416:416:java.lang.Comparable getKey() -> getKey
    421:421:java.lang.Object getValue() -> getValue
    452:452:int hashCode() -> hashCode
    431:434:java.lang.Object setValue(java.lang.Object) -> setValue
    458:458:java.lang.String toString() -> toString
com.google.protobuf.SmallSortedMap$EntryIterator -> com.google.protobuf.SmallSortedMap$EntryIterator:
    532:534:void <init>(com.google.protobuf.SmallSortedMap) -> <init>
    532:532:void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1) -> <init>
    577:580:java.util.Iterator getOverflowIterator() -> getOverflowIterator
    540:540:boolean hasNext() -> hasNext
    532:532:java.lang.Object next() -> next
    546:552:java.util.Map$Entry next() -> next
    557:558:void remove() -> remove
com.google.protobuf.SmallSortedMap$EntrySet -> com.google.protobuf.SmallSortedMap$EntrySet:
    470:470:void <init>(com.google.protobuf.SmallSortedMap) -> <init>
    470:470:void <init>(com.google.protobuf.SmallSortedMap,com.google.protobuf.SmallSortedMap$1) -> <init>
    470:470:boolean add(java.lang.Object) -> add
    499:503:boolean add(java.util.Map$Entry) -> add
    524:525:void clear() -> clear
    490:493:boolean contains(java.lang.Object) -> contains
    474:474:java.util.Iterator iterator() -> iterator
    514:519:boolean remove(java.lang.Object) -> remove
    479:479:int size() -> size
com.google.protobuf.TextFormat -> com.google.protobuf.TextFormat:
    58:61:void <clinit>() -> <clinit>
    55:55:void access$1000(int,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator) -> access$1000
    55:55:java.lang.String access$800(int) -> access$800
    55:55:java.lang.String access$900(long) -> access$900
    1423:1428:int digitValue(byte) -> digitValue
    1258:1288:java.lang.String escapeBytes(com.google.protobuf.ByteString) -> escapeBytes
    1393:1393:java.lang.String escapeText(java.lang.String) -> escapeText
    1412:1412:boolean isHex(byte) -> isHex
    1407:1407:boolean isOctal(byte) -> isOctal
    1438:1438:int parseInt32(java.lang.String) -> parseInt32
    1458:1458:long parseInt64(java.lang.String) -> parseInt64
    1476:1548:long parseInteger(java.lang.String,boolean,boolean) -> parseInteger
    1449:1449:int parseUInt32(java.lang.String) -> parseUInt32
    1469:1469:long parseUInt64(java.lang.String) -> parseUInt64
    71:72:void print(com.google.protobuf.MessageOrBuilder,java.lang.Appendable) -> print
    78:79:void print(com.google.protobuf.UnknownFieldSet,java.lang.Appendable) -> print
    117:121:java.lang.String printToString(com.google.protobuf.MessageOrBuilder) -> printToString
    131:135:java.lang.String printToString(com.google.protobuf.UnknownFieldSet) -> printToString
    223:245:void printUnknownFieldValue(int,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator) -> printUnknownFieldValue
    1299:1372:com.google.protobuf.ByteString unescapeBytes(java.lang.CharSequence) -> unescapeBytes
    459:462:java.lang.String unsignedToString(int) -> unsignedToString
    468:473:java.lang.String unsignedToString(long) -> unsignedToString
com.google.protobuf.TextFormat$1 -> com.google.protobuf.TextFormat$1:
    349:349:void <clinit>() -> <clinit>
com.google.protobuf.TextFormat$InvalidEscapeSequenceException -> com.google.protobuf.TextFormat$InvalidEscapeSequenceException:
    1383:1384:void <init>(java.lang.String) -> <init>
com.google.protobuf.TextFormat$Printer -> com.google.protobuf.TextFormat$Printer:
    248:248:void <init>(com.google.protobuf.TextFormat$1) -> <init>
    255:255:void <init>() -> <init>
    248:248:com.google.protobuf.TextFormat$Printer access$100(com.google.protobuf.TextFormat$Printer,boolean) -> access$100
    248:248:com.google.protobuf.TextFormat$Printer access$200(com.google.protobuf.TextFormat$Printer,boolean) -> access$200
    248:248:void access$400(com.google.protobuf.TextFormat$Printer,com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator) -> access$400
    248:248:void access$500(com.google.protobuf.TextFormat$Printer,com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator) -> access$500
    272:276:void print(com.google.protobuf.MessageOrBuilder,com.google.protobuf.TextFormat$TextGenerator) -> print
    280:288:void printField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator) -> printField
    349:407:void printFieldValue(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator) -> printFieldValue
    294:343:void printSingleField(com.google.protobuf.Descriptors$FieldDescriptor,java.lang.Object,com.google.protobuf.TextFormat$TextGenerator) -> printSingleField
    448:454:void printUnknownField(int,int,java.util.List,com.google.protobuf.TextFormat$TextGenerator) -> printUnknownField
    413:441:void printUnknownFields(com.google.protobuf.UnknownFieldSet,com.google.protobuf.TextFormat$TextGenerator) -> printUnknownFields
    265:266:com.google.protobuf.TextFormat$Printer setEscapeNonAscii(boolean) -> setEscapeNonAscii
    259:260:com.google.protobuf.TextFormat$Printer setSingleLineMode(boolean) -> setSingleLineMode
com.google.protobuf.TextFormat$TextGenerator -> com.google.protobuf.TextFormat$TextGenerator:
    481:481:void <init>(java.lang.Appendable,com.google.protobuf.TextFormat$1) -> <init>
    486:488:void <init>(java.lang.Appendable) -> <init>
    496:497:void indent() -> indent
    504:506:void outdent() -> outdent
    516:527:void print(java.lang.CharSequence) -> print
    531:539:void write(java.lang.CharSequence,int) -> write
com.google.protobuf.UninitializedMessageException -> com.google.protobuf.UninitializedMessageException:
    53:56:void <init>(com.google.protobuf.MessageLite) -> <init>
    59:61:void <init>(java.util.List) -> <init>
    81:81:com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException() -> asInvalidProtocolBufferException
    86:97:java.lang.String buildDescription(java.util.List) -> buildDescription
com.google.protobuf.UnknownFieldSet -> com.google.protobuf.UnknownFieldSet:
    82:974:void <clinit>() -> <clinit>
    59:59:void <init>(java.util.Map,com.google.protobuf.UnknownFieldSet$1) -> <init>
    60:60:void <init>() -> <init>
    89:91:void <init>(java.util.Map) -> <init>
    59:59:java.util.Map access$200(com.google.protobuf.UnknownFieldSet) -> access$200
    110:110:java.util.Map asMap() -> asMap
    96:99:boolean equals(java.lang.Object) -> equals
    77:77:com.google.protobuf.UnknownFieldSet getDefaultInstance() -> getDefaultInstance
    59:59:com.google.protobuf.Parser getParserForType() -> getParserForType
    976:976:com.google.protobuf.UnknownFieldSet$Parser getParserForType() -> getParserForType
    198:202:int getSerializedSize() -> getSerializedSize
    222:227:int getSerializedSizeAsMessageSet() -> getSerializedSizeAsMessageSet
    105:105:int hashCode() -> hashCode
    233:233:boolean isInitialized() -> isInitialized
    64:64:com.google.protobuf.UnknownFieldSet$Builder newBuilder() -> newBuilder
    72:72:com.google.protobuf.UnknownFieldSet$Builder newBuilder(com.google.protobuf.UnknownFieldSet) -> newBuilder
    59:59:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    265:265:com.google.protobuf.UnknownFieldSet$Builder toBuilder() -> toBuilder
    150:155:com.google.protobuf.ByteString toByteString() -> toByteString
    141:141:java.lang.String toString() -> toString
    211:215:void writeAsMessageSetTo(com.google.protobuf.CodedOutputStream) -> writeAsMessageSetTo
    129:132:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.UnknownFieldSet$Builder -> com.google.protobuf.UnknownFieldSet$Builder:
    282:282:void <init>() -> <init>
    280:280:com.google.protobuf.UnknownFieldSet$Builder access$000() -> access$000
    430:431:com.google.protobuf.UnknownFieldSet$Builder addField(int,com.google.protobuf.UnknownFieldSet$Field) -> addField
    280:280:com.google.protobuf.MessageLite build() -> build
    332:340:com.google.protobuf.UnknownFieldSet build() -> build
    345:345:com.google.protobuf.UnknownFieldSet buildPartial() -> buildPartial
    280:280:java.lang.Object clone() -> clone
    350:351:com.google.protobuf.UnknownFieldSet$Builder clone() -> clone
    293:295:com.google.protobuf.UnknownFieldSet$Builder create() -> create
    303:319:com.google.protobuf.UnknownFieldSet$Field$Builder getFieldBuilder(int) -> getFieldBuilder
    419:420:boolean hasField(int) -> hasField
    390:391:com.google.protobuf.UnknownFieldSet$Builder mergeField(int,com.google.protobuf.UnknownFieldSet$Field) -> mergeField
    475:479:boolean mergeFieldFrom(int,com.google.protobuf.CodedInputStream) -> mergeFieldFrom
    280:280:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    377:382:com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.UnknownFieldSet) -> mergeFrom
    460:465:com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.CodedInputStream) -> mergeFrom
    579:579:com.google.protobuf.UnknownFieldSet$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    410:411:com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int) -> mergeVarintField
    360:363:void reinitialize() -> reinitialize
com.google.protobuf.UnknownFieldSet$Field -> com.google.protobuf.UnknownFieldSet$Field:
    676:676:void <clinit>() -> <clinit>
    656:656:void <init>(com.google.protobuf.UnknownFieldSet$1) -> <init>
    657:657:void <init>() -> <init>
    656:656:java.util.List access$500(com.google.protobuf.UnknownFieldSet$Field) -> access$500
    656:656:java.util.List access$502(com.google.protobuf.UnknownFieldSet$Field,java.util.List) -> access$502
    656:656:java.util.List access$600(com.google.protobuf.UnknownFieldSet$Field) -> access$600
    656:656:java.util.List access$602(com.google.protobuf.UnknownFieldSet$Field,java.util.List) -> access$602
    656:656:java.util.List access$700(com.google.protobuf.UnknownFieldSet$Field) -> access$700
    656:656:java.util.List access$702(com.google.protobuf.UnknownFieldSet$Field,java.util.List) -> access$702
    656:656:java.util.List access$800(com.google.protobuf.UnknownFieldSet$Field) -> access$800
    656:656:java.util.List access$802(com.google.protobuf.UnknownFieldSet$Field,java.util.List) -> access$802
    656:656:java.util.List access$900(com.google.protobuf.UnknownFieldSet$Field) -> access$900
    656:656:java.util.List access$902(com.google.protobuf.UnknownFieldSet$Field,java.util.List) -> access$902
    699:705:boolean equals(java.lang.Object) -> equals
    682:682:java.util.List getFixed32List() -> getFixed32List
    685:685:java.util.List getFixed64List() -> getFixed64List
    695:695:java.util.List getGroupList() -> getGroupList
    719:719:java.lang.Object[] getIdentityArray() -> getIdentityArray
    688:688:java.util.List getLengthDelimitedList() -> getLengthDelimitedList
    755:771:int getSerializedSize(int) -> getSerializedSize
    792:797:int getSerializedSizeAsMessageSetExtension(int) -> getSerializedSizeAsMessageSetExtension
    679:679:java.util.List getVarintList() -> getVarintList
    711:711:int hashCode() -> hashCode
    661:661:com.google.protobuf.UnknownFieldSet$Field$Builder newBuilder() -> newBuilder
    782:785:void writeAsMessageSetExtensionTo(int,com.google.protobuf.CodedOutputStream) -> writeAsMessageSetExtensionTo
    733:748:void writeTo(int,com.google.protobuf.CodedOutputStream) -> writeTo
com.google.protobuf.UnknownFieldSet$Field$Builder -> com.google.protobuf.UnknownFieldSet$Field$Builder:
    813:813:void <init>() -> <init>
    811:811:com.google.protobuf.UnknownFieldSet$Field$Builder access$300() -> access$300
    918:922:com.google.protobuf.UnknownFieldSet$Field$Builder addFixed32(int) -> addFixed32
    927:931:com.google.protobuf.UnknownFieldSet$Field$Builder addFixed64(long) -> addFixed64
    945:949:com.google.protobuf.UnknownFieldSet$Field$Builder addGroup(com.google.protobuf.UnknownFieldSet) -> addGroup
    936:940:com.google.protobuf.UnknownFieldSet$Field$Builder addLengthDelimited(com.google.protobuf.ByteString) -> addLengthDelimited
    909:913:com.google.protobuf.UnknownFieldSet$Field$Builder addVarint(long) -> addVarint
    830:859:com.google.protobuf.UnknownFieldSet$Field build() -> build
    816:818:com.google.protobuf.UnknownFieldSet$Field$Builder create() -> create
    874:904:com.google.protobuf.UnknownFieldSet$Field$Builder mergeFrom(com.google.protobuf.UnknownFieldSet$Field) -> mergeFrom
com.google.protobuf.UnknownFieldSet$Parser -> com.google.protobuf.UnknownFieldSet$Parser:
    957:957:void <init>() -> <init>
    957:957:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    961:965:com.google.protobuf.UnknownFieldSet parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.protobuf.UnmodifiableLazyStringList -> com.google.protobuf.UnmodifiableLazyStringList:
    50:52:void <init>(com.google.protobuf.LazyStringList) -> <init>
    45:45:com.google.protobuf.LazyStringList access$000(com.google.protobuf.UnmodifiableLazyStringList) -> access$000
    71:71:void add(com.google.protobuf.ByteString) -> add
    45:45:java.lang.Object get(int) -> get
    56:56:java.lang.String get(int) -> get
    66:66:com.google.protobuf.ByteString getByteString(int) -> getByteString
    150:150:java.util.List getUnderlyingElements() -> getUnderlyingElements
    128:128:java.util.Iterator iterator() -> iterator
    76:76:java.util.ListIterator listIterator(int) -> listIterator
    61:61:int size() -> size
com.google.protobuf.UnmodifiableLazyStringList$1 -> com.google.protobuf.UnmodifiableLazyStringList$1:
    76:77:void <init>(com.google.protobuf.UnmodifiableLazyStringList,int) -> <init>
    76:76:void add(java.lang.Object) -> add
    121:121:void add(java.lang.String) -> add
    81:81:boolean hasNext() -> hasNext
    91:91:boolean hasPrevious() -> hasPrevious
    76:76:java.lang.Object next() -> next
    86:86:java.lang.String next() -> next
    101:101:int nextIndex() -> nextIndex
    76:76:java.lang.Object previous() -> previous
    96:96:java.lang.String previous() -> previous
    106:106:int previousIndex() -> previousIndex
    111:111:void remove() -> remove
    76:76:void set(java.lang.Object) -> set
    116:116:void set(java.lang.String) -> set
com.google.protobuf.UnmodifiableLazyStringList$2 -> com.google.protobuf.UnmodifiableLazyStringList$2:
    128:129:void <init>(com.google.protobuf.UnmodifiableLazyStringList) -> <init>
    133:133:boolean hasNext() -> hasNext
    128:128:java.lang.Object next() -> next
    138:138:java.lang.String next() -> next
    143:143:void remove() -> remove
com.google.protobuf.Utf8 -> com.google.protobuf.Utf8:
    323:323:int incompleteStateFor(int) -> incompleteStateFor
    328:328:int incompleteStateFor(int,int) -> incompleteStateFor
    334:334:int incompleteStateFor(int,int,int) -> incompleteStateFor
    341:343:int incompleteStateFor(byte[],int,int) -> incompleteStateFor
    122:122:boolean isValidUtf8(byte[],int,int) -> isValidUtf8
    252:256:int partialIsValidUtf8(byte[],int,int) -> partialIsValidUtf8
    267:270:int partialIsValidUtf8NonAscii(byte[],int,int) -> partialIsValidUtf8NonAscii
com.google.protobuf.WireFormat -> com.google.protobuf.WireFormat:
    155:161:void <clinit>() -> <clinit>
    65:65:int getTagFieldNumber(int) -> getTagFieldNumber
    60:60:int getTagWireType(int) -> getTagWireType
    70:70:int makeTag(int,int) -> makeTag
com.google.protobuf.WireFormat$FieldType -> com.google.protobuf.WireFormat$FieldType:
    108:107:void <clinit>() -> <clinit>
    107:107:void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int,com.google.protobuf.WireFormat$1) -> <init>
    135:138:void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int) -> <init>
    143:143:com.google.protobuf.WireFormat$JavaType getJavaType() -> getJavaType
    144:144:int getWireType() -> getWireType
    146:146:boolean isPackable() -> isPackable
    107:107:com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String) -> valueOf
    107:107:com.google.protobuf.WireFormat$FieldType[] values() -> values
com.google.protobuf.WireFormat$FieldType$1 -> com.google.protobuf.WireFormat$FieldType$1:
    116:116:void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int) -> <init>
    117:117:boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$FieldType$2 -> com.google.protobuf.WireFormat$FieldType$2:
    119:119:void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int) -> <init>
    120:120:boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$FieldType$3 -> com.google.protobuf.WireFormat$FieldType$3:
    122:122:void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int) -> <init>
    123:123:boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$FieldType$4 -> com.google.protobuf.WireFormat$FieldType$4:
    125:125:void <init>(java.lang.String,int,com.google.protobuf.WireFormat$JavaType,int) -> <init>
    126:126:boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$JavaType -> com.google.protobuf.WireFormat$JavaType:
    78:77:void <clinit>() -> <clinit>
    88:90:void <init>(java.lang.String,int,java.lang.Object) -> <init>
    77:77:com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String) -> valueOf
    77:77:com.google.protobuf.WireFormat$JavaType[] values() -> values
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    27:24:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
    24:24:com.google.zxing.BarcodeFormat[] values() -> values
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    34:36:void <init>(com.google.zxing.LuminanceSource) -> <init>
    39:39:com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    33:35:void <init>(com.google.zxing.Binarizer) -> <init>
    84:87:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    144:146:java.lang.String toString() -> toString
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    27:30:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    41:41:com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    35:30:void <clinit>() -> <clinit>
    114:116:void <init>(java.lang.String,int,java.lang.Class) -> <init>
    30:30:com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
    30:30:com.google.zxing.DecodeHintType[] values() -> values
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    35:24:void <clinit>() -> <clinit>
    24:24:void <init>(java.lang.String,int) -> <init>
    24:24:com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
    24:24:com.google.zxing.EncodeHintType[] values() -> values
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    28:31:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    41:41:com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    33:36:void <init>(int,int) -> <init>
    73:73:int getHeight() -> getHeight
    66:66:int getWidth() -> getWidth
    134:154:java.lang.String toString() -> toString
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    27:30:void <clinit>() -> <clinit>
    32:34:void <init>() -> <init>
    37:37:com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.PlanarYUVLuminanceSource:
    47:50:void <init>(byte[],int,int,int,int,int,int,boolean) -> <init>
    79:104:byte[] getMatrix() -> getMatrix
    65:66:byte[] getRow(int,byte[]) -> getRow
    157:166:void reverseHorizontal(int,int) -> reverseHorizontal
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    29:31:void <clinit>() -> <clinit>
    33:35:void <init>() -> <init>
    44:44:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    41:42:void <init>(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat) -> <init>
    49:51:void <init>(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long) -> <init>
    58:66:void <init>(java.lang.String,byte[],int,com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long) -> <init>
    72:72:java.lang.String getText() -> getText
    116:120:void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    150:150:java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    30:25:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    25:25:com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
    25:25:com.google.zxing.ResultMetadataType[] values() -> values
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    32:35:void <init>(float,float) -> <init>
    125:127:float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
    116:116:float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    47:51:boolean equals(java.lang.Object) -> equals
    38:38:float getX() -> getX
    42:42:float getY() -> getY
    56:56:int hashCode() -> hashCode
    73:108:void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    61:61:java.lang.String toString() -> toString
com.google.zxing.WriterException -> com.google.zxing.WriterException:
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    31:34:void <init>() -> <init>
    42:45:void <init>(int[],int) -> <init>
    217:222:void appendBit(boolean) -> appendBit
    243:248:void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    233:234:void appendBits(int,int) -> appendBits
    26:26:java.lang.Object clone() -> clone
    354:354:com.google.zxing.common.BitArray clone() -> clone
    56:61:void ensureCapacity(int) -> ensureCapacity
    328:332:boolean equals(java.lang.Object) -> equals
    68:68:boolean get(int) -> get
    48:48:int getSize() -> getSize
    52:52:int getSizeInBytes() -> getSizeInBytes
    337:337:int hashCode() -> hashCode
    323:323:int[] makeArray(int) -> makeArray
    270:280:void toBytes(int,byte[],int,int) -> toBytes
    342:349:java.lang.String toString() -> toString
    251:252:void xor(com.google.zxing.common.BitArray) -> xor
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    49:50:void <init>(int) -> <init>
    58:60:void <init>(int,int) -> <init>
    68:73:void <init>(int,int,int,int[]) -> <init>
    466:473:java.lang.String buildToString(java.lang.String,java.lang.String,java.lang.String) -> buildToString
    36:36:java.lang.Object clone() -> clone
    478:478:com.google.zxing.common.BitMatrix clone() -> clone
    418:422:boolean equals(java.lang.Object) -> equals
    188:190:void flip(int,int) -> flip
    161:162:boolean get(int,int) -> get
    374:392:int[] getBottomRightOnBit() -> getBottomRightOnBit
    406:406:int getHeight() -> getHeight
    354:370:int[] getTopLeftOnBit() -> getTopLeftOnBit
    399:399:int getWidth() -> getWidth
    428:433:int hashCode() -> hashCode
    172:174:void set(int,int) -> set
    232:233:void setRegion(int,int,int,int) -> setRegion
    441:441:java.lang.String toString() -> toString
    450:450:java.lang.String toString(java.lang.String,java.lang.String) -> toString
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    38:40:void <init>(byte[]) -> <init>
    108:108:int available() -> available
    63:64:int readBits(int) -> readBits
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    33:73:void <clinit>() -> <clinit>
    79:80:void <init>(java.lang.String,int,int) -> <init>
    82:85:void <init>(java.lang.String,int,int,java.lang.String[]) -> <init>
    87:90:void <init>(java.lang.String,int,int[],java.lang.String[]) -> <init>
    115:115:com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
    103:104:com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    93:93:int getValue() -> getValue
    30:30:com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    30:30:com.google.zxing.common.CharacterSetECI[] values() -> values
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    53:61:void <init>(byte[],java.lang.String,java.util.List,java.lang.String,int,int) -> <init>
    97:97:java.util.List getByteSegments() -> getByteSegments
    104:104:java.lang.String getECLevel() -> getECLevel
    133:133:java.lang.Object getOther() -> getOther
    67:67:byte[] getRawBytes() -> getRawBytes
    145:145:int getStructuredAppendParity() -> getStructuredAppendParity
    149:149:int getStructuredAppendSequenceNumber() -> getStructuredAppendSequenceNumber
    90:90:java.lang.String getText() -> getText
    141:141:boolean hasStructuredAppend() -> hasStructuredAppend
    137:138:void setOther(java.lang.Object) -> setOther
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    24:24:void <init>() -> <init>
    51:52:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    33:36:void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[]) -> <init>
    39:39:com.google.zxing.common.BitMatrix getBits() -> getBits
    43:43:com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    39:39:void <clinit>() -> <clinit>
    45:48:void <init>(com.google.zxing.LuminanceSource) -> <init>
    148:185:int estimateBlackPoint(int[]) -> estimateBlackPoint
    95:129:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    138:144:void initArrays(int) -> initArrays
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    36:36:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    121:171:void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
    55:55:com.google.zxing.common.GridSampler getInstance() -> getInstance
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    53:54:void <init>(com.google.zxing.LuminanceSource) -> <init>
    166:234:int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
    108:131:void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    134:134:int cap(int,int,int) -> cap
    63:88:com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    146:154:void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    40:50:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    132:132:com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    61:63:com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    127:127:com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    101:116:com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    144:144:com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
    67:84:void transformPoints(float[]) -> transformPoints
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    32:38:void <clinit>() -> <clinit>
    52:194:java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    48:50:float distance(float,float,float,float) -> distance
    61:63:float distance(int,int,int,int) -> distance
    37:37:int round(float) -> round
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    32:39:void <clinit>() -> <clinit>
    60:82:void <init>(int,int,int) -> <init>
    113:113:int addOrSubtract(int,int) -> addOrSubtract
    96:97:com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    120:120:int exp(int) -> exp
    158:158:int getGeneratorBase() -> getGeneratorBase
    89:89:com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    154:154:int getSize() -> getSize
    85:85:com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    137:138:int inverse(int) -> inverse
    127:128:int log(int) -> log
    147:148:int multiply(int,int) -> multiply
    163:163:java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    42:44:void <init>(com.google.zxing.common.reedsolomon.GenericGF,int[]) -> <init>
    119:120:com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    201:202:com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    98:115:int evaluateAt(int) -> evaluateAt
    91:91:int getCoefficient(int) -> getCoefficient
    70:70:int[] getCoefficients() -> getCoefficients
    77:77:int getDegree() -> getDegree
    84:84:boolean isZero() -> isZero
    149:150:com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    171:182:com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    186:187:com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    228:261:java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    45:47:void <init>(com.google.zxing.common.reedsolomon.GenericGF) -> <init>
    59:86:void decode(int[],int) -> decode
    145:158:int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    165:187:int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
    91:134:com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    33:37:void <init>(com.google.zxing.common.reedsolomon.GenericGF) -> <init>
    40:49:com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    53:54:void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
    28:29:void <init>(java.lang.String) -> <init>
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    46:46:void <clinit>() -> <clinit>
    44:48:void <init>() -> <init>
    72:102:com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    120:123:com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    200:217:float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
    108:108:void reset() -> reset
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    36:36:void <init>() -> <init>
    54:55:com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    85:87:com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    36:39:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    141:142:int copyBit(int,int,int) -> copyBit
    235:243:void mirror() -> mirror
    155:202:byte[] readCodewords() -> readCodewords
    53:86:com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    98:137:com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    211:217:void remask() -> remask
    228:231:void setMirror(boolean) -> setMirror
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    31:34:void <init>(int,byte[]) -> <init>
    119:119:byte[] getCodewords() -> getCodewords
    51:52:com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    115:115:int getNumDataCodewords() -> getNumDataCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    39:32:void <clinit>() -> <clinit>
    32:32:void <init>(java.lang.String,int) -> <init>
    32:32:void <init>(java.lang.String,int,com.google.zxing.qrcode.decoder.DataMask$1) -> <init>
    130:137:void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    32:32:com.google.zxing.qrcode.decoder.DataMask valueOf(java.lang.String) -> valueOf
    32:32:com.google.zxing.qrcode.decoder.DataMask[] values() -> values
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
    39:39:void <init>(java.lang.String,int) -> <init>
    42:42:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$2 -> com.google.zxing.qrcode.decoder.DataMask$2:
    49:49:void <init>(java.lang.String,int) -> <init>
    52:52:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$3 -> com.google.zxing.qrcode.decoder.DataMask$3:
    59:59:void <init>(java.lang.String,int) -> <init>
    62:62:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$4 -> com.google.zxing.qrcode.decoder.DataMask$4:
    69:69:void <init>(java.lang.String,int) -> <init>
    72:72:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$5 -> com.google.zxing.qrcode.decoder.DataMask$5:
    79:79:void <init>(java.lang.String,int) -> <init>
    82:82:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$6 -> com.google.zxing.qrcode.decoder.DataMask$6:
    90:90:void <init>(java.lang.String,int) -> <init>
    93:93:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$7 -> com.google.zxing.qrcode.decoder.DataMask$7:
    101:101:void <init>(java.lang.String,int) -> <init>
    104:104:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$8 -> com.google.zxing.qrcode.decoder.DataMask$8:
    112:112:void <init>(java.lang.String,int) -> <init>
    115:115:boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    45:45:void <clinit>() -> <clinit>
    56:133:com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    265:297:void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    226:227:void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    151:152:void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    187:188:void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    303:339:void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    342:357:int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
    254:255:char toAlphaNumericChar(int) -> toAlphaNumericChar
com.google.zxing.qrcode.decoder.DecodedBitStreamParser$1 -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser$1:
    112:112:void <clinit>() -> <clinit>
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    40:42:void <init>() -> <init>
    171:180:void correctErrors(byte[],int) -> correctErrors
    80:126:com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    132:159:com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    28:36:void <clinit>() -> <clinit>
    40:42:void <init>(java.lang.String,int,int) -> <init>
    53:54:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
    45:45:int getBits() -> getBits
    25:25:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    25:25:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    34:34:void <clinit>() -> <clinit>
    72:77:void <init>(int) -> <init>
    91:98:com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    104:131:com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    149:153:boolean equals(java.lang.Object) -> equals
    139:139:byte getDataMask() -> getDataMask
    135:135:com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    144:144:int hashCode() -> hashCode
    80:80:int numBitsDiffering(int,int) -> numBitsDiffering
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    27:25:void <clinit>() -> <clinit>
    42:45:void <init>(java.lang.String,int,int[],int) -> <init>
    53:55:com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    99:99:int getBits() -> getBits
    86:95:int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    25:25:com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    25:25:com.google.zxing.qrcode.decoder.Mode[] values() -> values
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData -> com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData:
    31:33:void <init>(boolean) -> <init>
    48:49:void applyMirroredCorrection(com.google.zxing.ResultPoint[]) -> applyMirroredCorrection
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    33:43:void <clinit>() -> <clinit>
    52:63:void <init>(int,int[],com.google.zxing.qrcode.decoder.Version$ECBlocks[]) -> <init>
    140:175:com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    246:246:com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
    111:133:com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    70:70:int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    78:78:int getDimensionForVersion() -> getDimensionForVersion
    82:82:com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    93:94:com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    74:74:int getTotalCodewords() -> getTotalCodewords
    104:105:com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    66:66:int getVersionNumber() -> getVersionNumber
    239:239:java.lang.String toString() -> toString
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    223:226:void <init>(int,int) -> <init>
    229:229:int getCount() -> getCount
    233:233:int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    188:191:void <init>(int,com.google.zxing.qrcode.decoder.Version$ECB[]) -> <init>
    210:210:com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
    194:194:int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    198:202:int getNumBlocks() -> getNumBlocks
    206:206:int getTotalECCodewords() -> getTotalECCodewords
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    32:34:void <init>(float,float,float) -> <init>
    41:45:boolean aboutEquals(float,float,float) -> aboutEquals
    53:56:com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    68:78:void <init>(com.google.zxing.common.BitMatrix,int,int,int,int,float,com.google.zxing.ResultPointCallback) -> <init>
    161:161:float centerFromEnd(int[],int) -> centerFromEnd
    193:209:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    88:153:com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    170:177:boolean foundPatternCross(int[]) -> foundPatternCross
    256:274:com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    44:46:void <init>(com.google.zxing.common.BitMatrix) -> <init>
    232:232:float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    242:258:float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    202:216:int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    149:167:com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    77:83:com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    380:384:com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
    89:95:com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    190:191:com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    309:359:float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    268:295:float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    34:35:void <init>(float,float,float) -> <init>
    38:41:void <init>(float,float,float,int) -> <init>
    62:66:boolean aboutEquals(float,float,float) -> aboutEquals
    75:79:com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
    48:48:int getCount() -> getCount
    44:44:float getEstimatedModuleSize() -> getEstimatedModuleSize
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    61:66:void <init>(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPointCallback) -> <init>
    174:174:float centerFromEnd(int[],int) -> centerFromEnd
    239:242:void clearCounts(int[]) -> clearCounts
    262:318:boolean crossCheckDiagonal(int,int) -> crossCheckDiagonal
    406:424:float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    334:354:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    77:166:com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    539:560:int findRowSkip() -> findRowSkip
    183:197:boolean foundPatternCross(int[]) -> foundPatternCross
    211:225:boolean foundPatternDiagonal(int[]) -> foundPatternDiagonal
    234:235:int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    500:529:boolean handlePossibleCenter(int[],int,int) -> handlePossibleCenter
    569:590:boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    601:604:com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
    245:250:void shiftCounts2(int[]) -> shiftCounts2
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    673:673:void <init>(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1) -> <init>
    675:677:void <init>(float) -> <init>
    673:673:int compare(java.lang.Object,java.lang.Object) -> compare
    680:685:int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    658:658:void <init>(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1) -> <init>
    660:662:void <init>(float) -> <init>
    658:658:int compare(java.lang.Object,java.lang.Object) -> compare
    665:665:int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    31:35:void <init>(com.google.zxing.qrcode.detector.FinderPattern[]) -> <init>
    38:38:com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    42:42:com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    46:46:com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    24:27:void <init>(byte[],byte[]) -> <init>
    30:30:byte[] getDataBytes() -> getDataBytes
    34:34:byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    33:37:void <init>(int,int) -> <init>
    71:74:void clear(byte) -> clear
    48:48:byte get(int,int) -> get
    55:55:byte[][] getArray() -> getArray
    40:40:int getHeight() -> getHeight
    44:44:int getWidth() -> getWidth
    63:64:void set(int,int,int) -> set
    67:68:void set(int,int,boolean) -> set
    78:96:java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    41:41:void <clinit>() -> <clinit>
    576:578:void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    549:570:void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    506:509:void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    612:615:void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
    588:590:void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    492:494:void appendLengthInfo(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    484:485:void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    525:546:void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    192:192:int calculateBitsNeeded(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.Version) -> calculateBitsNeeded
    58:58:int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    265:276:int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    215:237:com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    280:286:com.google.zxing.qrcode.decoder.Version chooseVersion(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> chooseVersion
    80:165:com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> encode
    466:477:byte[] generateECBytes(byte[],int) -> generateECBytes
    200:203:int getAlphanumericCode(int) -> getAlphanumericCode
    347:348:void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    403:404:com.google.zxing.common.BitArray interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int) -> interleaveWithECBytes
    243:245:boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    180:185:com.google.zxing.qrcode.decoder.Version recommendVersion(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,com.google.zxing.common.BitArray) -> recommendVersion
    310:312:void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    296:303:boolean willFit(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> willFit
com.google.zxing.qrcode.encoder.Encoder$1 -> com.google.zxing.qrcode.encoder.Encoder$1:
    506:506:void <clinit>() -> <clinit>
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    41:41:int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    196:219:int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
    50:63:int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    72:103:int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    133:147:int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    157:188:boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    107:114:boolean isWhiteHorizontal(byte[],int,int) -> isWhiteHorizontal
    118:125:boolean isWhiteVertical(byte[][],int,int,int) -> isWhiteVertical
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    30:93:void <clinit>() -> <clinit>
    137:145:void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    304:305:int calculateBCHCode(int,int) -> calculateBCHCode
    127:128:void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    155:163:void embedBasicPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    377:378:void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    224:265:void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    386:392:void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    406:412:void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    415:421:void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    426:453:void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    362:373:void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    168:194:void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    397:403:void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    275:275:int findMSBSet(int) -> findMSBSet
    356:356:boolean isEmpty(int) -> isEmpty
    324:325:void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    345:350:void makeVersionInfoBits(com.google.zxing.qrcode.decoder.Version,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    457:474:void maybeEmbedPositionAdjustmentPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
    199:217:void maybeEmbedVersionInfo(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    37:39:void <init>() -> <init>
    58:58:com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    105:105:boolean isValidMaskPattern(int) -> isValidMaskPattern
    88:89:void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    96:97:void setMaskPattern(int) -> setMaskPattern
    100:101:void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    84:85:void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    92:93:void setVersion(com.google.zxing.qrcode.decoder.Version) -> setVersion
    63:80:java.lang.String toString() -> toString
com.leinardi.android.speeddial.FabWithLabelView -> com.leinardi.android.speeddial.FabWithLabelView:
    54:54:void <clinit>() -> <clinit>
    71:73:void <init>(android.content.Context) -> <init>
    81:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:53:com.leinardi.android.speeddial.SpeedDialView$OnActionSelectedListener access$000(com.leinardi.android.speeddial.FabWithLabelView) -> access$000
    132:132:android.support.design.widget.FloatingActionButton getFab() -> getFab
    125:125:android.support.v7.widget.CardView getLabelBackground() -> getLabelBackground
    136:137:com.leinardi.android.speeddial.SpeedDialActionItem getSpeedDialActionItem() -> getSpeedDialActionItem
    147:147:com.leinardi.android.speeddial.SpeedDialActionItem$Builder getSpeedDialActionItemBuilder() -> getSpeedDialActionItemBuilder
    250:288:void init(android.content.Context,android.util.AttributeSet) -> init
    110:110:boolean isLabelEnabled() -> isLabelEnabled
    356:357:void setFabBackgroundColor(int) -> setFabBackgroundColor
    327:328:void setFabIcon(android.graphics.drawable.Drawable) -> setFabIcon
    293:319:void setFabSize(int) -> setFabSize
    336:342:void setLabel(java.lang.CharSequence) -> setLabel
    364:391:void setLabelBackgroundColor(int) -> setLabelBackgroundColor
    345:348:void setLabelClickable(boolean) -> setLabelClickable
    360:361:void setLabelColor(int) -> setLabelColor
    117:119:void setLabelEnabled(boolean) -> setLabelEnabled
    198:241:void setOnActionSelectedListener(com.leinardi.android.speeddial.SpeedDialView$OnActionSelectedListener) -> setOnActionSelectedListener
    97:104:void setOrientation(int) -> setOrientation
    151:190:void setSpeedDialActionItem(com.leinardi.android.speeddial.SpeedDialActionItem) -> setSpeedDialActionItem
    88:93:void setVisibility(int) -> setVisibility
com.leinardi.android.speeddial.FabWithLabelView$1 -> com.leinardi.android.speeddial.FabWithLabelView$1:
    200:200:void <init>(com.leinardi.android.speeddial.FabWithLabelView) -> <init>
    203:212:void onClick(android.view.View) -> onClick
com.leinardi.android.speeddial.FabWithLabelView$2 -> com.leinardi.android.speeddial.FabWithLabelView$2:
    214:214:void <init>(com.leinardi.android.speeddial.FabWithLabelView) -> <init>
    217:222:void onClick(android.view.View) -> onClick
com.leinardi.android.speeddial.FabWithLabelView$3 -> com.leinardi.android.speeddial.FabWithLabelView$3:
    225:225:void <init>(com.leinardi.android.speeddial.FabWithLabelView) -> <init>
    228:234:void onClick(android.view.View) -> onClick
com.leinardi.android.speeddial.R$styleable -> com.leinardi.android.speeddial.R$styleable:
    1842:2610:void <clinit>() -> <clinit>
com.leinardi.android.speeddial.SpeedDialActionItem -> com.leinardi.android.speeddial.SpeedDialActionItem:
    316:316:void <clinit>() -> <clinit>
    36:36:void <init>(com.leinardi.android.speeddial.SpeedDialActionItem$Builder,com.leinardi.android.speeddial.SpeedDialActionItem$1) -> <init>
    62:75:void <init>(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> <init>
    301:314:void <init>(android.os.Parcel) -> <init>
    36:36:int access$1200(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1200
    36:36:java.lang.String access$1300(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1300
    36:36:int access$1400(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1400
    36:36:int access$1500(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1500
    36:36:android.graphics.drawable.Drawable access$1600(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1600
    36:36:int access$1700(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1700
    36:36:int access$1800(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1800
    36:36:int access$1900(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$1900
    36:36:int access$2000(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$2000
    36:36:boolean access$2100(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$2100
    36:36:int access$2200(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$2200
    36:36:int access$2300(com.leinardi.android.speeddial.SpeedDialActionItem) -> access$2300
    139:146:com.leinardi.android.speeddial.FabWithLabelView createFabWithLabelView(android.content.Context) -> createFabWithLabelView
    283:283:int describeContents() -> describeContents
    116:116:int getFabBackgroundColor() -> getFabBackgroundColor
    100:105:android.graphics.drawable.Drawable getFabImageDrawable(android.content.Context) -> getFabImageDrawable
    111:111:int getFabImageTintColor() -> getFabImageTintColor
    152:152:int getFabSize() -> getFabSize
    78:78:int getId() -> getId
    83:88:java.lang.String getLabel(android.content.Context) -> getLabel
    125:125:int getLabelBackgroundColor() -> getLabelBackgroundColor
    121:121:int getLabelColor() -> getLabelColor
    134:134:int getTheme() -> getTheme
    129:129:boolean isLabelClickable() -> isLabelClickable
    288:299:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.leinardi.android.speeddial.SpeedDialActionItem$1 -> com.leinardi.android.speeddial.SpeedDialActionItem$1:
    316:316:void <init>() -> <init>
    316:316:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    319:319:com.leinardi.android.speeddial.SpeedDialActionItem createFromParcel(android.os.Parcel) -> createFromParcel
    316:316:java.lang.Object[] newArray(int) -> newArray
    324:324:com.leinardi.android.speeddial.SpeedDialActionItem[] newArray(int) -> newArray
com.leinardi.android.speeddial.SpeedDialActionItem$Builder -> com.leinardi.android.speeddial.SpeedDialActionItem$Builder:
    187:191:void <init>(int,int) -> <init>
    202:206:void <init>(int,android.graphics.drawable.Drawable) -> <init>
    214:227:void <init>(com.leinardi.android.speeddial.SpeedDialActionItem) -> <init>
    155:155:int access$000(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$000
    155:155:java.lang.String access$100(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$100
    155:155:int access$1000(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$1000
    155:155:int access$1100(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$1100
    155:155:int access$200(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$200
    155:155:int access$300(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$300
    155:155:int access$400(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$400
    155:155:android.graphics.drawable.Drawable access$500(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$500
    155:155:int access$600(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$600
    155:155:int access$700(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$700
    155:155:int access$800(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$800
    155:155:boolean access$900(com.leinardi.android.speeddial.SpeedDialActionItem$Builder) -> access$900
    270:270:com.leinardi.android.speeddial.SpeedDialActionItem create() -> create
    245:246:com.leinardi.android.speeddial.SpeedDialActionItem$Builder setFabBackgroundColor(int) -> setFabBackgroundColor
    230:231:com.leinardi.android.speeddial.SpeedDialActionItem$Builder setLabel(java.lang.String) -> setLabel
    255:256:com.leinardi.android.speeddial.SpeedDialActionItem$Builder setLabelBackgroundColor(int) -> setLabelBackgroundColor
    260:261:com.leinardi.android.speeddial.SpeedDialActionItem$Builder setLabelClickable(boolean) -> setLabelClickable
    250:251:com.leinardi.android.speeddial.SpeedDialActionItem$Builder setLabelColor(int) -> setLabelColor
com.leinardi.android.speeddial.SpeedDialOverlayLayout -> com.leinardi.android.speeddial.SpeedDialOverlayLayout:
    33:33:void <clinit>() -> <clinit>
    40:41:void <init>(android.content.Context) -> <init>
    44:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:boolean hasClickableOverlay() -> hasClickableOverlay
    89:94:void hide(boolean) -> hide
    103:111:void init(android.content.Context,android.util.AttributeSet) -> init
    69:70:void setAnimationDuration(int) -> setAnimationDuration
    64:66:void setClickableOverlay(boolean) -> setClickableOverlay
    98:100:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    77:82:void show(boolean) -> show
com.leinardi.android.speeddial.SpeedDialView -> com.leinardi.android.speeddial.SpeedDialView:
    75:75:void <clinit>() -> <clinit>
    116:118:void <init>(android.content.Context) -> <init>
    121:123:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    126:128:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:74:com.leinardi.android.speeddial.SpeedDialView$OnActionSelectedListener access$000(com.leinardi.android.speeddial.SpeedDialView) -> access$000
    74:74:java.lang.String access$300() -> access$300
    74:74:com.leinardi.android.speeddial.SpeedDialView$OnChangeListener access$900(com.leinardi.android.speeddial.SpeedDialView) -> access$900
    328:328:com.leinardi.android.speeddial.FabWithLabelView addActionItem(com.leinardi.android.speeddial.SpeedDialActionItem) -> addActionItem
    341:341:com.leinardi.android.speeddial.FabWithLabelView addActionItem(com.leinardi.android.speeddial.SpeedDialActionItem,int) -> addActionItem
    355:372:com.leinardi.android.speeddial.FabWithLabelView addActionItem(com.leinardi.android.speeddial.SpeedDialActionItem,int,boolean) -> addActionItem
    313:317:java.util.Collection addAllActionItems(java.util.Collection) -> addAllActionItems
    461:466:void clearActionItems() -> clearActionItems
    521:522:void close() -> close
    525:526:void close(boolean) -> close
    719:743:android.support.design.widget.FloatingActionButton createMainFab() -> createMainFab
    820:825:com.leinardi.android.speeddial.FabWithLabelView findFabWithLabelViewById(int) -> findFabWithLabelViewById
    470:474:java.util.ArrayList getActionItems() -> getActionItems
    480:480:android.support.design.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    140:140:int getExpansionMode() -> getExpansionMode
    636:637:int getLayoutPosition(int) -> getLayoutPosition
    547:547:android.support.design.widget.FloatingActionButton getMainFab() -> getMainFab
    551:551:float getMainFabAnimationRotateAngle() -> getMainFabAnimationRotateAngle
    577:577:int getMainFabClosedBackgroundColor() -> getMainFabClosedBackgroundColor
    587:587:int getMainFabOpenedBackgroundColor() -> getMainFabOpenedBackgroundColor
    259:259:com.leinardi.android.speeddial.SpeedDialOverlayLayout getOverlayLayout() -> getOverlayLayout
    131:131:boolean getUseReverseAnimationOnClose() -> getUseReverseAnimationOnClose
    232:255:void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> hide
    873:896:void hideWithAnimationFabWithLabelView(com.leinardi.android.speeddial.FabWithLabelView,int) -> hideWithAnimationFabWithLabelView
    291:302:void inflate(int) -> inflate
    679:714:void init(android.content.Context,android.util.AttributeSet) -> init
    543:543:boolean isOpen() -> isOpen
    597:602:void onAttachedToWindow() -> onAttachedToWindow
    616:633:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    607:611:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    510:511:void open() -> open
    647:669:com.leinardi.android.speeddial.SpeedDialActionItem removeActionItem(com.leinardi.android.speeddial.FabWithLabelView,java.util.Iterator,boolean) -> removeActionItem
    439:452:com.leinardi.android.speeddial.FabWithLabelView replaceActionItem(com.leinardi.android.speeddial.SpeedDialActionItem,com.leinardi.android.speeddial.SpeedDialActionItem) -> replaceActionItem
    144:145:void setExpansionMode(int) -> setExpansionMode
    148:171:void setExpansionMode(int,boolean) -> setExpansionMode
    555:557:void setMainFabAnimationRotateAngle(float) -> setMainFabAnimationRotateAngle
    581:583:void setMainFabClosedBackgroundColor(int) -> setMainFabClosedBackgroundColor
    560:562:void setMainFabClosedDrawable(android.graphics.drawable.Drawable) -> setMainFabClosedDrawable
    591:593:void setMainFabOpenedBackgroundColor(int) -> setMainFabOpenedBackgroundColor
    565:573:void setMainFabOpenedDrawable(android.graphics.drawable.Drawable) -> setMainFabOpenedDrawable
    489:495:void setOnActionSelectedListener(com.leinardi.android.speeddial.SpeedDialView$OnActionSelectedListener) -> setOnActionSelectedListener
    503:504:void setOnChangeListener(com.leinardi.android.speeddial.SpeedDialView$OnChangeListener) -> setOnChangeListener
    175:176:void setOrientation(int) -> setOrientation
    268:281:void setOverlayLayout(com.leinardi.android.speeddial.SpeedDialOverlayLayout) -> setOverlayLayout
    135:136:void setUseReverseAnimationOnClose(boolean) -> setUseReverseAnimationOnClose
    183:185:void show(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> show
    191:225:void showFabWithWorkaround(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> showFabWithWorkaround
    809:816:void showHideOverlay(boolean,boolean) -> showHideOverlay
    861:870:void showWithAnimationFabWithLabelView(com.leinardi.android.speeddial.FabWithLabelView,int) -> showWithAnimationFabWithLabelView
    747:764:void toggle(boolean,boolean) -> toggle
    782:792:void updateMainFabBackgroundColor() -> updateMainFabBackgroundColor
    767:778:void updateMainFabDrawable(boolean) -> updateMainFabDrawable
    832:858:void visibilitySetup(boolean,boolean,boolean) -> visibilitySetup
com.leinardi.android.speeddial.SpeedDialView$1 -> com.leinardi.android.speeddial.SpeedDialView$1:
    100:100:void <init>(com.leinardi.android.speeddial.SpeedDialView) -> <init>
    103:110:boolean onActionSelected(com.leinardi.android.speeddial.SpeedDialActionItem) -> onActionSelected
com.leinardi.android.speeddial.SpeedDialView$2 -> com.leinardi.android.speeddial.SpeedDialView$2:
    191:191:void <init>(com.leinardi.android.speeddial.SpeedDialView,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    220:223:void onHidden(android.support.design.widget.FloatingActionButton) -> onHidden
    196:216:void onShown(android.support.design.widget.FloatingActionButton) -> onShown
com.leinardi.android.speeddial.SpeedDialView$3 -> com.leinardi.android.speeddial.SpeedDialView$3:
    237:237:void <init>(com.leinardi.android.speeddial.SpeedDialView,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener) -> <init>
    248:253:void onHidden(android.support.design.widget.FloatingActionButton) -> onHidden
    240:244:void onShown(android.support.design.widget.FloatingActionButton) -> onShown
com.leinardi.android.speeddial.SpeedDialView$4 -> com.leinardi.android.speeddial.SpeedDialView$4:
    273:273:void <init>(com.leinardi.android.speeddial.SpeedDialView) -> <init>
    276:277:void onClick(android.view.View) -> onClick
com.leinardi.android.speeddial.SpeedDialView$5 -> com.leinardi.android.speeddial.SpeedDialView$5:
    731:731:void <init>(com.leinardi.android.speeddial.SpeedDialView) -> <init>
    734:741:void onClick(android.view.View) -> onClick
com.leinardi.android.speeddial.SpeedDialView$6 -> com.leinardi.android.speeddial.SpeedDialView$6:
    879:879:void <init>(com.leinardi.android.speeddial.SpeedDialView,android.support.v7.widget.CardView) -> <init>
    882:883:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    891:891:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    887:887:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.leinardi.android.speeddial.SpeedDialView$InstanceState -> com.leinardi.android.speeddial.SpeedDialView$InstanceState:
    980:980:void <clinit>() -> <clinit>
    967:968:void <init>() -> <init>
    970:978:void <init>(android.os.Parcel) -> <init>
    939:939:boolean access$100(com.leinardi.android.speeddial.SpeedDialView$InstanceState) -> access$100
    939:939:boolean access$102(com.leinardi.android.speeddial.SpeedDialView$InstanceState,boolean) -> access$102
    939:939:int access$200(com.leinardi.android.speeddial.SpeedDialView$InstanceState) -> access$200
    939:939:int access$202(com.leinardi.android.speeddial.SpeedDialView$InstanceState,int) -> access$202
    939:939:boolean access$400(com.leinardi.android.speeddial.SpeedDialView$InstanceState) -> access$400
    939:939:boolean access$402(com.leinardi.android.speeddial.SpeedDialView$InstanceState,boolean) -> access$402
    939:939:float access$500(com.leinardi.android.speeddial.SpeedDialView$InstanceState) -> access$500
    939:939:float access$502(com.leinardi.android.speeddial.SpeedDialView$InstanceState,float) -> access$502
    939:939:int access$600(com.leinardi.android.speeddial.SpeedDialView$InstanceState) -> access$600
    939:939:int access$602(com.leinardi.android.speeddial.SpeedDialView$InstanceState,int) -> access$602
    939:939:int access$700(com.leinardi.android.speeddial.SpeedDialView$InstanceState) -> access$700
    939:939:int access$702(com.leinardi.android.speeddial.SpeedDialView$InstanceState,int) -> access$702
    939:939:java.util.ArrayList access$800(com.leinardi.android.speeddial.SpeedDialView$InstanceState) -> access$800
    939:939:java.util.ArrayList access$802(com.leinardi.android.speeddial.SpeedDialView$InstanceState,java.util.ArrayList) -> access$802
    953:953:int describeContents() -> describeContents
    958:965:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.leinardi.android.speeddial.SpeedDialView$InstanceState$1 -> com.leinardi.android.speeddial.SpeedDialView$InstanceState$1:
    980:980:void <init>() -> <init>
    980:980:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    983:983:com.leinardi.android.speeddial.SpeedDialView$InstanceState createFromParcel(android.os.Parcel) -> createFromParcel
    980:980:java.lang.Object[] newArray(int) -> newArray
    988:988:com.leinardi.android.speeddial.SpeedDialView$InstanceState[] newArray(int) -> newArray
com.leinardi.android.speeddial.SpeedDialView$NoBehavior -> com.leinardi.android.speeddial.SpeedDialView$NoBehavior:
    1247:1248:void <init>() -> <init>
    1251:1252:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.leinardi.android.speeddial.SpeedDialView$ScrollingViewSnackbarBehavior -> com.leinardi.android.speeddial.SpeedDialView$ScrollingViewSnackbarBehavior:
    1206:1207:void <init>() -> <init>
    1210:1211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1221:1229:boolean layoutDependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    1235:1243:void onNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    1216:1216:boolean onStartNestedScroll(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
com.leinardi.android.speeddial.SpeedDialView$SnackbarBehavior -> com.leinardi.android.speeddial.SpeedDialView$SnackbarBehavior:
    1009:1011:void <init>() -> <init>
    1014:1021:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1172:1177:int getMinimumHeightForVisibleOverlappingContent(android.support.design.widget.AppBarLayout) -> getMinimumHeightForVisibleOverlappingContent
    1114:1121:void hide(android.view.View) -> hide
    1024:1029:boolean isBottomSheet(android.view.View) -> isBottomSheet
    1055:1060:void onAttachedToLayoutParams(android.support.design.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    1065:1072:boolean onDependentViewChanged(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    1079:1095:boolean onLayoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    1124:1142:boolean shouldUpdateVisibility(android.view.View,android.view.View) -> shouldUpdateVisibility
    1104:1111:void show(android.view.View) -> show
    1147:1168:boolean updateFabVisibilityForAppBarLayout(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,android.view.View) -> updateFabVisibilityForAppBarLayout
    1183:1193:boolean updateFabVisibilityForBottomSheet(android.view.View,android.view.View) -> updateFabVisibilityForBottomSheet
com.leinardi.android.speeddial.UiUtils -> com.leinardi.android.speeddial.UiUtils:
    73:74:int dpToPx(android.content.Context,float) -> dpToPx
    128:133:void enlargeAnim(android.view.View,long) -> enlargeAnim
    110:119:void fadeInAnim(android.view.View) -> fadeInAnim
    87:102:void fadeOutAnim(android.view.View) -> fadeOutAnim
    61:69:int getAccentColor(android.content.Context) -> getAccentColor
    48:56:int getPrimaryColor(android.content.Context) -> getPrimaryColor
    227:231:android.graphics.drawable.Drawable getRotateDrawable(android.graphics.drawable.Drawable,float) -> getRotateDrawable
    291:299:void performTap(android.view.View) -> performTap
    217:224:void rotateBackward(android.view.View,boolean) -> rotateBackward
    200:207:void rotateForward(android.view.View,float,boolean) -> rotateForward
    142:161:void shrinkAnim(android.view.View,long) -> shrinkAnim
    170:190:void shrinkAnim(android.view.View,boolean) -> shrinkAnim
com.leinardi.android.speeddial.UiUtils$1 -> com.leinardi.android.speeddial.UiUtils$1:
    95:95:void <init>(android.view.View) -> <init>
    98:99:void run() -> run
com.leinardi.android.speeddial.UiUtils$2 -> com.leinardi.android.speeddial.UiUtils$2:
    146:146:void <init>(android.view.View) -> <init>
    149:150:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    158:158:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    154:154:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.leinardi.android.speeddial.UiUtils$3 -> com.leinardi.android.speeddial.UiUtils$3:
    176:176:void <init>(boolean,android.view.View) -> <init>
    179:187:void run() -> run
com.leinardi.android.speeddial.UiUtils$4 -> com.leinardi.android.speeddial.UiUtils$4:
    231:231:void <init>(android.graphics.drawable.Drawable[],float,android.graphics.drawable.Drawable) -> <init>
    234:238:void draw(android.graphics.Canvas) -> draw
com.leinardi.android.speeddial.UiUtils$5 -> com.leinardi.android.speeddial.UiUtils$5:
    292:292:void <init>(android.view.View) -> <init>
    295:297:void run() -> run
com.leinardi.android.speeddial.ViewGroupUtils -> com.leinardi.android.speeddial.ViewGroupUtils:
    27:28:void <clinit>() -> <clinit>
    72:74:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    77:89:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    43:62:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
com.makeramen.roundedimageview.R$styleable -> com.makeramen.roundedimageview.R$styleable:
    52:52:void <clinit>() -> <clinit>
com.makeramen.roundedimageview.RoundedDrawable -> com.makeramen.roundedimageview.RoundedDrawable:
    73:89:void <init>(android.graphics.Bitmap) -> <init>
    622:625:boolean all(boolean[]) -> all
    615:618:boolean any(boolean[]) -> any
    273:308:void draw(android.graphics.Canvas) -> draw
    126:144:android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable) -> drawableToBitmap
    92:95:com.makeramen.roundedimageview.RoundedDrawable fromBitmap(android.graphics.Bitmap) -> fromBitmap
    100:122:android.graphics.drawable.Drawable fromDrawable(android.graphics.drawable.Drawable) -> fromDrawable
    392:392:int getAlpha() -> getAlpha
    403:403:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    431:431:int getIntrinsicHeight() -> getIntrinsicHeight
    426:426:int getIntrinsicWidth() -> getIntrinsicWidth
    387:387:int getOpacity() -> getOpacity
    153:153:boolean isStateful() -> isStateful
    264:269:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    158:163:boolean onStateChange(int[]) -> onStateChange
    311:345:void redrawBitmapForSquareCorners(android.graphics.Canvas) -> redrawBitmapForSquareCorners
    348:383:void redrawBorderForSquareCorners(android.graphics.Canvas) -> redrawBorderForSquareCorners
    397:399:void setAlpha(int) -> setAlpha
    550:552:com.makeramen.roundedimageview.RoundedDrawable setBorderColor(android.content.res.ColorStateList) -> setBorderColor
    532:534:com.makeramen.roundedimageview.RoundedDrawable setBorderWidth(float) -> setBorderWidth
    408:410:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    498:507:com.makeramen.roundedimageview.RoundedDrawable setCornerRadius(float,float,float,float) -> setCornerRadius
    414:416:void setDither(boolean) -> setDither
    420:422:void setFilterBitmap(boolean) -> setFilterBitmap
    560:561:com.makeramen.roundedimageview.RoundedDrawable setOval(boolean) -> setOval
    569:576:com.makeramen.roundedimageview.RoundedDrawable setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    584:589:com.makeramen.roundedimageview.RoundedDrawable setTileModeX(android.graphics.Shader$TileMode) -> setTileModeX
    597:602:com.makeramen.roundedimageview.RoundedDrawable setTileModeY(android.graphics.Shader$TileMode) -> setTileModeY
    172:260:void updateShaderMatrix() -> updateShaderMatrix
com.makeramen.roundedimageview.RoundedDrawable$1 -> com.makeramen.roundedimageview.RoundedDrawable$1:
    172:172:void <clinit>() -> <clinit>
com.makeramen.roundedimageview.RoundedImageView -> com.makeramen.roundedimageview.RoundedImageView:
    38:51:void <clinit>() -> <clinit>
    82:83:void <init>(android.content.Context) -> <init>
    86:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    90:176:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    344:353:void applyColorMod() -> applyColorMod
    193:195:void drawableStateChanged() -> drawableStateChanged
    514:514:int getBorderColor() -> getBorderColor
    522:522:android.content.res.ColorStateList getBorderColors() -> getBorderColors
    496:496:float getBorderWidth() -> getBorderWidth
    398:398:float getCornerRadius() -> getCornerRadius
    405:409:float getMaxCornerRadius() -> getMaxCornerRadius
    199:199:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    549:549:android.graphics.Shader$TileMode getTileModeX() -> getTileModeX
    562:562:android.graphics.Shader$TileMode getTileModeY() -> getTileModeY
    179:181:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
    300:314:android.graphics.drawable.Drawable resolveBackgroundResource() -> resolveBackgroundResource
    262:276:android.graphics.drawable.Drawable resolveResource() -> resolveResource
    281:282:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    295:297:void setBackgroundColor(int) -> setBackgroundColor
    388:392:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    286:291:void setBackgroundResource(int) -> setBackgroundResource
    518:519:void setBorderColor(int) -> setBorderColor
    526:535:void setBorderColor(android.content.res.ColorStateList) -> setBorderColor
    500:501:void setBorderWidth(int) -> setBorderWidth
    504:510:void setBorderWidth(float) -> setBorderWidth
    331:338:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    448:449:void setCornerRadius(float) -> setCornerRadius
    478:493:void setCornerRadius(float,float,float,float) -> setCornerRadius
    428:430:void setCornerRadiusDimen(int) -> setCornerRadiusDimen
    240:244:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    232:236:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    248:254:void setImageResource(int) -> setImageResource
    257:259:void setImageURI(android.net.Uri) -> setImageURI
    542:546:void setOval(boolean) -> setOval
    204:228:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    553:559:void setTileModeX(android.graphics.Shader$TileMode) -> setTileModeX
    566:572:void setTileModeY(android.graphics.Shader$TileMode) -> setTileModeY
    356:383:void updateAttrs(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType) -> updateAttrs
    322:328:void updateBackgroundDrawableAttrs(boolean) -> updateBackgroundDrawableAttrs
    318:319:void updateDrawableAttrs() -> updateDrawableAttrs
com.makeramen.roundedimageview.RoundedImageView$1 -> com.makeramen.roundedimageview.RoundedImageView$1:
    209:209:void <clinit>() -> <clinit>
com.ru.astron.Config -> com.ru.astron.Config:
    37:150:void <clinit>() -> <clinit>
    32:32:boolean multipleEncryptionChoices() -> multipleEncryptionChoices
    28:28:boolean supportOmemo() -> supportOmemo
    24:24:boolean supportOpenPgp() -> supportOpenPgp
    20:20:boolean supportUnencrypted() -> supportUnencrypted
com.ru.astron.Config$OMEMO_EXCEPTIONS -> com.ru.astron.Config$OMEMO_EXCEPTIONS:
    161:165:void <clinit>() -> <clinit>
com.ru.astron.DataBinderMapperImpl -> com.ru.astron.DataBinderMapperImpl:
    123:160:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    417:419:java.util.List collectDependencies() -> collectDependencies
    164:380:android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int) -> getDataBinder
    385:386:android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View[],int) -> getDataBinder
com.ru.astron.R$styleable -> com.ru.astron.R$styleable:
    8336:21040:void <clinit>() -> <clinit>
com.ru.astron.android.AbstractPhoneContact -> com.ru.astron.android.AbstractPhoneContact:
    15:21:void <init>(android.database.Cursor) -> <init>
    28:28:java.lang.String getDisplayName() -> getDisplayName
    24:24:android.net.Uri getLookupUri() -> getLookupUri
    32:32:java.lang.String getPhotoUri() -> getPhotoUri
    37:37:int rating() -> rating
com.ru.astron.android.JabberIdContact -> com.ru.astron.android.JabberIdContact:
    23:27:void <init>(android.database.Cursor) -> <init>
    32:32:rocks.xmpp.addr.Jid getJid() -> getJid
    36:54:java.util.Map load(android.content.Context) -> load
com.ru.astron.crypto.OmemoSetting -> com.ru.astron.crypto.OmemoSetting:
    43:44:void <clinit>() -> <clinit>
    51:51:int getEncryption() -> getEncryption
    47:47:boolean isAlways() -> isAlways
    55:71:void load(android.content.Context,android.content.SharedPreferences) -> load
    74:75:void load(android.content.Context) -> load
com.ru.astron.crypto.PgpDecryptionService -> com.ru.astron.crypto.PgpDecryptionService:
    41:43:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    30:30:com.ru.astron.entities.Message access$000(com.ru.astron.crypto.PgpDecryptionService) -> access$000
    30:30:void access$100(com.ru.astron.crypto.PgpDecryptionService,com.ru.astron.entities.Message) -> access$100
    112:111:void continueDecryption(boolean) -> continueDecryption
    119:118:void continueDecryption(android.content.Intent) -> continueDecryption
    125:124:void continueDecryption() -> continueDecryption
    46:45:boolean decrypt(com.ru.astron.entities.Message,boolean) -> decrypt
    58:57:void decrypt(java.util.List) -> decrypt
    98:97:void decryptNext() -> decryptNext
    67:66:void discard(java.util.List) -> discard
    72:71:void discard(com.ru.astron.entities.Message) -> discard
    138:237:void executeApi(com.ru.astron.entities.Message) -> executeApi
    131:130:org.openintents.openpgp.util.OpenPgpApi getOpenPgpApi() -> getOpenPgpApi
    268:268:android.app.PendingIntent getPendingIntent() -> getPendingIntent
    78:87:void giveUpCurrentDecryption() -> giveUpCurrentDecryption
    255:254:boolean hasPendingIntent(com.ru.astron.entities.Conversation) -> hasPendingIntent
    272:272:boolean isConnected() -> isConnected
    217:217:void lambda$executeApi$0(com.ru.astron.entities.Message) -> lambda$executeApi$0$PgpDecryptionService
    244:243:void notifyIfPending(com.ru.astron.entities.Message) -> notifyIfPending
    250:252:void storePendingIntent(android.app.PendingIntent) -> storePendingIntent
com.ru.astron.crypto.PgpDecryptionService$1 -> com.ru.astron.crypto.PgpDecryptionService$1:
    101:101:void <init>(com.ru.astron.crypto.PgpDecryptionService) -> <init>
    104:106:void run() -> run
com.ru.astron.crypto.PgpEngine -> com.ru.astron.crypto.PgpEngine:
    36:39:void <init>(org.openintents.openpgp.util.OpenPgpApi,com.ru.astron.services.XmppConnectionService) -> <init>
    32:32:void access$000(com.ru.astron.entities.Account,org.openintents.openpgp.OpenPgpError) -> access$000
    194:209:void chooseKey(com.ru.astron.entities.Account,com.ru.astron.ui.UiCallback) -> chooseKey
    51:147:void encrypt(com.ru.astron.entities.Message,com.ru.astron.ui.UiCallback) -> encrypt
    150:151:long fetchKeyId(com.ru.astron.entities.Account,java.lang.String,java.lang.String) -> fetchKeyId
    212:263:void generateSignature(android.content.Intent,com.ru.astron.entities.Account,java.lang.String,com.ru.astron.ui.UiCallback) -> generateSignature
    289:293:android.app.PendingIntent getIntentForKey(long) -> getIntentForKey
    266:286:void hasKey(com.ru.astron.entities.Contact,com.ru.astron.ui.UiCallback) -> hasKey
    197:208:void lambda$chooseKey$2(com.ru.astron.ui.UiCallback,com.ru.astron.entities.Account,android.content.Intent) -> lambda$chooseKey$2
    75:111:void lambda$encrypt$0(java.io.OutputStream,com.ru.astron.entities.Message,com.ru.astron.ui.UiCallback,com.ru.astron.entities.Conversation,android.content.Intent) -> lambda$encrypt$0$PgpEngine
    123:142:void lambda$encrypt$1(java.io.OutputStream,com.ru.astron.entities.Message,com.ru.astron.ui.UiCallback,com.ru.astron.entities.Conversation,android.content.Intent) -> lambda$encrypt$1$PgpEngine
    223:262:void lambda$generateSignature$3(java.io.OutputStream,com.ru.astron.ui.UiCallback,java.lang.String,com.ru.astron.entities.Account,android.content.Intent) -> lambda$generateSignature$3
    42:48:void logError(com.ru.astron.entities.Account,org.openintents.openpgp.OpenPgpError) -> logError
com.ru.astron.crypto.PgpEngine$1 -> com.ru.astron.crypto.PgpEngine$1:
    269:269:void <init>(com.ru.astron.crypto.PgpEngine,com.ru.astron.ui.UiCallback,com.ru.astron.entities.Contact) -> <init>
    273:284:void onReturn(android.content.Intent) -> onReturn
com.ru.astron.crypto.XmppDomainVerifier -> com.ru.astron.crypto.XmppDomainVerifier:
    28:28:void <init>() -> <init>
    36:45:java.util.List getCommonNames(java.security.cert.X509Certificate) -> getCommonNames
    161:164:boolean isSelfSigned(java.security.cert.X509Certificate) -> isSelfSigned
    74:96:boolean matchDomain(java.lang.String,java.util.List) -> matchDomain
    51:69:android.util.Pair parseOtherName(byte[]) -> parseOtherName
    102:155:boolean verify(java.lang.String,java.lang.String,javax.net.ssl.SSLSession) -> verify
    170:170:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.ru.astron.crypto.axolotl.AxolotlService -> com.ru.astron.crypto.axolotl.AxolotlService:
    297:299:void <init>(com.ru.astron.entities.Account,com.ru.astron.services.XmppConnectionService) -> <init>
    58:58:com.ru.astron.services.XmppConnectionService access$100(com.ru.astron.crypto.axolotl.AxolotlService) -> access$100
    58:58:com.ru.astron.entities.Account access$1100(com.ru.astron.crypto.axolotl.AxolotlService) -> access$1100
    58:58:java.util.Map access$1200(com.ru.astron.crypto.axolotl.AxolotlService) -> access$1200
    58:58:boolean access$1300(com.ru.astron.crypto.axolotl.AxolotlService,com.ru.astron.crypto.axolotl.XmppAxolotlMessage,com.ru.astron.entities.Conversation) -> access$1300
    58:58:com.ru.astron.crypto.axolotl.XmppAxolotlSession access$1400(com.ru.astron.crypto.axolotl.AxolotlService,org.whispersystems.libsignal.SignalProtocolAddress) -> access$1400
    58:58:void access$1500(com.ru.astron.crypto.axolotl.AxolotlService,com.ru.astron.crypto.axolotl.XmppAxolotlSession) -> access$1500
    58:58:void access$200(com.ru.astron.crypto.axolotl.AxolotlService,java.util.Set,boolean) -> access$200
    58:58:java.util.concurrent.atomic.AtomicBoolean access$300(com.ru.astron.crypto.axolotl.AxolotlService) -> access$300
    58:58:boolean access$402(com.ru.astron.crypto.axolotl.AxolotlService,boolean) -> access$402
    58:58:void access$500(com.ru.astron.crypto.axolotl.AxolotlService,org.whispersystems.libsignal.state.SignedPreKeyRecord,java.util.Set,boolean,boolean) -> access$500
    58:58:com.ru.astron.crypto.axolotl.SQLiteAxolotlStore access$600(com.ru.astron.crypto.axolotl.AxolotlService) -> access$600
    58:58:void access$700(com.ru.astron.crypto.axolotl.AxolotlService) -> access$700
    58:58:void access$800(com.ru.astron.crypto.axolotl.AxolotlService,org.whispersystems.libsignal.state.SignedPreKeyRecord,java.util.Set,boolean,boolean,boolean) -> access$800
    343:348:boolean anyTargetHasNoTrustedKeys(java.util.List) -> anyTargetHasNoTrustedKeys
    1278:1291:boolean buildHeader(com.ru.astron.crypto.axolotl.XmppAxolotlMessage,com.ru.astron.entities.Conversation) -> buildHeader
    1296:1308:boolean buildHeader(com.ru.astron.crypto.axolotl.XmppAxolotlMessage,rocks.xmpp.addr.Jid) -> buildHeader
    1048:1049:void buildSessionFromPEP(org.whispersystems.libsignal.SignalProtocolAddress) -> buildSessionFromPEP
    1052:1054:void buildSessionFromPEP(org.whispersystems.libsignal.SignalProtocolAddress,com.ru.astron.crypto.axolotl.AxolotlService$OnSessionBuildFromPep) -> buildSessionFromPEP
    398:400:void clearErrorsInFetchStatusMap(rocks.xmpp.addr.Jid) -> clearErrorsInFetchStatusMap
    1494:1501:void completeSession(com.ru.astron.crypto.axolotl.XmppAxolotlSession) -> completeSession
    1206:1218:boolean createSessionsIfNeeded(com.ru.astron.entities.Conversation) -> createSessionsIfNeeded
    1223:1240:boolean createSessionsIfNeededActual(com.ru.astron.entities.Conversation) -> createSessionsIfNeededActual
    412:414:void destroy() -> destroy
    513:516:void distrustFingerprint(java.lang.String) -> distrustFingerprint
    1313:1324:com.ru.astron.crypto.axolotl.XmppAxolotlMessage encrypt(com.ru.astron.entities.Message) -> encrypt
    1368:1375:com.ru.astron.crypto.axolotl.XmppAxolotlMessage fetchAxolotlMessageFromCache(com.ru.astron.entities.Message) -> fetchAxolotlMessageFromCache
    967:968:void fetchDeviceIds(rocks.xmpp.addr.Jid) -> fetchDeviceIds
    972:989:void fetchDeviceIds(rocks.xmpp.addr.Jid,com.ru.astron.crypto.axolotl.AxolotlService$OnDeviceIdsFetched) -> fetchDeviceIds
    1027:1039:void fetchDeviceIds(java.util.List,com.ru.astron.crypto.axolotl.AxolotlService$OnMultipleDeviceIdFetched) -> fetchDeviceIds
    118:128:boolean fetchMapHasErrors(java.util.List) -> fetchMapHasErrors
    335:335:java.util.Set findCounterpartsBySourceId(int) -> findCounterpartsBySourceId
    1154:1202:java.util.Set findDevicesWithoutSession(com.ru.astron.entities.Conversation) -> findDevicesWithoutSession
    356:359:java.util.Collection findOwnSessions() -> findOwnSessions
    364:367:java.util.Collection findSessionsForContact(com.ru.astron.entities.Contact) -> findSessionsForContact
    371:379:java.util.Set findSessionsForConversation(com.ru.astron.entities.Conversation) -> findSessionsForConversation
    922:952:void finishBuildingSessionsFromPEP(org.whispersystems.libsignal.SignalProtocolAddress) -> finishBuildingSessionsFromPEP
    352:352:org.whispersystems.libsignal.SignalProtocolAddress getAddressForJid(rocks.xmpp.addr.Jid) -> getAddressForJid
    844:850:java.util.List getCryptoTargets(com.ru.astron.entities.Conversation) -> getCryptoTargets
    541:558:java.util.Set getExpiredDevices() -> getExpiredDevices
    854:854:com.ru.astron.crypto.axolotl.FingerprintStatus getFingerprintTrust(java.lang.String) -> getFingerprintTrust
    319:319:java.util.Set getKeysWithTrust(com.ru.astron.crypto.axolotl.FingerprintStatus) -> getKeysWithTrust
    323:323:java.util.Set getKeysWithTrust(com.ru.astron.crypto.axolotl.FingerprintStatus,rocks.xmpp.addr.Jid) -> getKeysWithTrust
    327:331:java.util.Set getKeysWithTrust(com.ru.astron.crypto.axolotl.FingerprintStatus,java.util.List) -> getKeysWithTrust
    294:294:java.lang.String getLogprefix(com.ru.astron.entities.Account) -> getLogprefix
    339:339:long getNumTrustedKeys(rocks.xmpp.addr.Jid) -> getNumTrustedKeys
    426:426:org.whispersystems.libsignal.SignalProtocolAddress getOwnAxolotlAddress() -> getOwnAxolotlAddress
    422:422:int getOwnDeviceId() -> getOwnDeviceId
    430:430:java.util.Set getOwnDeviceIds() -> getOwnDeviceIds
    315:315:java.lang.String getOwnFingerprint() -> getOwnFingerprint
    1386:1387:com.ru.astron.crypto.axolotl.XmppAxolotlSession getReceivingSession(com.ru.astron.crypto.axolotl.XmppAxolotlMessage) -> getReceivingSession
    1392:1400:com.ru.astron.crypto.axolotl.XmppAxolotlSession getReceivingSession(org.whispersystems.libsignal.SignalProtocolAddress) -> getReceivingSession
    383:383:boolean hasAny(rocks.xmpp.addr.Jid) -> hasAny
    955:955:boolean hasEmptyDeviceList(rocks.xmpp.addr.Jid) -> hasEmptyDeviceList
    104:105:boolean hasErrorFetchingDeviceList(rocks.xmpp.addr.Jid) -> hasErrorFetchingDeviceList
    109:114:boolean hasErrorFetchingDeviceList(java.util.List) -> hasErrorFetchingDeviceList
    1261:1272:boolean hasPendingKeyFetches(java.util.List) -> hasPendingKeyFetches
    140:145:boolean hasVerifiedKeys(java.lang.String) -> hasVerifiedKeys
    387:387:boolean isPepBroken() -> isPepBroken
    1061:1142:void lambda$buildSessionFromPEP$2(org.whispersystems.libsignal.SignalProtocolAddress,com.ru.astron.crypto.axolotl.AxolotlService$OnSessionBuildFromPep,boolean,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$buildSessionFromPEP$2$AxolotlService
    1215:1215:void lambda$createSessionsIfNeeded$3(com.ru.astron.entities.Conversation) -> lambda$createSessionsIfNeeded$3$AxolotlService
    992:1015:void lambda$fetchDeviceIds$0(rocks.xmpp.addr.Jid,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$fetchDeviceIds$0$AxolotlService
    1031:1036:void lambda$fetchDeviceIds$1(java.util.ArrayList,com.ru.astron.crypto.axolotl.AxolotlService$OnMultipleDeviceIdFetched,rocks.xmpp.addr.Jid,java.util.Set) -> lambda$fetchDeviceIds$1
    417:418:com.ru.astron.crypto.axolotl.AxolotlService makeNew() -> makeNew
    1443:1460:void notifyRequiresHealing(org.whispersystems.libsignal.SignalProtocolAddress) -> notifyRequiresHealing
    94:101:void onAdvancedStreamFeaturesAvailable(com.ru.astron.entities.Account) -> onAdvancedStreamFeaturesAvailable
    1463:1473:void postPreKeyMessageHandling(com.ru.astron.crypto.axolotl.XmppAxolotlSession,boolean) -> postPreKeyMessageHandling
    132:133:void preVerifyFingerprint(com.ru.astron.entities.Contact,java.lang.String) -> preVerifyFingerprint
    136:137:void preVerifyFingerprint(com.ru.astron.entities.Account,java.lang.String) -> preVerifyFingerprint
    1354:1365:void prepareKeyTransportMessage(com.ru.astron.entities.Conversation,com.ru.astron.crypto.axolotl.OnMessageCreatedCallback) -> prepareKeyTransportMessage
    1337:1351:void preparePayloadMessage(com.ru.astron.entities.Message,boolean) -> preparePayloadMessage
    1476:1491:void processPostponed() -> processPostponed
    1509:1525:com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlKeyTransportMessage processReceivingKeyTransportMessage(com.ru.astron.crypto.axolotl.XmppAxolotlMessage,boolean) -> processReceivingKeyTransportMessage
    1404:1418:com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage processReceivingPayloadMessage(com.ru.astron.crypto.axolotl.XmppAxolotlMessage,boolean) -> processReceivingPayloadMessage
    664:785:void publishBundlesIfNeeded(boolean,boolean) -> publishBundlesIfNeeded
    791:792:void publishDeviceBundle(org.whispersystems.libsignal.state.SignedPreKeyRecord,java.util.Set,boolean,boolean) -> publishDeviceBundle
    799:840:void publishDeviceBundle(org.whispersystems.libsignal.state.SignedPreKeyRecord,java.util.Set,boolean,boolean,boolean) -> publishDeviceBundle
    581:582:void publishDeviceIdsAndRefineAccessModel(java.util.Set) -> publishDeviceIdsAndRefineAccessModel
    585:623:void publishDeviceIdsAndRefineAccessModel(java.util.Set,boolean) -> publishDeviceIdsAndRefineAccessModel
    562:578:void publishOwnDeviceId(java.util.Set) -> publishOwnDeviceId
    519:538:void publishOwnDeviceIdIfNeeded() -> publishOwnDeviceIdIfNeeded
    1529:1538:void putFreshSession(com.ru.astron.crypto.axolotl.XmppAxolotlSession) -> putFreshSession
    1379:1380:com.ru.astron.crypto.axolotl.XmppAxolotlSession recreateUncachedSession(org.whispersystems.libsignal.SignalProtocolAddress) -> recreateUncachedSession
    403:409:void regenerateKeys(boolean) -> regenerateKeys
    434:500:void registerDevices(rocks.xmpp.addr.Jid,java.util.Set) -> registerDevices
    1146:1151:void removeFromDeviceAnnouncement(java.lang.Integer) -> removeFromDeviceAnnouncement
    1434:1440:void reportBrokenSessionException(com.ru.astron.crypto.axolotl.BrokenSessionException,boolean) -> reportBrokenSessionException
    391:395:void resetBrokenness() -> resetBrokenness
    862:863:void setFingerprintTrust(java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> setFingerprintTrust
    1244:1257:boolean trustedSessionVerified(com.ru.astron.entities.Conversation) -> trustedSessionVerified
    503:510:void wipeOtherPepDevices() -> wipeOtherPepDevices
com.ru.astron.crypto.axolotl.AxolotlService$1 -> com.ru.astron.crypto.axolotl.AxolotlService$1:
    524:524:void <init>(com.ru.astron.crypto.axolotl.AxolotlService) -> <init>
    527:536:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.crypto.axolotl.AxolotlService$2 -> com.ru.astron.crypto.axolotl.AxolotlService$2:
    587:587:void <init>(com.ru.astron.crypto.axolotl.AxolotlService,boolean,android.os.Bundle,java.util.Set) -> <init>
    590:621:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.crypto.axolotl.AxolotlService$2$1 -> com.ru.astron.crypto.axolotl.AxolotlService$2$1:
    594:594:void <init>(com.ru.astron.crypto.axolotl.AxolotlService$2) -> <init>
    602:603:void onPushFailed() -> onPushFailed
    597:598:void onPushSucceeded() -> onPushSucceeded
com.ru.astron.crypto.axolotl.AxolotlService$4 -> com.ru.astron.crypto.axolotl.AxolotlService$4:
    681:681:void <init>(com.ru.astron.crypto.axolotl.AxolotlService,boolean,boolean) -> <init>
    685:783:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.crypto.axolotl.AxolotlService$5 -> com.ru.astron.crypto.axolotl.AxolotlService$5:
    804:804:void <init>(com.ru.astron.crypto.axolotl.AxolotlService,boolean,android.os.Bundle,org.whispersystems.libsignal.state.SignedPreKeyRecord,java.util.Set,boolean,boolean) -> <init>
    807:838:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.crypto.axolotl.AxolotlService$5$1 -> com.ru.astron.crypto.axolotl.AxolotlService$5$1:
    811:811:void <init>(com.ru.astron.crypto.axolotl.AxolotlService$5) -> <init>
    819:820:void onPushFailed() -> onPushFailed
    814:815:void onPushSucceeded() -> onPushSucceeded
com.ru.astron.crypto.axolotl.AxolotlService$7 -> com.ru.astron.crypto.axolotl.AxolotlService$7:
    1337:1337:void <init>(com.ru.astron.crypto.axolotl.AxolotlService,com.ru.astron.entities.Message,boolean) -> <init>
    1340:1349:void run() -> run
com.ru.astron.crypto.axolotl.AxolotlService$8 -> com.ru.astron.crypto.axolotl.AxolotlService$8:
    1354:1354:void <init>(com.ru.astron.crypto.axolotl.AxolotlService,com.ru.astron.entities.Conversation,com.ru.astron.crypto.axolotl.OnMessageCreatedCallback) -> <init>
    1357:1363:void run() -> run
com.ru.astron.crypto.axolotl.AxolotlService$9 -> com.ru.astron.crypto.axolotl.AxolotlService$9:
    1445:1445:void <init>(com.ru.astron.crypto.axolotl.AxolotlService,org.whispersystems.libsignal.SignalProtocolAddress) -> <init>
    1454:1455:void onSessionBuildFailed() -> onSessionBuildFailed
    1448:1450:void onSessionBuildSuccessful() -> onSessionBuildSuccessful
com.ru.astron.crypto.axolotl.AxolotlService$AxolotlAddressMap -> com.ru.astron.crypto.axolotl.AxolotlService$AxolotlAddressMap:
    152:154:void <init>() -> <init>
    195:196:void clear() -> clear
    168:174:java.lang.Object get(org.whispersystems.libsignal.SignalProtocolAddress) -> get
    178:184:java.util.Map getAll(java.lang.String) -> getAll
    188:191:boolean hasAny(org.whispersystems.libsignal.SignalProtocolAddress) -> hasAny
    157:164:void put(org.whispersystems.libsignal.SignalProtocolAddress,java.lang.Object) -> put
com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus -> com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus:
    267:266:void <clinit>() -> <clinit>
    266:266:void <init>(java.lang.String,int) -> <init>
    266:266:com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus valueOf(java.lang.String) -> valueOf
    266:266:com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus[] values() -> values
com.ru.astron.crypto.axolotl.AxolotlService$FetchStatusMap -> com.ru.astron.crypto.axolotl.AxolotlService$FetchStatusMap:
    275:275:void <init>() -> <init>
    275:275:void <init>(com.ru.astron.crypto.axolotl.AxolotlService$1) -> <init>
    278:289:void clearErrorFor(rocks.xmpp.addr.Jid) -> clearErrorFor
com.ru.astron.crypto.axolotl.AxolotlService$SessionMap -> com.ru.astron.crypto.axolotl.AxolotlService$SessionMap:
    205:209:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.crypto.axolotl.SQLiteAxolotlStore,com.ru.astron.entities.Account) -> <init>
    247:253:void fillMap(com.ru.astron.crypto.axolotl.SQLiteAxolotlStore) -> fillMap
    212:220:java.util.Set findCounterpartsForSourceId(java.lang.Integer) -> findCounterpartsForSourceId
    257:259:void put(org.whispersystems.libsignal.SignalProtocolAddress,com.ru.astron.crypto.axolotl.XmppAxolotlSession) -> put
    262:263:void put(com.ru.astron.crypto.axolotl.XmppAxolotlSession) -> put
    225:244:void putDevicesForJid(java.lang.String,java.util.List,com.ru.astron.crypto.axolotl.SQLiteAxolotlStore) -> putDevicesForJid
com.ru.astron.crypto.axolotl.BrokenSessionException -> com.ru.astron.crypto.axolotl.BrokenSessionException:
    10:13:void <init>(org.whispersystems.libsignal.SignalProtocolAddress,java.lang.Exception) -> <init>
    16:16:org.whispersystems.libsignal.SignalProtocolAddress getSignalProtocolAddress() -> getSignalProtocolAddress
com.ru.astron.crypto.axolotl.CryptoFailedException -> com.ru.astron.crypto.axolotl.CryptoFailedException:
    6:7:void <init>(java.lang.String) -> <init>
    10:11:void <init>(java.lang.String,java.lang.Exception) -> <init>
    14:15:void <init>(java.lang.Exception) -> <init>
com.ru.astron.crypto.axolotl.FingerprintStatus -> com.ru.astron.crypto.axolotl.FingerprintStatus:
    31:34:void <init>() -> <init>
    6:6:int compareTo(java.lang.Object) -> compareTo
    156:167:int compareTo(com.ru.astron.crypto.axolotl.FingerprintStatus) -> compareTo
    82:82:com.ru.astron.crypto.axolotl.FingerprintStatus createActive(java.lang.Boolean) -> createActive
    86:89:com.ru.astron.crypto.axolotl.FingerprintStatus createActive(boolean) -> createActive
    67:71:com.ru.astron.crypto.axolotl.FingerprintStatus createActiveTrusted() -> createActiveTrusted
    59:63:com.ru.astron.crypto.axolotl.FingerprintStatus createActiveUndecided() -> createActiveUndecided
    75:78:com.ru.astron.crypto.axolotl.FingerprintStatus createActiveVerified(boolean) -> createActiveVerified
    148:151:com.ru.astron.crypto.axolotl.FingerprintStatus createInactiveVerified() -> createInactiveVerified
    16:17:boolean equals(java.lang.Object) -> equals
    47:55:com.ru.astron.crypto.axolotl.FingerprintStatus fromCursor(android.database.Cursor) -> fromCursor
    172:172:long getLastActivation() -> getLastActivation
    130:130:com.ru.astron.crypto.axolotl.FingerprintStatus$Trust getTrust() -> getTrust
    26:28:int hashCode() -> hashCode
    109:109:boolean isActive() -> isActive
    105:105:boolean isCompromised() -> isCompromised
    97:97:boolean isTrusted() -> isTrusted
    93:93:boolean isTrustedAndActive() -> isTrustedAndActive
    101:101:boolean isVerified() -> isVerified
    113:119:com.ru.astron.crypto.axolotl.FingerprintStatus toActive() -> toActive
    37:43:android.content.ContentValues toContentValues() -> toContentValues
    123:126:com.ru.astron.crypto.axolotl.FingerprintStatus toInactive() -> toInactive
    141:144:com.ru.astron.crypto.axolotl.FingerprintStatus toUntrusted() -> toUntrusted
    134:137:com.ru.astron.crypto.axolotl.FingerprintStatus toVerified() -> toVerified
com.ru.astron.crypto.axolotl.FingerprintStatus$Trust -> com.ru.astron.crypto.axolotl.FingerprintStatus$Trust:
    176:175:void <clinit>() -> <clinit>
    175:175:void <init>(java.lang.String,int) -> <init>
    175:175:com.ru.astron.crypto.axolotl.FingerprintStatus$Trust valueOf(java.lang.String) -> valueOf
    175:175:com.ru.astron.crypto.axolotl.FingerprintStatus$Trust[] values() -> values
com.ru.astron.crypto.axolotl.NotEncryptedForThisDeviceException -> com.ru.astron.crypto.axolotl.NotEncryptedForThisDeviceException:
    35:36:void <init>() -> <init>
com.ru.astron.crypto.axolotl.SQLiteAxolotlStore -> com.ru.astron.crypto.axolotl.SQLiteAxolotlStore:
    81:86:void <init>(com.ru.astron.entities.Account,com.ru.astron.services.XmppConnectionService) -> <init>
    28:28:com.ru.astron.entities.Account access$000(com.ru.astron.crypto.axolotl.SQLiteAxolotlStore) -> access$000
    28:28:com.ru.astron.services.XmppConnectionService access$100(com.ru.astron.crypto.axolotl.SQLiteAxolotlStore) -> access$100
    312:312:boolean containsSession(org.whispersystems.libsignal.SignalProtocolAddress) -> containsSession
    399:406:boolean flushPreKeys() -> flushPreKeys
    70:72:org.whispersystems.libsignal.IdentityKeyPair generateIdentityKeyPair() -> generateIdentityKeyPair
    77:78:int generateRegistrationId() -> generateRegistrationId
    247:247:java.util.Set getContactKeysWithTrust(java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> getContactKeysWithTrust
    251:251:long getContactNumTrustedKeys(java.lang.String) -> getContactNumTrustedKeys
    89:89:int getCurrentPreKeyId() -> getCurrentPreKeyId
    230:230:com.ru.astron.crypto.axolotl.FingerprintStatus getFingerprintStatus(java.lang.String) -> getFingerprintStatus
    162:165:org.whispersystems.libsignal.IdentityKeyPair getIdentityKeyPair() -> getIdentityKeyPair
    291:291:java.util.List getKnownAddresses() -> getKnownAddresses
    178:178:int getLocalRegistrationId() -> getLocalRegistrationId
    441:441:int getSignedPreKeysCount() -> getSignedPreKeysCount
    285:285:java.util.List getSubDeviceSessions(java.lang.String) -> getSubDeviceSessions
    226:226:boolean isTrustedIdentity(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.state.IdentityKeyStore$Direction) -> isTrustedIdentity
    134:142:int loadCurrentPreKeyId() -> loadCurrentPreKeyId
    97:108:org.whispersystems.libsignal.IdentityKeyPair loadIdentityKeyPair() -> loadIdentityKeyPair
    350:352:org.whispersystems.libsignal.state.PreKeyRecord loadPreKey(int) -> loadPreKey
    112:112:int loadRegistrationId() -> loadRegistrationId
    116:130:int loadRegistrationId(boolean) -> loadRegistrationId
    273:274:org.whispersystems.libsignal.state.SessionRecord loadSession(org.whispersystems.libsignal.SignalProtocolAddress) -> loadSession
    423:425:org.whispersystems.libsignal.state.SignedPreKeyRecord loadSignedPreKey(int) -> loadSignedPreKey
    475:476:void preVerifyFingerprint(com.ru.astron.entities.Account,java.lang.String,java.lang.String) -> preVerifyFingerprint
    146:153:void regenerate() -> regenerate
    391:394:void removePreKey(int) -> removePreKey
    192:208:boolean saveIdentity(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.IdentityKey) -> saveIdentity
    234:236:void setFingerprintStatus(java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> setFingerprintStatus
    365:373:void storePreKey(int,org.whispersystems.libsignal.state.PreKeyRecord) -> storePreKey
    301:302:void storeSession(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.state.SessionRecord) -> storeSession
    452:453:void storeSignedPreKey(int,org.whispersystems.libsignal.state.SignedPreKeyRecord) -> storeSignedPreKey
com.ru.astron.crypto.axolotl.SQLiteAxolotlStore$1 -> com.ru.astron.crypto.axolotl.SQLiteAxolotlStore$1:
    62:62:void <init>(com.ru.astron.crypto.axolotl.SQLiteAxolotlStore,int) -> <init>
    62:62:java.lang.Object create(java.lang.Object) -> create
    65:65:com.ru.astron.crypto.axolotl.FingerprintStatus create(java.lang.String) -> create
com.ru.astron.crypto.axolotl.XmppAxolotlMessage -> com.ru.astron.crypto.axolotl.XmppAxolotlMessage:
    104:110:void <init>(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid) -> <init>
    143:149:void <init>(rocks.xmpp.addr.Jid,int) -> <init>
    224:225:void addDevice(com.ru.astron.crypto.axolotl.XmppAxolotlSession) -> addDevice
    229:237:void addDevice(com.ru.astron.crypto.axolotl.XmppAxolotlSession,boolean) -> addDevice
    286:317:com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(com.ru.astron.crypto.axolotl.XmppAxolotlSession,java.lang.Integer) -> decrypt
    179:195:void encrypt(java.lang.String) -> encrypt
    152:152:com.ru.astron.crypto.axolotl.XmppAxolotlMessage fromElement(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid) -> fromElement
    167:170:byte[] generateIv() -> generateIv
    157:162:byte[] generateKey() -> generateKey
    216:216:rocks.xmpp.addr.Jid getFrom() -> getFrom
    244:244:byte[] getIV() -> getIV
    240:240:byte[] getInnerKey() -> getInnerKey
    282:282:com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlKeyTransportMessage getParameters(com.ru.astron.crypto.axolotl.XmppAxolotlSession,java.lang.Integer) -> getParameters
    220:220:int getSenderDeviceId() -> getSenderDeviceId
    174:174:boolean hasPayload() -> hasPayload
    93:95:int parseSourceId(com.ru.astron.xml.Element) -> parseSourceId
    248:265:com.ru.astron.xml.Element toElement() -> toElement
    269:276:byte[] unpackKey(com.ru.astron.crypto.axolotl.XmppAxolotlSession,java.lang.Integer) -> unpackKey
com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlKeyTransportMessage -> com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlKeyTransportMessage:
    73:77:void <init>(java.lang.String,byte[],byte[]) -> <init>
    80:80:java.lang.String getFingerprint() -> getFingerprint
    88:88:byte[] getIv() -> getIv
    84:84:byte[] getKey() -> getKey
com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage -> com.ru.astron.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage:
    53:56:void <init>(java.lang.String,java.lang.String) -> <init>
    64:64:java.lang.String getFingerprint() -> getFingerprint
    59:59:java.lang.String getPlaintext() -> getPlaintext
com.ru.astron.crypto.axolotl.XmppAxolotlSession -> com.ru.astron.crypto.axolotl.XmppAxolotlSession:
    40:42:void <init>(com.ru.astron.entities.Account,com.ru.astron.crypto.axolotl.SQLiteAxolotlStore,org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.IdentityKey) -> <init>
    44:49:void <init>(com.ru.astron.entities.Account,com.ru.astron.crypto.axolotl.SQLiteAxolotlStore,org.whispersystems.libsignal.SignalProtocolAddress) -> <init>
    30:30:int compareTo(java.lang.Object) -> compareTo
    169:169:int compareTo(com.ru.astron.crypto.axolotl.XmppAxolotlSession) -> compareTo
    164:164:com.ru.astron.entities.Account getAccount() -> getAccount
    58:58:java.lang.String getFingerprint() -> getFingerprint
    52:54:java.lang.Integer getPreKeyIdAndReset() -> getPreKeyIdAndReset
    66:66:org.whispersystems.libsignal.SignalProtocolAddress getRemoteAddress() -> getRemoteAddress
    82:83:com.ru.astron.crypto.axolotl.FingerprintStatus getTrust() -> getTrust
    70:70:boolean isFresh() -> isFresh
    88:143:byte[] processReceiving(java.util.List) -> processReceiving
    150:156:com.ru.astron.crypto.axolotl.XmppAxolotlSession$AxolotlKey processSending(byte[],boolean) -> processSending
    74:75:void setNotFresh() -> setNotFresh
    78:79:void setTrust(com.ru.astron.crypto.axolotl.FingerprintStatus) -> setTrust
com.ru.astron.crypto.axolotl.XmppAxolotlSession$AxolotlKey -> com.ru.astron.crypto.axolotl.XmppAxolotlSession$AxolotlKey:
    179:183:void <init>(int,byte[],boolean) -> <init>
com.ru.astron.crypto.sasl.Anonymous -> com.ru.astron.crypto.sasl.Anonymous:
    11:12:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account,java.security.SecureRandom) -> <init>
    26:26:java.lang.String getClientFirstMessage() -> getClientFirstMessage
    21:21:java.lang.String getMechanism() -> getMechanism
    16:16:int getPriority() -> getPriority
com.ru.astron.crypto.sasl.DigestMd5 -> com.ru.astron.crypto.sasl.DigestMd5:
    16:17:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account,java.security.SecureRandom) -> <init>
    26:26:java.lang.String getMechanism() -> getMechanism
    21:21:int getPriority() -> getPriority
    33:74:java.lang.String getResponse(java.lang.String) -> getResponse
com.ru.astron.crypto.sasl.DigestMd5$1 -> com.ru.astron.crypto.sasl.DigestMd5$1:
    33:33:void <clinit>() -> <clinit>
com.ru.astron.crypto.sasl.External -> com.ru.astron.crypto.sasl.External:
    12:13:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account,java.security.SecureRandom) -> <init>
    27:27:java.lang.String getClientFirstMessage() -> getClientFirstMessage
    22:22:java.lang.String getMechanism() -> getMechanism
    17:17:int getPriority() -> getPriority
com.ru.astron.crypto.sasl.Plain -> com.ru.astron.crypto.sasl.Plain:
    12:13:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account) -> <init>
    27:27:java.lang.String getClientFirstMessage() -> getClientFirstMessage
    22:22:java.lang.String getMechanism() -> getMechanism
    31:32:java.lang.String getMessage(java.lang.String,java.lang.String) -> getMessage
    17:17:int getPriority() -> getPriority
com.ru.astron.crypto.sasl.SaslMechanism -> com.ru.astron.crypto.sasl.SaslMechanism:
    45:49:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account,java.security.SecureRandom) -> <init>
    61:61:java.lang.String getClientFirstMessage() -> getClientFirstMessage
    64:64:java.lang.String getResponse(java.lang.String) -> getResponse
com.ru.astron.crypto.sasl.SaslMechanism$AuthenticationException -> com.ru.astron.crypto.sasl.SaslMechanism$AuthenticationException:
    23:24:void <init>(java.lang.String) -> <init>
    27:28:void <init>(java.lang.Exception) -> <init>
    31:32:void <init>(java.lang.String,java.lang.Exception) -> <init>
com.ru.astron.crypto.sasl.SaslMechanism$InvalidStateException -> com.ru.astron.crypto.sasl.SaslMechanism$InvalidStateException:
    37:38:void <init>(java.lang.String) -> <init>
    41:42:void <init>(com.ru.astron.crypto.sasl.SaslMechanism$State) -> <init>
com.ru.astron.crypto.sasl.SaslMechanism$State -> com.ru.astron.crypto.sasl.SaslMechanism$State:
    15:14:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    14:14:com.ru.astron.crypto.sasl.SaslMechanism$State valueOf(java.lang.String) -> valueOf
    14:14:com.ru.astron.crypto.sasl.SaslMechanism$State[] values() -> values
com.ru.astron.crypto.sasl.ScramMechanism -> com.ru.astron.crypto.sasl.ScramMechanism:
    24:50:void <clinit>() -> <clinit>
    58:63:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account,java.security.SecureRandom) -> <init>
    21:21:byte[] access$000(byte[],byte[],int) -> access$000
    21:21:byte[] access$100() -> access$100
    21:21:byte[] access$200(byte[],byte[]) -> access$200
    21:21:byte[] access$300() -> access$300
    75:74:byte[] digest(byte[]) -> digest
    102:107:java.lang.String getClientFirstMessage() -> getClientFirstMessage
    114:117:java.lang.String getResponse(java.lang.String) -> getResponse
    89:88:byte[] hi(byte[],byte[],int) -> hi
    67:66:byte[] hmac(byte[],byte[]) -> hmac
com.ru.astron.crypto.sasl.ScramMechanism$1 -> com.ru.astron.crypto.sasl.ScramMechanism$1:
    31:31:void <init>(int) -> <init>
    31:31:java.lang.Object create(java.lang.Object) -> create
    36:46:com.ru.astron.crypto.sasl.ScramMechanism$KeyPair create(java.lang.String) -> create
com.ru.astron.crypto.sasl.ScramMechanism$2 -> com.ru.astron.crypto.sasl.ScramMechanism$2:
    114:114:void <clinit>() -> <clinit>
com.ru.astron.crypto.sasl.ScramMechanism$KeyPair -> com.ru.astron.crypto.sasl.ScramMechanism$KeyPair:
    227:230:void <init>(byte[],byte[]) -> <init>
com.ru.astron.crypto.sasl.ScramSha1 -> com.ru.astron.crypto.sasl.ScramSha1:
    13:15:void <clinit>() -> <clinit>
    18:19:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account,java.security.SecureRandom) -> <init>
    11:11:java.lang.String getClientFirstMessage() -> getClientFirstMessage
    28:28:java.lang.String getMechanism() -> getMechanism
    23:23:int getPriority() -> getPriority
    11:11:java.lang.String getResponse(java.lang.String) -> getResponse
com.ru.astron.crypto.sasl.ScramSha256 -> com.ru.astron.crypto.sasl.ScramSha256:
    13:15:void <clinit>() -> <clinit>
    18:19:void <init>(com.ru.astron.xml.TagWriter,com.ru.astron.entities.Account,java.security.SecureRandom) -> <init>
    11:11:java.lang.String getClientFirstMessage() -> getClientFirstMessage
    28:28:java.lang.String getMechanism() -> getMechanism
    23:23:int getPriority() -> getPriority
    11:11:java.lang.String getResponse(java.lang.String) -> getResponse
com.ru.astron.crypto.sasl.Tokenizer -> com.ru.astron.crypto.sasl.Tokenizer:
    16:24:void <init>(byte[]) -> <init>
    33:33:boolean hasNext() -> hasNext
    76:76:java.util.Iterator iterator() -> iterator
    12:12:java.lang.Object next() -> next
    45:48:java.lang.String next() -> next
    63:64:void remove() -> remove
com.ru.astron.databinding.AccountRowBinding -> com.ru.astron.databinding.AccountRowBinding:
    32:37:void <init>(java.lang.Object,android.view.View,int,com.makeramen.roundedimageview.RoundedImageView,android.widget.TextView,android.widget.TextView,android.support.v7.widget.SwitchCompat) -> <init>
com.ru.astron.databinding.AccountRowBindingImpl -> com.ru.astron.databinding.AccountRowBindingImpl:
    15:21:void <clinit>() -> <clinit>
    31:32:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    34:45:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    80:84:void executeBindings() -> executeBindings
    57:61:boolean hasPendingBindings() -> hasPendingBindings
    49:51:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityChooseContactBinding -> com.ru.astron.databinding.ActivityChooseContactBinding:
    27:31:void <init>(java.lang.Object,android.view.View,int,android.widget.ListView,android.support.design.widget.FloatingActionButton,android.view.View) -> <init>
com.ru.astron.databinding.ActivityChooseContactBindingImpl -> com.ru.astron.databinding.ActivityChooseContactBindingImpl:
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> executeBindings
    55:59:boolean hasPendingBindings() -> hasPendingBindings
    47:49:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityContactDetailsBinding -> com.ru.astron.databinding.ActivityContactDetailsBinding:
    87:107:void <init>(java.lang.Object,android.view.View,int,android.widget.Button,android.widget.TextView,android.widget.QuickContactBadge,android.widget.LinearLayout,android.widget.TextView,android.widget.LinearLayout,android.widget.TextView,android.widget.LinearLayout,android.widget.CheckBox,android.widget.CheckBox,android.support.v7.widget.CardView,android.support.v7.widget.RecyclerView,android.support.v7.widget.CardView,android.widget.Button,android.widget.Button,android.widget.Button,android.widget.TextView,com.wefika.flowlayout.FlowLayout,android.view.View) -> <init>
com.ru.astron.databinding.ActivityContactDetailsBindingImpl -> com.ru.astron.databinding.ActivityContactDetailsBindingImpl:
    15:36:void <clinit>() -> <clinit>
    46:47:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    49:75:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    110:114:void executeBindings() -> executeBindings
    87:91:boolean hasPendingBindings() -> hasPendingBindings
    79:81:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityConversationsBinding -> com.ru.astron.databinding.ActivityConversationsBinding:
    26:30:void <init>(java.lang.Object,android.view.View,int,android.widget.FrameLayout,android.widget.FrameLayout,android.view.View) -> <init>
com.ru.astron.databinding.ActivityConversationsBindingImpl -> com.ru.astron.databinding.ActivityConversationsBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:42:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    77:81:void executeBindings() -> executeBindings
    54:58:boolean hasPendingBindings() -> hasPendingBindings
    46:48:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityConversationsBindingW945dpImpl -> com.ru.astron.databinding.ActivityConversationsBindingW945dpImpl:
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> executeBindings
    55:59:boolean hasPendingBindings() -> hasPendingBindings
    47:49:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityEditAccount2Binding -> com.ru.astron.databinding.ActivityEditAccount2Binding:
    209:264:void <init>(java.lang.Object,android.view.View,int,com.ru.astron.ui.widget.TextInputEditText,android.support.design.widget.TextInputLayout,android.widget.LinearLayout,com.ru.astron.ui.widget.TextInputEditText,android.support.design.widget.TextInputLayout,android.widget.CheckBox,android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton,com.makeramen.roundedimageview.RoundedImageView,android.widget.LinearLayout,android.widget.TextView,android.widget.RelativeLayout,android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.support.v7.widget.CardView,android.widget.EditText,android.support.design.widget.TextInputLayout,android.widget.LinearLayout,android.support.v7.widget.CardView,android.widget.TextView,android.widget.Button,android.widget.TextView,android.widget.LinearLayout,android.support.v7.widget.CardView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.RelativeLayout,android.widget.TextView,android.widget.EditText,android.support.design.widget.TextInputLayout,android.widget.TableRow,android.widget.Button,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TableLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.support.v7.widget.CardView,android.widget.TextView,android.view.View,android.widget.TextView,android.widget.RelativeLayout,android.widget.TextView) -> <init>
com.ru.astron.databinding.ActivityEditAccount2BindingImpl -> com.ru.astron.databinding.ActivityEditAccount2BindingImpl:
    15:71:void <clinit>() -> <clinit>
    81:82:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    84:145:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    180:184:void executeBindings() -> executeBindings
    157:161:boolean hasPendingBindings() -> hasPendingBindings
    149:151:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityEditAccountBinding -> com.ru.astron.databinding.ActivityEditAccountBinding:
    209:264:void <init>(java.lang.Object,android.view.View,int,com.ru.astron.ui.widget.TextInputEditText,android.support.design.widget.TextInputLayout,android.widget.LinearLayout,com.ru.astron.ui.widget.TextInputEditText,android.support.design.widget.TextInputLayout,android.widget.CheckBox,android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton,com.makeramen.roundedimageview.RoundedImageView,android.widget.LinearLayout,android.widget.TextView,android.widget.RelativeLayout,android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.support.v7.widget.CardView,android.widget.EditText,android.support.design.widget.TextInputLayout,android.widget.LinearLayout,android.support.v7.widget.CardView,android.widget.TextView,android.widget.Button,android.widget.TextView,android.widget.LinearLayout,android.support.v7.widget.CardView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.RelativeLayout,android.widget.TextView,android.widget.EditText,android.support.design.widget.TextInputLayout,android.widget.TableRow,android.widget.Button,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TableLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.support.v7.widget.CardView,android.widget.TextView,android.view.View,android.widget.TextView,android.widget.RelativeLayout,android.widget.TextView) -> <init>
com.ru.astron.databinding.ActivityEditAccountBindingImpl -> com.ru.astron.databinding.ActivityEditAccountBindingImpl:
    15:71:void <clinit>() -> <clinit>
    81:82:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    84:145:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    180:184:void executeBindings() -> executeBindings
    157:161:boolean hasPendingBindings() -> hasPendingBindings
    149:151:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityImportBackupBinding -> com.ru.astron.databinding.ActivityImportBackupBinding:
    31:36:void <init>(java.lang.Object,android.view.View,int,android.support.design.widget.CoordinatorLayout,android.widget.LinearLayout,android.support.v7.widget.RecyclerView,android.view.View) -> <init>
com.ru.astron.databinding.ActivityImportBackupBindingImpl -> com.ru.astron.databinding.ActivityImportBackupBindingImpl:
    15:21:void <clinit>() -> <clinit>
    31:32:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    34:45:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    80:84:void executeBindings() -> executeBindings
    57:61:boolean hasPendingBindings() -> hasPendingBindings
    49:51:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityMediaBrowserBinding -> com.ru.astron.databinding.ActivityMediaBrowserBinding:
    23:26:void <init>(java.lang.Object,android.view.View,int,android.support.v7.widget.RecyclerView,android.view.View) -> <init>
com.ru.astron.databinding.ActivityMediaBrowserBindingImpl -> com.ru.astron.databinding.ActivityMediaBrowserBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityMucDetailsBinding -> com.ru.astron.databinding.ActivityMucDetailsBinding:
    125:156:void <init>(java.lang.Object,android.view.View,int,android.widget.ImageButton,android.widget.TextView,android.widget.ImageButton,android.widget.ImageButton,android.widget.Button,android.widget.TextView,android.support.v7.widget.RecyclerView,android.support.v7.widget.CardView,android.widget.TextView,android.widget.LinearLayout,com.ru.astron.ui.widget.EmojiWrapperEditText,com.ru.astron.ui.widget.EmojiWrapperEditText,android.widget.LinearLayout,android.widget.TextView,android.widget.TableLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.RelativeLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.ImageButton,android.widget.TextView,android.widget.Button,android.widget.Button,android.view.View,android.support.v7.widget.RecyclerView,android.support.v7.widget.CardView,com.makeramen.roundedimageview.RoundedImageView) -> <init>
com.ru.astron.databinding.ActivityMucDetailsBindingImpl -> com.ru.astron.databinding.ActivityMucDetailsBindingImpl:
    15:47:void <clinit>() -> <clinit>
    57:58:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    60:97:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    132:136:void executeBindings() -> executeBindings
    109:113:boolean hasPendingBindings() -> hasPendingBindings
    101:103:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityMucUsersBinding -> com.ru.astron.databinding.ActivityMucUsersBinding:
    27:31:void <init>(java.lang.Object,android.view.View,int,android.support.design.widget.CoordinatorLayout,android.support.v7.widget.RecyclerView,android.view.View) -> <init>
com.ru.astron.databinding.ActivityMucUsersBindingImpl -> com.ru.astron.databinding.ActivityMucUsersBindingImpl:
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> executeBindings
    55:59:boolean hasPendingBindings() -> hasPendingBindings
    47:49:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityPublishProfilePictureBinding -> com.ru.astron.databinding.ActivityPublishProfilePictureBinding:
    50:60:void <init>(java.lang.Object,android.view.View,int,android.widget.ImageView,android.widget.FrameLayout,android.widget.LinearLayout,android.widget.Button,android.widget.TextView,android.widget.TextView,android.widget.Button,android.widget.TextView,android.view.View) -> <init>
com.ru.astron.databinding.ActivityPublishProfilePictureBindingImpl -> com.ru.astron.databinding.ActivityPublishProfilePictureBindingImpl:
    15:26:void <clinit>() -> <clinit>
    36:37:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    39:55:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    90:94:void executeBindings() -> executeBindings
    67:71:boolean hasPendingBindings() -> hasPendingBindings
    59:61:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityRecordingBinding -> com.ru.astron.databinding.ActivityRecordingBinding:
    31:36:void <init>(java.lang.Object,android.view.View,int,android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.widget.TextView) -> <init>
com.ru.astron.databinding.ActivityRecordingBindingImpl -> com.ru.astron.databinding.ActivityRecordingBindingImpl:
    15:21:void <clinit>() -> <clinit>
    31:32:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    34:45:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    80:84:void executeBindings() -> executeBindings
    57:61:boolean hasPendingBindings() -> hasPendingBindings
    49:51:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivitySearchBinding -> com.ru.astron.databinding.ActivitySearchBinding:
    23:26:void <init>(java.lang.Object,android.view.View,int,android.widget.ListView,android.view.View) -> <init>
com.ru.astron.databinding.ActivitySearchBindingImpl -> com.ru.astron.databinding.ActivitySearchBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityShareLocationBinding -> com.ru.astron.databinding.ActivityShareLocationBinding:
    43:51:void <init>(java.lang.Object,android.view.View,int,android.widget.LinearLayout,android.widget.Button,android.support.design.widget.FloatingActionButton,org.osmdroid.views.MapView,android.widget.Button,android.support.design.widget.CoordinatorLayout,android.view.View) -> <init>
com.ru.astron.databinding.ActivityShareLocationBindingImpl -> com.ru.astron.databinding.ActivityShareLocationBindingImpl:
    15:24:void <clinit>() -> <clinit>
    34:35:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    37:51:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    86:90:void executeBindings() -> executeBindings
    63:67:boolean hasPendingBindings() -> hasPendingBindings
    55:57:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityShowLocationBinding -> com.ru.astron.databinding.ActivityShowLocationBinding:
    27:31:void <init>(java.lang.Object,android.view.View,int,android.support.design.widget.FloatingActionButton,org.osmdroid.views.MapView,android.view.View) -> <init>
com.ru.astron.databinding.ActivityShowLocationBindingImpl -> com.ru.astron.databinding.ActivityShowLocationBindingImpl:
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> executeBindings
    55:59:boolean hasPendingBindings() -> hasPendingBindings
    47:49:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityStartConversationBinding -> com.ru.astron.databinding.ActivityStartConversationBinding:
    36:42:void <init>(java.lang.Object,android.view.View,int,com.leinardi.android.speeddial.SpeedDialOverlayLayout,com.leinardi.android.speeddial.SpeedDialView,android.support.v4.view.ViewPager,android.support.design.widget.TabLayout,android.view.View) -> <init>
com.ru.astron.databinding.ActivityStartConversationBindingImpl -> com.ru.astron.databinding.ActivityStartConversationBindingImpl:
    15:22:void <clinit>() -> <clinit>
    32:33:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    35:47:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    82:86:void executeBindings() -> executeBindings
    59:63:boolean hasPendingBindings() -> hasPendingBindings
    51:53:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ActivityTrustKeysBinding -> com.ru.astron.databinding.ActivityTrustKeysBinding:
    65:80:void <init>(java.lang.Object,android.view.View,int,android.widget.LinearLayout,android.widget.Button,android.widget.Button,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.support.v7.widget.CardView,android.widget.TextView,android.support.v7.widget.CardView,android.widget.LinearLayout,android.widget.TextView,android.widget.Button,android.view.View) -> <init>
com.ru.astron.databinding.ActivityTrustKeysBindingImpl -> com.ru.astron.databinding.ActivityTrustKeysBindingImpl:
    15:31:void <clinit>() -> <clinit>
    41:42:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    44:65:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    100:104:void executeBindings() -> executeBindings
    77:81:boolean hasPendingBindings() -> hasPendingBindings
    69:71:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ContactBinding -> com.ru.astron.databinding.ContactBinding:
    35:41:void <init>(java.lang.Object,android.view.View,int,android.widget.TextView,android.widget.TextView,com.makeramen.roundedimageview.RoundedImageView,android.widget.TextView,com.wefika.flowlayout.FlowLayout) -> <init>
com.ru.astron.databinding.ContactBindingImpl -> com.ru.astron.databinding.ContactBindingImpl:
    15:22:void <clinit>() -> <clinit>
    32:33:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    35:47:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    82:86:void executeBindings() -> executeBindings
    59:63:boolean hasPendingBindings() -> hasPendingBindings
    51:53:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ContactKeyBinding -> com.ru.astron.databinding.ContactKeyBinding:
    43:51:void <init>(java.lang.Object,android.view.View,int,android.widget.LinearLayout,android.widget.ImageButton,android.widget.ImageButton,android.widget.TextView,android.widget.TextView,android.support.v7.widget.SwitchCompat,android.widget.ImageView) -> <init>
com.ru.astron.databinding.ContactKeyBindingImpl -> com.ru.astron.databinding.ContactKeyBindingImpl:
    15:24:void <clinit>() -> <clinit>
    34:35:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    37:51:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    86:90:void executeBindings() -> executeBindings
    63:67:boolean hasPendingBindings() -> hasPendingBindings
    55:57:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.ConversationListRowBinding -> com.ru.astron.databinding.ConversationListRowBinding:
    60:72:void <init>(java.lang.Object,android.view.View,int,com.makeramen.roundedimageview.RoundedImageView,android.widget.TextView,android.widget.ImageView,android.widget.TextView,android.widget.RelativeLayout,android.widget.TextView,android.widget.FrameLayout,android.widget.ImageView,android.widget.TextView,android.widget.LinearLayout,com.ru.astron.ui.widget.UnreadCountCustomView) -> <init>
com.ru.astron.databinding.ConversationListRowBindingImpl -> com.ru.astron.databinding.ConversationListRowBindingImpl:
    15:28:void <clinit>() -> <clinit>
    38:39:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    41:59:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    94:98:void executeBindings() -> executeBindings
    71:75:boolean hasPendingBindings() -> hasPendingBindings
    63:65:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.CreateConferenceDialogBinding -> com.ru.astron.databinding.CreateConferenceDialogBinding:
    24:27:void <init>(java.lang.Object,android.view.View,int,android.widget.Spinner,com.ru.astron.ui.widget.EmojiWrapperEditText) -> <init>
com.ru.astron.databinding.CreateConferenceDialogBindingImpl -> com.ru.astron.databinding.CreateConferenceDialogBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.CreatePublicChannelDialogBinding -> com.ru.astron.databinding.CreatePublicChannelDialogBinding:
    36:42:void <init>(java.lang.Object,android.view.View,int,android.widget.Spinner,com.ru.astron.ui.widget.EmojiWrapperEditText,android.widget.AutoCompleteTextView,android.support.design.widget.TextInputLayout,android.support.design.widget.TextInputLayout) -> <init>
com.ru.astron.databinding.CreatePublicChannelDialogBindingImpl -> com.ru.astron.databinding.CreatePublicChannelDialogBindingImpl:
    15:22:void <clinit>() -> <clinit>
    32:33:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    35:47:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    82:86:void executeBindings() -> executeBindings
    59:63:boolean hasPendingBindings() -> hasPendingBindings
    51:53:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.DialogBlockContactBinding -> com.ru.astron.databinding.DialogBlockContactBinding:
    24:27:void <init>(java.lang.Object,android.view.View,int,android.widget.CheckBox,android.widget.TextView) -> <init>
com.ru.astron.databinding.DialogBlockContactBindingImpl -> com.ru.astron.databinding.DialogBlockContactBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.DialogEnterPasswordBinding -> com.ru.astron.databinding.DialogEnterPasswordBinding:
    28:32:void <init>(java.lang.Object,android.view.View,int,com.ru.astron.ui.widget.TextInputEditText,android.support.design.widget.TextInputLayout,android.widget.TextView) -> <init>
com.ru.astron.databinding.DialogEnterPasswordBindingImpl -> com.ru.astron.databinding.DialogEnterPasswordBindingImpl:
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> executeBindings
    55:59:boolean hasPendingBindings() -> hasPendingBindings
    47:49:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.DialogJoinConferenceBinding -> com.ru.astron.databinding.DialogJoinConferenceBinding:
    33:38:void <init>(java.lang.Object,android.view.View,int,android.widget.Spinner,android.support.design.widget.TextInputLayout,android.widget.CheckBox,android.widget.AutoCompleteTextView) -> <init>
com.ru.astron.databinding.DialogJoinConferenceBindingImpl -> com.ru.astron.databinding.DialogJoinConferenceBindingImpl:
    15:21:void <clinit>() -> <clinit>
    31:32:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    34:45:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    80:84:void executeBindings() -> executeBindings
    57:61:boolean hasPendingBindings() -> hasPendingBindings
    49:51:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.DialogPresenceBinding -> com.ru.astron.databinding.DialogPresenceBinding:
    38:45:void <init>(java.lang.Object,android.view.View,int,android.widget.RadioButton,android.widget.RadioButton,android.widget.RadioButton,android.widget.RadioGroup,com.ru.astron.ui.widget.ImmediateAutoCompleteTextView,android.widget.RadioButton) -> <init>
com.ru.astron.databinding.DialogPresenceBindingImpl -> com.ru.astron.databinding.DialogPresenceBindingImpl:
    15:23:void <clinit>() -> <clinit>
    33:34:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    36:49:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    84:88:void executeBindings() -> executeBindings
    61:65:boolean hasPendingBindings() -> hasPendingBindings
    53:55:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.DialogQuickeditBinding -> com.ru.astron.databinding.DialogQuickeditBinding:
    24:27:void <init>(java.lang.Object,android.view.View,int,com.ru.astron.ui.widget.EmojiWrapperEditText,android.support.design.widget.TextInputLayout) -> <init>
com.ru.astron.databinding.DialogQuickeditBindingImpl -> com.ru.astron.databinding.DialogQuickeditBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.EnterJidDialogBinding -> com.ru.astron.databinding.EnterJidDialogBinding:
    28:32:void <init>(java.lang.Object,android.view.View,int,android.widget.Spinner,android.support.design.widget.TextInputLayout,android.widget.AutoCompleteTextView) -> <init>
com.ru.astron.databinding.EnterJidDialogBindingImpl -> com.ru.astron.databinding.EnterJidDialogBindingImpl:
    15:20:void <clinit>() -> <clinit>
    30:31:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    33:43:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    78:82:void executeBindings() -> executeBindings
    55:59:boolean hasPendingBindings() -> hasPendingBindings
    47:49:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.FragmentConversationBinding -> com.ru.astron.databinding.FragmentConversationBinding:
    57:68:void <init>(java.lang.Object,android.view.View,int,android.support.v7.widget.RecyclerView,android.widget.ListView,android.support.design.widget.FloatingActionButton,android.widget.RelativeLayout,android.widget.TextView,android.widget.TextView,android.widget.ImageButton,com.ru.astron.ui.widget.EditMessage,android.widget.RelativeLayout,com.ru.astron.ui.widget.UnreadCountCustomView) -> <init>
com.ru.astron.databinding.FragmentConversationBindingImpl -> com.ru.astron.databinding.FragmentConversationBindingImpl:
    15:27:void <clinit>() -> <clinit>
    37:38:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    40:57:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    92:96:void executeBindings() -> executeBindings
    69:73:boolean hasPendingBindings() -> hasPendingBindings
    61:63:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.FragmentConversationsOverviewBinding -> com.ru.astron.databinding.FragmentConversationsOverviewBinding:
    24:27:void <init>(java.lang.Object,android.view.View,int,android.support.design.widget.FloatingActionButton,android.support.v7.widget.RecyclerView) -> <init>
com.ru.astron.databinding.FragmentConversationsOverviewBindingImpl -> com.ru.astron.databinding.FragmentConversationsOverviewBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.KeysCardBinding -> com.ru.astron.databinding.KeysCardBinding:
    32:37:void <init>(java.lang.Object,android.view.View,int,android.support.v7.widget.CardView,android.widget.LinearLayout,android.widget.TextView,android.widget.TextView) -> <init>
com.ru.astron.databinding.KeysCardBindingImpl -> com.ru.astron.databinding.KeysCardBindingImpl:
    15:20:void <clinit>() -> <clinit>
    28:29:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    31:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.MediaBinding -> com.ru.astron.databinding.MediaBinding:
    20:22:void <init>(java.lang.Object,android.view.View,int,android.widget.ImageView) -> <init>
com.ru.astron.databinding.MediaBindingImpl -> com.ru.astron.databinding.MediaBindingImpl:
    15:18:void <clinit>() -> <clinit>
    28:29:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    31:39:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    74:78:void executeBindings() -> executeBindings
    51:55:boolean hasPendingBindings() -> hasPendingBindings
    43:45:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.MediaPreviewBinding -> com.ru.astron.databinding.MediaPreviewBinding:
    24:27:void <init>(java.lang.Object,android.view.View,int,android.widget.ImageButton,android.widget.ImageView) -> <init>
com.ru.astron.databinding.MediaPreviewBindingImpl -> com.ru.astron.databinding.MediaPreviewBindingImpl:
    15:19:void <clinit>() -> <clinit>
    29:30:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    32:41:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    76:80:void executeBindings() -> executeBindings
    53:57:boolean hasPendingBindings() -> hasPendingBindings
    45:47:void invalidateAll() -> invalidateAll
com.ru.astron.databinding.UserPreviewBinding -> com.ru.astron.databinding.UserPreviewBinding:
    20:22:void <init>(java.lang.Object,android.view.View,int,android.widget.ImageView) -> <init>
com.ru.astron.databinding.UserPreviewBindingImpl -> com.ru.astron.databinding.UserPreviewBindingImpl:
    15:18:void <clinit>() -> <clinit>
    28:29:void <init>(android.databinding.DataBindingComponent,android.view.View) -> <init>
    31:39:void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[]) -> <init>
    74:78:void executeBindings() -> executeBindings
    51:55:boolean hasPendingBindings() -> hasPendingBindings
    43:45:void invalidateAll() -> invalidateAll
com.ru.astron.entities.AbstractEntity -> com.ru.astron.entities.AbstractEntity:
    5:5:void <init>() -> <init>
    12:12:java.lang.String getUuid() -> getUuid
com.ru.astron.entities.Account -> com.ru.astron.entities.Account:
    90:92:void <init>(rocks.xmpp.addr.Jid,java.lang.String) -> <init>
    97:116:void <init>(java.lang.String,rocks.xmpp.addr.Jid,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,com.ru.astron.entities.Presence$Status,java.lang.String) -> <init>
    516:519:void activateGracePeriod(long) -> activateGracePeriod
    577:578:void clearBlocklist() -> clearBlocklist
    420:420:int countPresences() -> countPresences
    522:523:void deactivateGracePeriod() -> deactivateGracePeriod
    286:286:boolean errorStatus() -> errorStatus
    121:128:com.ru.astron.entities.Account fromCursor(android.database.Cursor) -> fromCursor
    512:512:java.lang.String getAvatar() -> getAvatar
    586:586:int getAvatarBackgroundColor() -> getAvatarBackgroundColor
    384:384:com.ru.astron.crypto.axolotl.AxolotlService getAxolotlService() -> getAxolotlService
    573:573:java.util.Collection getBlocklist() -> getBlocklist
    494:499:com.ru.astron.entities.Bookmark getBookmark(rocks.xmpp.addr.Jid) -> getBookmark
    479:486:java.util.Set getBookmarkedJids() -> getBookmarkedJids
    471:471:java.util.List getBookmarks() -> getBookmarks
    363:371:android.content.ContentValues getContentValues() -> getContentValues
    153:153:java.lang.String getDisplayName() -> getDisplayName
    550:560:java.util.List getFingerprints() -> getFingerprints
    242:242:java.lang.String getHostname() -> getHostname
    320:320:rocks.xmpp.addr.Jid getJid() -> getJid
    328:330:java.lang.String getKey(java.lang.String) -> getKey
    334:338:int getKeyAsInt(java.lang.String,int) -> getKeyAsInt
    271:271:com.ru.astron.entities.Account$State getLastErrorStatus() -> getLastErrorStatus
    234:234:java.lang.String getPassword() -> getPassword
    396:396:com.ru.astron.crypto.PgpDecryptionService getPgpDecryptionService() -> getPgpDecryptionService
    438:448:long getPgpId() -> getPgpId
    424:424:java.lang.String getPgpSignature() -> getPgpSignature
    255:255:int getPort() -> getPort
    296:296:com.ru.astron.entities.Presence$Status getPresenceStatus() -> getPresenceStatus
    304:304:java.lang.String getPresenceStatusMessage() -> getPresenceStatusMessage
    358:358:java.lang.String getPrivateKeyAlias() -> getPrivateKeyAlias
    312:312:java.lang.String getResource() -> getResource
    467:467:com.ru.astron.entities.Roster getRoster() -> getRoster
    408:411:java.lang.String getRosterVersion() -> getRosterVersion
    169:169:com.ru.astron.entities.Contact getSelfContact() -> getSelfContact
    230:230:java.lang.String getServer() -> getServer
    161:164:com.ru.astron.xmpp.XmppConnection$Identity getServerIdentity() -> getServerIdentity
    540:545:java.lang.String getShareableLink() -> getShareableLink
    530:535:java.lang.String getShareableUri() -> getShareableUri
    263:266:com.ru.astron.entities.Account$State getStatus() -> getStatus
    282:282:com.ru.astron.entities.Account$State getTrueStatus() -> getTrueStatus
    210:210:java.lang.String getUsername() -> getUsername
    400:400:com.ru.astron.xmpp.XmppConnection getXmppConnection() -> getXmppConnection
    490:490:boolean hasBookmarkFor(rocks.xmpp.addr.Jid) -> hasBookmarkFor
    290:290:boolean hasErrorStatus() -> hasErrorStatus
    173:173:boolean hasPendingPgpIntent(com.ru.astron.entities.Conversation) -> hasPendingPgpIntent
    145:145:boolean httpUploadAvailable(long) -> httpUploadAvailable
    149:149:boolean httpUploadAvailable() -> httpUploadAvailable
    526:526:boolean inGracePeriod() -> inGracePeriod
    388:393:void initAccountServices(com.ru.astron.services.XmppConnectionService) -> initAccountServices
    564:565:boolean isBlocked(com.ru.astron.entities.ListItem) -> isBlocked
    569:569:boolean isBlocked(rocks.xmpp.addr.Jid) -> isBlocked
    192:192:boolean isEnabled() -> isEnabled
    250:251:boolean isOnion() -> isOnion
    581:581:boolean isOnlineAndConnected() -> isOnlineAndConnected
    196:196:boolean isOptionSet(int) -> isOptionSet
    177:177:boolean isPgpDecryptionServiceConnected() -> isPgpDecryptionServiceConnected
    503:507:boolean setAvatar(java.lang.String) -> setAvatar
    475:476:void setBookmarks(java.util.concurrent.CopyOnWriteArrayList) -> setBookmarks
    157:158:void setDisplayName(java.lang.String) -> setDisplayName
    246:247:void setHostname(java.lang.String) -> setHostname
    214:226:boolean setJid(rocks.xmpp.addr.Jid) -> setJid
    343:350:boolean setKey(java.lang.String,java.lang.String) -> setKey
    200:206:boolean setOption(int,boolean) -> setOption
    238:239:void setPassword(java.lang.String) -> setPassword
    452:463:boolean setPgpSignId(long) -> setPgpSignId
    428:428:boolean setPgpSignature(java.lang.String) -> setPgpSignature
    259:260:void setPort(int) -> setPort
    300:301:void setPresenceStatus(com.ru.astron.entities.Presence$Status) -> setPresenceStatus
    308:309:void setPresenceStatusMessage(java.lang.String) -> setPresenceStatusMessage
    354:354:boolean setPrivateKeyAlias(java.lang.String) -> setPrivateKeyAlias
    316:317:void setResource(java.lang.String) -> setResource
    416:417:void setRosterVersion(java.lang.String) -> setRosterVersion
    181:183:boolean setShowErrorNotification(boolean) -> setShowErrorNotification
    275:279:void setStatus(com.ru.astron.entities.Account$State) -> setStatus
    404:405:void setXmppConnection(com.ru.astron.xmpp.XmppConnection) -> setXmppConnection
    187:188:boolean showErrorNotification() -> showErrorNotification
    432:434:boolean unsetPgpSignature() -> unsetPgpSignature
com.ru.astron.entities.Account$1 -> com.ru.astron.entities.Account$1:
    642:642:void <clinit>() -> <clinit>
com.ru.astron.entities.Account$State -> com.ru.astron.entities.Account$State:
    590:589:void <clinit>() -> <clinit>
    621:622:void <init>(java.lang.String,int,boolean) -> <init>
    624:627:void <init>(java.lang.String,int,boolean,boolean) -> <init>
    630:631:void <init>(java.lang.String,int) -> <init>
    589:589:boolean access$000(com.ru.astron.entities.Account$State) -> access$000
    642:644:int getReadableId() -> getReadableId
    638:638:boolean isAttemptReconnect() -> isAttemptReconnect
    634:634:boolean isError() -> isError
    589:589:com.ru.astron.entities.Account$State valueOf(java.lang.String) -> valueOf
    589:589:com.ru.astron.entities.Account$State[] values() -> values
com.ru.astron.entities.Bookmark -> com.ru.astron.entities.Bookmark:
    25:29:void <init>(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid) -> <init>
    32:34:void <init>(com.ru.astron.entities.Account) -> <init>
    115:115:boolean autojoin() -> autojoin
    18:18:int compareTo(java.lang.Object) -> compareTo
    54:54:int compareTo(com.ru.astron.entities.ListItem) -> compareTo
    152:152:com.ru.astron.entities.Account getAccount() -> getAccount
    187:187:int getAvatarBackgroundColor() -> getAvatarBackgroundColor
    172:172:java.lang.String getBookmarkName() -> getBookmarkName
    156:156:com.ru.astron.entities.Conversation getConversation() -> getConversation
    60:68:java.lang.String getDisplayName() -> getDisplayName
    86:87:rocks.xmpp.addr.Jid getFullJid() -> getFullJid
    82:82:rocks.xmpp.addr.Jid getJid() -> getJid
    103:103:java.lang.String getNick() -> getNick
    119:119:java.lang.String getPassword() -> getPassword
    92:99:java.util.List getTags(android.content.Context) -> getTags
    131:136:boolean match(android.content.Context,java.lang.String) -> match
    142:148:boolean matchInTag(android.content.Context,java.lang.String) -> matchInTag
    37:41:com.ru.astron.entities.Bookmark parse(com.ru.astron.xml.Element,com.ru.astron.entities.Account) -> parse
    73:73:boolean printableValue(java.lang.String,boolean) -> printableValue
    77:77:boolean printableValue(java.lang.String) -> printableValue
    45:50:void setAutojoin(boolean) -> setAutojoin
    176:182:boolean setBookmarkName(java.lang.String) -> setBookmarkName
    160:159:void setConversation(com.ru.astron.entities.Conversation) -> setConversation
    107:112:void setNick(java.lang.String) -> setNick
    123:127:void setPassword(java.lang.String) -> setPassword
com.ru.astron.entities.Contact -> com.ru.astron.entities.Contact:
    68:95:void <init>(java.lang.String,java.lang.String,java.lang.String,rocks.xmpp.addr.Jid,int,java.lang.String,android.net.Uri,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> <init>
    97:100:void <init>(rocks.xmpp.addr.Jid) -> <init>
    396:404:com.ru.astron.xml.Element asElement() -> asElement
    241:243:void clearPresences() -> clearPresences
    31:31:int compareTo(java.lang.Object) -> compareTo
    409:409:int compareTo(com.ru.astron.entities.ListItem) -> compareTo
    477:478:void flagActive() -> flagActive
    481:482:void flagInactive() -> flagInactive
    105:108:com.ru.astron.entities.Contact fromCursor(android.database.Cursor) -> fromCursor
    220:220:com.ru.astron.entities.Account getAccount() -> getAccount
    438:438:com.ru.astron.xmpp.pep.Avatar getAvatar() -> getAvatar
    542:542:int getAvatarBackgroundColor() -> getAvatarBackgroundColor
    434:434:java.lang.String getAvatarFilename() -> getAvatarFilename
    457:460:rocks.xmpp.addr.Jid getBlockedJid() -> getBlockedJid
    201:216:android.content.ContentValues getContentValues() -> getContentValues
    133:142:java.lang.String getDisplayName() -> getDisplayName
    286:293:java.util.Collection getGroups(boolean) -> getGroups
    151:151:rocks.xmpp.addr.Jid getJid() -> getJid
    506:506:java.lang.String getLastResource() -> getLastResource
    498:498:long getLastseen() -> getLastseen
    331:331:boolean getOption(int) -> getOption
    533:536:int getOption(java.lang.Class) -> getOption
    297:307:long getPgpKeyId() -> getPgpKeyId
    229:229:com.ru.astron.entities.Presences getPresences() -> getPresences
    147:147:java.lang.String getProfilePhoto() -> getProfilePhoto
    414:414:java.lang.String getServer() -> getServer
    510:510:java.lang.String getServerName() -> getServerName
    246:246:com.ru.astron.entities.Presence$Status getShownStatus() -> getShownStatus
    278:278:android.net.Uri getSystemAccount() -> getSystemAccount
    156:167:java.util.List getTags(android.content.Context) -> getTags
    485:485:boolean isActive() -> isActive
    447:447:boolean isBlocked() -> isBlocked
    452:452:boolean isDomainBlocked() -> isDomainBlocked
    469:469:boolean isOwnServer() -> isOwnServer
    465:465:boolean isSelf() -> isSelf
    171:184:boolean match(android.content.Context,java.lang.String) -> match
    191:197:boolean matchInTag(android.content.Context,java.lang.String) -> matchInTag
    442:442:boolean mutualPresenceSubscription() -> mutualPresenceSubscription
    387:393:void parseGroupsFromElement(com.ru.astron.xml.Element) -> parseGroupsFromElement
    345:384:void parseSubscriptionFromElement(com.ru.astron.xml.Element) -> parseSubscriptionFromElement
    237:238:void removePresence(java.lang.String) -> removePresence
    327:328:void resetOption(int) -> resetOption
    224:226:void setAccount(com.ru.astron.entities.Account) -> setAccount
    418:418:boolean setAvatar(com.ru.astron.xmpp.pep.Avatar) -> setAvatar
    422:429:boolean setAvatar(com.ru.astron.xmpp.pep.Avatar,boolean) -> setAvatar
    502:503:void setLastResource(java.lang.String) -> setLastResource
    489:493:boolean setLastseen(long) -> setLastseen
    323:324:void setOption(int) -> setOption
    311:318:boolean setPgpKeyId(long) -> setPgpKeyId
    514:513:boolean setPhoneContact(com.ru.astron.android.AbstractPhoneContact) -> setPhoneContact
    250:257:boolean setPhotoUri(java.lang.String) -> setPhotoUri
    272:274:boolean setPresenceName(java.lang.String) -> setPresenceName
    262:263:void setServerName(java.lang.String) -> setServerName
    282:283:void setSystemAccount(android.net.Uri) -> setSystemAccount
    266:268:boolean setSystemName(java.lang.String) -> setSystemName
    341:341:boolean showInContactList() -> showInContactList
    335:335:boolean showInRoster() -> showInRoster
    522:521:boolean unsetPhoneContact(java.lang.Class) -> unsetPhoneContact
    233:234:void updatePresence(java.lang.String,com.ru.astron.entities.Presence) -> updatePresence
com.ru.astron.entities.Conversation -> com.ru.astron.entities.Conversation:
    84:88:void <init>(java.lang.String,com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,int) -> <init>
    92:106:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,rocks.xmpp.addr.Jid,long,int,int,java.lang.String) -> <init>
    878:880:void add(com.ru.astron.entities.Message) -> add
    890:892:void addAll(int,java.util.List) -> addAll
    766:766:boolean alwaysNotify() -> alwaysNotify
    231:233:void clearMessages() -> clearMessages
    35:35:int compareTo(java.lang.Object) -> compareTo
    437:437:int compareTo(com.ru.astron.entities.Conversation) -> compareTo
    385:387:int countMessages() -> countMessages
    897:904:void expireOldMessages(long) -> expireOldMessages
    691:697:com.ru.astron.entities.Message findDuplicateMessage(com.ru.astron.entities.Message) -> findDuplicateMessage
    183:191:com.ru.astron.entities.Message findMessageWithFileAndUuid(java.lang.String) -> findMessageWithFileAndUuid
    335:342:com.ru.astron.entities.Message findMessageWithRemoteId(java.lang.String,rocks.xmpp.addr.Jid) -> findMessageWithRemoteId
    306:319:com.ru.astron.entities.Message findMessageWithRemoteIdAndCounterpart(java.lang.String,rocks.xmpp.addr.Jid,boolean,boolean) -> findMessageWithRemoteIdAndCounterpart
    706:722:com.ru.astron.entities.Message findSentMessageWithBody(java.lang.String) -> findSentMessageWithBody
    324:330:com.ru.astron.entities.Message findSentMessageWithUuid(java.lang.String) -> findSentMessageWithUuid
    293:301:com.ru.astron.entities.Message findSentMessageWithUuidOrRemoteId(java.lang.String) -> findSentMessageWithUuidOrRemoteId
    169:176:void findUnreadMessages(com.ru.astron.entities.Conversation$OnMessageFound) -> findUnreadMessages
    143:150:com.ru.astron.entities.Message findUnsentMessageWithUuid(java.lang.String) -> findUnsentMessageWithUuid
    279:286:void findUnsentTextMessages(com.ru.astron.entities.Conversation$OnMessageFound) -> findUnsentTextMessages
    155:162:void findWaitingMessages(com.ru.astron.entities.Conversation$OnMessageFound) -> findWaitingMessages
    109:109:com.ru.astron.entities.Conversation fromCursor(android.database.Cursor) -> fromCursor
    411:414:java.util.List getAcceptedCryptoTargets() -> getAcceptedCryptoTargets
    535:535:com.ru.astron.entities.Account getAccount() -> getAccount
    531:531:java.lang.String getAccountUuid() -> getAccountUuid
    818:820:java.lang.String getAttribute(java.lang.String) -> getAttribute
    996:996:int getAvatarBackgroundColor() -> getAvatarBackgroundColor
    381:381:rocks.xmpp.addr.Jid getBlockedJid() -> getBlockedJid
    687:687:com.ru.astron.entities.Bookmark getBookmark() -> getBookmark
    869:873:boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    543:543:com.ru.astron.entities.Contact getContact() -> getContact
    564:574:android.content.ContentValues getContentValues() -> getContentValues
    428:428:com.ru.astron.entities.Message getCorrectingMessage() -> getCorrectingMessage
    560:560:long getCreated() -> getCreated
    666:673:com.ru.astron.entities.Conversation$Draft getDraft() -> getDraft
    451:451:java.lang.String getDraftMessage() -> getDraftMessage
    391:391:java.lang.String getFirstMamReference() -> getFirstMamReference
    129:138:com.ru.astron.entities.Message getFirstUnreadMessage() -> getFirstUnreadMessage
    245:245:com.ru.astron.xmpp.chatstate.ChatState getIncomingChatState() -> getIncomingChatState
    843:850:int getIntAttribute(java.lang.String,int) -> getIntAttribute
    548:548:rocks.xmpp.addr.Jid getJid() -> getJid
    824:838:java.util.List getJidListAttribute(java.lang.String) -> getJidListAttribute
    407:407:com.ru.astron.xmpp.mam.MamReference getLastClearHistory() -> getLastClearHistory
    740:753:com.ru.astron.xmpp.mam.MamReference getLastMessageTransmitted() -> getLastMessageTransmitted
    479:487:com.ru.astron.entities.Message getLatestMarkableMessage(java.util.List,boolean) -> getLatestMarkableMessage
    491:500:com.ru.astron.entities.Message getLatestMessage() -> getLatestMessage
    856:863:long getLongAttribute(java.lang.String,long) -> getLongAttribute
    578:578:int getMode() -> getMode
    597:596:com.ru.astron.entities.MucOptions getMucOptions() -> getMucOptions
    504:526:java.lang.CharSequence getName() -> getName
    612:612:rocks.xmpp.addr.Jid getNextCounterpart() -> getNextCounterpart
    620:634:int getNextEncryption() -> getNextEncryption
    660:661:java.lang.String getNextMessage() -> getNextMessage
    259:259:com.ru.astron.xmpp.chatstate.ChatState getOutgoingChatState() -> getOutgoingChatState
    976:990:int getReceivedMessagesCountSinceUuid(java.lang.String) -> getReceivedMessagesCountSinceUuid
    441:446:long getSortableTime() -> getSortableTime
    552:552:int getStatus() -> getStatus
    702:702:boolean hasDuplicateMessage(com.ru.astron.entities.Message) -> hasDuplicateMessage
    347:353:boolean hasMessageWithCounterpart(rocks.xmpp.addr.Jid) -> hasMessageWithCounterpart
    121:121:boolean hasMessagesLeftOnServer() -> hasMessagesLeftOnServer
    371:371:boolean isBlocked() -> isBlocked
    376:376:boolean isDomainBlocked() -> isDomainBlocked
    762:762:boolean isMuted() -> isMuted
    593:593:boolean isPrivateAndNonAnonymous() -> isPrivateAndNonAnonymous
    459:459:boolean isRead() -> isRead
    589:589:boolean isSingleOrPrivateAndNonAnonymous() -> isSingleOrPrivateAndNonAnonymous
    966:967:boolean isWithStranger() -> isWithStranger
    910:915:int lambda$sort$0(com.ru.astron.entities.Message,com.ru.astron.entities.Message) -> lambda$sort$0
    213:226:boolean markAsChanged(java.util.List) -> markAsChanged
    196:208:boolean markAsDeleted(java.util.List) -> markAsDeleted
    463:474:java.util.List markRead(java.lang.String) -> markRead
    358:361:void populateWithMessages(java.util.List) -> populateWithMessages
    726:727:boolean possibleDuplicate(java.lang.String,java.lang.String) -> possibleDuplicate
    884:886:void prepend(int,com.ru.astron.entities.Message) -> prepend
    942:949:int receivedMessagesCount() -> receivedMessagesCount
    604:605:void resetMucOptions() -> resetMucOptions
    954:961:int sentMessagesCount() -> sentMessagesCount
    419:420:void setAcceptedCryptoTargets(java.util.List) -> setAcceptedCryptoTargets
    539:540:void setAccount(com.ru.astron.entities.Account) -> setAccount
    770:770:boolean setAttribute(java.lang.String,boolean) -> setAttribute
    774:774:boolean setAttribute(java.lang.String,long) -> setAttribute
    778:778:boolean setAttribute(java.lang.String,int) -> setAttribute
    782:799:boolean setAttribute(java.lang.String,java.lang.String) -> setAttribute
    803:814:boolean setAttribute(java.lang.String,java.util.List) -> setAttribute
    608:609:void setContactJid(rocks.xmpp.addr.Jid) -> setContactJid
    423:424:boolean setCorrectingMessage(com.ru.astron.entities.Message) -> setCorrectingMessage
    455:456:void setDraftMessage(java.lang.String) -> setDraftMessage
    395:396:void setFirstMamReference(java.lang.String) -> setFirstMamReference
    125:126:void setHasMessagesLeftOnServer(boolean) -> setHasMessagesLeftOnServer
    237:241:boolean setIncomingChatState(com.ru.astron.xmpp.chatstate.ChatState) -> setIncomingChatState
    399:404:void setLastClearHistory(long,java.lang.String) -> setLastClearHistory
    582:583:void setMode(int) -> setMode
    758:759:void setMutedTill(long) -> setMutedTill
    616:617:void setNextCounterpart(rocks.xmpp.addr.Jid) -> setNextCounterpart
    656:656:boolean setNextEncryption(int) -> setNextEncryption
    677:683:boolean setNextMessage(java.lang.String) -> setNextMessage
    249:255:boolean setOutgoingChatState(com.ru.astron.xmpp.chatstate.ChatState) -> setOutgoingChatState
    556:557:void setStatus(int) -> setStatus
    908:919:void sort() -> sort
    641:650:boolean suitableForOmemoByDefault(com.ru.astron.entities.Conversation) -> suitableForOmemoByDefault
    263:275:void trim() -> trim
    929:938:int unreadCount() -> unreadCount
    923:926:void untieMessages() -> untieMessages
    432:432:boolean withSelf() -> withSelf
com.ru.astron.entities.Conversation$Draft -> com.ru.astron.entities.Conversation$Draft:
    1003:1003:void <init>(java.lang.String,long,com.ru.astron.entities.Conversation$1) -> <init>
    1007:1010:void <init>(java.lang.String,long) -> <init>
    1017:1017:java.lang.String getMessage() -> getMessage
    1013:1013:long getTimestamp() -> getTimestamp
com.ru.astron.entities.DownloadableFile -> com.ru.astron.entities.DownloadableFile:
    17:18:void <init>(java.lang.String) -> <init>
    25:25:long getExpectedSize() -> getExpectedSize
    84:84:byte[] getIv() -> getIv
    80:80:byte[] getKey() -> getKey
    29:35:java.lang.String getMimeType() -> getMimeType
    44:44:byte[] getSha1Sum() -> getSha1Sum
    21:21:long getSize() -> getSize
    40:41:void setExpectedSize(long) -> setExpectedSize
    76:77:void setIv(byte[]) -> setIv
    72:73:void setKey(byte[]) -> setKey
    54:69:void setKeyAndIv(byte[]) -> setKeyAndIv
    48:49:void setSha1Sum(byte[]) -> setSha1Sum
com.ru.astron.entities.Edited -> com.ru.astron.entities.Edited:
    15:18:void <init>(java.lang.String,java.lang.String) -> <init>
    47:49:com.ru.astron.entities.Edited fromJson(org.json.JSONObject) -> fromJson
    53:67:java.util.List fromJson(java.lang.String) -> fromJson
    78:78:java.lang.String getEditedId() -> getEditedId
    21:25:java.lang.String toJson(java.util.List) -> toJson
    71:74:org.json.JSONObject toJson() -> toJson
    29:34:boolean wasPreviouslyEditedRemoteMsgId(java.util.List,java.lang.String) -> wasPreviouslyEditedRemoteMsgId
    38:43:boolean wasPreviouslyEditedServerMsgId(java.util.List,java.lang.String) -> wasPreviouslyEditedServerMsgId
com.ru.astron.entities.IndividualMessage -> com.ru.astron.entities.IndividualMessage:
    43:44:void <init>(com.ru.astron.entities.Conversational) -> <init>
    47:48:void <init>(com.ru.astron.entities.Conversational,java.lang.String,java.lang.String,rocks.xmpp.addr.Jid,rocks.xmpp.addr.Jid,java.lang.String,long,int,int,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.util.Set,boolean,boolean) -> <init>
    66:70:com.ru.astron.entities.Message createDateSeparator(com.ru.astron.entities.Message) -> createDateSeparator
    76:98:com.ru.astron.entities.Message fromCursor(android.database.Cursor,com.ru.astron.entities.Conversational) -> fromCursor
    62:62:boolean isValidInSession() -> isValidInSession
    52:52:com.ru.astron.entities.Message next() -> next
    57:57:com.ru.astron.entities.Message prev() -> prev
com.ru.astron.entities.ListItem$Tag -> com.ru.astron.entities.ListItem$Tag:
    22:25:void <init>(java.lang.String,int) -> <init>
    28:28:int getColor() -> getColor
    32:32:java.lang.String getName() -> getName
com.ru.astron.entities.MTMDecision -> com.ru.astron.entities.MTMDecision:
    26:32:void <init>() -> <init>
com.ru.astron.entities.Message -> com.ru.astron.entities.Message:
    118:120:void <init>(com.ru.astron.entities.Conversational) -> <init>
    123:124:void <init>(com.ru.astron.entities.Conversational,java.lang.String,int) -> <init>
    127:148:void <init>(com.ru.astron.entities.Conversational,java.lang.String,int,int) -> <init>
    156:179:void <init>(com.ru.astron.entities.Conversational,java.lang.String,java.lang.String,rocks.xmpp.addr.Jid,rocks.xmpp.addr.Jid,java.lang.String,long,int,int,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.util.Set,boolean,boolean) -> <init>
    467:488:boolean addReadByMarker(com.ru.astron.entities.ReadByMarker) -> addReadByMarker
    759:758:boolean bodyIsOnlyEmojis() -> bodyIsOnlyEmojis
    239:242:com.ru.astron.entities.Message createLoadMoreMessage(com.ru.astron.entities.Conversation) -> createLoadMoreMessage
    231:235:com.ru.astron.entities.Message createStatusMessage(com.ru.astron.entities.Conversation,java.lang.String) -> createStatusMessage
    446:446:boolean edited() -> edited
    701:716:boolean fixCounterpart() -> fixCounterpart
    184:206:com.ru.astron.entities.Message fromCursor(android.database.Cursor,com.ru.astron.entities.Conversation) -> fromCursor
    634:637:int getAvatarBackgroundColor() -> getAvatarBackgroundColor
    314:314:java.lang.String getBody() -> getBody
    909:910:int getCleanedEncryption(int) -> getCleanedEncryption
    301:307:com.ru.astron.entities.Contact getContact() -> getContact
    247:281:android.content.ContentValues getContentValues() -> getContentValues
    289:289:com.ru.astron.entities.Conversational getConversation() -> getConversation
    285:285:java.lang.String getConversationUuid() -> getConversationUuid
    293:293:rocks.xmpp.addr.Jid getCounterpart() -> getCounterpart
    629:629:java.util.List getCounterparts() -> getCounterparts
    725:728:java.lang.String getEditedId() -> getEditedId
    418:418:java.lang.String getEncryptedBody() -> getEncryptedBody
    354:354:int getEncryption() -> getEncryption
    339:339:java.lang.String getErrorMessage() -> getErrorMessage
    777:776:com.ru.astron.entities.Message$FileParams getFileParams() -> getFileParams
    864:864:java.lang.String getFingerprint() -> getFingerprint
    645:657:android.text.SpannableStringBuilder getMergedBody() -> getMergedBody
    665:674:int getMergedStatus() -> getMergedStatus
    678:687:long getMergedTimeSent() -> getMergedTimeSent
    738:745:java.lang.String getMimeType() -> getMimeType
    883:893:int getNextEncryption() -> getNextEncryption
    873:879:int getPreviousEncryption() -> getPreviousEncryption
    493:493:java.util.Set getReadByMarkers() -> getReadByMarkers
    370:370:java.lang.String getRelativeFilePath() -> getRelativeFilePath
    378:378:java.lang.String getRemoteMsgId() -> getRemoteMsgId
    386:386:java.lang.String getServerMsgId() -> getServerMsgId
    362:362:int getStatus() -> getStatus
    350:350:long getTimeSent() -> getTimeSent
    458:458:com.ru.astron.entities.Transferable getTransferable() -> getTransferable
    454:454:rocks.xmpp.addr.Jid getTrueCounterpart() -> getTrueCounterpart
    426:426:int getType() -> getType
    844:844:boolean hasFileOnRemoteHost() -> hasFileOnRemoteHost
    661:661:boolean hasMeCommand() -> hasMeCommand
    434:434:boolean isCarbon() -> isCarbon
    580:580:boolean isCorrectable() -> isCorrectable
    398:398:boolean isDeleted() -> isDeleted
    840:840:boolean isFileOrImage() -> isFileOrImage
    766:765:boolean isGeoUri() -> isGeoUri
    569:576:boolean isLastCorrectableMessage() -> isLastCorrectableMessage
    394:394:boolean isRead() -> isRead
    615:615:boolean isStatusMergeable(int,int) -> isStatusMergeable
    868:869:boolean isTrusted() -> isTrusted
    898:905:boolean isValidInSession() -> isValidInSession
    406:407:void markRead() -> markRead
    410:411:void markUnread() -> markUnread
    584:584:boolean mergeable(com.ru.astron.entities.Message) -> mergeable
    848:848:boolean needsUploading() -> needsUploading
    531:545:com.ru.astron.entities.Message next() -> next
    820:822:int parseInt(java.lang.String) -> parseInt
    812:814:long parseLong(java.lang.String) -> parseLong
    828:830:java.net.URL parseUrl(java.lang.String) -> parseUrl
    550:564:com.ru.astron.entities.Message prev() -> prev
    442:443:void putEdited(java.lang.String,java.lang.String) -> putEdited
    773:772:void resetFileParams() -> resetFileParams
    333:335:boolean sameMucUser(com.ru.astron.entities.Message) -> sameMucUser
    318:317:void setBody(java.lang.String) -> setBody
    438:439:void setCarbon(boolean) -> setCarbon
    297:298:void setCounterpart(rocks.xmpp.addr.Jid) -> setCounterpart
    625:626:void setCounterparts(java.util.List) -> setCounterparts
    402:403:void setDeleted(boolean) -> setDeleted
    422:423:void setEncryptedBody(java.lang.String) -> setEncryptedBody
    358:359:void setEncryption(int) -> setEncryption
    343:346:boolean setErrorMessage(java.lang.String) -> setErrorMessage
    860:861:void setFingerprint(java.lang.String) -> setFingerprint
    329:330:void setMucUser(com.ru.astron.entities.MucOptions$User) -> setMucUser
    733:734:void setOob(boolean) -> setOob
    374:375:void setRelativeFilePath(java.lang.String) -> setRelativeFilePath
    382:383:void setRemoteMsgId(java.lang.String) -> setRemoteMsgId
    390:391:void setServerMsgId(java.lang.String) -> setServerMsgId
    366:367:void setStatus(int) -> setStatus
    414:415:void setTime(long) -> setTime
    462:461:void setTransferable(com.ru.astron.entities.Transferable) -> setTransferable
    450:451:void setTrueCounterpart(rocks.xmpp.addr.Jid) -> setTrueCounterpart
    430:431:void setType(int) -> setType
    721:722:void setUuid(java.lang.String) -> setUuid
    497:502:boolean similar(com.ru.astron.entities.Message) -> similar
    752:751:boolean treatAsDownloadable() -> treatAsDownloadable
    696:697:boolean trusted() -> trusted
    835:837:void untie() -> untie
    691:692:boolean wasMergedIntoPrevious() -> wasMergedIntoPrevious
com.ru.astron.entities.Message$FileParams -> com.ru.astron.entities.Message$FileParams:
    851:856:void <init>(com.ru.astron.entities.Message) -> <init>
com.ru.astron.entities.Message$MergeSeparator -> com.ru.astron.entities.Message$MergeSeparator:
    641:641:void <init>() -> <init>
com.ru.astron.entities.MucOptions -> com.ru.astron.entities.MucOptions:
    49:55:void <init>(com.ru.astron.entities.Conversation) -> <init>
    26:26:com.ru.astron.entities.Account access$600(com.ru.astron.entities.MucOptions) -> access$600
    161:162:boolean allowInvites() -> allowInvites
    175:186:boolean allowPm() -> allowPm
    86:86:boolean autoPushConfiguration() -> autoPushConfiguration
    166:166:boolean canChangeSubject() -> canChangeSubject
    157:157:boolean canInvite() -> canInvite
    69:78:void changeAffiliation(rocks.xmpp.addr.Jid,com.ru.astron.entities.MucOptions$Affiliation) -> changeAffiliation
    572:574:rocks.xmpp.addr.Jid createJoinJid(java.lang.String) -> createJoinJid
    515:529:java.lang.String createNameFromParticipants() -> createNameFromParticipants
    215:240:com.ru.astron.entities.MucOptions$User deleteUser(rocks.xmpp.addr.Jid) -> deleteUser
    560:566:boolean everybodyHasKeys() -> everybodyHasKeys
    314:319:com.ru.astron.entities.MucOptions$User findOrCreateUserByRealJid(rocks.xmpp.addr.Jid,rocks.xmpp.addr.Jid) -> findOrCreateUserByRealJid
    323:328:com.ru.astron.entities.MucOptions$User findUser(com.ru.astron.entities.ReadByMarker) -> findUser
    286:295:com.ru.astron.entities.MucOptions$User findUserByFullJid(rocks.xmpp.addr.Jid) -> findUserByFullJid
    300:309:com.ru.astron.entities.MucOptions$User findUserByRealJid(rocks.xmpp.addr.Jid) -> findUserByRealJid
    82:83:void flagNoAutoPushConfiguration() -> flagNoAutoPushConfiguration
    58:58:com.ru.astron.entities.Account getAccount() -> getAccount
    446:449:java.lang.String getActualNick() -> getActualNick
    145:145:java.lang.String getAvatar() -> getAvatar
    606:606:com.ru.astron.entities.Conversation getConversation() -> getConversation
    458:458:com.ru.astron.entities.MucOptions$Error getError() -> getError
    495:501:java.util.List getFallbackUsersFromCryptoTargets() -> getFallbackUsersFromCryptoTargets
    199:199:java.util.List getFeatures() -> getFeatures
    610:617:java.util.List getMembers(boolean) -> getMembers
    491:491:java.lang.String getName() -> getName
    587:592:java.lang.String getPassword() -> getPassword
    534:545:long[] getPgpKeyIds() -> getPgpKeyIds
    416:428:java.lang.String getProposedNick() -> getProposedNick
    140:141:com.ru.astron.xmpp.forms.Data getRoomInfoForm() -> getRoomInfoForm
    479:479:com.ru.astron.entities.MucOptions$User getSelf() -> getSelf
    487:487:java.lang.String getSubject() -> getSubject
    579:583:rocks.xmpp.addr.Jid getTrueCounterpart(rocks.xmpp.addr.Jid) -> getTrueCounterpart
    410:412:int getUserCount() -> getUserCount
    347:347:java.util.ArrayList getUsers() -> getUsers
    351:359:java.util.ArrayList getUsers(boolean) -> getUsers
    378:390:java.util.List getUsers(int) -> getUsers
    506:511:java.util.List getUsersRelevantForNameAndAvatar() -> getUsersRelevantForNameAndAvatar
    363:374:java.util.ArrayList getUsersWithChatState(com.ru.astron.xmpp.chatstate.ChatState,int) -> getUsersWithChatState
    149:149:boolean hasFeature(java.lang.String) -> hasFeature
    153:153:boolean hasVCards() -> hasVCards
    333:333:boolean isContactInRoom(com.ru.astron.entities.Contact) -> isContactInRoom
    207:207:boolean isPrivateAndNonAnonymous() -> isPrivateAndNonAnonymous
    90:90:boolean isSelf(rocks.xmpp.addr.Jid) -> isSelf
    102:102:boolean isTookProposedNickFromBookmark() -> isTookProposedNickFromBookmark
    337:337:boolean isUserInRoom(rocks.xmpp.addr.Jid) -> isUserInRoom
    113:113:boolean mamSupport() -> mamSupport
    195:195:boolean membersOnly() -> membersOnly
    211:211:boolean moderated() -> moderated
    203:203:boolean nonanonymous() -> nonanonymous
    434:435:java.lang.String normalize(rocks.xmpp.addr.Jid,java.lang.String) -> normalize
    106:110:void notifyOfBookmarkNick(java.lang.String) -> notifyOfBookmarkNick
    454:454:boolean online() -> online
    170:171:boolean participantsCanChangeSubject() -> participantsCanChangeSubject
    191:191:boolean participating() -> participating
    549:555:boolean pgpKeysInUse() -> pgpKeysInUse
    94:98:void resetChatState() -> resetChatState
    462:464:void setError(com.ru.astron.entities.MucOptions$Error) -> setError
    471:473:void setOffline() -> setOffline
    467:468:void setOnRenameListener(com.ru.astron.entities.MucOptions$OnRenameListener) -> setOnRenameListener
    341:343:boolean setOnline() -> setOnline
    597:603:void setPassword(java.lang.String) -> setPassword
    62:65:boolean setSelf(com.ru.astron.entities.MucOptions$User) -> setSelf
    483:483:boolean setSubject(java.lang.String) -> setSubject
    395:406:java.util.List sub(java.util.List,int) -> sub
    117:136:boolean updateConfiguration(com.ru.astron.entities.ServiceDiscoveryResult) -> updateConfiguration
    246:281:boolean updateUser(com.ru.astron.entities.MucOptions$User) -> updateUser
com.ru.astron.entities.MucOptions$Affiliation -> com.ru.astron.entities.MucOptions$Affiliation:
    622:621:void <clinit>() -> <clinit>
    631:634:void <init>(java.lang.String,int,int,int) -> <init>
    648:648:int getResId() -> getResId
    637:643:com.ru.astron.entities.MucOptions$Affiliation of(java.lang.String) -> of
    657:657:boolean outranks(com.ru.astron.entities.MucOptions$Affiliation) -> outranks
    661:661:boolean ranks(com.ru.astron.entities.MucOptions$Affiliation) -> ranks
    653:653:java.lang.String toString() -> toString
    621:621:com.ru.astron.entities.MucOptions$Affiliation valueOf(java.lang.String) -> valueOf
    621:621:com.ru.astron.entities.MucOptions$Affiliation[] values() -> values
com.ru.astron.entities.MucOptions$Error -> com.ru.astron.entities.MucOptions$Error:
    705:704:void <clinit>() -> <clinit>
    704:704:void <init>(java.lang.String,int) -> <init>
    704:704:com.ru.astron.entities.MucOptions$Error valueOf(java.lang.String) -> valueOf
    704:704:com.ru.astron.entities.MucOptions$Error[] values() -> values
com.ru.astron.entities.MucOptions$Role -> com.ru.astron.entities.MucOptions$Role:
    666:665:void <clinit>() -> <clinit>
    674:677:void <init>(java.lang.String,int,int,int) -> <init>
    691:691:int getResId() -> getResId
    680:686:com.ru.astron.entities.MucOptions$Role of(java.lang.String) -> of
    700:700:boolean ranks(com.ru.astron.entities.MucOptions$Role) -> ranks
    696:696:java.lang.String toString() -> toString
    665:665:com.ru.astron.entities.MucOptions$Role valueOf(java.lang.String) -> valueOf
    665:665:com.ru.astron.entities.MucOptions$Role[] values() -> values
com.ru.astron.entities.MucOptions$User -> com.ru.astron.entities.MucOptions$User:
    742:745:void <init>(com.ru.astron.entities.MucOptions,rocks.xmpp.addr.Jid) -> <init>
    732:732:com.ru.astron.entities.MucOptions$Affiliation access$000(com.ru.astron.entities.MucOptions$User) -> access$000
    732:732:com.ru.astron.entities.MucOptions$Affiliation access$002(com.ru.astron.entities.MucOptions$User,com.ru.astron.entities.MucOptions$Affiliation) -> access$002
    732:732:com.ru.astron.entities.MucOptions$Role access$100(com.ru.astron.entities.MucOptions$User) -> access$100
    732:732:com.ru.astron.entities.MucOptions$Role access$102(com.ru.astron.entities.MucOptions$User,com.ru.astron.entities.MucOptions$Role) -> access$102
    732:732:com.ru.astron.xmpp.chatstate.ChatState access$200(com.ru.astron.entities.MucOptions$User) -> access$200
    732:732:com.ru.astron.xmpp.chatstate.ChatState access$202(com.ru.astron.entities.MucOptions$User,com.ru.astron.xmpp.chatstate.ChatState) -> access$202
    732:732:rocks.xmpp.addr.Jid access$300(com.ru.astron.entities.MucOptions$User) -> access$300
    732:732:com.ru.astron.xmpp.pep.Avatar access$402(com.ru.astron.entities.MucOptions$User,com.ru.astron.xmpp.pep.Avatar) -> access$402
    732:732:rocks.xmpp.addr.Jid access$500(com.ru.astron.entities.MucOptions$User) -> access$500
    732:732:rocks.xmpp.addr.Jid access$502(com.ru.astron.entities.MucOptions$User,rocks.xmpp.addr.Jid) -> access$502
    732:732:int compareTo(java.lang.Object) -> compareTo
    859:864:int compareTo(com.ru.astron.entities.MucOptions$User) -> compareTo
    822:823:boolean equals(java.lang.Object) -> equals
    809:809:com.ru.astron.entities.Account getAccount() -> getAccount
    760:760:com.ru.astron.entities.MucOptions$Affiliation getAffiliation() -> getAffiliation
    801:805:java.lang.String getAvatar() -> getAvatar
    896:897:int getAvatarBackgroundColor() -> getAvatarBackgroundColor
    869:874:java.lang.String getComparableName() -> getComparableName
    782:787:com.ru.astron.entities.Contact getContact() -> getContact
    813:813:com.ru.astron.entities.Conversation getConversation() -> getConversation
    817:817:rocks.xmpp.addr.Jid getFullJid() -> getFullJid
    748:748:java.lang.String getName() -> getName
    768:773:long getPgpKeyId() -> getPgpKeyId
    879:879:rocks.xmpp.addr.Jid getRealJid() -> getRealJid
    752:752:com.ru.astron.entities.MucOptions$Role getRole() -> getRole
    841:845:int hashCode() -> hashCode
    836:836:boolean isDomain() -> isDomain
    854:854:boolean realJidMatchesAccount() -> realJidMatchesAccount
    764:765:void setAffiliation(java.lang.String) -> setAffiliation
    792:796:boolean setAvatar(com.ru.astron.xmpp.pep.Avatar) -> setAvatar
    887:891:boolean setChatState(com.ru.astron.xmpp.chatstate.ChatState) -> setChatState
    778:779:void setPgpKeyId(long) -> setPgpKeyId
    883:884:void setRealJid(rocks.xmpp.addr.Jid) -> setRealJid
    756:757:void setRole(java.lang.String) -> setRole
    850:850:java.lang.String toString() -> toString
com.ru.astron.entities.Presence -> com.ru.astron.entities.Presence:
    52:58:void <init>(com.ru.astron.entities.Presence$Status,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    68:68:int compareTo(java.lang.Object) -> compareTo
    88:88:java.lang.String getHash() -> getHash
    92:92:java.lang.String getMessage() -> getMessage
    84:84:java.lang.String getNode() -> getNode
    100:100:com.ru.astron.entities.ServiceDiscoveryResult getServiceDiscoveryResult() -> getServiceDiscoveryResult
    72:72:com.ru.astron.entities.Presence$Status getStatus() -> getStatus
    80:80:java.lang.String getVer() -> getVer
    76:76:boolean hasCaps() -> hasCaps
    61:64:com.ru.astron.entities.Presence parse(java.lang.String,com.ru.astron.xml.Element,java.lang.String) -> parse
    96:97:void setServiceDiscoveryResult(com.ru.astron.entities.ServiceDiscoveryResult) -> setServiceDiscoveryResult
com.ru.astron.entities.Presence$1 -> com.ru.astron.entities.Presence$1:
    16:16:void <clinit>() -> <clinit>
com.ru.astron.entities.Presence$Status -> com.ru.astron.entities.Presence$Status:
    13:12:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    26:31:com.ru.astron.entities.Presence$Status fromShowString(java.lang.String) -> fromShowString
    16:17:java.lang.String toShowString() -> toShowString
    12:12:com.ru.astron.entities.Presence$Status valueOf(java.lang.String) -> valueOf
    12:12:com.ru.astron.entities.Presence$Status[] values() -> values
com.ru.astron.entities.PresenceTemplate -> com.ru.astron.entities.PresenceTemplate:
    18:23:void <init>(com.ru.astron.entities.Presence$Status,java.lang.String) -> <init>
    25:27:void <init>() -> <init>
    59:60:boolean equals(java.lang.Object) -> equals
    41:46:com.ru.astron.entities.PresenceTemplate fromCursor(android.database.Cursor) -> fromCursor
    31:37:android.content.ContentValues getContentValues() -> getContentValues
    50:50:com.ru.astron.entities.Presence$Status getStatus() -> getStatus
    54:54:java.lang.String getStatusMessage() -> getStatusMessage
    72:74:int hashCode() -> hashCode
    79:79:java.lang.String toString() -> toString
com.ru.astron.entities.Presences -> com.ru.astron.entities.Presences:
    11:12:void <init>() -> <init>
    96:103:boolean allOrNonSupport(java.lang.String) -> allOrNonSupport
    65:73:java.util.List asTemplates() -> asTemplates
    31:33:void clearPresences() -> clearPresences
    15:15:java.util.Hashtable getPresences() -> getPresences
    37:46:com.ru.astron.entities.Presence$Status getShownStatus() -> getShownStatus
    83:91:java.util.List getStatusMessages() -> getStatusMessages
    77:79:boolean has(java.lang.String) -> has
    132:143:java.lang.String nameWithoutVersion(java.lang.String) -> nameWithoutVersion
    25:27:void removePresence(java.lang.String) -> removePresence
    51:53:int size() -> size
    57:61:java.lang.String[] toResourceArray() -> toResourceArray
    108:127:android.util.Pair toTypeAndNameMap() -> toTypeAndNameMap
    19:21:void updatePresence(java.lang.String,com.ru.astron.entities.Presence) -> updatePresence
com.ru.astron.entities.ReadByMarker -> com.ru.astron.entities.ReadByMarker:
    15:17:void <init>() -> <init>
    157:162:boolean allUsersRepresented(java.util.Collection,java.util.Set) -> allUsersRepresented
    166:168:boolean allUsersRepresented(java.util.Collection,java.util.Set,com.ru.astron.entities.ReadByMarker) -> allUsersRepresented
    142:153:boolean contains(com.ru.astron.entities.ReadByMarker,java.util.Set) -> contains
    21:22:boolean equals(java.lang.Object) -> equals
    82:85:com.ru.astron.entities.ReadByMarker from(rocks.xmpp.addr.Jid,rocks.xmpp.addr.Jid) -> from
    89:92:com.ru.astron.entities.ReadByMarker from(com.ru.astron.entities.Message) -> from
    96:99:com.ru.astron.entities.ReadByMarker from(com.ru.astron.entities.MucOptions$User) -> from
    70:78:java.util.Set fromJson(org.json.JSONArray) -> fromJson
    111:122:com.ru.astron.entities.ReadByMarker fromJson(org.json.JSONObject) -> fromJson
    127:129:java.util.Set fromJsonString(java.lang.String) -> fromJsonString
    43:43:rocks.xmpp.addr.Jid getFullJid() -> getFullJid
    47:47:rocks.xmpp.addr.Jid getRealJid() -> getRealJid
    34:36:int hashCode() -> hashCode
    51:66:org.json.JSONObject toJson() -> toJson
    134:138:org.json.JSONArray toJson(java.util.Set) -> toJson
com.ru.astron.entities.ReceiptRequest -> com.ru.astron.entities.ReceiptRequest:
    39:41:void <init>(rocks.xmpp.addr.Jid,java.lang.String) -> <init>
    52:53:boolean equals(java.lang.Object) -> equals
    69:69:java.lang.String getId() -> getId
    73:73:rocks.xmpp.addr.Jid getJid() -> getJid
    63:65:int hashCode() -> hashCode
com.ru.astron.entities.Roster -> com.ru.astron.entities.Roster:
    17:19:void <init>(com.ru.astron.entities.Account) -> <init>
    48:51:void clearPresences() -> clearPresences
    96:96:com.ru.astron.entities.Account getAccount() -> getAccount
    36:44:com.ru.astron.entities.Contact getContact(rocks.xmpp.addr.Jid) -> getContact
    22:32:com.ru.astron.entities.Contact getContactFromContactList(rocks.xmpp.addr.Jid) -> getContactFromContactList
    72:74:java.util.List getContacts() -> getContacts
    92:92:java.lang.String getVersion() -> getVersion
    60:68:java.util.List getWithSystemAccounts(java.lang.Class) -> getWithSystemAccounts
    78:84:void initContact(com.ru.astron.entities.Contact) -> initContact
    54:57:void markAllAsNotInRoster() -> markAllAsNotInRoster
    88:89:void setVersion(java.lang.String) -> setVersion
com.ru.astron.entities.ServiceDiscoveryResult -> com.ru.astron.entities.ServiceDiscoveryResult:
    36:59:void <init>(com.ru.astron.xmpp.stanzas.IqPacket) -> <init>
    60:85:void <init>(java.lang.String,byte[],org.json.JSONObject) -> <init>
    88:93:void <init>(android.database.Cursor) -> <init>
    26:26:java.lang.String access$000(java.lang.String) -> access$000
    100:100:java.lang.String blankNull(java.lang.String) -> blankNull
    96:96:java.lang.String clean(java.lang.String) -> clean
    104:119:com.ru.astron.xmpp.forms.Data createFormFromJSONObject(org.json.JSONObject) -> createFormFromJSONObject
    123:142:org.json.JSONObject createJSONFromForm(com.ru.astron.xmpp.forms.Data) -> createJSONFromForm
    260:265:android.content.ContentValues getContentValues() -> getContentValues
    169:178:java.lang.String getExtendedDiscoInformation(java.lang.String,java.lang.String) -> getExtendedDiscoInformation
    154:154:java.util.List getFeatures() -> getFeatures
    150:150:java.util.List getIdentities() -> getIdentities
    146:146:java.lang.String getVer() -> getVer
    158:165:boolean hasIdentity(java.lang.String,java.lang.String) -> hasIdentity
    205:205:int lambda$mkCapHash$0(com.ru.astron.xmpp.forms.Data,com.ru.astron.xmpp.forms.Data) -> lambda$mkCapHash$0
    210:210:int lambda$mkCapHash$1(com.ru.astron.xmpp.forms.Field,com.ru.astron.xmpp.forms.Field) -> lambda$mkCapHash$1
    182:225:byte[] mkCapHash() -> mkCapHash
    237:255:org.json.JSONObject toJSON() -> toJSON
com.ru.astron.entities.ServiceDiscoveryResult$Identity -> com.ru.astron.entities.ServiceDiscoveryResult$Identity:
    274:279:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    282:288:void <init>(com.ru.astron.xml.Element) -> <init>
    292:298:void <init>(org.json.JSONObject) -> <init>
    317:329:int compareTo(java.lang.Object) -> compareTo
    301:301:java.lang.String getCategory() -> getCategory
    309:309:java.lang.String getLang() -> getLang
    313:313:java.lang.String getName() -> getName
    305:305:java.lang.String getType() -> getType
    334:341:org.json.JSONObject toJSON() -> toJSON
com.ru.astron.entities.StubConversation -> com.ru.astron.entities.StubConversation:
    42:47:void <init>(com.ru.astron.entities.Account,java.lang.String,rocks.xmpp.addr.Jid,int) -> <init>
    51:51:com.ru.astron.entities.Account getAccount() -> getAccount
    56:56:com.ru.astron.entities.Contact getContact() -> getContact
    61:61:rocks.xmpp.addr.Jid getJid() -> getJid
    66:66:int getMode() -> getMode
    71:71:java.lang.String getUuid() -> getUuid
com.ru.astron.entities.Transferable -> com.ru.astron.entities.Transferable:
    8:9:void <clinit>() -> <clinit>
com.ru.astron.entities.TransferablePlaceholder -> com.ru.astron.entities.TransferablePlaceholder:
    7:9:void <init>(int) -> <init>
    33:33:void cancel() -> cancel
    22:22:long getFileSize() -> getFileSize
    27:27:int getProgress() -> getProgress
    17:17:int getStatus() -> getStatus
    12:12:boolean start() -> start
com.ru.astron.generator.AbstractGenerator -> com.ru.astron.generator.AbstractGenerator:
    56:56:void <clinit>() -> <clinit>
    60:62:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    88:94:java.lang.String getCapHash(com.ru.astron.entities.Account) -> getCapHash
    110:127:java.util.List getFeatures(com.ru.astron.entities.Account) -> getFeatures
    72:72:java.lang.String getIdentityName() -> getIdentityName
    80:83:java.lang.String getIdentityType() -> getIdentityType
    65:68:java.lang.String getIdentityVersion() -> getIdentityVersion
    105:106:java.lang.String getTimestamp(long) -> getTimestamp
    76:76:java.lang.String getUserAgent() -> getUserAgent
com.ru.astron.generator.IqGenerator -> com.ru.astron.generator.IqGenerator:
    41:42:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    333:335:com.ru.astron.xmpp.stanzas.IqPacket changeAffiliation(com.ru.astron.entities.Conversation,rocks.xmpp.addr.Jid,java.lang.String) -> changeAffiliation
    339:348:com.ru.astron.xmpp.stanzas.IqPacket changeAffiliation(com.ru.astron.entities.Conversation,java.util.List,java.lang.String) -> changeAffiliation
    352:358:com.ru.astron.xmpp.stanzas.IqPacket changeRole(com.ru.astron.entities.Conversation,java.lang.String,java.lang.String) -> changeRole
    396:408:java.lang.String convertFilename(java.lang.String) -> convertFilename
    473:482:android.os.Bundle defaultChannelConfiguration() -> defaultChannelConfiguration
    459:469:android.os.Bundle defaultGroupChatConfiguration() -> defaultGroupChatConfiguration
    134:137:com.ru.astron.xmpp.stanzas.IqPacket deleteNode(java.lang.String) -> deleteNode
    45:57:com.ru.astron.xmpp.stanzas.IqPacket discoResponse(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> discoResponse
    74:90:com.ru.astron.xmpp.stanzas.IqPacket entityTimeResponse(com.ru.astron.xmpp.stanzas.IqPacket) -> entityTimeResponse
    413:421:com.ru.astron.xmpp.stanzas.IqPacket generateCreateAccountWithCaptcha(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xmpp.forms.Data) -> generateCreateAccountWithCaptcha
    298:301:com.ru.astron.xmpp.stanzas.IqPacket generateGetBlockList() -> generateGetBlockList
    305:312:com.ru.astron.xmpp.stanzas.IqPacket generateSetBlockRequest(rocks.xmpp.addr.Jid,boolean) -> generateSetBlockRequest
    323:329:com.ru.astron.xmpp.stanzas.IqPacket generateSetPassword(com.ru.astron.entities.Account,java.lang.String) -> generateSetPassword
    316:319:com.ru.astron.xmpp.stanzas.IqPacket generateSetUnblockRequest(rocks.xmpp.addr.Jid) -> generateSetUnblockRequest
    100:109:com.ru.astron.xmpp.stanzas.IqPacket publish(java.lang.String,com.ru.astron.xml.Element,android.os.Bundle) -> publish
    113:113:com.ru.astron.xmpp.stanzas.IqPacket publish(java.lang.String,com.ru.astron.xml.Element) -> publish
    141:145:com.ru.astron.xmpp.stanzas.IqPacket publishAvatar(com.ru.astron.xmpp.pep.Avatar,android.os.Bundle) -> publishAvatar
    156:166:com.ru.astron.xmpp.stanzas.IqPacket publishAvatarMetadata(com.ru.astron.xmpp.pep.Avatar,android.os.Bundle) -> publishAvatarMetadata
    226:245:com.ru.astron.xmpp.stanzas.IqPacket publishBundles(org.whispersystems.libsignal.state.SignedPreKeyRecord,org.whispersystems.libsignal.IdentityKey,java.util.Set,int,android.os.Bundle) -> publishBundles
    213:221:com.ru.astron.xmpp.stanzas.IqPacket publishDeviceIds(java.util.Set,android.os.Bundle) -> publishDeviceIds
    149:152:com.ru.astron.xmpp.stanzas.IqPacket publishElement(java.lang.String,com.ru.astron.xml.Element,android.os.Bundle) -> publishElement
    128:130:com.ru.astron.xmpp.stanzas.IqPacket publishNick(java.lang.String) -> publishNick
    490:490:com.ru.astron.xmpp.stanzas.IqPacket publishPubsubConfiguration(rocks.xmpp.addr.Jid,java.lang.String,com.ru.astron.xmpp.forms.Data) -> publishPubsubConfiguration
    494:501:com.ru.astron.xmpp.stanzas.IqPacket pubsubConfiguration(rocks.xmpp.addr.Jid,java.lang.String,com.ru.astron.xmpp.forms.Data) -> pubsubConfiguration
    94:96:com.ru.astron.xmpp.stanzas.IqPacket purgeOfflineMessages() -> purgeOfflineMessages
    452:455:com.ru.astron.xmpp.stanzas.IqPacket queryAffiliation(com.ru.astron.entities.Conversation,java.lang.String) -> queryAffiliation
    267:294:com.ru.astron.xmpp.stanzas.IqPacket queryMessageArchiveManagement(com.ru.astron.services.MessageArchiveService$Query) -> queryMessageArchiveManagement
    372:378:com.ru.astron.xmpp.stanzas.IqPacket requestHttpUploadLegacySlot(rocks.xmpp.addr.Jid,com.ru.astron.entities.DownloadableFile,java.lang.String) -> requestHttpUploadLegacySlot
    362:368:com.ru.astron.xmpp.stanzas.IqPacket requestHttpUploadSlot(rocks.xmpp.addr.Jid,com.ru.astron.entities.DownloadableFile,java.lang.String) -> requestHttpUploadSlot
    382:385:com.ru.astron.xmpp.stanzas.IqPacket requestP1S3Slot(rocks.xmpp.addr.Jid,java.lang.String) -> requestP1S3Slot
    389:392:com.ru.astron.xmpp.stanzas.IqPacket requestP1S3Url(rocks.xmpp.addr.Jid,java.lang.String) -> requestP1S3Url
    486:486:com.ru.astron.xmpp.stanzas.IqPacket requestPubsubConfiguration(rocks.xmpp.addr.Jid,java.lang.String) -> requestPubsubConfiguration
    117:124:com.ru.astron.xmpp.stanzas.IqPacket retrieve(java.lang.String,com.ru.astron.xml.Element) -> retrieve
    185:189:com.ru.astron.xmpp.stanzas.IqPacket retrieveAvatarMetaData(rocks.xmpp.addr.Jid) -> retrieveAvatarMetaData
    201:203:com.ru.astron.xmpp.stanzas.IqPacket retrieveBundlesForDevice(rocks.xmpp.addr.Jid,int) -> retrieveBundlesForDevice
    193:197:com.ru.astron.xmpp.stanzas.IqPacket retrieveDeviceIds(rocks.xmpp.addr.Jid) -> retrieveDeviceIds
    170:174:com.ru.astron.xmpp.stanzas.IqPacket retrievePepAvatar(com.ru.astron.xmpp.pep.Avatar) -> retrievePepAvatar
    178:181:com.ru.astron.xmpp.stanzas.IqPacket retrieveVcardAvatar(com.ru.astron.xmpp.pep.Avatar) -> retrieveVcardAvatar
    61:70:com.ru.astron.xmpp.stanzas.IqPacket versionResponse(com.ru.astron.xmpp.stanzas.IqPacket) -> versionResponse
com.ru.astron.generator.MessageGenerator -> com.ru.astron.generator.MessageGenerator:
    29:30:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    67:73:void addDelay(com.ru.astron.xmpp.stanzas.MessagePacket,long) -> addDelay
    177:182:com.ru.astron.xmpp.stanzas.MessagePacket conferenceSubject(com.ru.astron.entities.Conversation,java.lang.String) -> conferenceSubject
    163:173:com.ru.astron.xmpp.stanzas.MessagePacket confirm(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,java.lang.String,rocks.xmpp.addr.Jid,boolean) -> confirm
    186:196:com.ru.astron.xmpp.stanzas.MessagePacket directInvite(com.ru.astron.entities.Conversation,rocks.xmpp.addr.Jid) -> directInvite
    76:86:com.ru.astron.xmpp.stanzas.MessagePacket generateAxolotlChat(com.ru.astron.entities.Message,com.ru.astron.crypto.axolotl.XmppAxolotlMessage) -> generateAxolotlChat
    99:118:com.ru.astron.xmpp.stanzas.MessagePacket generateChat(com.ru.astron.entities.Message) -> generateChat
    151:159:com.ru.astron.xmpp.stanzas.MessagePacket generateChatState(com.ru.astron.entities.Conversation) -> generateChatState
    90:95:com.ru.astron.xmpp.stanzas.MessagePacket generateKeyTransportMessage(rocks.xmpp.addr.Jid,com.ru.astron.crypto.axolotl.XmppAxolotlMessage) -> generateKeyTransportMessage
    122:147:com.ru.astron.xmpp.stanzas.MessagePacket generatePgpChat(com.ru.astron.entities.Message) -> generatePgpChat
    200:209:com.ru.astron.xmpp.stanzas.MessagePacket invite(com.ru.astron.entities.Conversation,rocks.xmpp.addr.Jid) -> invite
    33:63:com.ru.astron.xmpp.stanzas.MessagePacket preparePacket(com.ru.astron.entities.Message) -> preparePacket
    213:221:com.ru.astron.xmpp.stanzas.MessagePacket received(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.MessagePacket,java.util.ArrayList,int) -> received
    225:230:com.ru.astron.xmpp.stanzas.MessagePacket received(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,java.lang.String) -> received
com.ru.astron.generator.PresenceGenerator -> com.ru.astron.generator.PresenceGenerator:
    17:18:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    75:79:com.ru.astron.xmpp.stanzas.PresencePacket leave(com.ru.astron.entities.MucOptions) -> leave
    29:34:com.ru.astron.xmpp.stanzas.PresencePacket requestPresenceUpdatesFrom(com.ru.astron.entities.Contact) -> requestPresenceUpdatesFrom
    50:50:com.ru.astron.xmpp.stanzas.PresencePacket selfPresence(com.ru.astron.entities.Account,com.ru.astron.entities.Presence$Status) -> selfPresence
    54:71:com.ru.astron.xmpp.stanzas.PresencePacket selfPresence(com.ru.astron.entities.Account,com.ru.astron.entities.Presence$Status,boolean) -> selfPresence
    83:86:com.ru.astron.xmpp.stanzas.PresencePacket sendOfflinePresence(com.ru.astron.entities.Account) -> sendOfflinePresence
    46:46:com.ru.astron.xmpp.stanzas.PresencePacket sendPresenceUpdatesTo(com.ru.astron.entities.Contact) -> sendPresenceUpdatesTo
    38:38:com.ru.astron.xmpp.stanzas.PresencePacket stopPresenceUpdatesFrom(com.ru.astron.entities.Contact) -> stopPresenceUpdatesFrom
    42:42:com.ru.astron.xmpp.stanzas.PresencePacket stopPresenceUpdatesTo(com.ru.astron.entities.Contact) -> stopPresenceUpdatesTo
    21:25:com.ru.astron.xmpp.stanzas.PresencePacket subscription(java.lang.String,com.ru.astron.entities.Contact) -> subscription
com.ru.astron.http.AesGcmURLStreamHandler -> com.ru.astron.http.AesGcmURLStreamHandler:
    15:15:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    21:21:java.net.URLConnection openConnection(java.net.URL) -> openConnection
com.ru.astron.http.CustomURLStreamHandlerFactory -> com.ru.astron.http.CustomURLStreamHandlerFactory:
    6:6:void <init>() -> <init>
    10:15:java.net.URLStreamHandler createURLStreamHandler(java.lang.String) -> createURLStreamHandler
com.ru.astron.http.HttpConnectionManager -> com.ru.astron.http.HttpConnectionManager:
    35:36:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    75:80:boolean checkConnection(com.ru.astron.entities.Message) -> checkConnection
    43:44:void createNewDownloadConnection(com.ru.astron.entities.Message) -> createNewDownloadConnection
    47:57:void createNewDownloadConnection(com.ru.astron.entities.Message,boolean) -> createNewDownloadConnection
    61:71:void createNewUploadConnection(com.ru.astron.entities.Message,boolean) -> createNewUploadConnection
    84:86:void finishConnection(com.ru.astron.http.HttpDownloadConnection) -> finishConnection
    90:92:void finishUploadConnection(com.ru.astron.http.HttpUploadConnection) -> finishUploadConnection
    39:39:java.net.Proxy getProxy() -> getProxy
    97:109:void setupTrustManager(javax.net.ssl.HttpsURLConnection,boolean) -> setupTrustManager
com.ru.astron.http.HttpDownloadConnection -> com.ru.astron.http.HttpDownloadConnection:
    49:54:void <init>(com.ru.astron.entities.Message,com.ru.astron.http.HttpConnectionManager) -> <init>
    34:34:java.net.URL access$000(com.ru.astron.http.HttpDownloadConnection) -> access$000
    34:34:java.net.URL access$002(com.ru.astron.http.HttpDownloadConnection,java.net.URL) -> access$002
    34:34:void access$100(com.ru.astron.http.HttpDownloadConnection,int) -> access$100
    34:34:com.ru.astron.http.Method access$1000(com.ru.astron.http.HttpDownloadConnection) -> access$1000
    34:34:void access$1100(com.ru.astron.http.HttpDownloadConnection) -> access$1100
    34:34:void access$1200(com.ru.astron.http.HttpDownloadConnection,long) -> access$1200
    34:34:boolean access$1300(com.ru.astron.http.HttpDownloadConnection) -> access$1300
    34:34:com.ru.astron.entities.Message access$200(com.ru.astron.http.HttpDownloadConnection) -> access$200
    34:34:com.ru.astron.services.XmppConnectionService access$300(com.ru.astron.http.HttpDownloadConnection) -> access$300
    34:34:void access$400(com.ru.astron.http.HttpDownloadConnection,java.lang.Exception) -> access$400
    34:34:boolean access$502(com.ru.astron.http.HttpDownloadConnection,boolean) -> access$502
    34:34:com.ru.astron.entities.DownloadableFile access$600(com.ru.astron.http.HttpDownloadConnection) -> access$600
    34:34:com.ru.astron.http.HttpConnectionManager access$700(com.ru.astron.http.HttpDownloadConnection) -> access$700
    34:34:void access$800(com.ru.astron.http.HttpDownloadConnection,boolean) -> access$800
    34:34:boolean access$900(com.ru.astron.http.HttpDownloadConnection) -> access$900
    126:133:void cancel() -> cancel
    152:154:void changeStatus(int) -> changeStatus
    121:122:void checkFileSize(boolean) -> checkFileSize
    117:118:void download(boolean) -> download
    136:149:void finish() -> finish
    180:183:long getFileSize() -> getFileSize
    193:193:com.ru.astron.entities.Message getMessage() -> getMessage
    189:189:int getProgress() -> getProgress
    175:175:int getStatus() -> getStatus
    71:114:void init(boolean) -> init
    145:148:void lambda$finish$0(boolean) -> lambda$finish$0$HttpDownloadConnection
    157:166:void showToastForException(java.lang.Exception) -> showToastForException
    58:66:boolean start() -> start
    169:171:void updateProgress(long) -> updateProgress
com.ru.astron.http.HttpDownloadConnection$FileDownloader -> com.ru.astron.http.HttpDownloadConnection$FileDownloader:
    330:332:void <init>(com.ru.astron.http.HttpDownloadConnection,boolean) -> <init>
    355:438:void download() -> download
    337:352:void run() -> run
    443:455:void updateImageBounds() -> updateImageBounds
com.ru.astron.http.HttpDownloadConnection$FileSizeChecker -> com.ru.astron.http.HttpDownloadConnection$FileSizeChecker:
    200:202:void <init>(com.ru.astron.http.HttpDownloadConnection,boolean) -> <init>
    252:256:void check() -> check
    219:233:void lambda$retrieveUrl$0(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$retrieveUrl$0$HttpDownloadConnection$FileSizeChecker
    237:247:void retrieveFailed(java.lang.Exception) -> retrieveFailed
    274:316:long retrieveFileSize() -> retrieveFileSize
    215:234:void retrieveUrl() -> retrieveUrl
    207:212:void run() -> run
com.ru.astron.http.HttpUploadConnection -> com.ru.astron.http.HttpUploadConnection:
    32:32:void <clinit>() -> <clinit>
    53:60:void <init>(com.ru.astron.entities.Message,com.ru.astron.http.Method,com.ru.astron.http.HttpConnectionManager) -> <init>
    30:30:boolean access$000(com.ru.astron.http.HttpUploadConnection) -> access$000
    30:30:com.ru.astron.http.SlotRequester$Slot access$102(com.ru.astron.http.HttpUploadConnection,com.ru.astron.http.SlotRequester$Slot) -> access$102
    30:30:void access$200(com.ru.astron.http.HttpUploadConnection,java.lang.String) -> access$200
    30:30:void access$300(com.ru.astron.http.HttpUploadConnection) -> access$300
    87:88:void cancel() -> cancel
    91:93:void fail(java.lang.String) -> fail
    96:98:void finish() -> finish
    74:74:long getFileSize() -> getFileSize
    240:240:com.ru.astron.entities.Message getMessage() -> getMessage
    79:82:int getProgress() -> getProgress
    69:69:int getStatus() -> getStatus
    101:149:void init(boolean) -> init
    64:64:boolean start() -> start
    152:235:void upload() -> upload
com.ru.astron.http.HttpUploadConnection$1 -> com.ru.astron.http.HttpUploadConnection$1:
    133:133:void <init>(com.ru.astron.http.HttpUploadConnection) -> <init>
    144:145:void failure(java.lang.String) -> failure
    138:138:void lambda$success$0(com.ru.astron.http.HttpUploadConnection) -> lambda$success$0
    136:140:void success(com.ru.astron.http.SlotRequester$Slot) -> success
com.ru.astron.http.Method -> com.ru.astron.http.Method:
    36:35:void <clinit>() -> <clinit>
    35:35:void <init>(java.lang.String,int) -> <init>
    39:50:com.ru.astron.http.Method determine(com.ru.astron.entities.Account) -> determine
    35:35:com.ru.astron.http.Method valueOf(java.lang.String) -> valueOf
    35:35:com.ru.astron.http.Method[] values() -> values
com.ru.astron.http.P1S3UrlStreamHandler -> com.ru.astron.http.P1S3UrlStreamHandler:
    39:39:void <init>() -> <init>
    49:50:java.net.URL of(java.lang.String,java.lang.String) -> of
    57:59:java.net.URL of(com.ru.astron.xml.Element) -> of
    45:45:java.net.URLConnection openConnection(java.net.URL) -> openConnection
com.ru.astron.http.SlotRequester -> com.ru.astron.http.SlotRequester:
    52:54:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    99:131:void lambda$requestHttpUpload$1(java.lang.String,com.ru.astron.http.SlotRequester$OnSlotRequested,com.ru.astron.entities.Account,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$requestHttpUpload$1
    71:92:void lambda$requestHttpUploadLegacy$0(java.lang.String,com.ru.astron.http.SlotRequester$OnSlotRequested,com.ru.astron.entities.Account,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$requestHttpUploadLegacy$0
    138:156:void lambda$requestP1S3$2(java.lang.String,java.lang.String,com.ru.astron.http.SlotRequester$OnSlotRequested,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$requestP1S3$2
    57:66:void request(com.ru.astron.http.Method,com.ru.astron.entities.Account,com.ru.astron.entities.DownloadableFile,java.lang.String,java.lang.String,com.ru.astron.http.SlotRequester$OnSlotRequested) -> request
    97:133:void requestHttpUpload(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,com.ru.astron.entities.DownloadableFile,java.lang.String,com.ru.astron.http.SlotRequester$OnSlotRequested) -> requestHttpUpload
    69:94:void requestHttpUploadLegacy(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,com.ru.astron.entities.DownloadableFile,java.lang.String,com.ru.astron.http.SlotRequester$OnSlotRequested) -> requestHttpUploadLegacy
    136:158:void requestP1S3(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,java.lang.String,java.lang.String,com.ru.astron.http.SlotRequester$OnSlotRequested) -> requestP1S3
com.ru.astron.http.SlotRequester$Slot -> com.ru.astron.http.SlotRequester$Slot:
    169:169:void <init>(java.net.URL,com.ru.astron.http.SlotRequester$1) -> <init>
    174:176:void <init>(java.net.URL) -> <init>
    169:169:java.net.URL access$102(com.ru.astron.http.SlotRequester$Slot,java.net.URL) -> access$102
    169:169:java.util.HashMap access$200(com.ru.astron.http.SlotRequester$Slot) -> access$200
    169:169:java.util.HashMap access$202(com.ru.astron.http.SlotRequester$Slot,java.util.HashMap) -> access$202
    183:183:java.net.URL getGetUrl() -> getGetUrl
    187:187:java.util.HashMap getHeaders() -> getHeaders
    179:179:java.net.URL getPutUrl() -> getPutUrl
com.ru.astron.parser.AbstractParser -> com.ru.astron.parser.AbstractParser:
    25:27:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    96:100:java.lang.String avatarData(com.ru.astron.xml.Element) -> avatarData
    131:141:java.lang.String extractErrorMessage(com.ru.astron.xml.Element) -> extractErrorMessage
    152:163:java.util.List orderedElementNames(java.util.List) -> orderedElementNames
    104:104:com.ru.astron.entities.MucOptions$User parseItem(com.ru.astron.entities.Conversation,com.ru.astron.xml.Element) -> parseItem
    108:127:com.ru.astron.entities.MucOptions$User parseItem(com.ru.astron.entities.Conversation,com.ru.astron.xml.Element,rocks.xmpp.addr.Jid) -> parseItem
    30:30:java.lang.Long parseTimestamp(com.ru.astron.xml.Element,java.lang.Long) -> parseTimestamp
    34:62:java.lang.Long parseTimestamp(com.ru.astron.xml.Element,java.lang.Long,boolean) -> parseTimestamp
    67:67:long parseTimestamp(com.ru.astron.xml.Element) -> parseTimestamp
    71:87:long parseTimestamp(java.lang.String) -> parseTimestamp
    145:148:java.lang.String prefixError(java.util.List) -> prefixError
    91:93:void updateLastseen(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid) -> updateLastseen
com.ru.astron.parser.IqParser -> com.ru.astron.parser.IqParser:
    41:42:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    90:98:java.lang.String avatarData(com.ru.astron.xmpp.stanzas.IqPacket) -> avatarData
    249:262:org.whispersystems.libsignal.state.PreKeyBundle bundle(com.ru.astron.xmpp.stanzas.IqPacket) -> bundle
    115:133:java.util.Set deviceIds(com.ru.astron.xml.Element) -> deviceIds
    102:110:com.ru.astron.xml.Element getItem(com.ru.astron.xmpp.stanzas.IqPacket) -> getItem
    176:186:org.whispersystems.libsignal.IdentityKey identityKey(com.ru.astron.xml.Element) -> identityKey
    285:287:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
    190:221:java.util.Map preKeyPublics(com.ru.astron.xmpp.stanzas.IqPacket) -> preKeyPublics
    270:280:java.util.List preKeys(com.ru.astron.xmpp.stanzas.IqPacket) -> preKeys
    45:87:void rosterItems(com.ru.astron.entities.Account,com.ru.astron.xml.Element) -> rosterItems
    137:144:java.lang.Integer signedPreKeyId(com.ru.astron.xml.Element) -> signedPreKeyId
    149:159:org.whispersystems.libsignal.ecc.ECPublicKey signedPreKeyPublic(com.ru.astron.xml.Element) -> signedPreKeyPublic
    163:171:byte[] signedPreKeySignature(com.ru.astron.xml.Element) -> signedPreKeySignature
com.ru.astron.parser.MessageParser -> com.ru.astron.parser.MessageParser:
    46:46:void <clinit>() -> <clinit>
    49:50:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    853:856:void activateGracePeriod(com.ru.astron.entities.Account) -> activateGracePeriod
    821:825:void dismissNotification(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,com.ru.astron.services.MessageArchiveService$Query) -> dismissNotification
    84:108:boolean extractChatState(com.ru.astron.entities.Conversation,boolean,com.ru.astron.xmpp.stanzas.MessagePacket) -> extractChatState
    149:174:com.ru.astron.parser.MessageParser$Invite extractInvite(com.ru.astron.entities.Account,com.ru.astron.xml.Element) -> extractInvite
    55:63:java.lang.String extractStanzaId(com.ru.astron.xml.Element,boolean,com.ru.astron.entities.Conversation) -> extractStanzaId
    67:74:java.lang.String extractStanzaId(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid) -> extractStanzaId
    78:80:rocks.xmpp.addr.Jid getTrueCounterpart(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid) -> getTrueCounterpart
    259:270:boolean handleErrorMessage(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.MessagePacket) -> handleErrorMessage
    275:343:void onMessagePacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.MessagePacket) -> onMessagePacketReceived
    112:118:com.ru.astron.entities.Message parseAxolotlChat(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid,com.ru.astron.entities.Conversation,int,boolean,boolean) -> parseAxolotlChat
    231:240:void parseDeleteEvent(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid,com.ru.astron.entities.Account) -> parseDeleteEvent
    178:228:void parseEvent(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid,com.ru.astron.entities.Account) -> parseEvent
    828:850:void processMessageReceipts(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.MessagePacket,com.ru.astron.services.MessageArchiveService$Query) -> processMessageReceipts
    243:256:void setNick(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,java.lang.String) -> setNick
com.ru.astron.parser.MessageParser$Invite -> com.ru.astron.parser.MessageParser$Invite:
    863:867:void <init>(com.ru.astron.parser.MessageParser,rocks.xmpp.addr.Jid,java.lang.String,com.ru.astron.entities.Contact) -> <init>
    870:880:boolean execute(com.ru.astron.entities.Account) -> execute
com.ru.astron.parser.PresenceParser -> com.ru.astron.parser.PresenceParser:
    34:35:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    237:248:java.util.List getStatusCodes(com.ru.astron.xml.Element) -> getStatusCodes
    226:234:void invokeRenameListener(com.ru.astron.entities.MucOptions,boolean) -> invokeRenameListener
    367:376:void onPresencePacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.PresencePacket) -> onPresencePacketReceived
    38:55:void parseConferencePresence(com.ru.astron.xmpp.stanzas.PresencePacket,com.ru.astron.entities.Account) -> parseConferencePresence
    252:255:void parseContactPresence(com.ru.astron.xmpp.stanzas.PresencePacket,com.ru.astron.entities.Account) -> parseContactPresence
    58:223:void processConferencePresence(com.ru.astron.xmpp.stanzas.PresencePacket,com.ru.astron.entities.Conversation) -> processConferencePresence
com.ru.astron.persistance.DatabaseBackend -> com.ru.astron.persistance.DatabaseBackend:
    67:175:void <clinit>() -> <clinit>
    178:179:void <init>(android.content.Context) -> <init>
    550:623:void canonicalizeJids(android.database.sqlite.SQLiteDatabase) -> canonicalizeJids
    1193:1196:boolean containsSession(com.ru.astron.entities.Account,org.whispersystems.libsignal.SignalProtocolAddress) -> containsSession
    636:638:void createAccount(com.ru.astron.entities.Account) -> createAccount
    626:628:void createConversation(com.ru.astron.entities.Conversation) -> createConversation
    182:185:android.content.ContentValues createFingerprintStatusContentValues(com.ru.astron.crypto.axolotl.FingerprintStatus$Trust,boolean) -> createFingerprintStatusContentValues
    631:633:void createMessage(com.ru.astron.entities.Message) -> createMessage
    986:989:boolean deleteAccount(com.ru.astron.entities.Account) -> deleteAccount
    1043:1052:void deleteMessagesInConversation(com.ru.astron.entities.Conversation) -> deleteMessagesInConversation
    1280:1282:int deletePreKey(com.ru.astron.entities.Account,int) -> deletePreKey
    1215:1223:void deleteSession(android.database.sqlite.SQLiteDatabase,com.ru.astron.entities.Account,org.whispersystems.libsignal.SignalProtocolAddress) -> deleteSession
    1055:1062:void expireOldMessages(long) -> expireOldMessages
    914:932:com.ru.astron.entities.Conversation findConversation(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid) -> findConversation
    646:663:com.ru.astron.entities.ServiceDiscoveryResult findDiscoveryResult(java.lang.String,java.lang.String) -> findDiscoveryResult
    674:673:com.ru.astron.utils.Resolver$Result findResolverResult(java.lang.String) -> findResolverResult
    948:959:java.util.List getAccountJids(boolean) -> getAccountJids
    943:944:java.util.List getAccounts() -> getAccounts
    968:975:java.util.List getAccounts(android.database.sqlite.SQLiteDatabase) -> getAccounts
    715:729:java.util.concurrent.CopyOnWriteArrayList getConversations(int) -> getConversations
    1235:1245:android.database.Cursor getCursorForPreKey(com.ru.astron.entities.Account,int) -> getCursorForPreKey
    1120:1124:android.database.Cursor getCursorForSession(com.ru.astron.entities.Account,org.whispersystems.libsignal.SignalProtocolAddress) -> getCursorForSession
    1289:1298:android.database.Cursor getCursorForSignedPreKey(com.ru.astron.entities.Account,int) -> getCursorForSignedPreKey
    863:872:java.util.List getFilePathInfo() -> getFilePathInfo
    1525:1534:com.ru.astron.crypto.axolotl.FingerprintStatus getFingerprintStatus(com.ru.astron.entities.Account,java.lang.String) -> getFingerprintStatus
    1644:1657:java.util.List getFrequentContacts(int) -> getFrequentContacts
    1382:1383:android.database.Cursor getIdentityKeyCursor(com.ru.astron.entities.Account,java.lang.String,boolean) -> getIdentityKeyCursor
    1387:1387:android.database.Cursor getIdentityKeyCursor(android.database.sqlite.SQLiteDatabase,com.ru.astron.entities.Account,java.lang.String,boolean) -> getIdentityKeyCursor
    1391:1392:android.database.Cursor getIdentityKeyCursor(com.ru.astron.entities.Account,java.lang.String) -> getIdentityKeyCursor
    1396:1396:android.database.Cursor getIdentityKeyCursor(android.database.sqlite.SQLiteDatabase,com.ru.astron.entities.Account,java.lang.String) -> getIdentityKeyCursor
    1400:1425:android.database.Cursor getIdentityKeyCursor(android.database.sqlite.SQLiteDatabase,com.ru.astron.entities.Account,java.lang.String,java.lang.Boolean,java.lang.String) -> getIdentityKeyCursor
    189:188:com.ru.astron.persistance.DatabaseBackend getInstance(android.content.Context) -> getInstance
    1176:1189:java.util.List getKnownSignalAddresses(com.ru.astron.entities.Account) -> getKnownSignalAddresses
    1101:1116:com.ru.astron.xmpp.mam.MamReference getLastClearDate(com.ru.astron.entities.Account) -> getLastClearDate
    1065:1078:com.ru.astron.xmpp.mam.MamReference getLastMessageReceived(com.ru.astron.entities.Account) -> getLastMessageReceived
    1087:1097:long getLastTimeFingerprintUsed(com.ru.astron.entities.Account,java.lang.String) -> getLastTimeFingerprintUsed
    767:770:android.database.Cursor getMessageSearchCursor(java.util.List) -> getMessageSearchCursor
    733:733:java.util.ArrayList getMessages(com.ru.astron.entities.Conversation,int) -> getMessages
    737:763:java.util.ArrayList getMessages(com.ru.astron.entities.Conversation,int,long) -> getMessages
    704:711:java.util.List getPresenceTemplates() -> getPresenceTemplates
    876:885:java.util.List getRelativeFilePaths(java.lang.String,rocks.xmpp.addr.Jid,int) -> getRelativeFilePaths
    1338:1353:int getSignedPreKeysCount(com.ru.astron.entities.Account) -> getSignedPreKeysCount
    1150:1151:java.util.List getSubDeviceSessions(com.ru.astron.entities.Account,org.whispersystems.libsignal.SignalProtocolAddress) -> getSubDeviceSessions
    1155:1172:java.util.List getSubDeviceSessions(android.database.sqlite.SQLiteDatabase,com.ru.astron.entities.Account,org.whispersystems.libsignal.SignalProtocolAddress) -> getSubDeviceSessions
    641:643:void insertDiscoveryResult(com.ru.astron.entities.ServiceDiscoveryResult) -> insertDiscoveryResult
    695:701:void insertPresenceTemplate(com.ru.astron.entities.PresenceTemplate) -> insertPresenceTemplate
    1451:1451:java.util.Set loadIdentityKeys(com.ru.astron.entities.Account,java.lang.String) -> loadIdentityKeys
    1455:1475:java.util.Set loadIdentityKeys(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> loadIdentityKeys
    1429:1430:org.whispersystems.libsignal.IdentityKeyPair loadOwnIdentityKeyPair(com.ru.astron.entities.Account) -> loadOwnIdentityKeyPair
    1434:1447:org.whispersystems.libsignal.IdentityKeyPair loadOwnIdentityKeyPair(android.database.sqlite.SQLiteDatabase,com.ru.astron.entities.Account) -> loadOwnIdentityKeyPair
    1249:1260:org.whispersystems.libsignal.state.PreKeyRecord loadPreKey(com.ru.astron.entities.Account,int) -> loadPreKey
    1134:1146:org.whispersystems.libsignal.state.SessionRecord loadSession(com.ru.astron.entities.Account,org.whispersystems.libsignal.SignalProtocolAddress) -> loadSession
    1302:1313:org.whispersystems.libsignal.state.SignedPreKeyRecord loadSignedPreKey(com.ru.astron.entities.Account,int) -> loadSignedPreKey
    808:833:java.util.List markFileAsDeleted(java.io.File,boolean) -> markFileAsDeleted
    837:847:void markFileAsDeleted(java.util.List) -> markFileAsDeleted
    850:860:void markFilesAsChanged(java.util.List) -> markFilesAsChanged
    1479:1487:long numTrustedKeys(com.ru.astron.entities.Account,java.lang.String) -> numTrustedKeys
    197:199:void onConfigure(android.database.sqlite.SQLiteDatabase) -> onConfigure
    203:263:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    267:544:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    1010:1018:void readRoster(com.ru.astron.entities.Roster) -> readRoster
    1611:1620:void recreateAxolotlDb(android.database.sqlite.SQLiteDatabase) -> recreateAxolotlDb
    667:671:void saveResolverResult(java.lang.String,com.ru.astron.utils.Resolver$Result) -> saveResolverResult
    1538:1539:boolean setIdentityKeyTrust(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> setIdentityKeyTrust
    1543:1551:boolean setIdentityKeyTrust(android.database.sqlite.SQLiteDatabase,com.ru.astron.entities.Account,java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> setIdentityKeyTrust
    1497:1511:void storeIdentityKey(com.ru.astron.entities.Account,java.lang.String,boolean,java.lang.String,java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> storeIdentityKey
    1602:1603:void storeIdentityKey(com.ru.astron.entities.Account,java.lang.String,org.whispersystems.libsignal.IdentityKey,com.ru.astron.crypto.axolotl.FingerprintStatus) -> storeIdentityKey
    1606:1607:void storeOwnIdentityKeyPair(com.ru.astron.entities.Account,org.whispersystems.libsignal.IdentityKeyPair) -> storeOwnIdentityKeyPair
    1271:1277:void storePreKey(com.ru.astron.entities.Account,org.whispersystems.libsignal.state.PreKeyRecord) -> storePreKey
    1514:1522:void storePreVerification(com.ru.astron.entities.Account,java.lang.String,java.lang.String,com.ru.astron.crypto.axolotl.FingerprintStatus) -> storePreVerification
    1200:1207:void storeSession(com.ru.astron.entities.Account,org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.state.SessionRecord) -> storeSession
    1364:1370:void storeSignedPreKey(com.ru.astron.entities.Account,org.whispersystems.libsignal.state.SignedPreKeyRecord) -> storeSignedPreKey
    979:982:boolean updateAccount(com.ru.astron.entities.Account) -> updateAccount
    936:940:void updateConversation(com.ru.astron.entities.Conversation) -> updateConversation
    993:1000:boolean updateMessage(com.ru.astron.entities.Message,boolean) -> updateMessage
    1004:1006:boolean updateMessage(com.ru.astron.entities.Message,java.lang.String) -> updateMessage
    1623:1641:void wipeAxolotlDb(com.ru.astron.entities.Account) -> wipeAxolotlDb
    1021:1040:void writeRoster(com.ru.astron.entities.Roster) -> writeRoster
com.ru.astron.persistance.DatabaseBackend$FilePath -> com.ru.astron.persistance.DatabaseBackend$FilePath:
    888:888:void <init>(java.lang.String,java.lang.String,com.ru.astron.persistance.DatabaseBackend$1) -> <init>
    892:895:void <init>(java.lang.String,java.lang.String) -> <init>
com.ru.astron.persistance.DatabaseBackend$FilePathInfo -> com.ru.astron.persistance.DatabaseBackend$FilePathInfo:
    898:898:void <init>(java.lang.String,java.lang.String,boolean,com.ru.astron.persistance.DatabaseBackend$1) -> <init>
    902:904:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    907:909:boolean setDeleted(boolean) -> setDeleted
com.ru.astron.persistance.FileBackend -> com.ru.astron.persistance.FileBackend:
    69:71:void <clinit>() -> <clinit>
    79:81:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    112:137:boolean allFilesUnderSize(android.content.Context,java.util.List,long) -> allFilesUnderSize
    224:227:int calcSampleSize(java.io.File,int) -> calcSampleSize
    232:245:int calcSampleSize(android.graphics.BitmapFactory$Options,int) -> calcSampleSize
    1167:1170:int calcSampleSize(android.net.Uri,int) -> calcSampleSize
    344:350:void close(java.io.Closeable) -> close
    353:359:void close(java.net.Socket) -> close
    526:532:java.util.List convertToAttachments(java.util.List) -> convertToAttachments
    592:623:void copyFileToPrivateStorage(java.io.File,android.net.Uri) -> copyFileToPrivateStorage
    628:640:void copyFileToPrivateStorage(com.ru.astron.entities.Message,android.net.Uri,java.lang.String) -> copyFileToPrivateStorage
    673:727:void copyImageToPrivateStorage(java.io.File,android.net.Uri,int) -> copyImageToPrivateStorage
    732:734:void copyImageToPrivateStorage(java.io.File,android.net.Uri) -> copyImageToPrivateStorage
    737:750:void copyImageToPrivateStorage(com.ru.astron.entities.Message,android.net.Uri) -> copyImageToPrivateStorage
    181:185:android.graphics.Paint createAntiAliasingPaint() -> createAntiAliasingPaint
    401:411:void createNoMedia(java.io.File) -> createNoMedia
    1103:1137:android.graphics.Bitmap cropCenter(android.net.Uri,int,int) -> cropCenter
    1076:1098:android.graphics.Bitmap cropCenterSquare(android.net.Uri,int) -> cropCenterSquare
    1146:1163:android.graphics.Bitmap cropCenterSquare(android.graphics.Bitmap,int) -> cropCenterSquare
    857:867:android.graphics.Bitmap cropCenterSquareVideo(android.net.Uri,int) -> cropCenterSquareVideo
    471:476:boolean deleteFile(com.ru.astron.entities.Message) -> deleteFile
    826:834:void drawOverlay(android.graphics.Bitmap,int,float) -> drawOverlay
    335:339:int extractRotationFromMediaRetriever(android.media.MediaMetadataRetriever) -> extractRotationFromMediaRetriever
    378:382:boolean fileIsInFilesDir(android.content.Context,android.net.Uri) -> fileIsInFilesDir
    149:149:java.lang.String getAppMediaDirectory(android.content.Context) -> getAppMediaDirectory
    209:209:java.lang.String getAuthority(android.content.Context) -> getAuthority
    1239:1246:android.graphics.Bitmap getAvatar(java.lang.String,int) -> getAvatar
    1068:1068:java.lang.String getAvatarPath(java.lang.String) -> getAvatarPath
    1072:1072:android.net.Uri getAvatarUri(java.lang.String) -> getAvatarUri
    153:153:java.lang.String getBackupDirectory(android.content.Context) -> getBackupDirectory
    157:157:java.lang.String getBackupDirectory(java.lang.String) -> getBackupDirectory
    144:144:java.lang.String getConversationsDirectory(android.content.Context,java.lang.String) -> getConversationsDirectory
    536:536:java.lang.String getConversationsDirectory(java.lang.String) -> getConversationsDirectory
    643:669:java.lang.String getExtensionFromUri(android.net.Uri) -> getExtensionFromUri
    481:481:com.ru.astron.entities.DownloadableFile getFile(com.ru.astron.entities.Message) -> getFile
    510:521:com.ru.astron.entities.DownloadableFile getFile(com.ru.astron.entities.Message,boolean) -> getFile
    485:485:com.ru.astron.entities.DownloadableFile getFileForPath(java.lang.String) -> getFileForPath
    490:501:com.ru.astron.entities.DownloadableFile getFileForPath(java.lang.String,java.lang.String) -> getFileForPath
    98:107:long getFileSize(android.content.Context,android.net.Uri) -> getFileSize
    815:821:android.graphics.Bitmap getFullsizeImagePreview(java.io.File,int) -> getFullsizeImagePreview
    1218:1225:com.ru.astron.persistance.FileBackend$Dimensions getImageDimensions(java.io.File) -> getImageDimensions
    1209:1213:int getMediaRuntime(java.io.File) -> getMediaRuntime
    414:423:android.net.Uri getMediaUri(android.content.Context,java.io.File) -> getMediaUri
    588:588:java.lang.String getOriginalPath(android.net.Uri) -> getOriginalPath
    900:918:com.ru.astron.xmpp.pep.Avatar getPepAvatar(android.net.Uri,int,android.graphics.Bitmap$CompressFormat) -> getPepAvatar
    937:968:com.ru.astron.xmpp.pep.Avatar getPepAvatar(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> getPepAvatar
    249:253:android.graphics.Bitmap getPreviewForUri(com.ru.astron.ui.util.Attachment,int,boolean) -> getPreviewForUri
    765:765:int getRotation(java.io.File) -> getRotation
    769:774:int getRotation(android.net.Uri) -> getRotation
    975:1005:com.ru.astron.xmpp.pep.Avatar getStoredPepAvatar(java.lang.String) -> getStoredPepAvatar
    189:189:java.lang.String getTakePhotoPath() -> getTakePhotoPath
    892:895:android.net.Uri getTakePhotoUri() -> getTakePhotoUri
    781:811:android.graphics.Bitmap getThumbnail(com.ru.astron.entities.Message,int,boolean) -> getThumbnail
    922:927:com.ru.astron.xmpp.pep.Avatar getUncompressedAvatar(android.net.Uri) -> getUncompressedAvatar
    193:198:android.net.Uri getUriForFile(android.content.Context,java.io.File) -> getUriForFile
    274:278:com.ru.astron.persistance.FileBackend$Dimensions getVideoDimensions(android.content.Context,android.net.Uri) -> getVideoDimensions
    299:301:com.ru.astron.persistance.FileBackend$Dimensions getVideoDimensions(android.media.MediaMetadataRetriever) -> getVideoDimensions
    1229:1233:com.ru.astron.persistance.FileBackend$Dimensions getVideoDimensions(java.io.File) -> getVideoDimensions
    284:289:com.ru.astron.persistance.FileBackend$Dimensions getVideoDimensionsOfFrame(android.media.MediaMetadataRetriever) -> getVideoDimensionsOfFrame
    872:884:android.graphics.Bitmap getVideoPreview(java.io.File,int) -> getVideoPreview
    213:220:boolean hasAlpha(android.graphics.Bitmap) -> hasAlpha
    1012:1013:boolean isAvatarCached(com.ru.astron.xmpp.pep.Avatar) -> isAvatarCached
    84:84:boolean isInDirectoryThatShouldNotBeScanned(android.content.Context,java.io.File) -> isInDirectoryThatShouldNotBeScanned
    88:93:boolean isInDirectoryThatShouldNotBeScanned(android.content.Context,java.lang.String) -> isInDirectoryThatShouldNotBeScanned
    505:506:boolean isInternalFile(java.io.File) -> isInternalFile
    176:177:boolean isPathBlacklisted(java.lang.String) -> isPathBlacklisted
    840:853:boolean paintOverlayBlack(android.graphics.Bitmap) -> paintOverlayBlack
    540:543:android.graphics.Bitmap resize(android.graphics.Bitmap,int) -> resize
    161:172:android.graphics.Bitmap rotate(android.graphics.Bitmap,int) -> rotate
    1018:1059:boolean save(com.ru.astron.xmpp.pep.Avatar) -> save
    754:760:boolean unusualBounds(android.net.Uri) -> unusualBounds
    1174:1175:void updateFileParams(com.ru.astron.entities.Message) -> updateFileParams
    1178:1204:void updateFileParams(com.ru.astron.entities.Message,java.net.URL) -> updateFileParams
    435:436:void updateMediaScanner(java.io.File) -> updateMediaScanner
    439:468:void updateMediaScanner(java.io.File,java.lang.Runnable) -> updateMediaScanner
    565:567:boolean useImageAsIs(android.net.Uri) -> useImageAsIs
    362:363:boolean weOwnFile(android.content.Context,android.net.Uri) -> weOwnFile
    389:394:boolean weOwnFileLollipop(android.net.Uri) -> weOwnFileLollipop
com.ru.astron.persistance.FileBackend$1 -> com.ru.astron.persistance.FileBackend$1:
    440:440:void <init>(com.ru.astron.persistance.FileBackend,java.lang.Runnable,java.io.File) -> <init>
    444:444:void onMediaScannerConnected() -> onMediaScannerConnected
    448:456:void onScanCompleted(java.lang.String,android.net.Uri) -> onScanCompleted
com.ru.astron.persistance.FileBackend$2 -> com.ru.astron.persistance.FileBackend$2:
    737:737:void <clinit>() -> <clinit>
com.ru.astron.persistance.FileBackend$Dimensions -> com.ru.astron.persistance.FileBackend$Dimensions:
    1257:1260:void <init>(int,int) -> <init>
    1263:1263:int getMin() -> getMin
    1267:1267:boolean valid() -> valid
com.ru.astron.persistance.FileBackend$FileCopyException -> com.ru.astron.persistance.FileBackend$FileCopyException:
    1285:1287:void <init>(com.ru.astron.persistance.FileBackend,int) -> <init>
    1290:1290:int getResId() -> getResId
com.ru.astron.persistance.FileBackend$NotAVideoFile -> com.ru.astron.persistance.FileBackend$NotAVideoFile:
    1273:1274:void <init>(java.lang.Throwable) -> <init>
    1277:1278:void <init>() -> <init>
com.ru.astron.services.AbstractConnectionManager -> com.ru.astron.services.AbstractConnectionManager:
    36:36:void <clinit>() -> <clinit>
    39:41:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    57:57:java.io.OutputStream createAppendedOutputStream(com.ru.astron.entities.DownloadableFile) -> createAppendedOutputStream
    61:61:java.io.OutputStream createOutputStream(com.ru.astron.entities.DownloadableFile) -> createOutputStream
    67:73:java.io.OutputStream createOutputStream(com.ru.astron.entities.DownloadableFile,boolean) -> createOutputStream
    109:110:android.os.PowerManager$WakeLock createWakeLock(java.lang.String) -> createWakeLock
    92:92:long getAutoAcceptFileSize() -> getAutoAcceptFileSize
    88:88:com.ru.astron.services.XmppConnectionService getXmppConnectionService() -> getXmppConnectionService
    96:96:boolean hasStoragePermission() -> hasStoragePermission
    100:105:void updateConversationUi(boolean) -> updateConversationUi
    44:51:java.io.InputStream upgrade(com.ru.astron.entities.DownloadableFile,java.io.InputStream) -> upgrade
com.ru.astron.services.AbstractQuickConversationsService -> com.ru.astron.services.AbstractQuickConversationsService:
    9:11:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    20:20:boolean isConversations() -> isConversations
    16:16:boolean isQuicksy() -> isQuicksy
com.ru.astron.services.AttachFileToConversationRunnable -> com.ru.astron.services.AttachFileToConversationRunnable:
    42:52:void <init>(com.ru.astron.services.XmppConnectionService,android.net.Uri,java.lang.String,com.ru.astron.entities.Message,com.ru.astron.ui.UiCallback) -> <init>
    178:179:java.lang.String getVideoCompression() -> getVideoCompression
    55:55:boolean isVideoMessage() -> isVideoMessage
    153:155:void onTranscodeCanceled() -> onTranscodeCanceled
    129:149:void onTranscodeCompleted() -> onTranscodeCompleted
    159:162:void onTranscodeFailed(java.lang.Exception) -> onTranscodeFailed
    120:125:void onTranscodeProgress(double) -> onTranscodeProgress
    59:88:void processAsFile() -> processAsFile
    92:100:void processAsVideo() -> processAsVideo
    166:175:void run() -> run
com.ru.astron.services.AvatarService -> com.ru.astron.services.AvatarService:
    63:65:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    211:216:void clear(com.ru.astron.entities.Contact) -> clear
    298:312:void clear(com.ru.astron.entities.Conversation) -> clear
    386:393:void clear(com.ru.astron.entities.MucOptions) -> clear
    489:493:void clear(com.ru.astron.entities.Account) -> clear
    497:501:void clear(com.ru.astron.entities.MucOptions$User) -> clear
    136:142:void drawAvatar(android.graphics.Bitmap,android.graphics.Canvas,android.graphics.Paint) -> drawAvatar
    145:158:void drawIcon(android.graphics.Canvas,android.graphics.Paint) -> drawIcon
    551:566:boolean drawTile(android.graphics.Canvas,java.lang.String,int,int,int,int,int) -> drawTile
    570:596:boolean drawTile(android.graphics.Canvas,com.ru.astron.entities.MucOptions$User,int,int,int,int) -> drawTile
    600:610:boolean drawTile(android.graphics.Canvas,com.ru.astron.entities.Account,int,int,int,int) -> drawTile
    614:620:boolean drawTile(android.graphics.Canvas,java.lang.String,java.lang.String,int,int,int,int) -> drawTile
    633:641:boolean drawTile(android.graphics.Canvas,android.net.Uri,int,int,int,int) -> drawTile
    645:647:boolean drawTile(android.graphics.Canvas,android.graphics.Bitmap,int,int,int,int) -> drawTile
    662:662:java.lang.String emptyOnNull(rocks.xmpp.addr.Jid) -> emptyOnNull
    72:83:android.graphics.Bitmap get(com.ru.astron.services.AvatarService$Avatarable,int,boolean) -> get
    88:94:android.graphics.Bitmap get(com.ru.astron.entities.Contact,int,boolean) -> get
    180:184:android.graphics.Bitmap get(com.ru.astron.entities.MucOptions$User,int,boolean) -> get
    259:259:android.graphics.Bitmap get(com.ru.astron.entities.ListItem,int) -> get
    263:281:android.graphics.Bitmap get(com.ru.astron.entities.ListItem,int,boolean) -> get
    286:286:android.graphics.Bitmap get(com.ru.astron.entities.Conversation,int) -> get
    290:293:android.graphics.Bitmap get(com.ru.astron.entities.Conversation,int,boolean) -> get
    317:320:android.graphics.Bitmap get(com.ru.astron.entities.MucOptions,int,boolean) -> get
    341:344:android.graphics.Bitmap get(java.util.List,int,boolean) -> get
    434:434:android.graphics.Bitmap get(com.ru.astron.entities.Account,int) -> get
    438:441:android.graphics.Bitmap get(com.ru.astron.entities.Account,int,boolean) -> get
    458:484:android.graphics.Bitmap get(com.ru.astron.entities.Message,int,boolean) -> get
    519:522:android.graphics.Bitmap get(java.lang.String,java.lang.String,int,boolean) -> get
    530:530:android.graphics.Bitmap get(rocks.xmpp.addr.Jid,int) -> get
    624:629:java.lang.String getFirstLetter(java.lang.String) -> getFirstLetter
    189:192:android.graphics.Bitmap getImpl(com.ru.astron.entities.MucOptions$User,int,boolean) -> getImpl
    352:357:android.graphics.Bitmap getImpl(java.util.List,int) -> getImpl
    534:538:android.graphics.Bitmap getImpl(java.lang.String,java.lang.String,int) -> getImpl
    162:176:android.graphics.Bitmap getRoundLauncherIcon(android.content.res.Resources) -> getRoundLauncherIcon
    113:113:android.graphics.Bitmap getRoundedShortcut(com.ru.astron.entities.Contact) -> getRoundedShortcut
    121:132:android.graphics.Bitmap getRoundedShortcut(com.ru.astron.entities.Contact,boolean) -> getRoundedShortcut
    117:117:android.graphics.Bitmap getRoundedShortcutWithIcon(com.ru.astron.entities.Contact) -> getRoundedShortcutWithIcon
    68:68:int getSystemUiAvatarSize(android.content.Context) -> getSystemUiAvatarSize
    227:231:java.lang.String key(com.ru.astron.entities.Contact,int) -> key
    242:246:java.lang.String key(com.ru.astron.entities.MucOptions$User,int) -> key
    397:401:java.lang.String key(com.ru.astron.entities.MucOptions,int) -> key
    407:429:java.lang.String key(java.util.List,int) -> key
    505:509:java.lang.String key(com.ru.astron.entities.Account,int) -> key
    542:546:java.lang.String key(java.lang.String,int) -> key
    652:659:void onAdvancedStreamFeaturesAvailable(com.ru.astron.entities.Account) -> onAdvancedStreamFeaturesAvailable
com.ru.astron.services.BarcodeProvider -> com.ru.astron.services.BarcodeProvider:
    36:43:void <init>() -> <init>
    158:177:boolean connectAndWait() -> connectAndWait
    52:71:android.graphics.Bitmap create2dBarcodeBitmap(java.lang.String,int) -> create2dBarcodeBitmap
    110:110:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    99:99:java.lang.String getType(android.net.Uri) -> getType
    46:47:android.net.Uri getUriForAccount(android.content.Context,com.ru.astron.entities.Account) -> getUriForAccount
    105:105:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    77:87:boolean onCreate() -> onCreate
    183:190:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    195:197:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    120:120:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    125:154:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal) -> openFile
    93:93:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    115:115:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    201:208:void waitForService() -> waitForService
com.ru.astron.services.ContactChooserTargetService -> com.ru.astron.services.ContactChooserTargetService:
    24:27:void <init>() -> <init>
    41:76:java.util.List onGetChooserTargets(android.content.ComponentName,android.content.IntentFilter) -> onGetChooserTargets
    81:85:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    90:91:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    31:36:boolean textOnly(android.content.IntentFilter) -> textOnly
    94:99:void waitForService() -> waitForService
com.ru.astron.services.EventReceiver -> com.ru.astron.services.EventReceiver:
    13:13:void <init>() -> <init>
    39:39:boolean hasEnabledAccounts(android.content.Context) -> hasEnabledAccounts
    20:36:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.ru.astron.services.ExportBackupService -> com.ru.astron.services.ExportBackupService:
    55:55:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    87:123:void accountExport(android.database.sqlite.SQLiteDatabase,java.lang.String,java.io.PrintWriter) -> accountExport
    184:203:void appendValues(android.database.Cursor,java.lang.StringBuilder,int) -> appendValues
    145:145:java.lang.String cursorToString(java.lang.String,android.database.Cursor,int) -> cursorToString
    149:180:java.lang.String cursorToString(java.lang.String,android.database.Cursor,int,boolean) -> cursorToString
    254:305:boolean export() -> export
    137:140:byte[] getKey(java.lang.String,byte[]) -> getKey
    64:81:java.util.List getPossibleFileOpenIntents(android.content.Context,java.lang.String) -> getPossibleFileOpenIntents
    216:223:void lambda$onStartCommand$0() -> lambda$onStartCommand$0$ExportBackupService
    230:251:void messageExport(android.database.sqlite.SQLiteDatabase,java.lang.String,java.io.PrintWriter,com.ru.astron.services.ExportBackupService$Progress) -> messageExport
    310:329:void notifySuccess() -> notifySuccess
    333:333:android.os.IBinder onBind(android.content.Intent) -> onBind
    207:210:void onCreate() -> onCreate
    214:226:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    126:133:void simpleExport(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.io.PrintWriter) -> simpleExport
com.ru.astron.services.ExportBackupService$Progress -> com.ru.astron.services.ExportBackupService$Progress:
    336:336:void <init>(com.ru.astron.services.ExportBackupService,android.support.v4.app.NotificationCompat$Builder,int,int,com.ru.astron.services.ExportBackupService$1) -> <init>
    341:345:void <init>(com.ru.astron.services.ExportBackupService,android.support.v4.app.NotificationCompat$Builder,int,int) -> <init>
    336:336:android.app.Notification access$000(com.ru.astron.services.ExportBackupService$Progress,int) -> access$000
    348:349:android.app.Notification build(int) -> build
com.ru.astron.services.ImportBackupService -> com.ru.astron.services.ImportBackupService:
    54:54:void <clinit>() -> <clinit>
    51:57:void <init>() -> <init>
    241:243:void addOnBackupProcessedListener(com.ru.astron.services.ImportBackupService$OnBackupProcessed) -> addOnBackupProcessedListener
    62:68:int count(java.lang.String,char) -> count
    105:105:boolean getLoadingState() -> getLoadingState
    148:213:boolean importBackup(java.io.File,java.lang.String) -> importBackup
    110:136:void lambda$loadBackupFiles$2(com.ru.astron.services.ImportBackupService$OnBackupFilesLoaded) -> lambda$loadBackupFiles$2$ImportBackupService
    134:134:int lambda$null$1(com.ru.astron.services.ImportBackupService$BackupFile,com.ru.astron.services.ImportBackupService$BackupFile) -> lambda$null$1
    89:97:void lambda$onStartCommand$0(java.lang.String,java.lang.String) -> lambda$onStartCommand$0$ImportBackupService
    109:137:void loadBackupFiles(com.ru.astron.services.ImportBackupService$OnBackupFilesLoaded) -> loadBackupFiles
    220:227:void notifySuccess() -> notifySuccess
    248:248:android.os.IBinder onBind(android.content.Intent) -> onBind
    73:75:void onCreate() -> onCreate
    79:85:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    235:237:void removeOnBackupProcessedListener(com.ru.astron.services.ImportBackupService$OnBackupProcessed) -> removeOnBackupProcessedListener
    140:145:void startForegroundService() -> startForegroundService
    230:232:void stopBackgroundService() -> stopBackgroundService
com.ru.astron.services.ImportBackupService$BackupFile -> com.ru.astron.services.ImportBackupService$BackupFile:
    267:270:void <init>(java.io.File,com.ru.astron.utils.BackupFileHeader) -> <init>
    263:263:com.ru.astron.services.ImportBackupService$BackupFile access$000(java.io.File) -> access$000
    263:263:com.ru.astron.utils.BackupFileHeader access$100(com.ru.astron.services.ImportBackupService$BackupFile) -> access$100
    285:285:java.io.File getFile() -> getFile
    281:281:com.ru.astron.utils.BackupFileHeader getHeader() -> getHeader
    273:277:com.ru.astron.services.ImportBackupService$BackupFile read(java.io.File) -> read
com.ru.astron.services.ImportBackupService$ImportBackupServiceBinder -> com.ru.astron.services.ImportBackupService$ImportBackupServiceBinder:
    289:289:void <init>(com.ru.astron.services.ImportBackupService) -> <init>
    291:291:com.ru.astron.services.ImportBackupService getService() -> getService
com.ru.astron.services.MediaPlayer -> com.ru.astron.services.MediaPlayer:
    3:3:void <init>() -> <init>
    14:14:int getAudioStreamType() -> getAudioStreamType
    9:11:void setAudioStreamType(int) -> setAudioStreamType
com.ru.astron.services.MemorizingTrustManager -> com.ru.astron.services.MemorizingTrustManager:
    95:119:void <clinit>() -> <clinit>
    141:145:void <init>(android.content.Context,javax.net.ssl.X509TrustManager) -> <init>
    159:163:void <init>(android.content.Context) -> <init>
    92:92:java.util.logging.Logger access$000() -> access$000
    92:92:java.security.KeyStore access$100(com.ru.astron.services.MemorizingTrustManager) -> access$100
    92:92:java.security.cert.X509Certificate[] access$200(com.ru.astron.services.MemorizingTrustManager) -> access$200
    642:662:java.lang.String certChainMessage(java.security.cert.X509Certificate[],java.security.cert.CertificateException) -> certChainMessage
    625:639:void certDetails(java.lang.StringBuffer,java.security.cert.X509Certificate) -> certDetails
    614:618:java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String) -> certHash
    401:441:void checkCertTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean,boolean) -> checkCertTrusted
    594:598:int createDecisionId(com.ru.astron.entities.MTMDecision) -> createDecisionId
    276:278:void deleteCertificate(java.lang.String) -> deleteCertificate
    588:589:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    579:581:java.lang.String getBase64Hash(java.security.cert.X509Certificate,java.lang.String) -> getBase64Hash
    239:242:java.util.Enumeration getCertificates() -> getCertificates
    839:839:javax.net.ssl.X509TrustManager getInteractive(java.lang.String) -> getInteractive
    847:847:javax.net.ssl.X509TrustManager getInteractive() -> getInteractive
    835:835:javax.net.ssl.X509TrustManager getNonInteractive(java.lang.String) -> getNonInteractive
    843:843:javax.net.ssl.X509TrustManager getNonInteractive() -> getNonInteractive
    508:508:java.io.File getPoshCacheFile(java.lang.String) -> getPoshCacheFile
    448:452:java.util.List getPoshFingerprints(java.lang.String) -> getPoshFingerprints
    529:558:java.util.List getPoshFingerprintsFromCache(java.lang.String) -> getPoshFingerprintsFromCache
    457:457:java.util.List getPoshFingerprintsFromServer(java.lang.String) -> getPoshFingerprintsFromServer
    461:503:java.util.List getPoshFingerprintsFromServer(java.lang.String,java.lang.String,int,boolean) -> getPoshFingerprintsFromServer
    309:322:javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore) -> getTrustManager
    704:704:android.content.Context getUI() -> getUI
    603:609:java.lang.String hexString(byte[]) -> hexString
    666:696:java.lang.String hostNameMessage(java.security.cert.X509Certificate,java.lang.String) -> hostNameMessage
    166:177:void init(android.content.Context) -> init
    709:738:int interact(java.lang.String,int) -> interact
    744:752:void interactCert(java.security.cert.X509Certificate[],java.lang.String,java.security.cert.CertificateException) -> interactCert
    756:760:boolean interactHostname(java.security.cert.X509Certificate,java.lang.String) -> interactHostname
    768:771:void interactResult(int,int) -> interactResult
    383:385:boolean isCertKnown(java.security.cert.X509Certificate) -> isCertKnown
    391:394:boolean isExpiredException(java.lang.Throwable) -> isExpiredException
    568:568:boolean isIp(java.lang.String) -> isIp
    360:375:void keyStoreUpdated() -> keyStoreUpdated
    328:331:java.security.KeyStore loadAppKeyStore() -> loadAppKeyStore
    346:349:void storeCert(java.lang.String,java.security.cert.Certificate) -> storeCert
    355:356:void storeCert(java.security.cert.X509Certificate) -> storeCert
    301:302:com.ru.astron.crypto.DomainHostnameVerifier wrapHostnameVerifier(javax.net.ssl.HostnameVerifier,boolean) -> wrapHostnameVerifier
    512:526:void writeFingerprintsToCache(java.lang.String,java.util.List,long) -> writeFingerprintsToCache
com.ru.astron.services.MemorizingTrustManager$1 -> com.ru.astron.services.MemorizingTrustManager$1:
    712:712:void <init>(com.ru.astron.services.MemorizingTrustManager,int,java.lang.String,int) -> <init>
    714:728:void run() -> run
com.ru.astron.services.MemorizingTrustManager$InteractiveMemorizingTrustManager -> com.ru.astron.services.MemorizingTrustManager$InteractiveMemorizingTrustManager:
    879:881:void <init>(com.ru.astron.services.MemorizingTrustManager,java.lang.String) -> <init>
    885:886:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    891:892:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    896:896:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.ru.astron.services.MemorizingTrustManager$MemorizingHostnameVerifier -> com.ru.astron.services.MemorizingTrustManager$MemorizingHostnameVerifier:
    786:789:void <init>(com.ru.astron.services.MemorizingTrustManager,javax.net.ssl.HostnameVerifier,boolean) -> <init>
    793:823:boolean verify(java.lang.String,java.lang.String,javax.net.ssl.SSLSession) -> verify
    829:829:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.ru.astron.services.MemorizingTrustManager$NonInteractiveMemorizingTrustManager -> com.ru.astron.services.MemorizingTrustManager$NonInteractiveMemorizingTrustManager:
    854:856:void <init>(com.ru.astron.services.MemorizingTrustManager,java.lang.String) -> <init>
    860:861:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    866:867:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    871:871:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.ru.astron.services.MessageArchiveService -> com.ru.astron.services.MessageArchiveService:
    92:94:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    25:25:com.ru.astron.services.XmppConnectionService access$600(com.ru.astron.services.MessageArchiveService) -> access$600
    97:104:void catchup(com.ru.astron.entities.Account) -> catchup
    133:144:void catchupMUC(com.ru.astron.entities.Conversation) -> catchupMUC
    226:251:void execute(com.ru.astron.services.MessageArchiveService$Query) -> execute
    210:219:void executePendingQueries(com.ru.astron.entities.Account) -> executePendingQueries
    256:258:void finalizeQuery(com.ru.astron.services.MessageArchiveService$Query,boolean) -> finalizeQuery
    414:424:com.ru.astron.services.MessageArchiveService$Query findQuery(java.lang.String) -> findQuery
    278:284:boolean inCatchup(com.ru.astron.entities.Account) -> inCatchup
    161:171:boolean isCatchingUp(com.ru.astron.entities.Conversation) -> isCatchingUp
    289:298:boolean isCatchupInProgress(com.ru.astron.entities.Conversation) -> isCatchupInProgress
    378:385:void kill(com.ru.astron.entities.Conversation) -> kill
    392:399:void kill(com.ru.astron.services.MessageArchiveService$Query) -> kill
    231:247:void lambda$execute$0(com.ru.astron.services.MessageArchiveService$Query,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$execute$0$MessageArchiveService
    429:432:void onAdvancedStreamFeaturesAvailable(com.ru.astron.entities.Account) -> onAdvancedStreamFeaturesAvailable
    328:375:void processFin(com.ru.astron.services.MessageArchiveService$Query,com.ru.astron.xml.Element) -> processFin
    321:325:void processFinLegacy(com.ru.astron.xml.Element,rocks.xmpp.addr.Jid) -> processFinLegacy
    402:411:void processPostponed(com.ru.astron.services.MessageArchiveService$Query) -> processPostponed
    147:153:com.ru.astron.services.MessageArchiveService$Query query(com.ru.astron.entities.Conversation) -> query
    177:177:com.ru.astron.services.MessageArchiveService$Query query(com.ru.astron.entities.Conversation,long,boolean) -> query
    181:206:com.ru.astron.services.MessageArchiveService$Query query(com.ru.astron.entities.Conversation,com.ru.astron.xmpp.mam.MamReference,long,boolean) -> query
    303:313:boolean queryInProgress(com.ru.astron.entities.Conversation,com.ru.astron.services.XmppConnectionService$OnMoreMessagesLoaded) -> queryInProgress
    317:317:boolean queryInProgress(com.ru.astron.entities.Conversation) -> queryInProgress
com.ru.astron.services.MessageArchiveService$PagingOrder -> com.ru.astron.services.MessageArchiveService$PagingOrder:
    435:434:void <clinit>() -> <clinit>
    434:434:void <init>(java.lang.String,int) -> <init>
    434:434:com.ru.astron.services.MessageArchiveService$PagingOrder valueOf(java.lang.String) -> valueOf
    434:434:com.ru.astron.services.MessageArchiveService$PagingOrder[] values() -> values
com.ru.astron.services.MessageArchiveService$Query -> com.ru.astron.services.MessageArchiveService$Query:
    458:462:void <init>(com.ru.astron.services.MessageArchiveService,com.ru.astron.entities.Conversation,com.ru.astron.xmpp.mam.MamReference,long,boolean) -> <init>
    465:466:void <init>(com.ru.astron.services.MessageArchiveService,com.ru.astron.entities.Account,com.ru.astron.xmpp.mam.MamReference,long) -> <init>
    468:478:void <init>(com.ru.astron.services.MessageArchiveService,com.ru.astron.entities.Account,com.ru.astron.services.MessageArchiveService$Version,com.ru.astron.xmpp.mam.MamReference,long) -> <init>
    439:439:java.lang.String access$002(com.ru.astron.services.MessageArchiveService$Query,java.lang.String) -> access$002
    439:439:com.ru.astron.entities.Account access$100(com.ru.astron.services.MessageArchiveService$Query) -> access$100
    439:439:com.ru.astron.entities.Conversation access$200(com.ru.astron.services.MessageArchiveService$Query) -> access$200
    439:439:com.ru.astron.services.XmppConnectionService$OnMoreMessagesLoaded access$302(com.ru.astron.services.MessageArchiveService$Query,com.ru.astron.services.XmppConnectionService$OnMoreMessagesLoaded) -> access$302
    439:439:java.util.HashSet access$400(com.ru.astron.services.MessageArchiveService$Query) -> access$400
    439:439:java.util.HashSet access$500(com.ru.astron.services.MessageArchiveService$Query) -> access$500
    499:500:void addPendingReceiptRequest(com.ru.astron.entities.ReceiptRequest) -> addPendingReceiptRequest
    555:561:void callback(boolean) -> callback
    572:572:com.ru.astron.entities.Account getAccount() -> getAccount
    593:593:int getActualInThisQuery() -> getActualInThisQuery
    589:589:int getActualMessageCount() -> getActualMessageCount
    568:568:com.ru.astron.entities.Conversation getConversation() -> getConversation
    564:564:long getEnd() -> getEnd
    527:527:com.ru.astron.services.MessageArchiveService$PagingOrder getPagingOrder() -> getPagingOrder
    531:531:java.lang.String getQueryId() -> getQueryId
    523:523:java.lang.String getReference() -> getReference
    543:543:long getStart() -> getStart
    585:585:int getTotalCount() -> getTotalCount
    535:535:rocks.xmpp.addr.Jid getWith() -> getWith
    641:641:boolean hasCallback() -> hasCallback
    580:582:void incrementActualMessageCount() -> incrementActualMessageCount
    576:577:void incrementMessageCount() -> incrementMessageCount
    547:547:boolean isCatchup() -> isCatchup
    503:503:boolean isLegacy() -> isLegacy
    539:539:boolean muc() -> muc
    511:513:com.ru.astron.services.MessageArchiveService$Query next(java.lang.String) -> next
    481:489:com.ru.astron.services.MessageArchiveService$Query page(java.lang.String) -> page
    517:519:com.ru.astron.services.MessageArchiveService$Query prev(java.lang.String) -> prev
    493:496:void removePendingReceiptRequest(com.ru.astron.entities.ReceiptRequest) -> removePendingReceiptRequest
    507:507:boolean safeToExtractTrueCounterpart() -> safeToExtractTrueCounterpart
    551:552:void setCallback(com.ru.astron.services.XmppConnectionService$OnMoreMessagesLoaded) -> setCallback
    606:637:java.lang.String toString() -> toString
    597:600:boolean validFrom(rocks.xmpp.addr.Jid) -> validFrom
com.ru.astron.services.MessageArchiveService$Version -> com.ru.astron.services.MessageArchiveService$Version:
    33:32:void <clinit>() -> <clinit>
    40:43:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    81:87:com.ru.astron.xml.Element findResult(com.ru.astron.xmpp.stanzas.MessagePacket) -> findResult
    46:46:com.ru.astron.services.MessageArchiveService$Version get(com.ru.astron.entities.Account) -> get
    50:51:com.ru.astron.services.MessageArchiveService$Version get(com.ru.astron.entities.Account,com.ru.astron.entities.Conversation) -> get
    58:66:com.ru.astron.services.MessageArchiveService$Version get(java.util.List) -> get
    70:77:boolean has(java.util.List) -> has
    32:32:com.ru.astron.services.MessageArchiveService$Version valueOf(java.lang.String) -> valueOf
    32:32:com.ru.astron.services.MessageArchiveService$Version[] values() -> values
com.ru.astron.services.MessageSearchTask -> com.ru.astron.services.MessageSearchTask:
    55:55:void <clinit>() -> <clinit>
    63:67:void <init>(com.ru.astron.services.XmppConnectionService,java.util.List,com.ru.astron.ui.interfaces.OnSearchResultsAvailable) -> <init>
    79:80:void cancel() -> cancel
    74:75:void cancelRunningTasks() -> cancelRunningTasks
    152:153:void executeInBackground() -> executeInBackground
    139:148:com.ru.astron.entities.Conversational findOrGenerateStub(java.lang.String,java.lang.String,java.lang.String,int) -> findOrGenerateStub
    84:133:void run() -> run
    70:71:void search(com.ru.astron.services.XmppConnectionService,java.util.List,com.ru.astron.ui.interfaces.OnSearchResultsAvailable) -> search
com.ru.astron.services.NotificationService -> com.ru.astron.services.NotificationService:
    69:69:void <clinit>() -> <clinit>
    85:87:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    468:511:android.support.v4.app.NotificationCompat$Builder buildMultipleConversation(boolean,boolean) -> buildMultipleConversation
    515:607:android.support.v4.app.NotificationCompat$Builder buildSingleConversations(java.util.ArrayList,boolean,boolean) -> buildSingleConversations
    1025:1031:void cancel(int) -> cancel
    1034:1040:void cancel(java.lang.String,int) -> cancel
    328:334:void clear() -> clear
    338:340:void clear(com.ru.astron.entities.Conversation) -> clear
    780:790:android.app.PendingIntent createContentIntent(java.lang.String,java.lang.String) -> createContentIntent
    810:810:android.app.PendingIntent createContentIntent(com.ru.astron.entities.Conversational) -> createContentIntent
    814:820:android.app.PendingIntent createDeleteIntent(com.ru.astron.entities.Conversation) -> createDeleteIntent
    855:857:android.app.PendingIntent createDismissErrorIntent() -> createDismissErrorIntent
    806:806:android.app.PendingIntent createDownloadIntent(com.ru.astron.entities.Message) -> createDownloadIntent
    900:926:android.app.Notification createForegroundNotification() -> createForegroundNotification
    930:930:android.app.PendingIntent createOpenConversationsIntent() -> createOpenConversationsIntent
    833:837:android.app.PendingIntent createReadPendingIntent(com.ru.astron.entities.Conversation) -> createReadPendingIntent
    824:829:android.app.PendingIntent createReplyIntent(com.ru.astron.entities.Conversation,boolean) -> createReplyIntent
    770:776:android.app.PendingIntent createShowLocationIntent(com.ru.astron.entities.Message) -> createShowLocationIntent
    841:845:android.app.PendingIntent createSnoozeIntent(com.ru.astron.entities.Conversation) -> createSnoozeIntent
    849:851:android.app.PendingIntent createTryAgainIntent() -> createTryAgainIntent
    1003:1004:void dismissForcedForegroundNotification() -> dismissForcedForegroundNotification
    90:98:boolean displaySnoozeAction(java.util.List) -> displaySnoozeAction
    239:252:void finishBacklog(boolean,com.ru.astron.entities.Account) -> finishBacklog
    279:280:void finishBacklog(boolean) -> finishBacklog
    460:463:android.net.Uri fixRingtoneUri(android.net.Uri) -> fixRingtoneUri
    102:102:java.util.regex.Pattern generateNickHighlightPattern(java.lang.String) -> generateNickHighlightPattern
    798:798:int generateRequestCode(java.lang.String,int) -> generateRequestCode
    802:802:int generateRequestCode(com.ru.astron.entities.Conversational,int) -> generateRequestCode
    256:262:java.util.List getBacklogConversations(com.ru.astron.entities.Account) -> getBacklogConversations
    266:275:int getBacklogMessageCount(com.ru.astron.entities.Account) -> getBacklogMessageCount
    223:228:java.util.concurrent.atomic.AtomicInteger getBacklogMessageCounter(com.ru.astron.entities.Conversation) -> getBacklogMessageCounter
    741:746:com.ru.astron.entities.Message getFirstDownloadableMessage(java.lang.Iterable) -> getFirstDownloadableMessage
    750:755:com.ru.astron.entities.Message getFirstLocationMessage(java.lang.Iterable) -> getFirstLocationMessage
    720:729:com.ru.astron.entities.Message getImage(java.lang.Iterable) -> getImage
    759:766:java.lang.CharSequence getMergedBodies(java.util.ArrayList) -> getMergedBodies
    637:651:android.support.v4.app.Person getPerson(com.ru.astron.entities.Message) -> getPerson
    884:886:int getPixel(int) -> getPixel
    894:896:boolean inMiniGracePeriod(com.ru.astron.entities.Account) -> inMiniGracePeriod
    107:183:void initializeChannels() -> initializeChannels
    733:733:boolean isImageMessage(com.ru.astron.entities.Message) -> isImageMessage
    198:209:boolean isQuietHours() -> isQuietHours
    351:352:void markAsReadIfHasDirectReply(com.ru.astron.entities.Conversation) -> markAsReadIfHasDirectReply
    355:363:void markAsReadIfHasDirectReply(java.util.ArrayList) -> markAsReadIfHasDirectReply
    890:891:void markLastNotification() -> markLastNotification
    613:634:void modifyForImage(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder,com.ru.astron.entities.Message,java.util.ArrayList) -> modifyForImage
    428:457:void modifyForSoundVibrationAndLight(android.support.v4.app.NotificationCompat$Builder,boolean,boolean,android.content.SharedPreferences) -> modifyForSoundVibrationAndLight
    655:717:void modifyForTextOnly(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder,java.util.ArrayList) -> modifyForTextOnly
    194:194:boolean notificationsFromStrangers() -> notificationsFromStrangers
    186:187:boolean notify(com.ru.astron.entities.Message) -> notify
    1007:1013:void notify(java.lang.String,int,android.app.Notification) -> notify
    1016:1022:void notify(int,android.app.Notification) -> notify
    294:302:void push(com.ru.astron.entities.Message) -> push
    214:220:void pushFromBacklog(com.ru.astron.entities.Message) -> pushFromBacklog
    232:235:void pushFromDirectReply(com.ru.astron.entities.Message) -> pushFromDirectReply
    306:324:void pushNow(com.ru.astron.entities.Message) -> pushNow
    283:291:void pushToStack(com.ru.astron.entities.Message) -> pushToStack
    880:881:void setIsInForeground(boolean) -> setIsInForeground
    366:367:void setNotificationColor(android.support.v4.app.NotificationCompat$Builder) -> setNotificationColor
    876:877:void setOpenConversation(com.ru.astron.entities.Conversation) -> setOpenConversation
    938:986:void updateErrorNotification() -> updateErrorNotification
    989:1000:void updateFileAddingNotification(int,com.ru.astron.entities.Message) -> updateFileAddingNotification
    370:372:void updateNotification() -> updateNotification
    376:377:void updateNotification(boolean) -> updateNotification
    380:381:void updateNotification(boolean,java.util.List) -> updateNotification
    384:425:void updateNotification(boolean,java.util.List,boolean) -> updateNotification
    861:871:boolean wasHighlightedOrPrivate(com.ru.astron.entities.Message) -> wasHighlightedOrPrivate
com.ru.astron.services.PushManagementService -> com.ru.astron.services.PushManagementService:
    9:11:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    18:18:boolean available(com.ru.astron.entities.Account) -> available
    22:22:boolean isStub() -> isStub
    15:15:void registerPushTokenOnServer(com.ru.astron.entities.Account) -> registerPushTokenOnServer
com.ru.astron.services.QuickConversationsService -> com.ru.astron.services.QuickConversationsService:
    6:7:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    12:12:void considerSync() -> considerSync
    27:27:void considerSyncBackground(boolean) -> considerSyncBackground
    21:21:boolean isSynchronizing() -> isSynchronizing
    17:17:void signalAccountStateChange() -> signalAccountStateChange
com.ru.astron.services.ShortcutService -> com.ru.astron.services.ShortcutService:
    30:32:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    25:25:void access$000(com.ru.astron.services.ShortcutService,boolean) -> access$000
    110:115:boolean contactExists(com.ru.astron.entities.Contact,java.util.List) -> contactExists
    100:105:boolean contactsChanged(java.util.List,java.util.List) -> contactsChanged
    134:141:android.content.Intent createShortcut(com.ru.astron.entities.Contact,boolean) -> createShortcut
    146:152:android.content.Intent createShortcutResultIntent(com.ru.astron.entities.Contact) -> createShortcutResultIntent
    119:119:java.lang.String getShortcutId(com.ru.astron.entities.Contact) -> getShortcutId
    92:92:android.content.pm.ShortcutInfo getShortcutInfo(com.ru.astron.entities.Contact) -> getShortcutInfo
    123:128:android.content.Intent getShortcutIntent(com.ru.astron.entities.Contact) -> getShortcutIntent
    35:36:void refresh() -> refresh
    39:48:void refresh(boolean) -> refresh
    60:88:void refreshImpl(boolean) -> refreshImpl
    52:56:void report(com.ru.astron.entities.Contact) -> report
com.ru.astron.services.ShortcutService$1 -> com.ru.astron.services.ShortcutService$1:
    40:40:void <init>(com.ru.astron.services.ShortcutService,boolean) -> <init>
    43:44:void run() -> run
com.ru.astron.services.ShortcutService$FrequentContact -> com.ru.astron.services.ShortcutService$FrequentContact:
    159:162:void <init>(java.lang.String,rocks.xmpp.addr.Jid) -> <init>
    155:155:java.lang.String access$100(com.ru.astron.services.ShortcutService$FrequentContact) -> access$100
    155:155:rocks.xmpp.addr.Jid access$200(com.ru.astron.services.ShortcutService$FrequentContact) -> access$200
com.ru.astron.services.XmppConnectionService -> com.ru.astron.services.XmppConnectionService:
    172:173:void <clinit>() -> <clinit>
    156:414:void <init>() -> <init>
    156:156:com.ru.astron.xmpp.jingle.JingleConnectionManager access$000(com.ru.astron.services.XmppConnectionService) -> access$000
    156:156:void access$100(com.ru.astron.services.XmppConnectionService,java.lang.String) -> access$100
    156:156:boolean access$1000(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Account) -> access$1000
    156:156:void access$1100(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Account,boolean,boolean) -> access$1100
    156:156:java.security.SecureRandom access$1200(com.ru.astron.services.XmppConnectionService) -> access$1200
    156:156:com.ru.astron.services.NotificationService access$1400(com.ru.astron.services.XmppConnectionService) -> access$1400
    156:156:java.util.List access$1500(com.ru.astron.services.XmppConnectionService) -> access$1500
    156:156:com.ru.astron.generator.PresenceGenerator access$1600(com.ru.astron.services.XmppConnectionService) -> access$1600
    156:156:void access$1700(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Conversation) -> access$1700
    156:156:com.ru.astron.persistance.FileBackend access$1800(com.ru.astron.services.XmppConnectionService) -> access$1800
    156:156:java.lang.String access$1900(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar) -> access$1900
    156:156:java.util.Set access$200(com.ru.astron.services.XmppConnectionService) -> access$200
    156:156:java.util.Set access$2000(com.ru.astron.services.XmppConnectionService) -> access$2000
    156:156:void access$2100(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar,com.ru.astron.ui.UiCallback) -> access$2100
    156:156:void access$2200(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xml.Element,android.os.Bundle,boolean) -> access$2200
    156:156:com.ru.astron.services.QuickConversationsService access$300(com.ru.astron.services.XmppConnectionService) -> access$300
    156:156:com.ru.astron.generator.IqGenerator access$400(com.ru.astron.services.XmppConnectionService) -> access$400
    156:156:com.ru.astron.services.PushManagementService access$500(com.ru.astron.services.XmppConnectionService) -> access$500
    156:156:void access$600(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Account) -> access$600
    156:156:java.util.HashSet access$700(com.ru.astron.services.XmppConnectionService) -> access$700
    156:156:com.ru.astron.services.MessageArchiveService access$800(com.ru.astron.services.XmppConnectionService) -> access$800
    156:156:void access$900(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Conversation) -> access$900
    3628:3628:boolean allowMessageCorrection() -> allowMessageCorrection
    1948:1949:void archiveConversation(com.ru.astron.entities.Conversation) -> archiveConversation
    1952:1981:void archiveConversation(com.ru.astron.entities.Conversation,boolean) -> archiveConversation
    437:437:boolean areMessagesInitialized() -> areMessagesInitialized
    493:506:void attachFileToConversation(com.ru.astron.entities.Conversation,android.net.Uri,java.lang.String,com.ru.astron.ui.UiCallback) -> attachFileToConversation
    509:518:void attachImageToConversation(com.ru.astron.entities.Conversation,android.net.Uri,com.ru.astron.ui.UiCallback) -> attachImageToConversation
    475:489:void attachLocationToConversation(com.ru.astron.entities.Conversation,android.net.Uri,com.ru.astron.ui.UiCallback) -> attachLocationToConversation
    855:855:boolean awayWhenScreenOff() -> awayWhenScreenOff
    4305:4305:boolean blindTrustBeforeVerification() -> blindTrustBeforeVerification
    3652:3652:boolean broadcastLastActivity() -> broadcastLastActivity
    2942:2956:void changeAffiliationInConference(com.ru.astron.entities.Conversation,rocks.xmpp.addr.Jid,com.ru.astron.entities.MucOptions$Affiliation,com.ru.astron.services.XmppConnectionService$OnAffiliationChanged) -> changeAffiliationInConference
    2970:2977:void changeRoleInConference(com.ru.astron.entities.Conversation,java.lang.String,com.ru.astron.entities.MucOptions$Role) -> changeRoleInConference
    4227:4235:void changeStatus(com.ru.astron.entities.Account,com.ru.astron.entities.PresenceTemplate,java.lang.String) -> changeStatus
    3422:3452:void checkForAvatar(com.ru.astron.entities.Account,com.ru.astron.ui.UiCallback) -> checkForAvatar
    1069:1092:void checkForDeletedFiles() -> checkForDeletedFiles
    2338:2338:boolean checkListeners() -> checkListeners
    4057:4073:void clearConversationHistory(com.ru.astron.entities.Conversation) -> clearConversationHistory
    3624:3624:boolean confirmMessages() -> confirmMessages
    2400:2406:void connectMultiModeConversations(com.ru.astron.entities.Account) -> connectMultiModeConversations
    1991:1998:void createAccount(com.ru.astron.entities.Account) -> createAccount
    2017:2053:void createAccountFromKey(java.lang.String,com.ru.astron.services.XmppConnectionService$OnAccountCreated) -> createAccountFromKey
    2756:2811:boolean createAdhocConference(com.ru.astron.entities.Account,java.lang.String,java.lang.Iterable,com.ru.astron.ui.UiCallback) -> createAdhocConference
    1256:1270:com.ru.astron.xmpp.XmppConnection createConnection(com.ru.astron.entities.Account) -> createConnection
    3051:3056:void createContact(com.ru.astron.entities.Contact,boolean) -> createContact
    2728:2750:void createPublicChannel(com.ru.astron.entities.Account,java.lang.String,rocks.xmpp.addr.Jid,com.ru.astron.ui.UiCallback) -> createPublicChannel
    3946:3949:void deactivateGracePeriod() -> deactivateGracePeriod
    2116:2140:void deleteAccount(com.ru.astron.entities.Account) -> deleteAccount
    3472:3483:void deleteContactOnServer(com.ru.astron.entities.Contact) -> deleteContactOnServer
    2980:2997:void destroyRoom(com.ru.astron.entities.Conversation,com.ru.astron.services.XmppConnectionService$OnRoomDestroy) -> destroyRoom
    3533:3535:void directInvite(com.ru.astron.entities.Conversation,rocks.xmpp.addr.Jid) -> directInvite
    809:840:void directReply(com.ru.astron.entities.Conversation,java.lang.String,boolean) -> directReply
    3000:3016:void disconnect(com.ru.astron.entities.Account,boolean) -> disconnect
    930:938:void dismissErrorNotifications() -> dismissErrorNotifications
    3695:3704:boolean displayCaptchaRequest(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xmpp.forms.Data,android.graphics.Bitmap) -> displayCaptchaRequest
    843:843:boolean dndOnSilentMode() -> dndOnSilentMode
    941:942:void expireOldMessages() -> expireOldMessages
    945:962:void expireOldMessages(boolean) -> expireOldMessages
    3279:3280:void fetchAvatar(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar) -> fetchAvatar
    3283:3301:void fetchAvatar(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar,com.ru.astron.ui.UiCallback) -> fetchAvatar
    3305:3355:void fetchAvatarPep(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar,com.ru.astron.ui.UiCallback) -> fetchAvatarPep
    3358:3419:void fetchAvatarVcard(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar,com.ru.astron.ui.UiCallback) -> fetchAvatarVcard
    1475:1488:void fetchBookmarks(com.ru.astron.entities.Account) -> fetchBookmarks
    4166:4196:void fetchCaps(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,com.ru.astron.entities.Presence) -> fetchCaps
    2816:2817:void fetchConferenceConfiguration(com.ru.astron.entities.Conversation) -> fetchConferenceConfiguration
    2820:2858:void fetchConferenceConfiguration(com.ru.astron.entities.Conversation,com.ru.astron.services.XmppConnectionService$OnConferenceConfigurationFetched) -> fetchConferenceConfiguration
    2517:2579:void fetchConferenceMembers(com.ru.astron.entities.Conversation) -> fetchConferenceMembers
    4209:4220:void fetchMamPreferences(com.ru.astron.entities.Account,com.ru.astron.services.XmppConnectionService$OnMamPreferencesFetched) -> fetchMamPreferences
    1463:1472:void fetchRosterFromServer(com.ru.astron.entities.Account) -> fetchRosterFromServer
    549:549:com.ru.astron.entities.Conversation find(com.ru.astron.entities.Bookmark) -> find
    553:553:com.ru.astron.entities.Conversation find(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid) -> find
    1828:1833:com.ru.astron.entities.Conversation find(java.lang.Iterable,com.ru.astron.entities.Contact) -> find
    1837:1846:com.ru.astron.entities.Conversation find(java.lang.Iterable,com.ru.astron.entities.Account,rocks.xmpp.addr.Jid) -> find
    3726:3731:com.ru.astron.entities.Account findAccountByJid(rocks.xmpp.addr.Jid) -> findAccountByJid
    3735:3740:com.ru.astron.entities.Account findAccountByUuid(java.lang.String) -> findAccountByUuid
    1818:1824:java.util.List findAllConferencesWith(com.ru.astron.entities.Contact) -> findAllConferencesWith
    2709:2723:java.lang.String findConferenceServer(com.ru.astron.entities.Account) -> findConferenceServer
    4002:4012:java.util.List findContacts(rocks.xmpp.addr.Jid,java.lang.String) -> findContacts
    3744:3749:com.ru.astron.entities.Conversation findConversationByUuid(java.lang.String) -> findConversationByUuid
    4016:4021:com.ru.astron.entities.Conversation findFirstMuc(rocks.xmpp.addr.Jid) -> findFirstMuc
    1868:1868:com.ru.astron.entities.Conversation findOrCreateConversation(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,boolean,boolean) -> findOrCreateConversation
    1872:1872:com.ru.astron.entities.Conversation findOrCreateConversation(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,boolean,boolean,boolean) -> findOrCreateConversation
    1876:1944:com.ru.astron.entities.Conversation findOrCreateConversation(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,boolean,boolean,com.ru.astron.services.MessageArchiveService$Query,boolean) -> findOrCreateConversation
    3753:3759:com.ru.astron.entities.Conversation findUniqueConversationByJid(com.ru.astron.utils.XmppUri) -> findUniqueConversationByJid
    1172:1172:boolean foregroundNotificationNeedsUpdatingWhenErrorStateChanges() -> foregroundNotificationNeedsUpdatingWhenErrorStateChanges
    417:417:java.lang.String generateFetchKey(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar) -> generateFetchKey
    1810:1810:java.util.List getAccounts() -> getAccounts
    2609:2610:void getAttachments(com.ru.astron.entities.Conversation,int,com.ru.astron.ui.interfaces.OnMediaLoaded) -> getAttachments
    2613:2614:void getAttachments(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,int,com.ru.astron.ui.interfaces.OnMediaLoaded) -> getAttachments
    2618:2619:void getAttachments(java.lang.String,rocks.xmpp.addr.Jid,int,com.ru.astron.ui.interfaces.OnMediaLoaded) -> getAttachments
    3606:3607:long getAutomaticMessageDeletionDate() -> getAutomaticMessageDeletionDate
    471:471:com.ru.astron.services.AvatarService getAvatarService() -> getAvatarService
    3846:3846:android.util.LruCache getBitmapCache() -> getBitmapCache
    3620:3620:boolean getBooleanPreference(java.lang.String,int) -> getBooleanPreference
    4153:4161:com.ru.astron.entities.ServiceDiscoveryResult getCachedServiceDiscoveryResult(android.util.Pair) -> getCachedServiceDiscoveryResult
    859:859:java.lang.String getCompressPicturesPreference() -> getCompressPicturesPreference
    1694:1694:java.util.List getConversations() -> getConversations
    467:467:com.ru.astron.persistance.FileBackend getFileBackend() -> getFileBackend
    4029:4029:com.ru.astron.http.HttpConnectionManager getHttpConnectionManager() -> getHttpConnectionManager
    3982:3982:com.ru.astron.generator.IqGenerator getIqGenerator() -> getIqGenerator
    3986:3986:com.ru.astron.parser.IqParser getIqParser() -> getIqParser
    3990:3990:com.ru.astron.xmpp.jingle.JingleConnectionManager getJingleConnectionManager() -> getJingleConnectionManager
    3875:3888:java.util.Collection getKnownConferenceHosts() -> getKnownConferenceHosts
    3850:3871:java.util.Collection getKnownHosts() -> getKnownHosts
    3611:3615:long getLongPreference(java.lang.String,int) -> getLongPreference
    3827:3827:com.ru.astron.services.MemorizingTrustManager getMemorizingTrustManager() -> getMemorizingTrustManager
    3994:3994:com.ru.astron.services.MessageArchiveService getMessageArchiveService() -> getMessageArchiveService
    3974:3974:com.ru.astron.generator.MessageGenerator getMessageGenerator() -> getMessageGenerator
    4025:4025:com.ru.astron.services.NotificationService getNotificationService() -> getNotificationService
    457:462:org.openintents.openpgp.util.OpenPgpApi getOpenPgpApi() -> getOpenPgpApi
    441:451:com.ru.astron.crypto.PgpEngine getPgpEngine() -> getPgpEngine
    3602:3602:android.content.SharedPreferences getPreferences() -> getPreferences
    3978:3978:com.ru.astron.generator.PresenceGenerator getPresenceGenerator() -> getPresenceGenerator
    4238:4244:java.util.List getPresenceTemplates(com.ru.astron.entities.Account) -> getPresenceTemplates
    4223:4223:com.ru.astron.services.PushManagementService getPushManagementService() -> getPushManagementService
    3998:3998:com.ru.astron.services.QuickConversationsService getQuickConversationsService() -> getQuickConversationsService
    3823:3823:java.security.SecureRandom getRNG() -> getRNG
    4309:4309:com.ru.astron.services.ShortcutService getShortcutService() -> getShortcutService
    863:868:com.ru.astron.entities.Presence$Status getTargetPresence() -> getTargetPresence
    2596:2604:boolean hasEnabledAccounts() -> hasEnabledAccounts
    965:971:boolean hasInternetConnection() -> hasInternetConnection
    3640:3640:boolean indicateReceived() -> indicateReceived
    4199:4206:void injectServiceDiscoveryResult(com.ru.astron.entities.Roster,java.lang.String,java.lang.String,com.ru.astron.entities.ServiceDiscoveryResult) -> injectServiceDiscoveryResult
    3527:3530:void invite(com.ru.astron.entities.Conversation,rocks.xmpp.addr.Jid) -> invite
    1857:1863:boolean isConversationStillOpen(com.ru.astron.entities.Conversation) -> isConversationStillOpen
    1850:1853:boolean isConversationsListEmpty(com.ru.astron.entities.Conversation) -> isConversationsListEmpty
    799:804:boolean isDataSaverDisabled() -> isDataSaverDisabled
    421:423:boolean isInLowPingTimeoutMode(com.ru.astron.entities.Account) -> isInLowPingTimeoutMode
    876:886:boolean isInteractive() -> isInteractive
    557:558:boolean isMuc(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid) -> isMuc
    892:909:boolean isPhoneSilenced() -> isPhoneSilenced
    2409:2410:void joinMuc(com.ru.astron.entities.Conversation) -> joinMuc
    2413:2414:void joinMuc(com.ru.astron.entities.Conversation,boolean) -> joinMuc
    2417:2418:void joinMuc(com.ru.astron.entities.Conversation,com.ru.astron.services.XmppConnectionService$OnConferenceJoined) -> joinMuc
    2421:2514:void joinMuc(com.ru.astron.entities.Conversation,com.ru.astron.services.XmppConnectionService$OnConferenceJoined,boolean) -> joinMuc
    3720:3723:void keyStatusUpdated(com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus) -> keyStatusUpdated
    530:545:void lambda$attachImageToConversation$2(com.ru.astron.entities.Message,android.net.Uri,com.ru.astron.entities.Conversation,com.ru.astron.ui.UiCallback) -> lambda$attachImageToConversation$2$XmppConnectionService
    2973:2976:void lambda$changeRoleInConference$26(java.lang.String,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$changeRoleInConference$26
    4069:4071:void lambda$clearConversationHistory$36(com.ru.astron.entities.Conversation) -> lambda$clearConversationHistory$36$XmppConnectionService
    2019:2051:void lambda$createAccountFromKey$20(java.lang.String,com.ru.astron.services.XmppConnectionService$OnAccountCreated) -> lambda$createAccountFromKey$20$XmppConnectionService
    2729:2749:void lambda$createPublicChannel$25(java.lang.String,com.ru.astron.ui.UiCallback,com.ru.astron.entities.Conversation) -> lambda$createPublicChannel$25$XmppConnectionService
    2126:2126:void lambda$deleteAccount$22(com.ru.astron.entities.Account) -> lambda$deleteAccount$22$XmppConnectionService
    2129:2132:void lambda$deleteAccount$23(com.ru.astron.entities.Account) -> lambda$deleteAccount$23$XmppConnectionService
    947:961:void lambda$expireOldMessages$7(boolean) -> lambda$expireOldMessages$7$XmppConnectionService
    3307:3309:void lambda$fetchAvatarPep$31(com.ru.astron.xmpp.pep.Avatar,com.ru.astron.entities.Account,com.ru.astron.ui.UiCallback,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$fetchAvatarPep$31$XmppConnectionService
    1479:1486:void lambda$fetchBookmarks$10(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$fetchBookmarks$10$XmppConnectionService
    4183:4193:void lambda$fetchCaps$38(com.ru.astron.entities.Presence,rocks.xmpp.addr.Jid,android.util.Pair,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$fetchCaps$38$XmppConnectionService
    4213:4219:void lambda$fetchMamPreferences$39(com.ru.astron.services.MessageArchiveService$Version,com.ru.astron.services.XmppConnectionService$OnMamPreferencesFetched,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$fetchMamPreferences$39
    1915:1935:void lambda$findOrCreateConversation$19(boolean,com.ru.astron.entities.Conversation,com.ru.astron.entities.Account,boolean,com.ru.astron.services.MessageArchiveService$Query,boolean) -> lambda$findOrCreateConversation$19$XmppConnectionService
    2618:2618:void lambda$getAttachments$24(com.ru.astron.ui.interfaces.OnMediaLoaded,java.lang.String,rocks.xmpp.addr.Jid,int) -> lambda$getAttachments$24$XmppConnectionService
    1780:1805:void lambda$loadMoreMessages$18(com.ru.astron.entities.Conversation,long,com.ru.astron.services.XmppConnectionService$OnMoreMessagesLoaded) -> lambda$loadMoreMessages$18$XmppConnectionService
    1662:1685:void lambda$loadPhoneContacts$15() -> lambda$loadPhoneContacts$15$XmppConnectionService
    1193:1193:void lambda$logoutAndSave$8(com.ru.astron.entities.Account) -> lambda$logoutAndSave$8$XmppConnectionService
    3777:3780:void lambda$markRead$35(java.util.List) -> lambda$markRead$35$XmppConnectionService
    189:196:void lambda$new$0(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$new$0
    212:220:void lambda$new$1(com.ru.astron.entities.Contact,boolean) -> lambda$new$1$XmppConnectionService
    3138:3144:void lambda$null$29(com.ru.astron.ui.interfaces.OnAvatarPublication,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$null$29
    594:605:void lambda$onStartCommand$3(java.lang.String) -> lambda$onStartCommand$3$XmppConnectionService
    626:634:void lambda$onStartCommand$4(java.lang.String,java.lang.CharSequence,boolean) -> lambda$onStartCommand$4$XmppConnectionService
    638:650:void lambda$onStartCommand$5(java.lang.String) -> lambda$onStartCommand$5$XmppConnectionService
    654:662:void lambda$onStartCommand$6(java.lang.String) -> lambda$onStartCommand$6$XmppConnectionService
    1757:1760:int lambda$populateWithOrderedConversations$17(java.util.List,com.ru.astron.entities.Conversation,com.ru.astron.entities.Conversation) -> lambda$populateWithOrderedConversations$17
    3101:3114:void lambda$publishAvatar$28(android.net.Uri,com.ru.astron.ui.interfaces.OnAvatarPublication,com.ru.astron.entities.Account) -> lambda$publishAvatar$28$XmppConnectionService
    4146:4149:void lambda$publishDisplayName$37(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$publishDisplayName$37
    3083:3096:void lambda$publishMucAvatar$27(android.net.Uri,com.ru.astron.ui.interfaces.OnAvatarPublication,com.ru.astron.entities.Conversation) -> lambda$publishMucAvatar$27$XmppConnectionService
    3121:3149:void lambda$publishMucAvatar$30(com.ru.astron.xmpp.pep.Avatar,com.ru.astron.entities.Conversation,com.ru.astron.ui.interfaces.OnAvatarPublication,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$publishMucAvatar$30$XmppConnectionService
    1574:1592:void lambda$pushNodeAndEnforcePublishOptions$11(boolean,com.ru.astron.entities.Account,java.lang.String,android.os.Bundle,com.ru.astron.xml.Element,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$pushNodeAndEnforcePublishOptions$11$XmppConnectionService
    3523:3523:void lambda$reconnectAccountInBackground$33(com.ru.astron.entities.Account) -> lambda$reconnectAccountInBackground$33$XmppConnectionService
    3540:3540:void lambda$resetSendingToWaiting$34(com.ru.astron.entities.Message) -> lambda$resetSendingToWaiting$34$XmppConnectionService
    1617:1649:void lambda$restoreFromDatabase$12() -> lambda$restoreFromDatabase$12$XmppConnectionService
    1656:1656:void lambda$restoreMessages$13(com.ru.astron.entities.Message) -> lambda$restoreMessages$13$XmppConnectionService
    1657:1657:void lambda$restoreMessages$14(com.ru.astron.entities.Message) -> lambda$restoreMessages$14$XmppConnectionService
    1455:1455:void lambda$sendUnsentMessages$9(com.ru.astron.entities.Message) -> lambda$sendUnsentMessages$9$XmppConnectionService
    1690:1690:void lambda$syncRoster$16(com.ru.astron.entities.Account) -> lambda$syncRoster$16$XmppConnectionService
    2104:2112:void lambda$updateAccountPasswordOnServer$21(java.lang.String,com.ru.astron.services.XmppConnectionService$OnAccountPasswordChanged,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$updateAccountPasswordOnServer$21$XmppConnectionService
    3486:3486:void lambda$updateConversation$32(com.ru.astron.entities.Conversation) -> lambda$updateConversation$32$XmppConnectionService
    2687:2688:void leaveMuc(com.ru.astron.entities.Conversation) -> leaveMuc
    2691:2705:void leaveMuc(com.ru.astron.entities.Conversation,boolean) -> leaveMuc
    1773:1807:void loadMoreMessages(com.ru.astron.entities.Conversation,long,com.ru.astron.services.XmppConnectionService$OnMoreMessagesLoaded) -> loadMoreMessages
    1661:1686:void loadPhoneContacts() -> loadPhoneContacts
    1186:1200:void logoutAndSave(boolean) -> logoutAndSave
    847:847:boolean manuallyChangePresence() -> manuallyChangePresence
    1716:1723:void markChangedFiles(java.util.List) -> markChangedFiles
    1698:1703:void markFileDeleted(java.lang.String) -> markFileDeleted
    3546:3546:com.ru.astron.entities.Message markMessage(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,java.lang.String,int) -> markMessage
    3550:3562:com.ru.astron.entities.Message markMessage(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,java.lang.String,int,java.lang.String) -> markMessage
    3566:3577:boolean markMessage(com.ru.astron.entities.Conversation,java.lang.String,int,java.lang.String) -> markMessage
    3583:3584:void markMessage(com.ru.astron.entities.Message,int) -> markMessage
    3588:3599:void markMessage(com.ru.astron.entities.Message,int,java.lang.String) -> markMessage
    3763:3763:boolean markRead(com.ru.astron.entities.Conversation,boolean) -> markRead
    3767:3768:void markRead(com.ru.astron.entities.Conversation) -> markRead
    3771:3785:java.util.List markRead(com.ru.astron.entities.Conversation,java.lang.String,boolean) -> markRead
    1706:1713:void markUuidsAsDeletedFiles(java.util.List) -> markUuidsAsDeletedFiles
    3455:3469:void notifyAccountAvatarHasChanged(com.ru.astron.entities.Account) -> notifyAccountAvatarHasChanged
    3020:3020:android.os.IBinder onBind(android.content.Intent) -> onBind
    978:1066:void onCreate() -> onCreate
    1118:1125:void onDestroy() -> onDestroy
    567:716:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    1177:1183:void onTaskRemoved(android.content.Intent) -> onTaskRemoved
    1108:1113:void onTrimMemory(int) -> onTrimMemory
    2622:2638:void persistSelfNick(com.ru.astron.entities.MucOptions$User) -> persistSelfNick
    1726:1727:void populateWithOrderedConversations(java.util.List) -> populateWithOrderedConversations
    1730:1731:void populateWithOrderedConversations(java.util.List,boolean) -> populateWithOrderedConversations
    1735:1770:void populateWithOrderedConversations(java.util.List,boolean,boolean) -> populateWithOrderedConversations
    724:795:boolean processAccountState(com.ru.astron.entities.Account,boolean,boolean,boolean,java.util.HashSet) -> processAccountState
    1491:1534:void processBookmarks(com.ru.astron.entities.Account,com.ru.astron.xml.Element,boolean) -> processBookmarks
    2582:2593:void providePasswordForMuc(com.ru.astron.entities.Conversation,java.lang.String) -> providePasswordForMuc
    3100:3116:void publishAvatar(com.ru.astron.entities.Account,android.net.Uri,com.ru.astron.ui.interfaces.OnAvatarPublication) -> publishAvatar
    3154:3160:void publishAvatar(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar,com.ru.astron.ui.interfaces.OnAvatarPublication) -> publishAvatar
    3163:3194:void publishAvatar(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar,android.os.Bundle,boolean,com.ru.astron.ui.interfaces.OnAvatarPublication) -> publishAvatar
    3197:3232:void publishAvatarMetadata(com.ru.astron.entities.Account,com.ru.astron.xmpp.pep.Avatar,android.os.Bundle,boolean,com.ru.astron.ui.interfaces.OnAvatarPublication) -> publishAvatarMetadata
    4137:4150:void publishDisplayName(com.ru.astron.entities.Account) -> publishDisplayName
    3082:3097:void publishMucAvatar(com.ru.astron.entities.Conversation,android.net.Uri,com.ru.astron.ui.interfaces.OnAvatarPublication) -> publishMucAvatar
    3119:3150:void publishMucAvatar(com.ru.astron.entities.Conversation,com.ru.astron.xmpp.pep.Avatar,com.ru.astron.ui.interfaces.OnAvatarPublication) -> publishMucAvatar
    1537:1542:void pushBookmarks(com.ru.astron.entities.Account) -> pushBookmarks
    1556:1563:void pushBookmarksPep(com.ru.astron.entities.Account) -> pushBookmarksPep
    1545:1553:void pushBookmarksPrivateXml(com.ru.astron.entities.Account) -> pushBookmarksPrivateXml
    2898:2934:void pushConferenceConfiguration(com.ru.astron.entities.Conversation,android.os.Bundle,com.ru.astron.services.XmppConnectionService$OnConfigurationPushed) -> pushConferenceConfiguration
    3059:3079:void pushContactToServer(com.ru.astron.entities.Contact) -> pushContactToServer
    4313:4316:void pushMamPreferences(com.ru.astron.entities.Account,com.ru.astron.xml.Element) -> pushMamPreferences
    1567:1569:void pushNodeAndEnforcePublishOptions(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xml.Element,android.os.Bundle) -> pushNodeAndEnforcePublishOptions
    1572:1593:void pushNodeAndEnforcePublishOptions(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xml.Element,android.os.Bundle,boolean) -> pushNodeAndEnforcePublishOptions
    2861:2862:void pushNodeConfiguration(com.ru.astron.entities.Account,java.lang.String,android.os.Bundle,com.ru.astron.services.XmppConnectionService$OnConfigurationPushed) -> pushNodeConfiguration
    2865:2895:void pushNodeConfiguration(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid,java.lang.String,android.os.Bundle,com.ru.astron.services.XmppConnectionService$OnConfigurationPushed) -> pushNodeConfiguration
    2937:2939:void pushSubjectToConference(com.ru.astron.entities.Conversation,java.lang.String) -> pushSubjectToConference
    3490:3519:void reconnectAccount(com.ru.astron.entities.Account,boolean,boolean) -> reconnectAccount
    3523:3524:void reconnectAccountInBackground(com.ru.astron.entities.Account) -> reconnectAccountInBackground
    3961:3966:void refreshAllFcmTokens() -> refreshAllFcmTokens
    3952:3958:void refreshAllPresences() -> refreshAllPresences
    4100:4117:boolean removeBlockedConversations(com.ru.astron.entities.Account,rocks.xmpp.addr.Jid) -> removeBlockedConversations
    2208:2211:void removeOnAccountListChangedListener(com.ru.astron.services.XmppConnectionService$OnAccountUpdate) -> removeOnAccountListChangedListener
    2232:2235:void removeOnCaptchaRequestedListener(com.ru.astron.services.XmppConnectionService$OnCaptchaRequested) -> removeOnCaptchaRequestedListener
    2159:2163:void removeOnConversationListChangedListener(com.ru.astron.services.XmppConnectionService$OnConversationUpdate) -> removeOnConversationListChangedListener
    2328:2331:void removeOnMucRosterUpdateListener(com.ru.astron.services.XmppConnectionService$OnMucRosterUpdate) -> removeOnMucRosterUpdateListener
    2304:2307:void removeOnNewKeysAvailableListener(com.ru.astron.xmpp.OnKeyStatusUpdated) -> removeOnNewKeysAvailableListener
    2256:2259:void removeOnRosterUpdateListener(com.ru.astron.services.XmppConnectionService$OnRosterUpdate) -> removeOnRosterUpdateListener
    2184:2187:void removeOnShowErrorToastListener(com.ru.astron.services.XmppConnectionService$OnShowErrorToast) -> removeOnShowErrorToastListener
    2280:2283:void removeOnUpdateBlocklistListener(com.ru.astron.xmpp.OnUpdateBlocklist) -> removeOnUpdateBlocklistListener
    2641:2683:boolean renameInMuc(com.ru.astron.entities.Conversation,java.lang.String,com.ru.astron.ui.UiCallback) -> renameInMuc
    3235:3276:void republishAvatarIfNeeded(com.ru.astron.entities.Account) -> republishAvatarIfNeeded
    4033:4052:void resendFailedMessages(com.ru.astron.entities.Message) -> resendFailedMessages
    1459:1460:void resendMessage(com.ru.astron.entities.Message,boolean) -> resendMessage
    914:927:void resetAllAttemptCounts(boolean,boolean) -> resetAllAttemptCounts
    3538:3543:void resetSendingToWaiting(com.ru.astron.entities.Account) -> resetSendingToWaiting
    1128:1131:void restartFileObserver() -> restartFileObserver
    1596:1651:void restoreFromDatabase() -> restoreFromDatabase
    1655:1658:void restoreMessages(com.ru.astron.entities.Conversation) -> restoreMessages
    4248:4260:void saveConversationAsBookmark(com.ru.astron.entities.Conversation,java.lang.String) -> saveConversationAsBookmark
    1240:1253:void scheduleNextIdlePing() -> scheduleNextIdlePing
    1203:1220:void schedulePostConnectivityChange() -> schedulePostConnectivityChange
    1223:1236:void scheduleWakeUpCall(int,int) -> scheduleWakeUpCall
    562:563:void search(java.util.List,com.ru.astron.ui.interfaces.OnSearchResultsAvailable) -> search
    4076:4095:boolean sendBlockRequest(com.ru.astron.entities.Blockable,boolean) -> sendBlockRequest
    1274:1278:void sendChatState(com.ru.astron.entities.Conversation) -> sendChatState
    3632:3632:boolean sendChatStates() -> sendChatStates
    3906:3911:void sendCreateAccountWithCaptchaPacket(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xmpp.forms.Data) -> sendCreateAccountWithCaptchaPacket
    1281:1289:void sendFileMessage(com.ru.astron.entities.Message,boolean) -> sendFileMessage
    3914:3920:void sendIqPacket(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket,com.ru.astron.xmpp.OnIqPacketReceived) -> sendIqPacket
    1292:1293:void sendMessage(com.ru.astron.entities.Message) -> sendMessage
    1296:1452:void sendMessage(com.ru.astron.entities.Message,boolean,boolean) -> sendMessage
    3892:3896:void sendMessagePacket(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.MessagePacket) -> sendMessagePacket
    3969:3971:void sendOfflinePresence(com.ru.astron.entities.Account) -> sendOfflinePresence
    3923:3924:void sendPresence(com.ru.astron.entities.Account) -> sendPresence
    3928:3943:void sendPresence(com.ru.astron.entities.Account,boolean) -> sendPresence
    3899:3903:void sendPresencePacket(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.PresencePacket) -> sendPresencePacket
    3803:3820:void sendReadMarker(com.ru.astron.entities.Conversation,java.lang.String) -> sendReadMarker
    4122:4134:void sendUnblockRequest(com.ru.astron.entities.Blockable) -> sendUnblockRequest
    1455:1456:void sendUnsentMessages(com.ru.astron.entities.Conversation) -> sendUnsentMessages
    3831:3832:void setMemorizingTrustManager(com.ru.astron.services.MemorizingTrustManager) -> setMemorizingTrustManager
    2195:2200:void setOnAccountListChangedListener(com.ru.astron.services.XmppConnectionService$OnAccountUpdate) -> setOnAccountListChangedListener
    2219:2224:void setOnCaptchaRequestedListener(com.ru.astron.services.XmppConnectionService$OnCaptchaRequested) -> setOnCaptchaRequestedListener
    2145:2151:void setOnConversationListChangedListener(com.ru.astron.services.XmppConnectionService$OnConversationUpdate) -> setOnConversationListChangedListener
    2291:2296:void setOnKeyStatusUpdatedListener(com.ru.astron.xmpp.OnKeyStatusUpdated) -> setOnKeyStatusUpdatedListener
    2315:2320:void setOnMucRosterUpdateListener(com.ru.astron.services.XmppConnectionService$OnMucRosterUpdate) -> setOnMucRosterUpdateListener
    2243:2248:void setOnRosterUpdateListener(com.ru.astron.services.XmppConnectionService$OnRosterUpdate) -> setOnRosterUpdateListener
    2171:2176:void setOnShowErrorToastListener(com.ru.astron.services.XmppConnectionService$OnShowErrorToast) -> setOnShowErrorToastListener
    2267:2272:void setOnUpdateBlocklistListener(com.ru.astron.xmpp.OnUpdateBlocklist) -> setOnUpdateBlocklistListener
    3671:3674:void showErrorToastInUi(int) -> showErrorToastInUi
    3648:3648:boolean showExtendedConnectionOptions() -> showExtendedConnectionOptions
    1095:1104:void startContactObserver() -> startContactObserver
    427:429:void startForcingForegroundNotification() -> startForcingForegroundNotification
    432:434:void stopForcingForegroundNotification() -> stopForcingForegroundNotification
    1985:1988:void stopPresenceUpdatesTo(com.ru.astron.entities.Contact) -> stopPresenceUpdatesTo
    2375:2397:void switchToBackground() -> switchToBackground
    2349:2372:void switchToForeground() -> switchToForeground
    3040:3048:void syncDirtyContacts(com.ru.astron.entities.Account) -> syncDirtyContacts
    2001:2004:void syncEnabledAccountSetting() -> syncEnabledAccountSetting
    1690:1691:void syncRoster(com.ru.astron.entities.Account) -> syncRoster
    3636:3636:boolean synchronizeWithBookmarks() -> synchronizeWithBookmarks
    3665:3667:java.util.List threadSafeList(java.util.Set) -> threadSafeList
    1149:1150:void toggleForegroundService() -> toggleForegroundService
    1154:1169:void toggleForegroundService(boolean) -> toggleForegroundService
    1134:1146:void toggleScreenEventReceiver() -> toggleScreenEventReceiver
    2008:2014:void toggleSetProfilePictureActivity(boolean) -> toggleSetProfilePictureActivity
    851:851:boolean treatVibrateAsSilent() -> treatVibrateAsSilent
    3656:3660:int unreadCount() -> unreadCount
    2086:2097:boolean updateAccount(com.ru.astron.entities.Account) -> updateAccount
    2102:2113:void updateAccountPasswordOnServer(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.services.XmppConnectionService$OnAccountPasswordChanged) -> updateAccountPasswordOnServer
    3683:3686:void updateAccountUi() -> updateAccountUi
    3708:3711:void updateBlocklistUi(com.ru.astron.xmpp.OnUpdateBlocklist$Status) -> updateBlocklistUi
    3486:3487:void updateConversation(com.ru.astron.entities.Conversation) -> updateConversation
    3677:3680:void updateConversationUi() -> updateConversationUi
    2056:2083:void updateKeyInAccount(com.ru.astron.entities.Account,java.lang.String) -> updateKeyInAccount
    3836:3843:void updateMemorizingTrustmanager() -> updateMemorizingTrustmanager
    3024:3025:void updateMessage(com.ru.astron.entities.Message) -> updateMessage
    3028:3030:void updateMessage(com.ru.astron.entities.Message,boolean) -> updateMessage
    3033:3037:void updateMessage(com.ru.astron.entities.Message,java.lang.String) -> updateMessage
    3714:3717:void updateMucRosterUi() -> updateMucRosterUi
    3689:3692:void updateRosterUi() -> updateRosterUi
    3790:3789:void updateUnreadCountBadge() -> updateUnreadCountBadge
    3644:3644:boolean useTorToConnect() -> useTorToConnect
    4263:4279:boolean verifyFingerprints(com.ru.astron.entities.Contact,java.util.List) -> verifyFingerprints
    4283:4301:boolean verifyFingerprints(com.ru.astron.entities.Account,java.util.List) -> verifyFingerprints
com.ru.astron.services.XmppConnectionService$1 -> com.ru.astron.services.XmppConnectionService$1:
    225:225:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    229:230:void onJinglePacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> onJinglePacketReceived
com.ru.astron.services.XmppConnectionService$10 -> com.ru.astron.services.XmppConnectionService$10:
    1578:1578:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xml.Element,android.os.Bundle) -> <init>
    1586:1587:void onPushFailed() -> onPushFailed
    1581:1582:void onPushSucceeded() -> onPushSucceeded
com.ru.astron.services.XmppConnectionService$11 -> com.ru.astron.services.XmppConnectionService$11:
    2431:2431:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.services.XmppConnectionService$OnConferenceJoined,boolean,com.ru.astron.entities.Account) -> <init>
    2434:2481:void join(com.ru.astron.entities.Conversation) -> join
    2485:2490:void onConferenceConfigurationFetched(com.ru.astron.entities.Conversation) -> onConferenceConfigurationFetched
    2494:2505:void onFetchFailed(com.ru.astron.entities.Conversation,com.ru.astron.xml.Element) -> onFetchFailed
com.ru.astron.services.XmppConnectionService$12 -> com.ru.astron.services.XmppConnectionService$12:
    2520:2523:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Conversation,com.ru.astron.crypto.axolotl.AxolotlService,java.lang.String[]) -> <init>
    2527:2573:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$13 -> com.ru.astron.services.XmppConnectionService$13:
    2648:2648:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.ui.UiCallback,com.ru.astron.entities.Conversation) -> <init>
    2657:2658:void onFailure() -> onFailure
    2652:2653:void onSuccess() -> onSuccess
com.ru.astron.services.XmppConnectionService$14 -> com.ru.astron.services.XmppConnectionService$14:
    2733:2733:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Conversation,java.lang.String,com.ru.astron.ui.UiCallback) -> <init>
    2742:2747:void onPushFailed() -> onPushFailed
    2736:2738:void onPushSucceeded() -> onPushSucceeded
com.ru.astron.services.XmppConnectionService$15 -> com.ru.astron.services.XmppConnectionService$15:
    2768:2768:void <init>(com.ru.astron.services.XmppConnectionService,java.lang.String,java.lang.Iterable,com.ru.astron.entities.Account,com.ru.astron.ui.UiCallback) -> <init>
    2771:2798:void onConferenceJoined(com.ru.astron.entities.Conversation) -> onConferenceJoined
com.ru.astron.services.XmppConnectionService$15$1 -> com.ru.astron.services.XmppConnectionService$15$1:
    2775:2775:void <init>(com.ru.astron.services.XmppConnectionService$15,com.ru.astron.entities.Conversation) -> <init>
    2792:2796:void onPushFailed() -> onPushFailed
    2778:2788:void onPushSucceeded() -> onPushSucceeded
com.ru.astron.services.XmppConnectionService$16 -> com.ru.astron.services.XmppConnectionService$16:
    2823:2823:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Conversation,com.ru.astron.services.XmppConnectionService$OnConferenceConfigurationFetched) -> <init>
    2826:2856:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$17 -> com.ru.astron.services.XmppConnectionService$17:
    2866:2866:void <init>(com.ru.astron.services.XmppConnectionService,android.os.Bundle,rocks.xmpp.addr.Jid,java.lang.String,com.ru.astron.services.XmppConnectionService$OnConfigurationPushed) -> <init>
    2869:2893:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$17$1 -> com.ru.astron.services.XmppConnectionService$17$1:
    2876:2876:void <init>(com.ru.astron.services.XmppConnectionService$17) -> <init>
    2879:2885:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$18 -> com.ru.astron.services.XmppConnectionService$18:
    2905:2905:void <init>(com.ru.astron.services.XmppConnectionService,android.os.Bundle,com.ru.astron.entities.Conversation,com.ru.astron.services.XmppConnectionService$OnConfigurationPushed) -> <init>
    2908:2932:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$18$1 -> com.ru.astron.services.XmppConnectionService$18$1:
    2915:2915:void <init>(com.ru.astron.services.XmppConnectionService$18) -> <init>
    2918:2925:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$19 -> com.ru.astron.services.XmppConnectionService$19:
    2944:2944:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Conversation,rocks.xmpp.addr.Jid,com.ru.astron.entities.MucOptions$Affiliation,com.ru.astron.services.XmppConnectionService$OnAffiliationChanged) -> <init>
    2947:2954:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$2 -> com.ru.astron.services.XmppConnectionService$2:
    239:239:void <init>(com.ru.astron.services.XmppConnectionService,java.lang.String) -> <init>
    242:243:void onEvent(int,java.lang.String) -> onEvent
com.ru.astron.services.XmppConnectionService$20 -> com.ru.astron.services.XmppConnectionService$20:
    2983:2983:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.services.XmppConnectionService$OnRoomDestroy) -> <init>
    2986:2995:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$21 -> com.ru.astron.services.XmppConnectionService$21:
    3165:3165:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.xmpp.pep.Avatar,android.os.Bundle,com.ru.astron.ui.interfaces.OnAvatarPublication,boolean) -> <init>
    3169:3192:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$21$1 -> com.ru.astron.services.XmppConnectionService$21$1:
    3172:3172:void <init>(com.ru.astron.services.XmppConnectionService$21,com.ru.astron.entities.Account) -> <init>
    3181:3183:void onPushFailed() -> onPushFailed
    3175:3177:void onPushSucceeded() -> onPushSucceeded
com.ru.astron.services.XmppConnectionService$22 -> com.ru.astron.services.XmppConnectionService$22:
    3198:3198:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.xmpp.pep.Avatar,com.ru.astron.ui.interfaces.OnAvatarPublication,boolean,android.os.Bundle) -> <init>
    3201:3230:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$22$1 -> com.ru.astron.services.XmppConnectionService$22$1:
    3212:3212:void <init>(com.ru.astron.services.XmppConnectionService$22,com.ru.astron.entities.Account) -> <init>
    3221:3223:void onPushFailed() -> onPushFailed
    3215:3217:void onPushSucceeded() -> onPushSucceeded
com.ru.astron.services.XmppConnectionService$23 -> com.ru.astron.services.XmppConnectionService$23:
    3240:3240:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    3254:3255:boolean errorIsItemNotFound(com.ru.astron.xmpp.stanzas.IqPacket) -> errorIsItemNotFound
    3262:3274:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
    3243:3250:com.ru.astron.xmpp.pep.Avatar parseAvatar(com.ru.astron.xmpp.stanzas.IqPacket) -> parseAvatar
com.ru.astron.services.XmppConnectionService$24 -> com.ru.astron.services.XmppConnectionService$24:
    3359:3359:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.xmpp.pep.Avatar) -> <init>
    3363:3367:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$25 -> com.ru.astron.services.XmppConnectionService$25:
    3423:3423:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.ui.UiCallback) -> <init>
    3427:3450:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$26 -> com.ru.astron.services.XmppConnectionService$26:
    4078:4078:void <init>(com.ru.astron.services.XmppConnectionService,rocks.xmpp.addr.Jid) -> <init>
    4082:4086:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$27 -> com.ru.astron.services.XmppConnectionService$27:
    4124:4124:void <init>(com.ru.astron.services.XmppConnectionService,rocks.xmpp.addr.Jid) -> <init>
    4127:4131:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.services.XmppConnectionService$28 -> com.ru.astron.services.XmppConnectionService$28:
    3286:3286:void <clinit>() -> <clinit>
com.ru.astron.services.XmppConnectionService$3 -> com.ru.astron.services.XmppConnectionService$3:
    245:245:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    249:260:boolean onMessageAcknowledged(com.ru.astron.entities.Account,java.lang.String) -> onMessageAcknowledged
com.ru.astron.services.XmppConnectionService$4 -> com.ru.astron.services.XmppConnectionService$4:
    281:281:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    317:320:void lambda$onBind$0(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$onBind$0
    285:292:void onBind(com.ru.astron.entities.Account) -> onBind
com.ru.astron.services.XmppConnectionService$5 -> com.ru.astron.services.XmppConnectionService$5:
    333:333:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    337:406:void onStatusChanged(com.ru.astron.entities.Account) -> onStatusChanged
com.ru.astron.services.XmppConnectionService$6 -> com.ru.astron.services.XmppConnectionService$6:
    812:812:void <init>(com.ru.astron.services.XmppConnectionService,boolean) -> <init>
    812:812:void error(int,java.lang.Object) -> error
    825:825:void error(int,com.ru.astron.entities.Message) -> error
    812:812:void success(java.lang.Object) -> success
    815:820:void success(com.ru.astron.entities.Message) -> success
    812:812:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    830:830:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Message) -> userInputRequried
com.ru.astron.services.XmppConnectionService$7 -> com.ru.astron.services.XmppConnectionService$7:
    996:996:void <init>(com.ru.astron.services.XmppConnectionService,int) -> <init>
    996:996:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    999:999:int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
com.ru.astron.services.XmppConnectionService$8 -> com.ru.astron.services.XmppConnectionService$8:
    1031:1031:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    1034:1040:void onBound(org.openintents.openpgp.IOpenPgpService2) -> onBound
    1044:1044:void onError(java.lang.Exception) -> onError
com.ru.astron.services.XmppConnectionService$9 -> com.ru.astron.services.XmppConnectionService$9:
    1095:1095:void <init>(com.ru.astron.services.XmppConnectionService,android.os.Handler) -> <init>
    1098:1102:void onChange(boolean) -> onChange
com.ru.astron.services.XmppConnectionService$InternalEventReceiver -> com.ru.astron.services.XmppConnectionService$InternalEventReceiver:
    4400:4400:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    4400:4400:void <init>(com.ru.astron.services.XmppConnectionService,com.ru.astron.services.XmppConnectionService$1) -> <init>
    4404:4405:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.ru.astron.services.XmppConnectionService$XmppConnectionBinder -> com.ru.astron.services.XmppConnectionService$XmppConnectionBinder:
    4394:4394:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    4396:4396:com.ru.astron.services.XmppConnectionService getService() -> getService
com.ru.astron.ui.AboutActivity -> com.ru.astron.ui.AboutActivity:
    11:11:void <init>() -> <init>
    15:24:void onCreate(android.os.Bundle) -> onCreate
com.ru.astron.ui.AboutPreference -> com.ru.astron.ui.AboutPreference:
    13:17:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    20:24:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    28:31:void onClick() -> onClick
com.ru.astron.ui.AbstractSearchableListItemActivity -> com.ru.astron.ui.AbstractSearchableListItemActivity:
    27:57:void <init>() -> <init>
    27:27:android.widget.EditText access$000(com.ru.astron.ui.AbstractSearchableListItemActivity) -> access$000
    116:122:void filterContacts() -> filterContacts
    88:88:android.widget.ArrayAdapter getListItemAdapter() -> getListItemAdapter
    80:80:java.util.List getListItems() -> getListItems
    76:76:android.widget.ListView getListView() -> getListView
    84:84:android.widget.EditText getSearchEditText() -> getSearchEditText
    128:129:void onBackendConnected() -> onBackendConnected
    93:100:void onCreate(android.os.Bundle) -> onCreate
    104:112:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    133:133:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.ru.astron.ui.AbstractSearchableListItemActivity$1 -> com.ru.astron.ui.AbstractSearchableListItemActivity$1:
    34:34:void <init>(com.ru.astron.ui.AbstractSearchableListItemActivity) -> <init>
    39:42:void lambda$onMenuItemActionExpand$0() -> lambda$onMenuItemActionExpand$0$AbstractSearchableListItemActivity$1
    49:53:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    38:44:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
com.ru.astron.ui.AbstractSearchableListItemActivity$2 -> com.ru.astron.ui.AbstractSearchableListItemActivity$2:
    57:57:void <init>(com.ru.astron.ui.AbstractSearchableListItemActivity) -> <init>
    61:62:void afterTextChanged(android.text.Editable) -> afterTextChanged
    67:67:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    72:72:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ru.astron.ui.ActionBarActivity -> com.ru.astron.ui.ActionBarActivity:
    8:8:void <init>() -> <init>
    10:11:void configureActionBar(android.support.v7.app.ActionBar) -> configureActionBar
    14:18:void configureActionBar(android.support.v7.app.ActionBar,boolean) -> configureActionBar
    22:27:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.ru.astron.ui.BlockContactDialog -> com.ru.astron.ui.BlockContactDialog:
    40:55:void lambda$show$0(boolean,com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Blockable,com.ru.astron.databinding.DialogBlockContactBinding,android.content.DialogInterface,int) -> lambda$show$0
    18:57:void show(com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Blockable) -> show
com.ru.astron.ui.BlocklistActivity -> com.ru.astron.ui.BlocklistActivity:
    18:20:void <init>() -> <init>
    101:102:void OnUpdateBlocklist(com.ru.astron.xmpp.OnUpdateBlocklist$Status) -> OnUpdateBlocklist
    50:61:void filterContacts(java.lang.String) -> filterContacts
    26:27:boolean lambda$onCreate$0(android.widget.AdapterView,android.view.View,int,long) -> lambda$onCreate$0$BlocklistActivity
    30:30:void lambda$onCreate$1(android.view.View) -> lambda$onCreate$1$BlocklistActivity
    80:84:boolean lambda$showEnterJidDialog$2(rocks.xmpp.addr.Jid,rocks.xmpp.addr.Jid) -> lambda$showEnterJidDialog$2$BlocklistActivity
    35:46:void onBackendConnected() -> onBackendConnected
    24:31:void onCreate(android.os.Bundle) -> onCreate
    91:97:void refreshUiReal() -> refreshUiReal
    64:88:void showEnterJidDialog() -> showEnterJidDialog
com.ru.astron.ui.ChangePasswordActivity -> com.ru.astron.ui.ChangePasswordActivity:
    16:19:void <init>() -> <init>
    16:16:com.ru.astron.entities.Account access$000(com.ru.astron.ui.ChangePasswordActivity) -> access$000
    16:16:android.widget.EditText access$100(com.ru.astron.ui.ChangePasswordActivity) -> access$100
    16:16:android.widget.EditText access$200(com.ru.astron.ui.ChangePasswordActivity) -> access$200
    16:16:android.support.design.widget.TextInputLayout access$300(com.ru.astron.ui.ChangePasswordActivity) -> access$300
    16:16:void access$400(com.ru.astron.ui.ChangePasswordActivity,android.support.design.widget.TextInputLayout) -> access$400
    16:16:android.support.design.widget.TextInputLayout access$500(com.ru.astron.ui.ChangePasswordActivity) -> access$500
    16:16:android.widget.Button access$600(com.ru.astron.ui.ChangePasswordActivity) -> access$600
    66:66:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0$ChangePasswordActivity
    99:102:void lambda$onPasswordChangeFailed$2() -> lambda$onPasswordChangeFailed$2$ChangePasswordActivity
    91:93:void lambda$onPasswordChangeSucceeded$1() -> lambda$onPasswordChangeSucceeded$1$ChangePasswordActivity
    51:57:void onBackendConnected() -> onBackendConnected
    61:75:void onCreate(android.os.Bundle) -> onCreate
    98:104:void onPasswordChangeFailed() -> onPasswordChangeFailed
    90:94:void onPasswordChangeSucceeded() -> onPasswordChangeSucceeded
    79:86:void onStart() -> onStart
    120:120:void refreshUiReal() -> refreshUiReal
    107:116:void removeErrorsOnAllBut(android.support.design.widget.TextInputLayout) -> removeErrorsOnAllBut
com.ru.astron.ui.ChangePasswordActivity$1 -> com.ru.astron.ui.ChangePasswordActivity$1:
    19:19:void <init>(com.ru.astron.ui.ChangePasswordActivity) -> <init>
    22:41:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ChooseAccountForProfilePictureActivity -> com.ru.astron.ui.ChooseAccountForProfilePictureActivity:
    15:17:void <init>() -> <init>
    71:81:void goToProfilePictureActivity(com.ru.astron.entities.Account) -> goToProfilePictureActivity
    37:39:void lambda$onCreate$0(android.widget.AdapterView,android.view.View,int,long) -> lambda$onCreate$0$ChooseAccountForProfilePictureActivity
    62:68:void loadEnabledAccounts() -> loadEnabledAccounts
    53:59:void onBackendConnected() -> onBackendConnected
    29:40:void onCreate(android.os.Bundle) -> onCreate
    44:49:void onStart() -> onStart
    23:25:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.ChooseContactActivity -> com.ru.astron.ui.ChooseContactActivity:
    44:59:void <init>() -> <init>
    192:194:void copy(android.content.Intent,android.content.Intent) -> copy
    62:79:android.content.Intent create(android.app.Activity,com.ru.astron.entities.Conversation) -> create
    83:95:java.util.List extractJabberIds(android.content.Intent) -> extractJabberIds
    264:282:void filterContacts(java.lang.String) -> filterContacts
    285:285:java.lang.String[] getSelectedContactJids() -> getSelectedContactJids
    224:227:int getTitleFromIntent() -> getTitleFromIntent
    347:354:void handleActivityResult(com.ru.astron.ui.util.ActivityResult) -> handleActivityResult
    320:329:boolean lambda$showEnterJidDialog$0(rocks.xmpp.addr.Jid,rocks.xmpp.addr.Jid) -> lambda$showEnterJidDialog$0$ChooseContactActivity
    177:177:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    337:344:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    358:377:void onBackendConnected() -> onBackendConnected
    101:136:void onCreate(android.os.Bundle) -> onCreate
    153:161:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    232:240:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    166:173:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    251:259:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
    139:144:void onFabClicked(android.view.View) -> onFabClicked
    198:207:void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean) -> onItemCheckedStateChanged
    386:395:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    398:410:void onListItemClicked(com.ru.astron.entities.ListItem) -> onListItemClicked
    294:297:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    148:148:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    381:382:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    245:247:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    211:220:void onStart() -> onStart
    290:290:void refreshUiReal() -> refreshUiReal
    303:333:void showEnterJidDialog(com.ru.astron.utils.XmppUri) -> showEnterJidDialog
    181:189:void submitSelection() -> submitSelection
com.ru.astron.ui.ConferenceDetailsActivity -> com.ru.astron.ui.ConferenceDetailsActivity:
    57:121:void <init>() -> <init>
    57:57:void access$000(com.ru.astron.ui.ConferenceDetailsActivity,java.lang.String) -> access$000
    57:57:void access$100(com.ru.astron.ui.ConferenceDetailsActivity) -> access$100
    57:57:com.ru.astron.entities.Conversation access$200(com.ru.astron.ui.ConferenceDetailsActivity) -> access$200
    57:57:boolean access$300(com.ru.astron.ui.ConferenceDetailsActivity) -> access$300
    620:633:void afterTextChanged(android.text.Editable) -> afterTextChanged
    611:611:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    382:388:void deleteBookmark() -> deleteBookmark
    391:402:void destroyRoom() -> destroyRoom
    600:606:void displayToast(java.lang.String) -> displayToast
    322:329:java.lang.String getShareableUri(boolean) -> getShareableUri
    556:559:java.lang.String getStatus(android.content.Context,com.ru.astron.entities.MucOptions$User,boolean) -> getStatus
    564:564:java.lang.String getStatus(com.ru.astron.entities.MucOptions$User) -> getStatus
    301:304:void hideEditor() -> hideEditor
    396:397:void lambda$destroyRoom$6(android.content.DialogInterface,int) -> lambda$destroyRoom$6$ConferenceDetailsActivity
    601:605:void lambda$displayToast$9(java.lang.String) -> lambda$displayToast$9$ConferenceDetailsActivity
    168:171:java.lang.String lambda$null$0(java.lang.String) -> lambda$null$0$ConferenceDetailsActivity
    419:419:void lambda$onBackendConnected$7(android.view.View) -> lambda$onBackendConnected$7$ConferenceDetailsActivity
    165:165:void lambda$onCreate$1(android.view.View) -> lambda$onCreate$1$ConferenceDetailsActivity
    178:190:void lambda$onCreate$2(android.view.View) -> lambda$onCreate$2$ConferenceDetailsActivity
    201:201:void lambda$onCreate$3(android.view.View) -> lambda$onCreate$3$ConferenceDetailsActivity
    203:206:void lambda$onCreate$4(android.view.View) -> lambda$onCreate$4$ConferenceDetailsActivity
    369:372:void lambda$onMediaLoaded$5(java.util.List) -> lambda$onMediaLoaded$5$ConferenceDetailsActivity
    528:538:int lambda$updateView$8(com.ru.astron.entities.MucOptions$User,com.ru.astron.entities.MucOptions$User) -> lambda$updateView$8
    575:576:void onAffiliationChangeFailed(rocks.xmpp.addr.Jid,int) -> onAffiliationChangeFailed
    570:571:void onAffiliationChangedSuccessful(rocks.xmpp.addr.Jid) -> onAffiliationChangedSuccessful
    428:433:void onBackPressed() -> onBackPressed
    406:424:void onBackendConnected() -> onBackendConnected
    258:261:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    145:146:void onConversationUpdate() -> onConversationUpdate
    160:207:void onCreate(android.os.Bundle) -> onCreate
    356:363:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    368:374:void onMediaLoaded(java.util.List) -> onMediaLoaded
    265:298:void onMucEditButtonClicked(android.view.View) -> onMucEditButtonClicked
    307:317:void onMucInfoUpdated(java.lang.String,java.lang.String) -> onMucInfoUpdated
    150:151:void onMucRosterUpdate() -> onMucRosterUpdate
    221:253:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    335:351:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    596:597:void onPushFailed() -> onPushFailed
    591:592:void onPushSucceeded() -> onPushSucceeded
    585:587:void onRoomDestroyFailed() -> onRoomDestroyFailed
    580:581:void onRoomDestroySucceeded() -> onRoomDestroySucceeded
    211:217:void onStart() -> onStart
    616:616:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    155:156:void refreshUiReal() -> refreshUiReal
    378:379:void saveAsBookmark() -> saveAsBookmark
    436:553:void updateView() -> updateView
com.ru.astron.ui.ConferenceDetailsActivity$1 -> com.ru.astron.ui.ConferenceDetailsActivity$1:
    68:68:void <init>(com.ru.astron.ui.ConferenceDetailsActivity) -> <init>
    68:68:void error(int,java.lang.Object) -> error
    80:81:void error(int,com.ru.astron.entities.Conversation) -> error
    73:74:void lambda$success$0() -> lambda$success$0$ConferenceDetailsActivity$1
    68:68:void success(java.lang.Object) -> success
    71:76:void success(com.ru.astron.entities.Conversation) -> success
    68:68:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    86:86:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Conversation) -> userInputRequried
com.ru.astron.ui.ConferenceDetailsActivity$2 -> com.ru.astron.ui.ConferenceDetailsActivity$2:
    89:89:void <init>(com.ru.astron.ui.ConferenceDetailsActivity) -> <init>
    105:105:void lambda$onClick$0(java.util.concurrent.atomic.AtomicInteger,android.content.DialogInterface,int) -> lambda$onClick$0
    108:116:void lambda$onClick$1(java.util.concurrent.atomic.AtomicInteger,android.content.DialogInterface,int) -> lambda$onClick$1$ConferenceDetailsActivity$2
    92:118:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConferenceDetailsActivity$3 -> com.ru.astron.ui.ConferenceDetailsActivity$3:
    121:121:void <init>(com.ru.astron.ui.ConferenceDetailsActivity) -> <init>
    129:129:void lambda$onClick$0(boolean[],android.content.DialogInterface,int,boolean) -> lambda$onClick$0
    132:137:void lambda$onClick$1(com.ru.astron.ui.util.MucConfiguration,boolean[],android.content.DialogInterface,int) -> lambda$onClick$1$ConferenceDetailsActivity$3
    124:139:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ContactDetailsActivity -> com.ru.astron.ui.ContactDetailsActivity:
    61:126:void <init>() -> <init>
    163:164:void OnUpdateBlocklist(com.ru.astron.xmpp.OnUpdateBlocklist$Status) -> OnUpdateBlocklist
    61:61:com.ru.astron.entities.Contact access$000(com.ru.astron.ui.ContactDetailsActivity) -> access$000
    61:61:android.content.DialogInterface$OnClickListener access$100(com.ru.astron.ui.ContactDetailsActivity) -> access$100
    174:177:java.lang.String getShareableUri(boolean) -> getShareableUri
    505:505:void lambda$onBackendConnected$5(android.view.View) -> lambda$onBackendConnected$5$ContactDetailsActivity
    201:203:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0$ContactDetailsActivity
    204:204:void lambda$onCreate$1(android.view.View) -> lambda$onCreate$1$ContactDetailsActivity
    530:533:void lambda$onMediaLoaded$6(java.util.List) -> lambda$onMediaLoaded$6$ContactDetailsActivity
    259:262:java.lang.String lambda$onOptionsItemSelected$2(java.lang.String) -> lambda$onOptionsItemSelected$2$ContactDetailsActivity
    455:455:void lambda$populateView$3(android.view.View) -> lambda$populateView$3$ContactDetailsActivity
    467:467:void lambda$populateView$4(android.view.View) -> lambda$populateView$4$ContactDetailsActivity
    158:159:void onAccountUpdate() -> onAccountUpdate
    491:509:void onBackendConnected() -> onBackendConnected
    183:209:void onCreate(android.os.Bundle) -> onCreate
    288:312:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    513:514:void onKeyStatusUpdated(com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus) -> onKeyStatusUpdated
    529:535:void onMediaLoaded(java.util.List) -> onMediaLoaded
    234:283:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    153:154:void onRosterUpdate() -> onRosterUpdate
    213:215:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    219:230:void onStart() -> onStart
    316:488:void populateView() -> populateView
    518:525:void processFingerprintVerification(com.ru.astron.utils.XmppUri) -> processFingerprintVerification
    168:170:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.ContactDetailsActivity$1 -> com.ru.astron.ui.ContactDetailsActivity$1:
    68:68:void <init>(com.ru.astron.ui.ContactDetailsActivity) -> <init>
    72:73:void onClick(android.content.DialogInterface,int) -> onClick
com.ru.astron.ui.ContactDetailsActivity$2 -> com.ru.astron.ui.ContactDetailsActivity$2:
    75:75:void <init>(com.ru.astron.ui.ContactDetailsActivity) -> <init>
    79:89:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ru.astron.ui.ContactDetailsActivity$3 -> com.ru.astron.ui.ContactDetailsActivity$3:
    91:91:void <init>(com.ru.astron.ui.ContactDetailsActivity) -> <init>
    95:100:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.ru.astron.ui.ContactDetailsActivity$4 -> com.ru.astron.ui.ContactDetailsActivity$4:
    109:109:void <init>(com.ru.astron.ui.ContactDetailsActivity) -> <init>
    113:123:void onClick(android.content.DialogInterface,int) -> onClick
com.ru.astron.ui.ContactDetailsActivity$5 -> com.ru.astron.ui.ContactDetailsActivity$5:
    126:126:void <init>(com.ru.astron.ui.ContactDetailsActivity) -> <init>
    130:148:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationActivity -> com.ru.astron.ui.ConversationActivity:
    8:8:void <init>() -> <init>
    12:15:void onCreate(android.os.Bundle) -> onCreate
com.ru.astron.ui.ConversationFragment -> com.ru.astron.ui.ConversationFragment:
    149:152:void <clinit>() -> <clinit>
    129:453:void <init>() -> <init>
    129:129:com.ru.astron.entities.Conversation access$000(com.ru.astron.ui.ConversationFragment) -> access$000
    129:129:com.ru.astron.ui.ConversationsActivity access$100(com.ru.astron.ui.ConversationFragment) -> access$100
    129:129:void access$1000(com.ru.astron.ui.ConversationFragment) -> access$1000
    129:129:void access$1100(com.ru.astron.ui.ConversationFragment,int,boolean) -> access$1100
    129:129:void access$1200(com.ru.astron.ui.ConversationFragment) -> access$1200
    129:129:void access$1300(com.ru.astron.ui.ConversationFragment) -> access$1300
    129:129:void access$1400(com.ru.astron.ui.ConversationFragment,android.widget.Toast) -> access$1400
    129:129:void access$1500(com.ru.astron.ui.ConversationFragment,android.app.PendingIntent,int) -> access$1500
    129:129:java.util.concurrent.atomic.AtomicBoolean access$1600(com.ru.astron.ui.ConversationFragment) -> access$1600
    129:129:void access$200(com.ru.astron.ui.ConversationFragment) -> access$200
    129:129:void access$300(com.ru.astron.ui.ConversationFragment,android.widget.AbsListView) -> access$300
    129:129:java.util.List access$400(com.ru.astron.ui.ConversationFragment) -> access$400
    129:129:android.widget.Toast access$500(com.ru.astron.ui.ConversationFragment) -> access$500
    129:129:android.widget.Toast access$502(com.ru.astron.ui.ConversationFragment,android.widget.Toast) -> access$502
    129:129:com.ru.astron.databinding.FragmentConversationBinding access$600(com.ru.astron.ui.ConversationFragment) -> access$600
    129:129:int access$700(com.ru.astron.ui.ConversationFragment,java.lang.String,java.util.List) -> access$700
    129:129:boolean access$800(com.ru.astron.ui.ConversationFragment,int,java.lang.String[]) -> access$800
    129:129:void access$900(com.ru.astron.ui.ConversationFragment,com.ru.astron.entities.Conversation) -> access$900
    2556:2571:void appendText(java.lang.String,boolean) -> appendText
    673:675:void attachEditorContentToConversation(android.net.Uri) -> attachEditorContentToConversation
    1295:1359:void attachFile(int) -> attachFile
    639:670:void attachFileToConversation(com.ru.astron.entities.Conversation,android.net.Uri,java.lang.String) -> attachFileToConversation
    678:703:void attachImageToConversation(com.ru.astron.entities.Conversation,android.net.Uri) -> attachImageToConversation
    616:636:void attachLocationToConversation(com.ru.astron.entities.Conversation,android.net.Uri) -> attachLocationToConversation
    1705:1711:void cancelTransmission(com.ru.astron.entities.Message) -> cancelTransmission
    2048:2056:java.util.List cleanUris(java.util.List) -> cleanUris
    1434:1451:void clearHistoryDialog(com.ru.astron.entities.Conversation) -> clearHistoryDialog
    2722:2737:void clearPending() -> clearPending
    856:884:void commitAttachments() -> commitAttachments
    1732:1741:void correctMessage(com.ru.astron.entities.Message) -> correctMessage
    1425:1430:void createNewConnection(com.ru.astron.entities.Message) -> createNewConnection
    1646:1660:void deleteFile(com.ru.astron.entities.Message) -> deleteFile
    2242:2243:void doneSendingPgpMessage() -> doneSendingPgpMessage
    476:480:void downloadFile(android.app.Activity,com.ru.astron.entities.Message) -> downloadFile
    2515:2538:void encryptTextMessage(com.ru.astron.entities.Message) -> encryptTextMessage
    2035:2043:java.util.List extractUris(android.os.Bundle) -> extractUris
    2700:2718:boolean findAndReInitByUuidOrArchive(java.lang.String) -> findAndReInitByUuidOrArchive
    457:465:com.ru.astron.ui.ConversationFragment findConversationFragment(android.app.Activity) -> findConversationFragment
    1577:1583:void fireReadEvent() -> fireReadEvent
    513:519:com.ru.astron.ui.ConversationFragment get(android.app.Activity) -> get
    500:500:com.ru.astron.entities.Conversation getConversation(android.app.Activity) -> getConversation
    504:508:com.ru.astron.entities.Conversation getConversation(android.app.Activity,int) -> getConversation
    2740:2740:com.ru.astron.entities.Conversation getConversation() -> getConversation
    524:528:com.ru.astron.entities.Conversation getConversationReliable(android.app.Activity) -> getConversationReliable
    567:584:int getIndexOf(java.lang.String,java.util.List) -> getIndexOf
    1586:1611:java.lang.String getLastVisibleMessageUuid() -> getLastVisibleMessageUuid
    2246:2247:long getMaxHttpUploadSize(com.ru.astron.entities.Conversation) -> getMaxHttpUploadSize
    588:590:com.ru.astron.ui.util.ScrollState getScrollPosition() -> getScrollPosition
    799:804:void handleActivityResult(com.ru.astron.ui.util.ActivityResult) -> handleActivityResult
    1230:1250:void handleAttachmentSelection(android.view.MenuItem) -> handleAttachmentSelection
    1253:1292:void handleEncryptionSelection(android.view.MenuItem) -> handleEncryptionSelection
    894:901:void handleNegativeActivityResult(int) -> handleNegativeActivityResult
    807:853:void handlePositiveActivityResult(int,android.content.Intent) -> handlePositiveActivityResult
    2409:2413:boolean hasMamSupport(com.ru.astron.entities.Conversation) -> hasMamSupport
    1482:1499:boolean hasPermissions(int,java.lang.String[]) -> hasPermissions
    706:709:void hidePrepareFileToast(android.widget.Toast) -> hidePrepareFileToast
    2435:2436:void hideSnackbar() -> hideSnackbar
    1973:1979:void hideUnreadMessagesCount() -> hideUnreadMessagesCount
    1744:1767:void highlightInConference(java.lang.String) -> highlightInConference
    1348:1351:void lambda$attachFile$2(int,android.content.DialogInterface,int) -> lambda$attachFile$2$ConversationFragment
    1441:1449:void lambda$clearHistoryDialog$3(com.ru.astron.entities.Conversation,android.widget.CheckBox,android.content.DialogInterface,int) -> lambda$clearHistoryDialog$3$ConversationFragment
    864:878:void lambda$commitAttachments$1(java.util.List) -> lambda$commitAttachments$1$ConversationFragment
    1651:1657:void lambda$deleteFile$7(com.ru.astron.entities.Message,android.content.DialogInterface,int) -> lambda$deleteFile$7$ConversationFragment
    2222:2224:void lambda$messageSent$13() -> lambda$messageSent$13$ConversationFragment
    1467:1477:void lambda$muteConversationDialog$4(int[],com.ru.astron.entities.Conversation,android.content.DialogInterface,int) -> lambda$muteConversationDialog$4$ConversationFragment
    393:401:boolean lambda$new$0(android.widget.TextView,int,android.view.KeyEvent) -> lambda$new$0$ConversationFragment
    1679:1681:void lambda$null$8() -> lambda$null$8$ConversationFragment
    2765:2765:boolean lambda$onContactPictureLongClicked$16(com.ru.astron.entities.MucOptions$User,java.lang.String,android.view.MenuItem) -> lambda$onContactPictureLongClicked$16$ConversationFragment
    2769:2777:boolean lambda$onContactPictureLongClicked$17(com.ru.astron.entities.Message,java.lang.String,android.view.MenuItem) -> lambda$onContactPictureLongClicked$17$ConversationFragment
    2785:2796:boolean lambda$onContactPictureLongClicked$18(com.ru.astron.entities.Message,java.lang.String,android.view.MenuItem) -> lambda$onContactPictureLongClicked$18$ConversationFragment
    1699:1701:void lambda$resendMessage$10() -> lambda$resendMessage$10$ConversationFragment
    1676:1682:void lambda$resendMessage$9(com.ru.astron.entities.Message,com.ru.astron.entities.Conversation) -> lambda$resendMessage$9$ConversationFragment
    1514:1561:void lambda$selectPresenceToAttachFile$5(int) -> lambda$selectPresenceToAttachFile$5$ConversationFragment
    2484:2489:void lambda$sendPgpMessage$14(com.ru.astron.services.XmppConnectionService,com.ru.astron.entities.Message,android.content.DialogInterface,int) -> lambda$sendPgpMessage$14$ConversationFragment
    2504:2509:void lambda$sendPgpMessage$15(com.ru.astron.entities.Message,com.ru.astron.services.XmppConnectionService,android.content.DialogInterface,int) -> lambda$sendPgpMessage$15$ConversationFragment
    1983:1983:void lambda$setSelection$11(int,boolean) -> lambda$setSelection$11$ConversationFragment
    2068:2080:boolean lambda$showBlockSubmenu$12(rocks.xmpp.addr.Jid,android.view.MenuItem) -> lambda$showBlockSubmenu$12$ConversationFragment
    1637:1639:void lambda$showErrorMessage$6(java.lang.String,android.content.DialogInterface,int) -> lambda$showErrorMessage$6$ConversationFragment
    2210:2226:void messageSent() -> messageSent
    1454:1479:void muteConversationDialog(com.ru.astron.entities.Conversation) -> muteConversationDialog
    1801:1820:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    905:912:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    920:925:void onAttach(android.app.Activity) -> onAttach
    2679:2697:void onBackendConnected() -> onBackendConnected
    2805:2835:void onContactPictureClicked(com.ru.astron.entities.Message) -> onContactPictureClicked
    2746:2800:void onContactPictureLongClicked(android.view.View,com.ru.astron.entities.Message) -> onContactPictureLongClicked
    1126:1153:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    937:939:void onCreate(android.os.Bundle) -> onCreate
    1022:1027:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    943:971:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    975:1002:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    931:933:void onDetach() -> onDetach
    2575:2581:boolean onEnterPressed() -> onEnterPressed
    1173:1226:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1363:1402:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1572:1574:void onResume() -> onResume
    1780:1797:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1824:1838:void onStart() -> onStart
    1842:1856:void onStop() -> onStop
    2635:2636:boolean onTabPressed(boolean) -> onTabPressed
    2628:2631:void onTextChanged() -> onTextChanged
    2612:2624:void onTextDeleted() -> onTextDeleted
    2587:2596:void onTypingStarted() -> onTypingStarted
    2600:2608:void onTypingStopped() -> onTypingStopped
    490:497:void openPendingMessage(android.app.Activity) -> openPendingMessage
    1616:1622:void openWith(com.ru.astron.entities.Message) -> openWith
    1031:1122:void populateContextMenu(android.view.ContextMenu) -> populateContextMenu
    1721:1729:void privateMessageWith(rocks.xmpp.addr.Jid) -> privateMessageWith
    1993:2032:void processExtras(android.os.Bundle) -> processExtras
    1017:1018:void quoteMessage(com.ru.astron.entities.Message) -> quoteMessage
    1006:1014:void quoteText(java.lang.String) -> quoteText
    1881:1894:void reInit(com.ru.astron.entities.Conversation,android.os.Bundle) -> reInit
    1897:1898:void reInit(com.ru.astron.entities.Conversation) -> reInit
    1901:1907:boolean reInit(com.ru.astron.entities.Conversation,boolean) -> reInit
    2174:2185:void refresh() -> refresh
    2188:2206:void refresh(boolean) -> refresh
    483:487:void registerPendingMessage(android.app.Activity,com.ru.astron.entities.Message) -> registerPendingMessage
    1663:1702:void resendMessage(com.ru.astron.entities.Message) -> resendMessage
    1968:1970:void resetUnreadMessagesCount() -> resetUnreadMessagesCount
    1714:1718:void retryDecryption(com.ru.astron.entities.Message) -> retryDecryption
    1867:1869:void saveMessageDraftStopAudioPlayer() -> saveMessageDraftStopAudioPlayer
    532:539:boolean scrolledToBottom(android.widget.AbsListView) -> scrolledToBottom
    1989:1989:boolean scrolledToBottom() -> scrolledToBottom
    1512:1568:void selectPresenceToAttachFile(int) -> selectPresenceToAttachFile
    712:720:void sendMessage() -> sendMessage
    2439:2441:void sendMessage(com.ru.astron.entities.Message) -> sendMessage
    2444:2512:void sendPgpMessage(com.ru.astron.entities.Message) -> sendPgpMessage
    603:613:void setScrollPosition(com.ru.astron.ui.util.ScrollState,java.lang.String) -> setScrollPosition
    1982:1985:void setSelection(int,boolean) -> setSelection
    795:796:void setupIme() -> setupIme
    2060:2083:boolean showBlockSubmenu(android.view.View) -> showBlockSubmenu
    1625:1642:void showErrorMessage(com.ru.astron.entities.Message) -> showErrorMessage
    2400:2401:boolean showLoadMoreMessages(com.ru.astron.entities.Conversation) -> showLoadMoreMessages
    2541:2553:void showNoPGPKeyDialog(boolean,android.content.DialogInterface$OnClickListener) -> showNoPGPKeyDialog
    2418:2419:void showSnackbar(int,int,android.view.View$OnClickListener) -> showSnackbar
    2422:2432:void showSnackbar(int,int,android.view.View$OnClickListener,android.view.View$OnLongClickListener) -> showSnackbar
    1771:1776:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1405:1422:void startDownloadable(com.ru.astron.entities.Message) -> startDownloadable
    2672:2675:void startPendingIntent(android.app.PendingIntent,int) -> startPendingIntent
    469:473:void startStopPending(android.app.Activity) -> startStopPending
    2394:2397:void stopScrolling() -> stopScrolling
    2229:2229:boolean storeNextMessage() -> storeNextMessage
    2233:2238:boolean storeNextMessage(java.lang.String) -> storeNextMessage
    887:891:void toggleInputMethod() -> toggleInputMethod
    544:545:void toggleScrollDownButton() -> toggleScrollDownButton
    548:564:void toggleScrollDownButton(android.widget.AbsListView) -> toggleScrollDownButton
    753:772:boolean trustKeysIfNeeded(int) -> trustKeysIfNeeded
    915:916:void unblockConversation(com.ru.astron.entities.Blockable) -> unblockConversation
    1504:1509:void unmuteConversation(com.ru.astron.entities.Conversation) -> unmuteConversation
    779:792:void updateChatMsgHint() -> updateChatMsgHint
    1859:1864:void updateChatState(com.ru.astron.entities.Conversation,java.lang.String) -> updateChatState
    2287:2289:void updateDateSeparators() -> updateDateSeparators
    2251:2257:void updateEditablity() -> updateEditablity
    2260:2284:void updateSendButton() -> updateSendButton
    2087:2170:void updateSnackBar(com.ru.astron.entities.Conversation) -> updateSnackBar
    2293:2390:void updateStatusMessages() -> updateStatusMessages
com.ru.astron.ui.ConversationFragment$1 -> com.ru.astron.ui.ConversationFragment$1:
    173:173:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    177:181:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$10 -> com.ru.astron.ui.ConversationFragment$10:
    346:346:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    350:355:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$11 -> com.ru.astron.ui.ConversationFragment$11:
    358:358:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    361:368:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$12 -> com.ru.astron.ui.ConversationFragment$12:
    370:370:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    374:389:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$13 -> com.ru.astron.ui.ConversationFragment$13:
    404:404:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    408:410:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$14 -> com.ru.astron.ui.ConversationFragment$14:
    412:412:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    416:447:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$15 -> com.ru.astron.ui.ConversationFragment$15:
    619:619:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    619:619:void error(int,java.lang.Object) -> error
    629:629:void error(int,com.ru.astron.entities.Message) -> error
    619:619:void success(java.lang.Object) -> success
    624:624:void success(com.ru.astron.entities.Message) -> success
    619:619:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    634:634:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Message) -> userInputRequried
com.ru.astron.ui.ConversationFragment$16 -> com.ru.astron.ui.ConversationFragment$16:
    645:645:void <init>(com.ru.astron.ui.ConversationFragment,android.widget.Toast) -> <init>
    645:645:void error(int,java.lang.Object) -> error
    660:663:void error(int,com.ru.astron.entities.Message) -> error
    661:661:void lambda$error$2(int) -> lambda$error$2$ConversationFragment$16
    654:654:void lambda$success$1() -> lambda$success$1$ConversationFragment$16
    645:645:void success(java.lang.Object) -> success
    654:656:void success(com.ru.astron.entities.Message) -> success
    645:645:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    667:668:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Message) -> userInputRequried
com.ru.astron.ui.ConversationFragment$17 -> com.ru.astron.ui.ConversationFragment$17:
    685:685:void <init>(com.ru.astron.ui.ConversationFragment,android.widget.Toast) -> <init>
    685:685:void error(int,java.lang.Object) -> error
    699:701:void error(int,com.ru.astron.entities.Message) -> error
    700:700:void lambda$error$0(int) -> lambda$error$0$ConversationFragment$17
    685:685:void success(java.lang.Object) -> success
    694:695:void success(com.ru.astron.entities.Message) -> success
    685:685:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    689:690:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Message) -> userInputRequried
com.ru.astron.ui.ConversationFragment$18 -> com.ru.astron.ui.ConversationFragment$18:
    1322:1322:void <init>(com.ru.astron.ui.ConversationFragment,int) -> <init>
    1322:1322:void error(int,java.lang.Object) -> error
    1336:1337:void error(int,com.ru.astron.entities.Contact) -> error
    1322:1322:void success(java.lang.Object) -> success
    1331:1332:void success(com.ru.astron.entities.Contact) -> success
    1322:1322:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    1326:1327:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Contact) -> userInputRequried
com.ru.astron.ui.ConversationFragment$19 -> com.ru.astron.ui.ConversationFragment$19:
    2460:2460:void <init>(com.ru.astron.ui.ConversationFragment,com.ru.astron.entities.Message) -> <init>
    2460:2460:void error(int,java.lang.Object) -> error
    2474:2479:void error(int,com.ru.astron.entities.Contact) -> error
    2474:2474:void lambda$error$0() -> lambda$error$0$ConversationFragment$19
    2460:2460:void success(java.lang.Object) -> success
    2469:2470:void success(com.ru.astron.entities.Contact) -> success
    2460:2460:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    2464:2465:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Contact) -> userInputRequried
com.ru.astron.ui.ConversationFragment$2 -> com.ru.astron.ui.ConversationFragment$2:
    183:183:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    187:188:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$20 -> com.ru.astron.ui.ConversationFragment$20:
    2516:2516:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    2516:2516:void error(int,java.lang.Object) -> error
    2531:2536:void error(int,com.ru.astron.entities.Message) -> error
    2532:2534:void lambda$error$1(int) -> lambda$error$1$ConversationFragment$20
    2526:2526:void lambda$success$0() -> lambda$success$0$ConversationFragment$20
    2516:2516:void success(java.lang.Object) -> success
    2526:2527:void success(com.ru.astron.entities.Message) -> success
    2516:2516:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    2520:2521:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Message) -> userInputRequried
com.ru.astron.ui.ConversationFragment$21 -> com.ru.astron.ui.ConversationFragment$21:
    2105:419:void <clinit>() -> <clinit>
com.ru.astron.ui.ConversationFragment$3 -> com.ru.astron.ui.ConversationFragment$3:
    190:190:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    194:195:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$4 -> com.ru.astron.ui.ConversationFragment$4:
    198:198:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    201:204:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$5 -> com.ru.astron.ui.ConversationFragment$5:
    207:207:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    217:218:java.lang.String lambda$onClick$0(java.lang.String) -> lambda$onClick$0$ConversationFragment$5
    211:220:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$6 -> com.ru.astron.ui.ConversationFragment$6:
    222:222:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    233:298:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    226:229:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.ru.astron.ui.ConversationFragment$6$1 -> com.ru.astron.ui.ConversationFragment$6$1:
    242:242:void <init>(com.ru.astron.ui.ConversationFragment$6,android.widget.AbsListView) -> <init>
    283:294:void informUser(int) -> informUser
    284:292:void lambda$informUser$1(android.widget.AbsListView,int) -> lambda$informUser$1$ConversationFragment$6$1
    250:276:void lambda$onMoreMessagesLoaded$0(com.ru.astron.entities.Conversation) -> lambda$onMoreMessagesLoaded$0$ConversationFragment$6$1
    245:278:void onMoreMessagesLoaded(int,com.ru.astron.entities.Conversation) -> onMoreMessagesLoaded
com.ru.astron.ui.ConversationFragment$7 -> com.ru.astron.ui.ConversationFragment$7:
    301:301:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    305:320:boolean onCommitContent(android.support.v13.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle,java.lang.String[]) -> onCommitContent
com.ru.astron.ui.ConversationFragment$8 -> com.ru.astron.ui.ConversationFragment$8:
    324:324:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    327:332:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationFragment$9 -> com.ru.astron.ui.ConversationFragment$9:
    334:334:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    337:337:void lambda$onClick$0(android.view.View) -> lambda$onClick$0
    337:343:void onClick(android.view.View) -> onClick
com.ru.astron.ui.ConversationsActivity -> com.ru.astron.ui.ConversationsActivity:
    98:110:void <clinit>() -> <clinit>
    88:115:void <init>() -> <init>
    663:664:void OnUpdateBlocklist(com.ru.astron.xmpp.OnUpdateBlocklist$Status) -> OnUpdateBlocklist
    407:410:void clearPendingViewIntent() -> clearPendingViewIntent
    123:126:android.content.Intent createLauncherIntent(android.content.Context) -> createLauncherIntent
    413:414:void displayToast(java.lang.String) -> displayToast
    209:210:java.lang.String getBatteryOptimizationPreferenceKey() -> getBatteryOptimizationPreferenceKey
    306:311:void handleActivityResult(com.ru.astron.ui.util.ActivityResult) -> handleActivityResult
    314:326:void handleNegativeActivityResult(int) -> handleNegativeActivityResult
    329:351:void handlePositiveActivityResult(int,android.content.Intent) -> handlePositiveActivityResult
    243:248:boolean hasAccountWithoutPush() -> hasAccountWithoutPush
    540:575:void initializeFragments() -> initializeFragments
    578:592:void invalidateActionBarTitle() -> invalidateActionBarTitle
    118:119:boolean isViewOrShareIntent(android.content.Intent) -> isViewOrShareIntent
    413:413:void lambda$displayToast$3(java.lang.String) -> lambda$displayToast$3$ConversationsActivity
    668:668:void lambda$onShowErrorToast$4(int) -> lambda$onShowErrorToast$4$ConversationsActivity
    226:234:void lambda$openBatteryOptimizationDialogIfNeeded$1(android.content.DialogInterface,int) -> lambda$openBatteryOptimizationDialogIfNeeded$1$ConversationsActivity
    235:235:void lambda$openBatteryOptimizationDialogIfNeeded$2(android.content.DialogInterface) -> lambda$openBatteryOptimizationDialogIfNeeded$2$ConversationsActivity
    186:190:void lambda$performRedirectIfNecessary$0(android.content.Intent,boolean) -> lambda$performRedirectIfNecessary$0$ConversationsActivity
    252:256:void notifyFragmentOfBackendConnected(int) -> notifyFragmentOfBackendConnected
    645:646:void onAccountUpdate() -> onAccountUpdate
    296:303:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    423:424:void onAffiliationChangeFailed(rocks.xmpp.addr.Jid,int) -> onAffiliationChangeFailed
    419:419:void onAffiliationChangedSuccessful(rocks.xmpp.addr.Jid) -> onAffiliationChangedSuccessful
    138:169:void onBackendConnected() -> onBackendConnected
    596:618:void onConversationArchived(com.ru.astron.entities.Conversation) -> onConversationArchived
    636:641:void onConversationRead(com.ru.astron.entities.Conversation,java.lang.String) -> onConversationRead
    398:404:void onConversationSelected(com.ru.astron.entities.Conversation) -> onConversationSelected
    650:654:void onConversationUpdate() -> onConversationUpdate
    622:626:void onConversationsListItemUpdated() -> onConversationsListItemUpdated
    355:375:void onCreate(android.os.Bundle) -> onCreate
    379:393:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    516:525:void onNewIntent(android.content.Intent) -> onNewIntent
    472:491:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    529:531:void onPause() -> onPause
    278:292:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    535:537:void onResume() -> onResume
    658:659:void onRosterUpdate() -> onRosterUpdate
    496:499:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    668:669:void onShowErrorToast(int) -> onShowErrorToast
    503:512:void onStart() -> onStart
    459:467:boolean onXmppUriClicked(android.net.Uri) -> onXmppUriClicked
    218:240:void openBatteryOptimizationDialogIfNeeded() -> openBatteryOptimizationDialogIfNeeded
    427:456:void openConversation(com.ru.astron.entities.Conversation,android.os.Bundle) -> openConversation
    172:172:boolean performRedirectIfNecessary(boolean) -> performRedirectIfNecessary
    176:192:boolean performRedirectIfNecessary(com.ru.astron.entities.Conversation,boolean) -> performRedirectIfNecessary
    266:273:boolean processViewIntent(android.content.Intent) -> processViewIntent
    259:263:void refreshFragment(int) -> refreshFragment
    131:134:void refreshUiReal() -> refreshUiReal
    214:215:void setNeverAskForBatteryOptimizationsAgain() -> setNeverAskForBatteryOptimizationsAgain
    196:206:void showDialogsIfMainIsOverview() -> showDialogsIfMainIsOverview
    630:632:void switchToConversation(com.ru.astron.entities.Conversation) -> switchToConversation
com.ru.astron.ui.ConversationsOverviewFragment -> com.ru.astron.ui.ConversationsOverviewFragment:
    74:74:void <clinit>() -> <clinit>
    72:194:void <init>() -> <init>
    72:72:float access$000(com.ru.astron.ui.ConversationsOverviewFragment) -> access$000
    72:72:com.ru.astron.ui.XmppActivity access$100(com.ru.astron.ui.ConversationsOverviewFragment) -> access$100
    72:72:com.ru.astron.ui.util.PendingActionHelper access$200(com.ru.astron.ui.ConversationsOverviewFragment) -> access$200
    72:72:java.util.List access$300(com.ru.astron.ui.ConversationsOverviewFragment) -> access$300
    72:72:com.ru.astron.ui.util.PendingItem access$400(com.ru.astron.ui.ConversationsOverviewFragment) -> access$400
    72:72:com.ru.astron.ui.adapter.ConversationAdapter access$500(com.ru.astron.ui.ConversationsOverviewFragment) -> access$500
    72:72:com.ru.astron.databinding.FragmentConversationsOverviewBinding access$600(com.ru.astron.ui.ConversationsOverviewFragment) -> access$600
    304:313:com.ru.astron.ui.util.ScrollState getScrollState() -> getScrollState
    198:204:com.ru.astron.entities.Conversation getSuggestion(android.app.Activity) -> getSuggestion
    208:222:com.ru.astron.entities.Conversation getSuggestion(android.app.Activity,com.ru.astron.entities.Conversation) -> getSuggestion
    268:268:void lambda$onCreateView$0(android.view.View) -> lambda$onCreateView$0$ConversationsOverviewFragment
    272:277:void lambda$onCreateView$1(android.view.View,com.ru.astron.entities.Conversation) -> lambda$onCreateView$1$ConversationsOverviewFragment
    228:233:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    237:241:void onAttach(android.app.Activity) -> onAttach
    291:292:void onBackendConnected() -> onBackendConnected
    260:262:void onCreate(android.os.Bundle) -> onCreate
    286:287:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    266:281:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    254:256:void onDetach() -> onDetach
    334:340:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    247:250:void onPause() -> onPause
    328:330:void onResume() -> onResume
    296:301:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    319:324:void onStart() -> onStart
    347:349:void refresh() -> refresh
    368:372:void setScrollPosition(com.ru.astron.ui.util.ScrollState) -> setScrollPosition
com.ru.astron.ui.ConversationsOverviewFragment$1 -> com.ru.astron.ui.ConversationsOverviewFragment$1:
    85:85:void <init>(com.ru.astron.ui.ConversationsOverviewFragment,int,int) -> <init>
    112:114:void clearView(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder) -> clearView
    94:94:float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    151:163:void lambda$onSwiped$0(int,boolean,com.ru.astron.entities.Conversation,android.view.View) -> lambda$onSwiped$0$ConversationsOverviewFragment$1
    177:187:void lambda$onSwiped$1(android.support.design.widget.Snackbar,com.ru.astron.entities.Conversation) -> lambda$onSwiped$1$ConversationsOverviewFragment$1
    100:108:void onChildDraw(android.graphics.Canvas,android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    89:89:boolean onMove(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder) -> onMove
    118:123:void onSwiped(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onSwiped
com.ru.astron.ui.ConversationsOverviewFragment$1$1 -> com.ru.astron.ui.ConversationsOverviewFragment$1$1:
    164:164:void <init>(com.ru.astron.ui.ConversationsOverviewFragment$1) -> <init>
    164:164:void onDismissed(java.lang.Object,int) -> onDismissed
    167:173:void onDismissed(android.support.design.widget.Snackbar,int) -> onDismissed
com.ru.astron.ui.CreatePrivateGroupChatDialog -> com.ru.astron.ui.CreatePrivateGroupChatDialog:
    19:19:void <init>() -> <init>
    47:47:void lambda$onCreateDialog$0(com.ru.astron.databinding.CreateConferenceDialogBinding,android.content.DialogInterface,int) -> lambda$onCreateDialog$0$CreatePrivateGroupChatDialog
    51:52:boolean lambda$onCreateDialog$1(com.ru.astron.databinding.CreateConferenceDialogBinding,android.widget.TextView,int,android.view.KeyEvent) -> lambda$onCreateDialog$1$CreatePrivateGroupChatDialog
    25:29:com.ru.astron.ui.CreatePrivateGroupChatDialog newInstance(java.util.List) -> newInstance
    34:36:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    64:68:void onAttach(android.content.Context) -> onAttach
    41:54:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    75:80:void onDestroyView() -> onDestroyView
com.ru.astron.ui.CreatePublicChannelDialog -> com.ru.astron.ui.CreatePublicChannelDialog:
    37:45:void <clinit>() -> <clinit>
    35:44:void <init>() -> <init>
    35:35:void access$000(com.ru.astron.ui.CreatePublicChannelDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> access$000
    35:35:boolean access$100(com.ru.astron.ui.CreatePublicChannelDialog) -> access$100
    35:35:boolean access$200(com.ru.astron.ui.CreatePublicChannelDialog) -> access$200
    35:35:boolean access$202(com.ru.astron.ui.CreatePublicChannelDialog,boolean) -> access$202
    35:35:java.lang.String access$300(com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> access$300
    166:169:java.lang.String clean(java.lang.String) -> clean
    142:160:java.lang.String getJidSuggestion(com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> getJidSuggestion
    173:180:void goBack(android.support.v7.app.AlertDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> goBack
    118:118:void lambda$null$1(android.support.v7.app.AlertDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding,android.view.View) -> lambda$null$1$CreatePublicChannelDialog
    119:119:void lambda$null$2(android.support.v7.app.AlertDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding,android.view.View) -> lambda$null$2$CreatePublicChannelDialog
    114:115:boolean lambda$onCreateDialog$0(android.support.v7.app.AlertDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding,android.widget.TextView,int,android.view.KeyEvent) -> lambda$onCreateDialog$0$CreatePublicChannelDialog
    118:120:void lambda$onCreateDialog$3(android.support.v7.app.AlertDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding,android.content.DialogInterface) -> lambda$onCreateDialog$3$CreatePublicChannelDialog
    48:52:com.ru.astron.ui.CreatePublicChannelDialog newInstance(java.util.List) -> newInstance
    57:59:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    269:273:void onAttach(android.content.Context) -> onAttach
    252:253:void onBackendConnected() -> onBackendConnected
    64:121:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    289:294:void onDestroyView() -> onDestroyView
    136:139:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    280:285:void onStart() -> onStart
    256:261:void refreshKnownHosts() -> refreshKnownHosts
    183:227:void submit(android.support.v7.app.AlertDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> submit
    244:248:void updateButtons(android.support.v7.app.AlertDialog) -> updateButtons
    231:241:void updateInputs(com.ru.astron.databinding.CreatePublicChannelDialogBinding,boolean) -> updateInputs
    125:132:void updateJidSuggestion(com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> updateJidSuggestion
com.ru.astron.ui.CreatePublicChannelDialog$1 -> com.ru.astron.ui.CreatePublicChannelDialog$1:
    69:69:void <init>(com.ru.astron.ui.CreatePublicChannelDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> <init>
    72:73:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    78:78:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.ru.astron.ui.CreatePublicChannelDialog$2 -> com.ru.astron.ui.CreatePublicChannelDialog$2:
    80:80:void <init>(com.ru.astron.ui.CreatePublicChannelDialog,com.ru.astron.databinding.CreatePublicChannelDialogBinding) -> <init>
    93:101:void afterTextChanged(android.text.Editable) -> afterTextChanged
    84:84:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    89:89:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ru.astron.ui.EditAccountActivity -> com.ru.astron.ui.EditAccountActivity:
    80:314:void <init>() -> <init>
    1301:1302:void OnUpdateBlocklist(com.ru.astron.xmpp.OnUpdateBlocklist$Status) -> OnUpdateBlocklist
    80:80:com.ru.astron.entities.Account access$000(com.ru.astron.ui.EditAccountActivity) -> access$000
    80:80:com.ru.astron.entities.Account access$002(com.ru.astron.ui.EditAccountActivity,com.ru.astron.entities.Account) -> access$002
    80:80:com.ru.astron.databinding.ActivityEditAccountBinding access$100(com.ru.astron.ui.EditAccountActivity) -> access$100
    80:80:void access$1000(com.ru.astron.ui.EditAccountActivity) -> access$1000
    80:80:boolean access$1100(com.ru.astron.ui.EditAccountActivity) -> access$1100
    80:80:com.ru.astron.ui.util.PendingItem access$1200(com.ru.astron.ui.EditAccountActivity) -> access$1200
    80:80:boolean access$200(com.ru.astron.ui.EditAccountActivity) -> access$200
    80:80:boolean access$300(com.ru.astron.ui.EditAccountActivity) -> access$300
    80:80:java.lang.String access$400(com.ru.astron.ui.EditAccountActivity) -> access$400
    80:80:void access$500(com.ru.astron.ui.EditAccountActivity,android.support.design.widget.TextInputLayout) -> access$500
    80:80:boolean access$600(com.ru.astron.ui.EditAccountActivity) -> access$600
    80:80:java.lang.String access$700(com.ru.astron.ui.EditAccountActivity) -> access$700
    80:80:boolean access$800(com.ru.astron.ui.EditAccountActivity) -> access$800
    80:80:void access$900(com.ru.astron.ui.EditAccountActivity,boolean) -> access$900
    540:543:boolean accountInfoEdited() -> accountInfoEdited
    915:918:void alias(java.lang.String) -> alias
    842:843:void changeMoreTableVisibility(boolean) -> changeMoreTableVisibility
    859:888:void changePresence() -> changePresence
    397:405:void deleteAccountAndReturnIfNecessary() -> deleteAccountAndReturnIfNecessary
    1210:1213:void editMamPrefs() -> editMamPrefs
    413:435:void finishInitialSetup(com.ru.astron.xmpp.pep.Avatar) -> finishInitialSetup
    891:911:void generateSignature(android.content.Intent,com.ru.astron.entities.PresenceTemplate) -> generateSignature
    352:359:com.ru.astron.entities.Presence$Status getAvailabilityRadioButton(com.ru.astron.databinding.DialogPresenceBinding) -> getAvailabilityRadioButton
    561:564:java.lang.String getShareableUri(boolean) -> getShareableUri
    783:786:java.lang.String getUserModeDomain() -> getUserModeDomain
    98:98:java.lang.String getUserName() -> getUserName
    846:852:void gotoChangePassword(java.lang.String) -> gotoChangePassword
    830:830:boolean inNeedOfSaslAccept() -> inNeedOfSaslAccept
    551:556:boolean jidEdited() -> jidEdited
    873:875:void lambda$changePresence$5(com.ru.astron.databinding.DialogPresenceBinding,android.widget.AdapterView,android.view.View,int,long) -> lambda$changePresence$5
    880:886:void lambda$changePresence$6(com.ru.astron.databinding.DialogPresenceBinding,android.content.DialogInterface,int) -> lambda$changePresence$6$EditAccountActivity
    414:434:void lambda$finishInitialSetup$1(com.ru.astron.xmpp.pep.Avatar) -> lambda$finishInitialSetup$1$EditAccountActivity
    102:104:void lambda$new$0(android.view.View) -> lambda$new$0$EditAccountActivity
    1237:1246:void lambda$null$14(android.widget.EditText,com.ru.astron.xmpp.forms.Data,com.ru.astron.entities.Account,java.lang.String,android.content.DialogInterface,int) -> lambda$null$14$EditAccountActivity
    1248:1251:void lambda$null$15(com.ru.astron.entities.Account,android.content.DialogInterface,int) -> lambda$null$15$EditAccountActivity
    1254:1257:void lambda$null$16(com.ru.astron.entities.Account,android.content.DialogInterface) -> lambda$null$16$EditAccountActivity
    1279:1279:void lambda$null$19(java.util.concurrent.atomic.AtomicInteger,android.content.DialogInterface,int) -> lambda$null$19
    1282:1284:void lambda$null$20(com.ru.astron.xml.Element,java.util.List,java.util.concurrent.atomic.AtomicInteger,android.content.DialogInterface,int) -> lambda$null$20$EditAccountActivity
    1223:1261:void lambda$onCaptchaRequested$17(android.graphics.Bitmap,com.ru.astron.xmpp.forms.Data,com.ru.astron.entities.Account,java.lang.String) -> lambda$onCaptchaRequested$17$EditAccountActivity
    584:584:void lambda$onCreate$2(android.view.View) -> lambda$onCreate$2$EditAccountActivity
    592:592:void lambda$onCreate$3(android.widget.CompoundButton,boolean) -> lambda$onCreate$3$EditAccountActivity
    603:608:java.lang.String lambda$onEditYourNameClicked$4(java.lang.String) -> lambda$onEditYourNameClicked$4$EditAccountActivity
    1292:1296:void lambda$onPreferencesFetchFailed$22() -> lambda$onPreferencesFetchFailed$22$EditAccountActivity
    1271:1286:void lambda$onPreferencesFetched$21(com.ru.astron.xml.Element) -> lambda$onPreferencesFetched$21$EditAccountActivity
    1265:1265:void lambda$onShowErrorToast$18(int) -> lambda$onShowErrorToast$18$EditAccountActivity
    1156:1161:void lambda$showDeletePgpDialog$10(android.content.DialogInterface,int) -> lambda$showDeletePgpDialog$10$EditAccountActivity
    1172:1180:void lambda$showOsOptimizationWarning$11(android.view.View) -> lambda$showOsOptimizationWarning$11$EditAccountActivity
    1186:1194:void lambda$showOsOptimizationWarning$12(android.view.View) -> lambda$showOsOptimizationWarning$12$EditAccountActivity
    1205:1205:void lambda$showWipePepDialog$13(android.content.DialogInterface,int) -> lambda$showWipePepDialog$13$EditAccountActivity
    1047:1047:void lambda$updateAccountInformation$7(long,android.view.View) -> lambda$updateAccountInformation$7$EditAccountActivity
    1048:1048:void lambda$updateAccountInformation$8(android.view.View) -> lambda$updateAccountInformation$8$EditAccountActivity
    1072:1072:void lambda$updateAccountInformation$9(java.lang.String,android.view.View) -> lambda$updateAccountInformation$9$EditAccountActivity
    409:410:void onAccountUpdate() -> onAccountUpdate
    439:458:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    392:394:void onBackPressed() -> onBackPressed
    724:780:void onBackendConnected() -> onBackendConnected
    1222:1262:void onCaptchaRequested(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xmpp.forms.Data,android.graphics.Bitmap) -> onCaptchaRequested
    570:599:void onCreate(android.os.Bundle) -> onCreate
    618:648:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    602:610:void onEditYourNameClicked(android.view.View) -> onEditYourNameClicked
    1217:1218:void onKeyStatusUpdated(com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus) -> onKeyStatusUpdated
    386:387:boolean onNavigateUp() -> onNavigateUp
    703:711:void onNewIntent(android.content.Intent) -> onNewIntent
    792:826:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1291:1297:void onPreferencesFetchFailed() -> onPreferencesFetchFailed
    1270:1287:void onPreferencesFetched(com.ru.astron.xml.Element) -> onPreferencesFetched
    653:657:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    715:721:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1265:1266:void onShowErrorToast(int) -> onShowErrorToast
    662:699:void onStart() -> onStart
    462:463:void processFingerprintVerification(com.ru.astron.utils.XmppUri) -> processFingerprintVerification
    466:474:void processFingerprintVerification(com.ru.astron.utils.XmppUri,boolean) -> processFingerprintVerification
    613:614:void refreshAvatar() -> refreshAvatar
    364:382:void refreshUiReal() -> refreshUiReal
    1132:1148:void removeErrorsOnAllBut(android.support.design.widget.TextInputLayout) -> removeErrorsOnAllBut
    855:856:void renewCertificate() -> renewCertificate
    332:349:void setAvailabilityRadioButton(com.ru.astron.entities.Presence$Status,com.ru.astron.databinding.DialogPresenceBinding) -> setAvailabilityRadioButton
    834:839:void shareBarcode() -> shareBarcode
    1151:1163:void showDeletePgpDialog() -> showDeletePgpDialog
    1166:1196:void showOsOptimizationWarning(boolean,boolean) -> showOsOptimizationWarning
    1199:1207:void showWipePepDialog() -> showWipePepDialog
    532:532:boolean torNeedsInstall(com.ru.astron.entities.Account) -> torNeedsInstall
    536:536:boolean torNeedsStart(com.ru.astron.entities.Account) -> torNeedsStart
    921:1119:void updateAccountInformation(boolean) -> updateAccountInformation
    1122:1129:void updateDisplayName(java.lang.String) -> updateDisplayName
    477:479:void updatePortLayout() -> updatePortLayout
    482:529:void updateSaveButton() -> updateSaveButton
com.ru.astron.ui.EditAccountActivity$1 -> com.ru.astron.ui.EditAccountActivity$1:
    105:105:void <init>(com.ru.astron.ui.EditAccountActivity) -> <init>
    105:105:void error(int,java.lang.Object) -> error
    119:120:void error(int,com.ru.astron.xmpp.pep.Avatar) -> error
    105:105:void success(java.lang.Object) -> success
    114:115:void success(com.ru.astron.xmpp.pep.Avatar) -> success
    105:105:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    109:110:void userInputRequried(android.app.PendingIntent,com.ru.astron.xmpp.pep.Avatar) -> userInputRequried
com.ru.astron.ui.EditAccountActivity$2 -> com.ru.astron.ui.EditAccountActivity$2:
    122:122:void <init>(com.ru.astron.ui.EditAccountActivity) -> <init>
    125:130:void onClick(android.view.View) -> onClick
com.ru.astron.ui.EditAccountActivity$3 -> com.ru.astron.ui.EditAccountActivity$3:
    140:140:void <init>(com.ru.astron.ui.EditAccountActivity) -> <init>
    145:215:void onClick(android.view.View) -> onClick
com.ru.astron.ui.EditAccountActivity$4 -> com.ru.astron.ui.EditAccountActivity$4:
    297:297:void <init>(com.ru.astron.ui.EditAccountActivity) -> <init>
    312:312:void afterTextChanged(android.text.Editable) -> afterTextChanged
    307:307:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    301:303:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ru.astron.ui.EditAccountActivity$5 -> com.ru.astron.ui.EditAccountActivity$5:
    314:314:void <init>(com.ru.astron.ui.EditAccountActivity) -> <init>
    324:324:void lambda$onFocusChange$0(android.widget.EditText,int) -> lambda$onFocusChange$0
    317:328:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.ru.astron.ui.EditAccountActivity$6 -> com.ru.astron.ui.EditAccountActivity$6:
    891:891:void <init>(com.ru.astron.ui.EditAccountActivity,com.ru.astron.entities.PresenceTemplate) -> <init>
    891:891:void error(int,java.lang.Object) -> error
    900:900:void error(int,java.lang.String) -> error
    891:891:void success(java.lang.Object) -> success
    894:895:void success(java.lang.String) -> success
    891:891:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    904:909:void userInputRequried(android.app.PendingIntent,java.lang.String) -> userInputRequried
com.ru.astron.ui.EditAccountActivity$7 -> com.ru.astron.ui.EditAccountActivity$7:
    336:336:void <clinit>() -> <clinit>
com.ru.astron.ui.EditAccountActivity2 -> com.ru.astron.ui.EditAccountActivity2:
    80:314:void <init>() -> <init>
    1302:1303:void OnUpdateBlocklist(com.ru.astron.xmpp.OnUpdateBlocklist$Status) -> OnUpdateBlocklist
    80:80:com.ru.astron.entities.Account access$000(com.ru.astron.ui.EditAccountActivity2) -> access$000
    80:80:com.ru.astron.entities.Account access$002(com.ru.astron.ui.EditAccountActivity2,com.ru.astron.entities.Account) -> access$002
    80:80:com.ru.astron.databinding.ActivityEditAccount2Binding access$100(com.ru.astron.ui.EditAccountActivity2) -> access$100
    80:80:void access$1000(com.ru.astron.ui.EditAccountActivity2) -> access$1000
    80:80:boolean access$1100(com.ru.astron.ui.EditAccountActivity2) -> access$1100
    80:80:com.ru.astron.ui.util.PendingItem access$1200(com.ru.astron.ui.EditAccountActivity2) -> access$1200
    80:80:boolean access$200(com.ru.astron.ui.EditAccountActivity2) -> access$200
    80:80:boolean access$300(com.ru.astron.ui.EditAccountActivity2) -> access$300
    80:80:java.lang.String access$400(com.ru.astron.ui.EditAccountActivity2) -> access$400
    80:80:void access$500(com.ru.astron.ui.EditAccountActivity2,android.support.design.widget.TextInputLayout) -> access$500
    80:80:boolean access$600(com.ru.astron.ui.EditAccountActivity2) -> access$600
    80:80:java.lang.String access$700(com.ru.astron.ui.EditAccountActivity2) -> access$700
    80:80:boolean access$800(com.ru.astron.ui.EditAccountActivity2) -> access$800
    80:80:void access$900(com.ru.astron.ui.EditAccountActivity2,boolean) -> access$900
    540:543:boolean accountInfoEdited() -> accountInfoEdited
    916:919:void alias(java.lang.String) -> alias
    843:844:void changeMoreTableVisibility(boolean) -> changeMoreTableVisibility
    860:889:void changePresence() -> changePresence
    397:405:void deleteAccountAndReturnIfNecessary() -> deleteAccountAndReturnIfNecessary
    1211:1214:void editMamPrefs() -> editMamPrefs
    413:435:void finishInitialSetup(com.ru.astron.xmpp.pep.Avatar) -> finishInitialSetup
    892:912:void generateSignature(android.content.Intent,com.ru.astron.entities.PresenceTemplate) -> generateSignature
    352:359:com.ru.astron.entities.Presence$Status getAvailabilityRadioButton(com.ru.astron.databinding.DialogPresenceBinding) -> getAvailabilityRadioButton
    561:564:java.lang.String getShareableUri(boolean) -> getShareableUri
    784:787:java.lang.String getUserModeDomain() -> getUserModeDomain
    98:98:java.lang.String getUserName() -> getUserName
    847:853:void gotoChangePassword(java.lang.String) -> gotoChangePassword
    831:831:boolean inNeedOfSaslAccept() -> inNeedOfSaslAccept
    551:556:boolean jidEdited() -> jidEdited
    874:876:void lambda$changePresence$5(com.ru.astron.databinding.DialogPresenceBinding,android.widget.AdapterView,android.view.View,int,long) -> lambda$changePresence$5
    881:887:void lambda$changePresence$6(com.ru.astron.databinding.DialogPresenceBinding,android.content.DialogInterface,int) -> lambda$changePresence$6$EditAccountActivity2
    414:434:void lambda$finishInitialSetup$1(com.ru.astron.xmpp.pep.Avatar) -> lambda$finishInitialSetup$1$EditAccountActivity2
    102:104:void lambda$new$0(android.view.View) -> lambda$new$0$EditAccountActivity2
    1238:1247:void lambda$null$14(android.widget.EditText,com.ru.astron.xmpp.forms.Data,com.ru.astron.entities.Account,java.lang.String,android.content.DialogInterface,int) -> lambda$null$14$EditAccountActivity2
    1249:1252:void lambda$null$15(com.ru.astron.entities.Account,android.content.DialogInterface,int) -> lambda$null$15$EditAccountActivity2
    1255:1258:void lambda$null$16(com.ru.astron.entities.Account,android.content.DialogInterface) -> lambda$null$16$EditAccountActivity2
    1280:1280:void lambda$null$19(java.util.concurrent.atomic.AtomicInteger,android.content.DialogInterface,int) -> lambda$null$19
    1283:1285:void lambda$null$20(com.ru.astron.xml.Element,java.util.List,java.util.concurrent.atomic.AtomicInteger,android.content.DialogInterface,int) -> lambda$null$20$EditAccountActivity2
    1224:1262:void lambda$onCaptchaRequested$17(android.graphics.Bitmap,com.ru.astron.xmpp.forms.Data,com.ru.astron.entities.Account,java.lang.String) -> lambda$onCaptchaRequested$17$EditAccountActivity2
    584:584:void lambda$onCreate$2(android.view.View) -> lambda$onCreate$2$EditAccountActivity2
    592:592:void lambda$onCreate$3(android.widget.CompoundButton,boolean) -> lambda$onCreate$3$EditAccountActivity2
    604:609:java.lang.String lambda$onEditYourNameClicked$4(java.lang.String) -> lambda$onEditYourNameClicked$4$EditAccountActivity2
    1293:1297:void lambda$onPreferencesFetchFailed$22() -> lambda$onPreferencesFetchFailed$22$EditAccountActivity2
    1272:1287:void lambda$onPreferencesFetched$21(com.ru.astron.xml.Element) -> lambda$onPreferencesFetched$21$EditAccountActivity2
    1266:1266:void lambda$onShowErrorToast$18(int) -> lambda$onShowErrorToast$18$EditAccountActivity2
    1157:1162:void lambda$showDeletePgpDialog$10(android.content.DialogInterface,int) -> lambda$showDeletePgpDialog$10$EditAccountActivity2
    1173:1181:void lambda$showOsOptimizationWarning$11(android.view.View) -> lambda$showOsOptimizationWarning$11$EditAccountActivity2
    1187:1195:void lambda$showOsOptimizationWarning$12(android.view.View) -> lambda$showOsOptimizationWarning$12$EditAccountActivity2
    1206:1206:void lambda$showWipePepDialog$13(android.content.DialogInterface,int) -> lambda$showWipePepDialog$13$EditAccountActivity2
    1048:1048:void lambda$updateAccountInformation$7(long,android.view.View) -> lambda$updateAccountInformation$7$EditAccountActivity2
    1049:1049:void lambda$updateAccountInformation$8(android.view.View) -> lambda$updateAccountInformation$8$EditAccountActivity2
    1073:1073:void lambda$updateAccountInformation$9(java.lang.String,android.view.View) -> lambda$updateAccountInformation$9$EditAccountActivity2
    409:410:void onAccountUpdate() -> onAccountUpdate
    439:458:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    392:394:void onBackPressed() -> onBackPressed
    725:781:void onBackendConnected() -> onBackendConnected
    1223:1263:void onCaptchaRequested(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.xmpp.forms.Data,android.graphics.Bitmap) -> onCaptchaRequested
    570:600:void onCreate(android.os.Bundle) -> onCreate
    619:649:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    603:611:void onEditYourNameClicked(android.view.View) -> onEditYourNameClicked
    1218:1219:void onKeyStatusUpdated(com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus) -> onKeyStatusUpdated
    386:387:boolean onNavigateUp() -> onNavigateUp
    704:712:void onNewIntent(android.content.Intent) -> onNewIntent
    793:827:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1292:1298:void onPreferencesFetchFailed() -> onPreferencesFetchFailed
    1271:1288:void onPreferencesFetched(com.ru.astron.xml.Element) -> onPreferencesFetched
    654:658:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    716:722:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1266:1267:void onShowErrorToast(int) -> onShowErrorToast
    663:700:void onStart() -> onStart
    462:463:void processFingerprintVerification(com.ru.astron.utils.XmppUri) -> processFingerprintVerification
    466:474:void processFingerprintVerification(com.ru.astron.utils.XmppUri,boolean) -> processFingerprintVerification
    614:615:void refreshAvatar() -> refreshAvatar
    364:382:void refreshUiReal() -> refreshUiReal
    1133:1149:void removeErrorsOnAllBut(android.support.design.widget.TextInputLayout) -> removeErrorsOnAllBut
    856:857:void renewCertificate() -> renewCertificate
    332:349:void setAvailabilityRadioButton(com.ru.astron.entities.Presence$Status,com.ru.astron.databinding.DialogPresenceBinding) -> setAvailabilityRadioButton
    835:840:void shareBarcode() -> shareBarcode
    1152:1164:void showDeletePgpDialog() -> showDeletePgpDialog
    1167:1197:void showOsOptimizationWarning(boolean,boolean) -> showOsOptimizationWarning
    1200:1208:void showWipePepDialog() -> showWipePepDialog
    532:532:boolean torNeedsInstall(com.ru.astron.entities.Account) -> torNeedsInstall
    536:536:boolean torNeedsStart(com.ru.astron.entities.Account) -> torNeedsStart
    922:1120:void updateAccountInformation(boolean) -> updateAccountInformation
    1123:1130:void updateDisplayName(java.lang.String) -> updateDisplayName
    477:479:void updatePortLayout() -> updatePortLayout
    482:529:void updateSaveButton() -> updateSaveButton
com.ru.astron.ui.EditAccountActivity2$1 -> com.ru.astron.ui.EditAccountActivity2$1:
    105:105:void <init>(com.ru.astron.ui.EditAccountActivity2) -> <init>
    105:105:void error(int,java.lang.Object) -> error
    119:120:void error(int,com.ru.astron.xmpp.pep.Avatar) -> error
    105:105:void success(java.lang.Object) -> success
    114:115:void success(com.ru.astron.xmpp.pep.Avatar) -> success
    105:105:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    109:110:void userInputRequried(android.app.PendingIntent,com.ru.astron.xmpp.pep.Avatar) -> userInputRequried
com.ru.astron.ui.EditAccountActivity2$2 -> com.ru.astron.ui.EditAccountActivity2$2:
    122:122:void <init>(com.ru.astron.ui.EditAccountActivity2) -> <init>
    125:130:void onClick(android.view.View) -> onClick
com.ru.astron.ui.EditAccountActivity2$3 -> com.ru.astron.ui.EditAccountActivity2$3:
    140:140:void <init>(com.ru.astron.ui.EditAccountActivity2) -> <init>
    145:215:void onClick(android.view.View) -> onClick
com.ru.astron.ui.EditAccountActivity2$4 -> com.ru.astron.ui.EditAccountActivity2$4:
    297:297:void <init>(com.ru.astron.ui.EditAccountActivity2) -> <init>
    312:312:void afterTextChanged(android.text.Editable) -> afterTextChanged
    307:307:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    301:303:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ru.astron.ui.EditAccountActivity2$5 -> com.ru.astron.ui.EditAccountActivity2$5:
    314:314:void <init>(com.ru.astron.ui.EditAccountActivity2) -> <init>
    324:324:void lambda$onFocusChange$0(android.widget.EditText,int) -> lambda$onFocusChange$0
    317:328:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.ru.astron.ui.EditAccountActivity2$6 -> com.ru.astron.ui.EditAccountActivity2$6:
    892:892:void <init>(com.ru.astron.ui.EditAccountActivity2,com.ru.astron.entities.PresenceTemplate) -> <init>
    892:892:void error(int,java.lang.Object) -> error
    901:901:void error(int,java.lang.String) -> error
    892:892:void success(java.lang.Object) -> success
    895:896:void success(java.lang.String) -> success
    892:892:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    905:910:void userInputRequried(android.app.PendingIntent,java.lang.String) -> userInputRequried
com.ru.astron.ui.EditAccountActivity2$7 -> com.ru.astron.ui.EditAccountActivity2$7:
    336:336:void <clinit>() -> <clinit>
com.ru.astron.ui.EnterJidDialog -> com.ru.astron.ui.EnterJidDialog:
    25:27:void <init>() -> <init>
    124:134:void handleEnter(com.ru.astron.databinding.EnterJidDialogBinding,java.lang.String,android.app.Dialog) -> handleEnter
    109:110:void lambda$onCreateDialog$0(com.ru.astron.databinding.EnterJidDialogBinding,java.lang.String,android.support.v7.app.AlertDialog,android.view.View) -> lambda$onCreateDialog$0$EnterJidDialog
    113:114:boolean lambda$onCreateDialog$1(com.ru.astron.databinding.EnterJidDialogBinding,java.lang.String,android.support.v7.app.AlertDialog,android.widget.TextView,int,android.view.KeyEvent) -> lambda$onCreateDialog$1$EnterJidDialog
    41:50:com.ru.astron.ui.EnterJidDialog newInstance(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> newInstance
    55:57:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    161:162:void onBackendConnected() -> onBackendConnected
    71:119:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    190:195:void onDestroyView() -> onDestroyView
    61:66:void onStart() -> onStart
    165:170:void refreshKnownHosts() -> refreshKnownHosts
    156:157:void setOnEnterJidDialogPositiveListener(com.ru.astron.ui.EnterJidDialog$OnEnterJidDialogPositiveListener) -> setOnEnterJidDialogPositiveListener
com.ru.astron.ui.EnterJidDialog$JidError -> com.ru.astron.ui.EnterJidDialog$JidError:
    179:181:void <init>(java.lang.String) -> <init>
    184:184:java.lang.String toString() -> toString
com.ru.astron.ui.ImportBackupActivity -> com.ru.astron.ui.ImportBackupActivity:
    28:28:void <init>() -> <init>
    130:132:void lambda$onBackupDecryptionFailed$3() -> lambda$onBackupDecryptionFailed$3$ImportBackupActivity
    86:86:void lambda$onBackupFilesLoaded$0(java.util.List) -> lambda$onBackupFilesLoaded$0$ImportBackupActivity
    138:140:void lambda$onBackupRestoreFailed$4() -> lambda$onBackupRestoreFailed$4$ImportBackupActivity
    120:124:void lambda$onBackupRestored$2() -> lambda$onBackupRestored$2$ImportBackupActivity
    99:105:void lambda$onClick$1(com.ru.astron.databinding.DialogEnterPasswordBinding,com.ru.astron.services.ImportBackupService$BackupFile,android.content.DialogInterface,int) -> lambda$onClick$1$ImportBackupActivity
    129:133:void onBackupDecryptionFailed() -> onBackupDecryptionFailed
    86:87:void onBackupFilesLoaded(java.util.List) -> onBackupFilesLoaded
    137:141:void onBackupRestoreFailed() -> onBackupRestoreFailed
    119:125:void onBackupRestored() -> onBackupRestored
    91:108:void onClick(com.ru.astron.services.ImportBackupService$BackupFile) -> onClick
    39:48:void onCreate(android.os.Bundle) -> onCreate
    72:77:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    81:82:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    52:59:void onStart() -> onStart
    63:68:void onStop() -> onStop
    111:115:void setLoadingState(boolean) -> setLoadingState
com.ru.astron.ui.JoinConferenceDialog -> com.ru.astron.ui.JoinConferenceDialog:
    25:25:void <init>() -> <init>
    66:66:void lambda$onCreateDialog$0(android.support.v7.app.AlertDialog,com.ru.astron.databinding.DialogJoinConferenceBinding,android.view.View) -> lambda$onCreateDialog$0$JoinConferenceDialog
    68:69:boolean lambda$onCreateDialog$1(android.support.v7.app.AlertDialog,com.ru.astron.databinding.DialogJoinConferenceBinding,android.widget.TextView,int,android.view.KeyEvent) -> lambda$onCreateDialog$1$JoinConferenceDialog
    33:38:com.ru.astron.ui.JoinConferenceDialog newInstance(java.lang.String,java.util.List) -> newInstance
    43:45:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    89:93:void onAttach(android.content.Context) -> onAttach
    76:77:void onBackendConnected() -> onBackendConnected
    50:71:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    100:105:void onDestroyView() -> onDestroyView
    109:114:void onStart() -> onStart
    80:85:void refreshKnownHosts() -> refreshKnownHosts
com.ru.astron.ui.LocationActivity -> com.ru.astron.ui.LocationActivity:
    44:57:void <init>() -> <init>
    62:68:void clearMarkers() -> clearMarkers
    300:300:boolean getBooleanPreference(java.lang.String,int) -> getBooleanPreference
    296:296:android.content.SharedPreferences getPreferences() -> getPreferences
    162:163:void gotoLoc() -> gotoLoc
    263:263:boolean hasLocationPermissions() -> hasLocationPermissions
    305:308:boolean isLocationEnabled() -> isLocationEnabled
    241:241:boolean mapAtInitialLoc() -> mapAtInitialLoc
    85:124:void onCreate(android.os.Bundle) -> onCreate
    219:222:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    229:236:void onPause() -> onPause
    284:293:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    140:148:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    246:259:void onResume() -> onResume
    128:136:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    212:215:void pauseLocationUpdates() -> pauseLocationUpdates
    170:171:void requestLocationUpdates() -> requestLocationUpdates
    269:278:void requestPermissions(int) -> requestPermissions
    151:159:void setupMapView(org.osmdroid.views.MapView,org.osmdroid.util.GeoPoint) -> setupMapView
    76:76:org.osmdroid.tileprovider.tilesource.XYTileSource tileSource() -> tileSource
    72:73:void updateLocationMarkers() -> updateLocationMarkers
com.ru.astron.ui.MagicCreateActivity -> com.ru.astron.ui.MagicCreateActivity:
    22:22:void <init>() -> <init>
    103:115:void afterTextChanged(android.text.Editable) -> afterTextChanged
    94:94:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    60:87:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0$MagicCreateActivity
    35:35:void onBackendConnected() -> onBackendConnected
    48:89:void onCreate(android.os.Bundle) -> onCreate
    39:44:void onStart() -> onStart
    99:99:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    30:30:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.ManageAccountActivity -> com.ru.astron.ui.ManageAccountActivity:
    40:54:void <init>() -> <init>
    308:315:boolean accountsLeftToDisable() -> accountsLeftToDisable
    319:326:boolean accountsLeftToEnable() -> accountsLeftToEnable
    280:284:void addAccountFromKey() -> addAccountFromKey
    410:413:void alias(java.lang.String) -> alias
    370:384:void deleteAccount(com.ru.astron.entities.Account) -> deleteAccount
    344:348:void disableAccount(com.ru.astron.entities.Account) -> disableAccount
    294:301:void disableAllAccounts() -> disableAllAccounts
    351:359:void enableAccount(com.ru.astron.entities.Account) -> enableAccount
    330:337:void enableAllAccounts() -> enableAllAccounts
    425:426:void informUser(int) -> informUser
    376:381:void lambda$deleteAccount$1(com.ru.astron.entities.Account,android.content.DialogInterface,int) -> lambda$deleteAccount$1$ManageAccountActivity
    425:425:void lambda$informUser$2(int) -> lambda$informUser$2$ManageAccountActivity
    98:98:void lambda$onCreate$0(android.widget.AdapterView,android.view.View,int,long) -> lambda$onCreate$0$ManageAccountActivity
    417:421:void onAccountCreated(com.ru.astron.entities.Account) -> onAccountCreated
    58:59:void onAccountUpdate() -> onAccountUpdate
    388:406:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    139:151:void onBackendConnected() -> onBackendConnected
    271:276:void onClickTglAccountState(com.ru.astron.entities.Account,boolean) -> onClickTglAccountState
    177:192:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    79:100:void onCreate(android.os.Bundle) -> onCreate
    121:135:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    155:172:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    250:265:boolean onNavigateUp() -> onNavigateUp
    200:224:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    230:246:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    113:117:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    104:109:void onStart() -> onStart
    287:291:void publishAvatar(com.ru.astron.entities.Account) -> publishAvatar
    362:367:void publishOpenPGPPublicKey(com.ru.astron.entities.Account) -> publishOpenPGPPublicKey
    63:66:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.MediaBrowserActivity -> com.ru.astron.ui.MediaBrowserActivity:
    23:23:void <init>() -> <init>
    74:75:void lambda$onMediaLoaded$0(java.util.List) -> lambda$onMediaLoaded$0$MediaBrowserActivity
    57:58:void launch(android.content.Context,com.ru.astron.entities.Contact) -> launch
    61:62:void launch(android.content.Context,com.ru.astron.entities.Conversation) -> launch
    65:69:void launch(android.content.Context,com.ru.astron.entities.Account,java.lang.String) -> launch
    48:54:void onBackendConnected() -> onBackendConnected
    31:39:void onCreate(android.os.Bundle) -> onCreate
    73:76:void onMediaLoaded(java.util.List) -> onMediaLoaded
    44:44:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.MemorizingActivity -> com.ru.astron.ui.MemorizingActivity:
    45:45:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    109:110:void onCancel(android.content.DialogInterface) -> onCancel
    94:106:void onClick(android.content.DialogInterface,int) -> onClick
    53:58:void onCreate(android.os.Bundle) -> onCreate
    80:83:void onPause() -> onPause
    62:76:void onResume() -> onResume
    86:89:void sendDecision(int) -> sendDecision
com.ru.astron.ui.MucUsersActivity -> com.ru.astron.ui.MucUsersActivity:
    32:40:void <init>() -> <init>
    162:163:void afterTextChanged(android.text.Editable) -> afterTextChanged
    153:153:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    106:107:void displayToast(java.lang.String) -> displayToast
    106:106:void lambda$displayToast$0(java.lang.String) -> lambda$displayToast$0$MucUsersActivity
    134:137:void lambda$onMenuItemActionExpand$1() -> lambda$onMenuItemActionExpand$1$MucUsersActivity
    57:62:void loadAndSubmitUsers() -> loadAndSubmitUsers
    116:117:void onAffiliationChangeFailed(rocks.xmpp.addr.Jid,int) -> onAffiliationChangeFailed
    112:112:void onAffiliationChangedSuccessful(rocks.xmpp.addr.Jid) -> onAffiliationChangedSuccessful
    48:54:void onBackendConnected() -> onBackendConnected
    83:86:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    91:97:void onCreate(android.os.Bundle) -> onCreate
    121:128:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    143:147:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    133:138:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    102:103:void onMucRosterUpdate() -> onMucRosterUpdate
    158:158:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    44:44:void refreshUiReal() -> refreshUiReal
    65:79:void submitFilteredList(java.lang.String) -> submitFilteredList
com.ru.astron.ui.OmemoActivity -> com.ru.astron.ui.OmemoActivity:
    23:28:void <init>() -> <init>
    102:112:void addFingerprintRow(android.widget.LinearLayout,com.ru.astron.crypto.axolotl.XmppAxolotlSession,boolean) -> addFingerprintRow
    122:191:void addFingerprintRowWithListeners(android.widget.LinearLayout,com.ru.astron.entities.Account,java.lang.String,boolean,com.ru.astron.crypto.axolotl.FingerprintStatus,boolean,boolean,android.widget.CompoundButton$OnCheckedChangeListener) -> addFingerprintRowWithListeners
    93:99:void copyOmemoFingerprint(java.lang.String) -> copyOmemoFingerprint
    111:111:void lambda$addFingerprintRow$0(com.ru.astron.entities.Account,java.lang.String,android.widget.CompoundButton,boolean) -> lambda$addFingerprintRow$0
    139:139:void lambda$addFingerprintRowWithListeners$1(android.view.View) -> lambda$addFingerprintRowWithListeners$1$OmemoActivity
    148:151:void lambda$addFingerprintRowWithListeners$2(com.ru.astron.entities.Account,java.lang.String,com.ru.astron.databinding.ContactKeyBinding,android.view.View) -> lambda$addFingerprintRowWithListeners$2
    157:157:void lambda$addFingerprintRowWithListeners$3(android.view.View) -> lambda$addFingerprintRowWithListeners$3$OmemoActivity
    162:162:void lambda$addFingerprintRowWithListeners$4(android.view.View) -> lambda$addFingerprintRowWithListeners$4$OmemoActivity
    200:202:void lambda$showPurgeKeyDialog$5(com.ru.astron.entities.Account,java.lang.String,android.content.DialogInterface,int) -> lambda$showPurgeKeyDialog$5$OmemoActivity
    78:88:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    62:73:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    32:58:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    208:209:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    194:204:void showPurgeKeyDialog(com.ru.astron.entities.Account,java.lang.String) -> showPurgeKeyDialog
com.ru.astron.ui.PublishGroupChatProfilePictureActivity -> com.ru.astron.ui.PublishGroupChatProfilePictureActivity:
    52:53:void <init>() -> <init>
    132:137:void chooseAvatar() -> chooseAvatar
    150:153:void lambda$onAvatarPublicationFailed$3(int) -> lambda$onAvatarPublicationFailed$3$PublishGroupChatProfilePictureActivity
    142:144:void lambda$onAvatarPublicationSucceeded$2() -> lambda$onAvatarPublicationSucceeded$2$PublishGroupChatProfilePictureActivity
    94:94:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0$PublishGroupChatProfilePictureActivity
    96:96:void lambda$onCreate$1(android.view.View) -> lambda$onCreate$1$PublishGroupChatProfilePictureActivity
    115:129:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    149:154:void onAvatarPublicationFailed(int) -> onAvatarPublicationFailed
    141:145:void onAvatarPublicationSucceeded() -> onAvatarPublicationSucceeded
    65:73:void onBackendConnected() -> onBackendConnected
    90:104:void onCreate(android.os.Bundle) -> onCreate
    108:111:void publish(android.view.View) -> publish
    61:61:void refreshUiReal() -> refreshUiReal
    76:86:void reloadAvatar() -> reloadAvatar
com.ru.astron.ui.PublishProfilePictureActivity -> com.ru.astron.ui.PublishProfilePictureActivity:
    27:40:void <init>() -> <init>
    27:27:android.net.Uri access$002(com.ru.astron.ui.PublishProfilePictureActivity,android.net.Uri) -> access$002
    27:27:android.net.Uri access$100(com.ru.astron.ui.PublishProfilePictureActivity) -> access$100
    144:149:void chooseAvatar() -> chooseAvatar
    70:75:void lambda$onAvatarPublicationFailed$1(int) -> lambda$onAvatarPublicationFailed$1$PublishProfilePictureActivity
    54:64:void lambda$onAvatarPublicationSucceeded$0() -> lambda$onAvatarPublicationSucceeded$0$PublishProfilePictureActivity
    90:95:void lambda$onCreate$2(android.view.View) -> lambda$onCreate$2$PublishProfilePictureActivity
    97:106:void lambda$onCreate$3(android.view.View) -> lambda$onCreate$3$PublishProfilePictureActivity
    107:107:void lambda$onCreate$4(android.view.View) -> lambda$onCreate$4$PublishProfilePictureActivity
    197:236:void loadImageIntoPreview(android.net.Uri) -> loadImageIntoPreview
    252:253:void onAccountUpdate() -> onAccountUpdate
    127:141:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    69:76:void onAvatarPublicationFailed(int) -> onAvatarPublicationFailed
    53:65:void onAvatarPublicationSucceeded() -> onAvatarPublicationSucceeded
    153:157:void onBackendConnected() -> onBackendConnected
    80:113:void onCreate(android.os.Bundle) -> onCreate
    117:122:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    175:193:void onStart() -> onStart
    245:248:void refreshUiReal() -> refreshUiReal
    160:171:void reloadAvatar() -> reloadAvatar
    239:242:void togglePublishButton(boolean,int) -> togglePublishButton
com.ru.astron.ui.PublishProfilePictureActivity$1 -> com.ru.astron.ui.PublishProfilePictureActivity$1:
    40:40:void <init>(com.ru.astron.ui.PublishProfilePictureActivity) -> <init>
    44:46:boolean onLongClick(android.view.View) -> onLongClick
com.ru.astron.ui.RecordingActivity -> com.ru.astron.ui.RecordingActivity:
    33:33:void <clinit>() -> <clinit>
    31:50:void <init>() -> <init>
    31:31:void access$000(com.ru.astron.ui.RecordingActivity) -> access$000
    31:31:java.lang.Runnable access$100(com.ru.astron.ui.RecordingActivity) -> access$100
    31:31:android.os.Handler access$200(com.ru.astron.ui.RecordingActivity) -> access$200
    31:31:java.io.File access$300(com.ru.astron.ui.RecordingActivity) -> access$300
    31:31:boolean access$400(com.ru.astron.ui.RecordingActivity) -> access$400
    131:133:java.io.File generateOutputFilename(android.content.Context) -> generateOutputFilename
    192:192:void lambda$onClick$0() -> lambda$onClick$0$RecordingActivity
    181:195:void onClick(android.view.View) -> onClick
    56:63:void onCreate(android.os.Bundle) -> onCreate
    67:73:void onStart() -> onStart
    77:85:void onStop() -> onStop
    156:168:void setupFileObserver(java.io.File) -> setupFileObserver
    137:153:void setupOutputFile() -> setupOutputFile
    88:106:boolean startRecording() -> startRecording
    111:128:void stopRecording(boolean) -> stopRecording
    172:177:void tick() -> tick
com.ru.astron.ui.RecordingActivity$1 -> com.ru.astron.ui.RecordingActivity$1:
    41:41:void <init>(com.ru.astron.ui.RecordingActivity) -> <init>
    44:46:void run() -> run
com.ru.astron.ui.RecordingActivity$2 -> com.ru.astron.ui.RecordingActivity$2:
    156:156:void <init>(com.ru.astron.ui.RecordingActivity,java.lang.String) -> <init>
    159:165:void onEvent(int,java.lang.String) -> onEvent
com.ru.astron.ui.ScanActivity -> com.ru.astron.ui.ScanActivity:
    76:76:void <clinit>() -> <clinit>
    68:122:void <init>() -> <init>
    68:68:android.os.Handler access$000(com.ru.astron.ui.ScanActivity) -> access$000
    68:68:com.ru.astron.ui.service.CameraManager access$100(com.ru.astron.ui.ScanActivity) -> access$100
    68:68:java.lang.Runnable access$200(com.ru.astron.ui.ScanActivity) -> access$200
    68:68:com.ru.astron.ui.widget.ScannerView access$300(com.ru.astron.ui.ScanActivity) -> access$300
    68:68:android.view.TextureView access$400(com.ru.astron.ui.ScanActivity) -> access$400
    68:68:boolean access$500() -> access$500
    259:267:void handleResult(com.google.zxing.Result) -> handleResult
    251:251:void lambda$onKeyDown$0(int) -> lambda$onKeyDown$0$ScanActivity
    205:208:void maybeOpenCamera() -> maybeOpenCamera
    232:233:void onAttachedToWindow() -> onAttachedToWindow
    237:240:void onBackPressed() -> onBackPressed
    166:178:void onCreate(android.os.Bundle) -> onCreate
    196:202:void onDestroy() -> onDestroy
    244:252:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    188:191:void onPause() -> onPause
    284:294:void onRequestPermissionResult(android.app.Activity,int,int[]) -> onRequestPermissionResult
    182:184:void onResume() -> onResume
    212:214:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    218:219:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    224:224:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    228:228:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    270:271:void postFinish() -> postFinish
    274:281:void scan(android.app.Activity) -> scan
com.ru.astron.ui.ScanActivity$1 -> com.ru.astron.ui.ScanActivity$1:
    89:89:void <init>(com.ru.astron.ui.ScanActivity) -> <init>
    92:94:void run() -> run
com.ru.astron.ui.ScanActivity$2 -> com.ru.astron.ui.ScanActivity$2:
    96:98:void <init>(com.ru.astron.ui.ScanActivity) -> <init>
    106:118:void decode(byte[]) -> decode
    110:110:void lambda$decode$2(com.google.zxing.ResultPoint) -> lambda$decode$2$ScanActivity$2
    113:113:void lambda$decode$3(com.google.zxing.Result) -> lambda$decode$3$ScanActivity$2
    110:110:void lambda$null$1(com.google.zxing.ResultPoint) -> lambda$null$1$ScanActivity$2
    102:102:void lambda$run$0(byte[],android.hardware.Camera) -> lambda$run$0$ScanActivity$2
    102:103:void run() -> run
com.ru.astron.ui.ScanActivity$3 -> com.ru.astron.ui.ScanActivity$3:
    122:122:void <init>(com.ru.astron.ui.ScanActivity) -> <init>
    150:160:int displayRotation() -> displayRotation
    134:134:void lambda$run$0(android.graphics.Rect,android.graphics.RectF,int,boolean) -> lambda$run$0$ScanActivity$3
    126:147:void run() -> run
com.ru.astron.ui.ScanActivity$AutoFocusRunnable -> com.ru.astron.ui.ScanActivity$AutoFocusRunnable:
    306:308:void <init>(com.ru.astron.ui.ScanActivity,android.hardware.Camera) -> <init>
    313:317:void run() -> run
com.ru.astron.ui.ScanActivity$AutoFocusRunnable$1 -> com.ru.astron.ui.ScanActivity$AutoFocusRunnable$1:
    298:298:void <init>(com.ru.astron.ui.ScanActivity$AutoFocusRunnable) -> <init>
    302:303:void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.ru.astron.ui.SearchActivity -> com.ru.astron.ui.SearchActivity:
    70:80:void <init>() -> <init>
    237:250:void afterTextChanged(android.text.Editable) -> afterTextChanged
    228:228:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    214:223:void changeBackground(boolean,boolean) -> changeBackground
    255:262:void lambda$onSearchResultsAvailable$0(java.util.List,java.util.List) -> lambda$onSearchResultsAvailable$0$SearchActivity
    207:211:void onBackendConnected() -> onBackendConnected
    268:285:void onContactPictureClicked(com.ru.astron.entities.Message) -> onContactPictureClicked
    152:172:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    84:96:void onCreate(android.os.Bundle) -> onCreate
    126:140:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    100:121:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    144:147:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    177:182:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    254:263:void onSearchResultsAvailable(java.util.List,java.util.List) -> onSearchResultsAvailable
    233:233:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    185:186:void quote(com.ru.astron.entities.Message) -> quote
    203:203:void refreshUiReal() -> refreshUiReal
    189:192:com.ru.astron.entities.Conversation wrap(com.ru.astron.entities.Conversational) -> wrap
com.ru.astron.ui.SettingsActivity -> com.ru.astron.ui.SettingsActivity:
    46:46:void <init>() -> <init>
    251:268:void changeOmemoSettingSummary() -> changeOmemoSettingSummary
    411:412:void createBackup() -> createBackup
    310:350:boolean deleteOmemoIdentities() -> deleteOmemoIdentities
    415:416:void displayToast(java.lang.String) -> displayToast
    271:271:boolean isCallable(android.content.Intent) -> isCallable
    320:329:void lambda$deleteOmemoIdentities$7(boolean[],android.content.DialogInterface,int,boolean) -> lambda$deleteOmemoIdentities$7
    332:346:void lambda$deleteOmemoIdentities$8(boolean[],java.util.List,android.content.DialogInterface,int) -> lambda$deleteOmemoIdentities$8$SettingsActivity
    415:415:void lambda$displayToast$9(java.lang.String) -> lambda$displayToast$9$SettingsActivity
    181:191:void lambda$null$0(java.util.ArrayList,android.content.DialogInterface,int,boolean) -> lambda$null$0
    195:212:void lambda$null$1(java.util.ArrayList,java.util.ArrayList,com.ru.astron.services.MemorizingTrustManager,android.content.DialogInterface,int) -> lambda$null$1$SettingsActivity
    170:217:boolean lambda$onStart$2(android.preference.Preference) -> lambda$onStart$2$SettingsActivity
    225:228:boolean lambda$onStart$3(android.preference.Preference) -> lambda$onStart$3$SettingsActivity
    246:246:boolean lambda$onStart$6(android.preference.Preference) -> lambda$onStart$6$SettingsActivity
    85:85:void onBackendConnected() -> onBackendConnected
    66:80:void onCreate(android.os.Bundle) -> onCreate
    400:408:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    362:396:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    89:248:void onStart() -> onStart
    355:358:void onStop() -> onStop
    419:424:void reconnectAccounts() -> reconnectAccounts
    428:428:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.SettingsFragment -> com.ru.astron.ui.SettingsFragment:
    16:18:void <init>() -> <init>
    46:52:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    22:42:void onCreate(android.os.Bundle) -> onCreate
    69:76:void openPreferenceScreen(java.lang.String) -> openPreferenceScreen
    55:66:void setActivityIntent(android.content.Intent) -> setActivityIntent
com.ru.astron.ui.ShareLocationActivity -> com.ru.astron.ui.ShareLocationActivity:
    28:34:void <init>() -> <init>
    137:143:void gotoLoc(boolean) -> gotoLoc
    205:205:boolean isLocationEnabledAndAllowed() -> isLocationEnabledAndAllowed
    62:64:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0$ShareLocationActivity
    68:75:void lambda$onCreate$1(android.view.View) -> lambda$onCreate$1$ShareLocationActivity
    79:94:void lambda$onCreate$2(android.view.View) -> lambda$onCreate$2$ShareLocationActivity
    99:107:void lambda$onCreate$3(android.view.View) -> lambda$onCreate$3$ShareLocationActivity
    228:234:void lambda$updateUi$4() -> lambda$updateUi$4$ShareLocationActivity
    54:108:void onCreate(android.os.Bundle) -> onCreate
    172:187:void onLocationChanged(android.location.Location) -> onLocationChanged
    152:153:void onPause() -> onPause
    202:202:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    197:197:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    114:133:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    45:50:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    38:41:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    192:192:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    147:148:void setMyLoc(android.location.Location) -> setMyLoc
    209:215:void toggleFixedLocation() -> toggleFixedLocation
    157:168:void updateLocationMarkers() -> updateLocationMarkers
    219:238:void updateUi() -> updateUi
com.ru.astron.ui.ShareViaAccountActivity -> com.ru.astron.ui.ShareViaAccountActivity:
    15:19:void <init>() -> <init>
    43:56:void lambda$onCreate$0(android.widget.AdapterView,android.view.View,int,long) -> lambda$onCreate$0$ShareViaAccountActivity
    70:89:void onBackendConnected() -> onBackendConnected
    34:57:void onCreate(android.os.Bundle) -> onCreate
    61:66:void onStart() -> onStart
    25:28:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.ShareWithActivity -> com.ru.astron.ui.ShareWithActivity:
    25:46:void <init>() -> <init>
    97:97:void lambda$onCreate$0(android.view.View,com.ru.astron.entities.Conversation) -> lambda$onCreate$0$ShareWithActivity
    50:62:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    148:153:void onBackendConnected() -> onBackendConnected
    32:33:void onConversationUpdate() -> onConversationUpdate
    82:99:void onCreate(android.os.Bundle) -> onCreate
    103:104:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    109:114:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    66:78:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    121:144:void onStart() -> onStart
    196:198:void refreshUiReal() -> refreshUiReal
    159:170:void share() -> share
    176:192:void share(com.ru.astron.entities.Conversation) -> share
com.ru.astron.ui.ShareWithActivity$Share -> com.ru.astron.ui.ShareWithActivity$Share:
    35:36:void <init>(com.ru.astron.ui.ShareWithActivity) -> <init>
    35:35:void <init>(com.ru.astron.ui.ShareWithActivity,com.ru.astron.ui.ShareWithActivity$1) -> <init>
com.ru.astron.ui.ShortcutActivity -> com.ru.astron.ui.ShortcutActivity:
    21:21:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    57:74:void filterContacts(java.lang.String) -> filterContacts
    33:43:void lambda$onCreate$0(android.widget.AdapterView,android.view.View,int,long) -> lambda$onCreate$0$ShortcutActivity
    30:44:void onCreate(android.os.Bundle) -> onCreate
    48:53:void onStart() -> onStart
    26:26:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.ShowLocationActivity -> com.ru.astron.ui.ShowLocationActivity:
    36:38:void <init>() -> <init>
    43:43:android.net.Uri createGeoUri() -> createGeoUri
    123:129:void gotoLoc(boolean) -> gotoLoc
    56:56:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0$ShowLocationActivity
    48:119:void onCreate(android.os.Bundle) -> onCreate
    147:149:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    209:213:void onLocationChanged(android.location.Location) -> onLocationChanged
    168:176:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    163:164:void onPause() -> onPause
    228:228:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    223:223:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    135:137:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    218:218:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    141:142:void setMyLoc(android.location.Location) -> setMyLoc
    194:198:void startNavigation() -> startNavigation
    154:159:void updateLocationMarkers() -> updateLocationMarkers
    202:205:void updateUi() -> updateUi
com.ru.astron.ui.StartConversationActivity -> com.ru.astron.ui.StartConversationActivity:
    82:181:void <init>() -> <init>
    949:950:void OnUpdateBlocklist(com.ru.astron.xmpp.OnUpdateBlocklist$Status) -> OnUpdateBlocklist
    82:82:android.widget.EditText access$000(com.ru.astron.ui.StartConversationActivity) -> access$000
    82:82:com.ru.astron.databinding.ActivityStartConversationBinding access$100(com.ru.astron.ui.StartConversationActivity) -> access$100
    82:82:boolean access$1000(com.ru.astron.ui.StartConversationActivity,com.ru.astron.ui.StartConversationActivity$Invite) -> access$1000
    82:82:void access$200(com.ru.astron.ui.StartConversationActivity) -> access$200
    82:82:java.util.concurrent.atomic.AtomicBoolean access$300(com.ru.astron.ui.StartConversationActivity) -> access$300
    82:82:android.view.MenuItem access$400(com.ru.astron.ui.StartConversationActivity) -> access$400
    82:82:java.util.List access$500(com.ru.astron.ui.StartConversationActivity) -> access$500
    82:82:java.util.List access$600(com.ru.astron.ui.StartConversationActivity) -> access$600
    82:82:com.ru.astron.ui.StartConversationActivity$ListPagerAdapter access$700(com.ru.astron.ui.StartConversationActivity) -> access$700
    82:82:com.ru.astron.ui.adapter.ListItemAdapter access$800(com.ru.astron.ui.StartConversationActivity) -> access$800
    82:82:com.ru.astron.ui.adapter.ListItemAdapter access$900(com.ru.astron.ui.StartConversationActivity) -> access$900
    1265:1268:void addInviteUri(android.content.Intent,android.content.Intent) -> addInviteUri
    716:745:void askForContactsPermissions() -> askForContactsPermissions
    763:771:void configureHomeButton() -> configureHomeButton
    230:233:android.content.Intent createLauncherIntent(android.content.Context) -> createLauncherIntent
    460:476:void deleteConference() -> deleteConference
    446:457:void deleteContact() -> deleteContact
    885:903:void displayVerificationWarningDialog(com.ru.astron.entities.Contact,com.ru.astron.ui.StartConversationActivity$Invite) -> displayVerificationWarningDialog
    906:910:void filter(java.lang.String) -> filter
    933:945:void filterConferences(java.lang.String) -> filterConferences
    913:930:void filterContacts(java.lang.String) -> filterContacts
    561:562:com.ru.astron.entities.Account getSelectedAccount(android.content.Context,android.widget.Spinner) -> getSelectedAccount
    842:880:boolean handleJid(com.ru.astron.ui.StartConversationActivity$Invite) -> handleJid
    241:244:void hideToast() -> hideToast
    597:604:void invalidateOptionsMenu() -> invalidateOptionsMenu
    335:338:boolean isValidJid(java.lang.String) -> isValidJid
    237:237:boolean isViewIntent(android.content.Intent) -> isViewIntent
    727:727:void lambda$askForContactsPermissions$4(android.content.DialogInterface,int) -> lambda$askForContactsPermissions$4$StartConversationActivity
    728:728:void lambda$askForContactsPermissions$5(android.content.DialogInterface) -> lambda$askForContactsPermissions$5$StartConversationActivity
    733:737:void lambda$askForContactsPermissions$6(android.support.v7.app.AlertDialog,android.content.DialogInterface) -> lambda$askForContactsPermissions$6
    468:473:void lambda$deleteConference$2(com.ru.astron.entities.Bookmark,android.content.DialogInterface,int) -> lambda$deleteConference$2$StartConversationActivity
    453:455:void lambda$deleteContact$1(com.ru.astron.entities.Contact,android.content.DialogInterface,int) -> lambda$deleteContact$1$StartConversationActivity
    893:897:void lambda$displayVerificationWarningDialog$7(android.widget.CheckBox,com.ru.astron.ui.StartConversationActivity$Invite,com.ru.astron.entities.Contact,android.content.DialogInterface,int) -> lambda$displayVerificationWarningDialog$7$StartConversationActivity
    898:898:void lambda$displayVerificationWarningDialog$8(android.content.DialogInterface,int) -> lambda$displayVerificationWarningDialog$8$StartConversationActivity
    901:901:void lambda$displayVerificationWarningDialog$9(android.content.DialogInterface) -> lambda$displayVerificationWarningDialog$9$StartConversationActivity
    308:329:boolean lambda$onCreate$0(com.leinardi.android.speeddial.SpeedDialActionItem) -> lambda$onCreate$0$StartConversationActivity
    496:513:boolean lambda$showCreateContactDialog$3(com.ru.astron.ui.StartConversationActivity$Invite,rocks.xmpp.addr.Jid,rocks.xmpp.addr.Jid) -> lambda$showCreateContactDialog$3$StartConversationActivity
    225:227:void launch(android.content.Context) -> launch
    973:979:void navigateBack() -> navigateBack
    694:713:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    965:970:void onBackPressed() -> onBackPressed
    776:812:void onBackendConnected() -> onBackendConnected
    1044:1045:void onConversationUpdate() -> onConversationUpdate
    259:331:void onCreate(android.os.Bundle) -> onCreate
    983:997:void onCreateDialogPositiveClick(android.widget.Spinner,java.lang.String) -> onCreateDialogPositiveClick
    619:643:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    1065:1090:void onCreatePublicChannel(com.ru.astron.entities.Account,java.lang.String,rocks.xmpp.addr.Jid) -> onCreatePublicChannel
    1001:1013:void onJoinDialogPositiveClick(android.app.Dialog,android.widget.Spinner,android.widget.AutoCompleteTextView,boolean) -> onJoinDialogPositiveClick
    671:683:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    371:377:void onNewIntent(android.content.Intent) -> onNewIntent
    648:654:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1049:1053:void onRefresh() -> onRefresh
    749:760:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    254:255:void onRosterUpdate() -> onRosterUpdate
    344:352:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    356:367:void onStart() -> onStart
    391:393:void openConversationForBookmark(int) -> openConversationForBookmark
    380:382:void openConversationForContact(int) -> openConversationForContact
    385:388:void openConversationForContact(com.ru.astron.entities.Contact) -> openConversationForContact
    413:426:void openConversationsForBookmark(com.ru.astron.entities.Bookmark) -> openConversationsForBookmark
    429:432:void openDetailsForContact() -> openDetailsForContact
    687:690:void openSearch() -> openSearch
    209:222:void populateAccountSpinner(android.content.Context,java.util.List,android.widget.Spinner) -> populateAccountSpinner
    815:835:boolean processViewIntent(android.content.Intent) -> processViewIntent
    954:961:void refreshUiReal() -> refreshUiReal
    247:250:void replaceToast(java.lang.String) -> replaceToast
    1057:1061:void setRefreshing(boolean) -> setRefreshing
    396:397:void shareBookmarkUri() -> shareBookmarkUri
    400:410:void shareBookmarkUri(int) -> shareBookmarkUri
    480:524:void showCreateContactDialog(java.lang.String,com.ru.astron.ui.StartConversationActivity$Invite) -> showCreateContactDialog
    539:547:void showCreatePrivateGroupChatDialog() -> showCreatePrivateGroupChatDialog
    528:536:void showJoinConferenceDialog(java.lang.String) -> showJoinConferenceDialog
    550:558:void showPublicChannelDialog() -> showPublicChannelDialog
    435:438:void showQrForContact() -> showQrForContact
    586:588:void switchToConversation(com.ru.astron.entities.Contact) -> switchToConversation
    591:593:void switchToConversationDoNotAppend(com.ru.astron.entities.Contact,java.lang.String) -> switchToConversationDoNotAppend
    441:443:void toggleContactBlock() -> toggleContactBlock
    607:608:void updateSearchViewHint() -> updateSearchViewHint
com.ru.astron.ui.StartConversationActivity$1 -> com.ru.astron.ui.StartConversationActivity$1:
    103:103:void <init>(com.ru.astron.ui.StartConversationActivity) -> <init>
    108:117:void lambda$onMenuItemActionExpand$0() -> lambda$onMenuItemActionExpand$0$StartConversationActivity$1
    126:129:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    107:121:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
com.ru.astron.ui.StartConversationActivity$2 -> com.ru.astron.ui.StartConversationActivity$2:
    132:132:void <init>(com.ru.astron.ui.StartConversationActivity) -> <init>
    136:137:void afterTextChanged(android.text.Editable) -> afterTextChanged
    141:141:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    145:145:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ru.astron.ui.StartConversationActivity$3 -> com.ru.astron.ui.StartConversationActivity$3:
    148:148:void <init>(com.ru.astron.ui.StartConversationActivity) -> <init>
    151:157:void onTagClicked(java.lang.String) -> onTagClicked
com.ru.astron.ui.StartConversationActivity$4 -> com.ru.astron.ui.StartConversationActivity$4:
    161:161:void <init>(com.ru.astron.ui.StartConversationActivity) -> <init>
    161:161:void error(int,java.lang.Object) -> error
    172:173:void error(int,com.ru.astron.entities.Conversation) -> error
    172:172:void lambda$error$1(int) -> lambda$error$1$StartConversationActivity$4
    165:167:void lambda$success$0(com.ru.astron.entities.Conversation) -> lambda$success$0$StartConversationActivity$4
    161:161:void success(java.lang.Object) -> success
    164:168:void success(com.ru.astron.entities.Conversation) -> success
    161:161:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    178:178:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Conversation) -> userInputRequried
com.ru.astron.ui.StartConversationActivity$5 -> com.ru.astron.ui.StartConversationActivity$5:
    181:181:void <init>(com.ru.astron.ui.StartConversationActivity) -> <init>
    184:204:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.ru.astron.ui.StartConversationActivity$6 -> com.ru.astron.ui.StartConversationActivity$6:
    268:268:void <init>(com.ru.astron.ui.StartConversationActivity) -> <init>
    271:272:void onPageSelected(int) -> onPageSelected
com.ru.astron.ui.StartConversationActivity$7 -> com.ru.astron.ui.StartConversationActivity$7:
    1067:1067:void <init>(com.ru.astron.ui.StartConversationActivity) -> <init>
    1067:1067:void error(int,java.lang.Object) -> error
    1079:1083:void error(int,com.ru.astron.entities.Conversation) -> error
    1080:1082:void lambda$error$1(int,com.ru.astron.entities.Conversation) -> lambda$error$1$StartConversationActivity$7
    1071:1073:void lambda$success$0(com.ru.astron.entities.Conversation) -> lambda$success$0$StartConversationActivity$7
    1067:1067:void success(java.lang.Object) -> success
    1070:1075:void success(com.ru.astron.entities.Conversation) -> success
    1067:1067:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    1088:1088:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Conversation) -> userInputRequried
com.ru.astron.ui.StartConversationActivity$Invite -> com.ru.astron.ui.StartConversationActivity$Invite:
    1278:1280:void <init>(com.ru.astron.ui.StartConversationActivity,java.lang.String) -> <init>
    1282:1284:void <init>(com.ru.astron.ui.StartConversationActivity,android.net.Uri,boolean) -> <init>
    1287:1294:boolean invite() -> invite
com.ru.astron.ui.StartConversationActivity$ListPagerAdapter -> com.ru.astron.ui.StartConversationActivity$ListPagerAdapter:
    1187:1190:void <init>(com.ru.astron.ui.StartConversationActivity,android.support.v4.app.FragmentManager) -> <init>
    1200:1204:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    1222:1222:int getCount() -> getCount
    1244:1260:android.support.v4.app.Fragment getItem(int) -> getItem
    1233:1235:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    1183:1183:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    1209:1217:android.support.v4.app.Fragment instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    1227:1227:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    1249:1249:void lambda$getItem$0(android.widget.AdapterView,android.view.View,int,long) -> lambda$getItem$0$StartConversationActivity$ListPagerAdapter
    1253:1253:void lambda$getItem$1(android.widget.AdapterView,android.view.View,int,long) -> lambda$getItem$1$StartConversationActivity$ListPagerAdapter
    1193:1196:void requestFocus(int) -> requestFocus
com.ru.astron.ui.StartConversationActivity$MyListFragment -> com.ru.astron.ui.StartConversationActivity$MyListFragment:
    1092:1092:void <init>() -> <init>
    1156:1179:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1122:1152:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1102:1105:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    1113:1118:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1097:1098:void setContextMenu(int) -> setContextMenu
    1108:1109:void setOnListItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnListItemClickListener
com.ru.astron.ui.TimePreference -> com.ru.astron.ui.TimePreference:
    21:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:68:java.util.Calendar minutesToCalender(long) -> minutesToCalender
    72:72:long minutesToTimestamp(long) -> minutesToTimestamp
    48:53:void onBindDialogView(android.view.View) -> onBindDialogView
    40:42:android.view.View onCreateDialogView() -> onCreateDialogView
    57:62:void onDialogClosed(boolean) -> onDialogClosed
    77:77:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    95:96:boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    83:91:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    26:30:void setTime(long) -> setTime
    33:36:void updateSummary(long) -> updateSummary
com.ru.astron.ui.TrustKeysActivity -> com.ru.astron.ui.TrustKeysActivity:
    44:60:void <init>() -> <init>
    271:276:boolean anyWithoutMutualPresenceSubscription(java.util.List) -> anyWithoutMutualPresenceSubscription
    402:421:void commitTrusts() -> commitTrusts
    258:268:void disableEncryptionDialog(android.view.View) -> disableEncryptionDialog
    394:399:void finishOk(boolean) -> finishOk
    280:286:boolean foreignActuallyHasKeys() -> foreignActuallyHasKeys
    348:348:boolean hasNoOtherTrustedKeys() -> hasNoOtherTrustedKeys
    352:352:boolean hasNoOtherTrustedKeys(rocks.xmpp.addr.Jid) -> hasNoOtherTrustedKeys
    356:356:boolean hasPendingKeyFetches() -> hasPendingKeyFetches
    262:265:void lambda$disableEncryptionDialog$5(android.content.DialogInterface,int) -> lambda$disableEncryptionDialog$5$TrustKeysActivity
    48:50:void lambda$new$0(android.view.View) -> lambda$new$0$TrustKeysActivity
    55:57:void lambda$new$1(android.view.View) -> lambda$new$1$TrustKeysActivity
    366:382:void lambda$onKeyStatusUpdated$6(boolean,com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus) -> lambda$onKeyStatusUpdated$6$TrustKeysActivity
    388:388:void lambda$onKeyStatusUpdated$7() -> lambda$onKeyStatusUpdated$7$TrustKeysActivity
    171:173:void lambda$populateView$2(java.lang.String,android.widget.CompoundButton,boolean) -> lambda$populateView$2$TrustKeysActivity
    183:183:void lambda$populateView$3(rocks.xmpp.addr.Jid,android.view.View) -> lambda$populateView$3$TrustKeysActivity
    189:191:void lambda$populateView$4(java.util.Map,java.lang.String,android.widget.CompoundButton,boolean) -> lambda$populateView$4$TrustKeysActivity
    433:434:void lock() -> lock
    437:445:void lockOrUnlockAsNeeded() -> lockOrUnlockAsNeeded
    327:345:void onBackendConnected() -> onBackendConnected
    71:91:void onCreate(android.os.Bundle) -> onCreate
    101:104:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    362:391:void onKeyStatusUpdated(com.ru.astron.crypto.axolotl.AxolotlService$FetchStatus) -> onKeyStatusUpdated
    116:123:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    95:97:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    131:135:void onStop() -> onStop
    161:210:void populateView() -> populateView
    139:158:void processFingerprintVerification(com.ru.astron.utils.XmppUri) -> processFingerprintVerification
    65:67:void refreshUiReal() -> refreshUiReal
    291:322:boolean reloadFingerprints() -> reloadFingerprints
    451:452:void setDone() -> setDone
    455:456:void setFetching() -> setFetching
    108:112:void showCameraToast() -> showCameraToast
    429:430:void unlock() -> unlock
com.ru.astron.ui.TrustKeysActivity$1 -> com.ru.astron.ui.TrustKeysActivity$1:
    369:369:void <clinit>() -> <clinit>
com.ru.astron.ui.UriHandlerActivity -> com.ru.astron.ui.UriHandlerActivity:
    176:176:void <clinit>() -> <clinit>
    24:30:void <init>() -> <init>
    152:157:void handleIntent(android.content.Intent) -> handleIntent
    82:83:void handleUri(android.net.Uri) -> handleUri
    87:145:void handleUri(android.net.Uri,boolean) -> handleUri
    180:195:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    58:62:void onCreate(android.os.Bundle) -> onCreate
    78:79:void onNewIntent(android.content.Intent) -> onNewIntent
    44:54:void onRequestPermissionResult(android.app.Activity,int,int[]) -> onRequestPermissionResult
    72:74:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    66:68:void onStart() -> onStart
    33:41:void scan(android.app.Activity) -> scan
com.ru.astron.ui.WelcomeActivity -> com.ru.astron.ui.WelcomeActivity:
    22:22:void <init>() -> <init>
    140:141:void addInviteUri(android.content.Intent) -> addInviteUri
    74:84:void lambda$onCreate$0(android.view.View) -> lambda$onCreate$0$WelcomeActivity
    87:97:void lambda$onCreate$1(android.view.View) -> lambda$onCreate$1$WelcomeActivity
    144:148:void launch(android.support.v7.app.AppCompatActivity) -> launch
    34:34:void onBackendConnected() -> onBackendConnected
    54:100:void onCreate(android.os.Bundle) -> onCreate
    104:105:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    47:50:void onNewIntent(android.content.Intent) -> onNewIntent
    110:116:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    121:137:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    38:43:void onStart() -> onStart
    29:29:void refreshUiReal() -> refreshUiReal
com.ru.astron.ui.XmppActivity -> com.ru.astron.ui.XmppActivity:
    84:145:void <init>() -> <init>
    84:84:com.ru.astron.ui.UiCallback access$400(com.ru.astron.ui.XmppActivity) -> access$400
    84:84:android.util.DisplayMetrics access$500(com.ru.astron.ui.XmppActivity) -> access$500
    557:605:void announcePgp(com.ru.astron.entities.Account,com.ru.astron.entities.Conversation,android.content.Intent,java.lang.Runnable) -> announcePgp
    865:865:com.ru.astron.services.AvatarService avatarService() -> avatarService
    148:158:boolean cancelPotentialWork(com.ru.astron.entities.Message,android.widget.ImageView) -> cancelPotentialWork
    619:638:void choosePgpSignId(com.ru.astron.entities.Account) -> choosePgpSignId
    218:226:void connectToBackend() -> connectToBackend
    765:772:boolean copyTextToClipboard(java.lang.String,int) -> copyTextToClipboard
    541:550:void delegateUriPermissionsToService(android.net.Uri) -> delegateUriPermissionsToService
    641:650:void displayErrorDialog(int) -> displayErrorDialog
    856:858:com.ru.astron.entities.Account extractAccount(android.content.Intent) -> extractAccount
    984:985:com.ru.astron.ui.XmppActivity find(java.lang.ref.WeakReference) -> find
    989:996:com.ru.astron.ui.XmppActivity find(android.view.View) -> find
    819:819:int findTheme() -> findTheme
    162:169:com.ru.astron.ui.XmppActivity$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> getBitmapWorkerTask
    454:454:boolean getBooleanPreference(java.lang.String,int) -> getBooleanPreference
    450:450:android.content.SharedPreferences getPreferences() -> getPreferences
    780:780:java.lang.String getShareableUri() -> getShareableUri
    784:784:java.lang.String getShareableUri(boolean) -> getShareableUri
    415:421:int getThemeResource(int,int) -> getThemeResource
    240:240:boolean hasPgp() -> hasPgp
    738:746:boolean hasStoragePermission(int) -> hasStoragePermission
    173:176:void hideToast() -> hideToast
    474:475:void highlightInMuc(com.ru.astron.entities.Conversation,java.lang.String) -> highlightInMuc
    553:554:void inviteToConversation(com.ru.astron.entities.Conversation) -> inviteToConversation
    435:441:boolean isAffectedByDataSaver() -> isAffectedByDataSaver
    407:407:boolean isCameraFeatureAvailable() -> isCameraFeatureAvailable
    411:411:boolean isDarkTheme() -> isDarkTheme
    425:430:boolean isOptimizingBattery() -> isOptimizingBattery
    642:648:void lambda$displayErrorDialog$4(int) -> lambda$displayErrorDialog$4$XmppActivity
    101:101:void lambda$new$0() -> lambda$new$0$XmppActivity
    123:125:void lambda$new$1() -> lambda$new$1$XmppActivity
    733:734:void lambda$quickEdit$10(com.ru.astron.databinding.DialogQuickeditBinding,android.content.DialogInterface) -> lambda$quickEdit$10
    712:712:void lambda$quickEdit$7(com.ru.astron.databinding.DialogQuickeditBinding,android.content.DialogInterface) -> lambda$quickEdit$7
    715:725:void lambda$quickEdit$8(com.ru.astron.databinding.DialogQuickeditBinding,java.lang.String,boolean,com.ru.astron.ui.XmppActivity$OnValueEdited,android.support.v7.app.AlertDialog,android.view.View) -> lambda$quickEdit$8
    728:730:void lambda$quickEdit$9(com.ru.astron.databinding.DialogQuickeditBinding,android.support.v7.app.AlertDialog,android.view.View) -> lambda$quickEdit$9
    657:657:void lambda$showAddToRosterDialog$5(com.ru.astron.entities.Contact,android.content.DialogInterface,int) -> lambda$showAddToRosterDialog$5$XmppActivity
    668:674:void lambda$showAskForPresenceDialog$6(com.ru.astron.entities.Contact,android.content.DialogInterface,int) -> lambda$showAskForPresenceDialog$6$XmppActivity
    251:258:void lambda$showInstallPgpDialog$2(android.content.DialogInterface,int) -> lambda$showInstallPgpDialog$2$XmppActivity
    261:278:void lambda$showInstallPgpDialog$3(android.content.DialogInterface,int) -> lambda$showInstallPgpDialog$3$XmppActivity
    803:811:void launchOpenKeyChain(long) -> launchOpenKeyChain
    871:894:void loadBitmap(com.ru.astron.entities.Message,android.widget.ImageView) -> loadBitmap
    776:776:boolean manuallyChangePresence() -> manuallyChangePresence
    751:762:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    394:404:void onCreate(android.os.Bundle) -> onCreate
    829:832:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    340:357:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    824:825:void onPause() -> onPause
    815:816:void onResume() -> onResume
    204:215:void onStart() -> onStart
    230:236:void onStop() -> onStop
    478:479:void privateMsgInMuc(com.ru.astron.entities.Conversation,java.lang.String) -> privateMsgInMuc
    679:680:void quickEdit(java.lang.String,int,com.ru.astron.ui.XmppActivity$OnValueEdited) -> quickEdit
    683:684:void quickEdit(java.lang.String,int,com.ru.astron.ui.XmppActivity$OnValueEdited,boolean) -> quickEdit
    696:735:void quickEdit(java.lang.String,com.ru.astron.ui.XmppActivity$OnValueEdited,int,boolean,boolean) -> quickEdit
    687:688:void quickPasswordEdit(java.lang.String,com.ru.astron.ui.XmppActivity$OnValueEdited) -> quickPasswordEdit
    189:198:void refreshUi() -> refreshUi
    285:309:void registerListeners() -> registerListeners
    179:180:void replaceToast(java.lang.String) -> replaceToast
    183:186:void replaceToast(java.lang.String,boolean) -> replaceToast
    361:390:void selectPresence(com.ru.astron.entities.Conversation,com.ru.astron.ui.util.PresenceSelector$OnPresenceSelected) -> selectPresence
    788:790:void shareLink(boolean) -> shareLink
    653:659:void showAddToRosterDialog(com.ru.astron.entities.Contact) -> showAddToRosterDialog
    662:676:void showAskForPresenceDialog(com.ru.astron.entities.Contact) -> showAskForPresenceDialog
    244:280:void showInstallPgpDialog() -> showInstallPgpDialog
    836:837:void showQrCode() -> showQrCode
    840:841:void showQrCode(java.lang.String) -> showQrCode
    517:518:void switchToAccount(com.ru.astron.entities.Account,java.lang.String) -> switchToAccount
    521:522:void switchToAccount(com.ru.astron.entities.Account) -> switchToAccount
    525:538:void switchToAccount(com.ru.astron.entities.Account,boolean,java.lang.String) -> switchToAccount
    504:505:void switchToContactDetails(com.ru.astron.entities.Contact) -> switchToContactDetails
    508:514:void switchToContactDetails(com.ru.astron.entities.Contact,java.lang.String) -> switchToContactDetails
    458:459:void switchToConversation(com.ru.astron.entities.Conversation) -> switchToConversation
    466:467:void switchToConversation(com.ru.astron.entities.Conversation,java.lang.String) -> switchToConversation
    482:501:void switchToConversation(com.ru.astron.entities.Conversation,java.lang.String,boolean,java.lang.String,boolean,boolean) -> switchToConversation
    462:463:void switchToConversationAndQuote(com.ru.astron.entities.Conversation,java.lang.String) -> switchToConversationAndQuote
    470:471:void switchToConversationDoNotAppend(com.ru.astron.entities.Conversation,java.lang.String) -> switchToConversationDoNotAppend
    312:336:void unregisterListeners() -> unregisterListeners
    446:446:boolean usingEnterKey() -> usingEnterKey
com.ru.astron.ui.XmppActivity$1 -> com.ru.astron.ui.XmppActivity$1:
    103:103:void <init>(com.ru.astron.ui.XmppActivity) -> <init>
    107:112:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    116:117:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.ru.astron.ui.XmppActivity$2 -> com.ru.astron.ui.XmppActivity$2:
    126:126:void <init>(com.ru.astron.ui.XmppActivity) -> <init>
    126:126:void error(int,java.lang.Object) -> error
    137:138:void error(int,com.ru.astron.entities.Conversation) -> error
    137:137:void lambda$error$1(int) -> lambda$error$1$XmppActivity$2
    130:132:void lambda$success$0(com.ru.astron.entities.Conversation) -> lambda$success$0$XmppActivity$2
    126:126:void success(java.lang.Object) -> success
    129:133:void success(com.ru.astron.entities.Conversation) -> success
    126:126:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    143:143:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Conversation) -> userInputRequried
com.ru.astron.ui.XmppActivity$3 -> com.ru.astron.ui.XmppActivity$3:
    567:567:void <init>(com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Account,com.ru.astron.entities.Conversation,java.lang.Runnable) -> <init>
    567:567:void error(int,java.lang.Object) -> error
    594:602:void error(int,java.lang.String) -> error
    567:567:void success(java.lang.Object) -> success
    579:590:void success(java.lang.String) -> success
    567:567:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    572:575:void userInputRequried(android.app.PendingIntent,java.lang.String) -> userInputRequried
com.ru.astron.ui.XmppActivity$4 -> com.ru.astron.ui.XmppActivity$4:
    619:619:void <init>(com.ru.astron.ui.XmppActivity) -> <init>
    619:619:void error(int,java.lang.Object) -> error
    627:627:void error(int,com.ru.astron.entities.Account) -> error
    619:619:void success(java.lang.Object) -> success
    622:622:void success(com.ru.astron.entities.Account) -> success
    619:619:void userInputRequried(android.app.PendingIntent,java.lang.Object) -> userInputRequried
    632:636:void userInputRequried(android.app.PendingIntent,com.ru.astron.entities.Account) -> userInputRequried
com.ru.astron.ui.XmppActivity$AsyncDrawable -> com.ru.astron.ui.XmppActivity$AsyncDrawable:
    970:970:void <init>(android.content.res.Resources,android.graphics.Bitmap,com.ru.astron.ui.XmppActivity$BitmapWorkerTask,com.ru.astron.ui.XmppActivity$1) -> <init>
    974:976:void <init>(android.content.res.Resources,android.graphics.Bitmap,com.ru.astron.ui.XmppActivity$BitmapWorkerTask) -> <init>
    970:970:com.ru.astron.ui.XmppActivity$BitmapWorkerTask access$100(com.ru.astron.ui.XmppActivity$AsyncDrawable) -> access$100
    979:979:com.ru.astron.ui.XmppActivity$BitmapWorkerTask getBitmapWorkerTask() -> getBitmapWorkerTask
com.ru.astron.ui.XmppActivity$BitmapWorkerTask -> com.ru.astron.ui.XmppActivity$BitmapWorkerTask:
    932:932:void <init>(android.widget.ImageView,com.ru.astron.ui.XmppActivity$1) -> <init>
    936:938:void <init>(android.widget.ImageView) -> <init>
    932:932:com.ru.astron.entities.Message access$000(com.ru.astron.ui.XmppActivity$BitmapWorkerTask) -> access$000
    932:932:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    942:954:android.graphics.Bitmap doInBackground(com.ru.astron.entities.Message[]) -> doInBackground
    932:932:void onPostExecute(java.lang.Object) -> onPostExecute
    960:967:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
com.ru.astron.ui.XmppActivity$ConferenceInvite -> com.ru.astron.ui.XmppActivity$ConferenceInvite:
    900:902:void <init>() -> <init>
    915:927:boolean execute(com.ru.astron.ui.XmppActivity) -> execute
    905:911:com.ru.astron.ui.XmppActivity$ConferenceInvite parse(android.content.Intent) -> parse
com.ru.astron.ui.XmppFragment -> com.ru.astron.ui.XmppFragment:
    37:37:void <init>() -> <init>
    42:46:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
com.ru.astron.ui.adapter.AccountAdapter -> com.ru.astron.ui.adapter.AccountAdapter:
    26:29:void <init>(com.ru.astron.ui.XmppActivity,java.util.List,boolean) -> <init>
    32:35:void <init>(com.ru.astron.ui.XmppActivity,java.util.List) -> <init>
    39:81:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    77:80:void lambda$getView$0(boolean,com.ru.astron.entities.Account,android.widget.CompoundButton,boolean) -> lambda$getView$0$AccountAdapter
com.ru.astron.ui.adapter.AccountAdapter$1 -> com.ru.astron.ui.adapter.AccountAdapter$1:
    56:56:void <clinit>() -> <clinit>
com.ru.astron.ui.adapter.AccountAdapter$ViewHolder -> com.ru.astron.ui.adapter.AccountAdapter$ViewHolder:
    84:84:void <init>(com.ru.astron.databinding.AccountRowBinding,com.ru.astron.ui.adapter.AccountAdapter$1) -> <init>
    87:89:void <init>(com.ru.astron.databinding.AccountRowBinding) -> <init>
    84:84:com.ru.astron.databinding.AccountRowBinding access$100(com.ru.astron.ui.adapter.AccountAdapter$ViewHolder) -> access$100
com.ru.astron.ui.adapter.BackupFileAdapter -> com.ru.astron.ui.adapter.BackupFileAdapter:
    31:35:void <init>() -> <init>
    132:142:boolean cancelPotentialWork(rocks.xmpp.addr.Jid,android.widget.ImageView) -> cancelPotentialWork
    146:153:com.ru.astron.ui.adapter.BackupFileAdapter$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> getBitmapWorkerTask
    61:61:int getItemCount() -> getItemCount
    52:55:void lambda$onBindViewHolder$0(com.ru.astron.services.ImportBackupService$BackupFile,android.view.View) -> lambda$onBindViewHolder$0$BackupFileAdapter
    118:129:void loadAvatar(rocks.xmpp.addr.Jid,android.widget.ImageView) -> loadAvatar
    31:31:void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    46:57:void onBindViewHolder(com.ru.astron.ui.adapter.BackupFileAdapter$BackupFileViewHolder,int) -> onBindViewHolder
    31:31:android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    41:41:com.ru.astron.ui.adapter.BackupFileAdapter$BackupFileViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    65:68:void setFiles(java.util.List) -> setFiles
    71:72:void setOnItemClickedListener(com.ru.astron.ui.adapter.BackupFileAdapter$OnItemClickedListener) -> setOnItemClickedListener
com.ru.astron.ui.adapter.BackupFileAdapter$AsyncDrawable -> com.ru.astron.ui.adapter.BackupFileAdapter$AsyncDrawable:
    160:162:void <init>(android.content.res.Resources,android.graphics.Bitmap,com.ru.astron.ui.adapter.BackupFileAdapter$BitmapWorkerTask) -> <init>
    165:165:com.ru.astron.ui.adapter.BackupFileAdapter$BitmapWorkerTask getBitmapWorkerTask() -> getBitmapWorkerTask
com.ru.astron.ui.adapter.BackupFileAdapter$BackupFileViewHolder -> com.ru.astron.ui.adapter.BackupFileAdapter$BackupFileViewHolder:
    78:80:void <init>(com.ru.astron.databinding.AccountRowBinding) -> <init>
    74:74:com.ru.astron.databinding.AccountRowBinding access$000(com.ru.astron.ui.adapter.BackupFileAdapter$BackupFileViewHolder) -> access$000
com.ru.astron.ui.adapter.BackupFileAdapter$BitmapWorkerTask -> com.ru.astron.ui.adapter.BackupFileAdapter$BitmapWorkerTask:
    93:97:void <init>(android.widget.ImageView) -> <init>
    88:88:rocks.xmpp.addr.Jid access$100(com.ru.astron.ui.adapter.BackupFileAdapter$BitmapWorkerTask) -> access$100
    88:88:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    101:102:android.graphics.Bitmap doInBackground(rocks.xmpp.addr.Jid[]) -> doInBackground
    88:88:void onPostExecute(java.lang.Object) -> onPostExecute
    107:114:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
com.ru.astron.ui.adapter.ConversationAdapter -> com.ru.astron.ui.adapter.ConversationAdapter:
    33:36:void <init>(com.ru.astron.ui.XmppActivity,java.util.List) -> <init>
    192:192:int getItemCount() -> getItemCount
    201:203:void insert(com.ru.astron.entities.Conversation,int) -> insert
    187:187:void lambda$onBindViewHolder$0(com.ru.astron.entities.Conversation,android.view.View) -> lambda$onBindViewHolder$0$ConversationAdapter
    27:27:void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    47:188:void onBindViewHolder(com.ru.astron.ui.adapter.ConversationAdapter$ConversationViewHolder,int) -> onBindViewHolder
    27:27:android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    42:42:com.ru.astron.ui.adapter.ConversationAdapter$ConversationViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    206:208:void remove(com.ru.astron.entities.Conversation,int) -> remove
    196:197:void setConversationClickListener(com.ru.astron.ui.adapter.ConversationAdapter$OnConversationClickListener) -> setConversationClickListener
com.ru.astron.ui.adapter.ConversationAdapter$ConversationViewHolder -> com.ru.astron.ui.adapter.ConversationAdapter$ConversationViewHolder:
    214:214:void <init>(com.ru.astron.databinding.ConversationListRowBinding,com.ru.astron.ui.adapter.ConversationAdapter$1) -> <init>
    218:220:void <init>(com.ru.astron.databinding.ConversationListRowBinding) -> <init>
    214:214:com.ru.astron.databinding.ConversationListRowBinding access$100(com.ru.astron.ui.adapter.ConversationAdapter$ConversationViewHolder) -> access$100
com.ru.astron.ui.adapter.KnownHostsAdapter -> com.ru.astron.ui.adapter.KnownHostsAdapter:
    18:18:void <clinit>() -> <clinit>
    68:71:void <init>(android.content.Context,int,java.util.Collection) -> <init>
    74:76:void <init>(android.content.Context,int) -> <init>
    16:16:java.util.regex.Pattern access$000() -> access$000
    16:16:java.util.ArrayList access$100(com.ru.astron.ui.adapter.KnownHostsAdapter) -> access$100
    87:87:android.widget.Filter getFilter() -> getFilter
    79:82:void refresh(java.util.Collection) -> refresh
com.ru.astron.ui.adapter.KnownHostsAdapter$1 -> com.ru.astron.ui.adapter.KnownHostsAdapter$1:
    21:21:void <init>(com.ru.astron.ui.adapter.KnownHostsAdapter) -> <init>
    25:48:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    58:64:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.ru.astron.ui.adapter.ListItemAdapter -> com.ru.astron.ui.adapter.ListItemAdapter:
    42:44:void <init>(com.ru.astron.ui.XmppActivity,java.util.List) -> <init>
    54:89:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    34:39:void lambda$new$0(android.view.View) -> lambda$new$0$ListItemAdapter
    48:50:void refreshSettings() -> refreshSettings
    93:94:void setOnTagClickedListener(com.ru.astron.ui.adapter.ListItemAdapter$OnTagClickedListener) -> setOnTagClickedListener
com.ru.astron.ui.adapter.ListItemAdapter$ViewHolder -> com.ru.astron.ui.adapter.ListItemAdapter$ViewHolder:
    107:109:void <init>() -> <init>
    101:101:com.wefika.flowlayout.FlowLayout access$000(com.ru.astron.ui.adapter.ListItemAdapter$ViewHolder) -> access$000
    101:101:android.widget.TextView access$100(com.ru.astron.ui.adapter.ListItemAdapter$ViewHolder) -> access$100
    101:101:android.widget.TextView access$200(com.ru.astron.ui.adapter.ListItemAdapter$ViewHolder) -> access$200
    101:101:android.widget.ImageView access$300(com.ru.astron.ui.adapter.ListItemAdapter$ViewHolder) -> access$300
    112:118:com.ru.astron.ui.adapter.ListItemAdapter$ViewHolder get(com.ru.astron.databinding.ContactBinding) -> get
com.ru.astron.ui.adapter.MediaAdapter -> com.ru.astron.ui.adapter.MediaAdapter:
    33:33:void <clinit>() -> <clinit>
    48:51:void <init>(com.ru.astron.ui.XmppActivity,int) -> <init>
    98:108:boolean cancelPotentialWork(com.ru.astron.ui.util.Attachment,android.widget.ImageView) -> cancelPotentialWork
    112:119:com.ru.astron.ui.adapter.MediaAdapter$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> getBitmapWorkerTask
    62:88:int getImageAttr(com.ru.astron.ui.util.Attachment) -> getImageAttr
    176:176:int getItemCount() -> getItemCount
    140:140:void lambda$onBindViewHolder$0(com.ru.astron.ui.util.Attachment,android.view.View) -> lambda$onBindViewHolder$0$MediaAdapter
    154:172:void loadPreview(com.ru.astron.ui.util.Attachment,android.widget.ImageView) -> loadPreview
    31:31:void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    132:141:void onBindViewHolder(com.ru.astron.ui.adapter.MediaAdapter$MediaViewHolder,int) -> onBindViewHolder
    31:31:android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    125:127:com.ru.astron.ui.adapter.MediaAdapter$MediaViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    92:95:void renderPreview(android.content.Context,com.ru.astron.ui.util.Attachment,android.widget.ImageView) -> renderPreview
    144:147:void setAttachments(java.util.List) -> setAttachments
    54:58:void setMediaSize(android.support.v7.widget.RecyclerView,int) -> setMediaSize
    150:151:void setMediaSize(int) -> setMediaSize
com.ru.astron.ui.adapter.MediaAdapter$AsyncDrawable -> com.ru.astron.ui.adapter.MediaAdapter$AsyncDrawable:
    183:185:void <init>(android.content.res.Resources,android.graphics.Bitmap,com.ru.astron.ui.adapter.MediaAdapter$BitmapWorkerTask) -> <init>
    188:188:com.ru.astron.ui.adapter.MediaAdapter$BitmapWorkerTask getBitmapWorkerTask() -> getBitmapWorkerTask
com.ru.astron.ui.adapter.MediaAdapter$BitmapWorkerTask -> com.ru.astron.ui.adapter.MediaAdapter$BitmapWorkerTask:
    207:210:void <init>(int,android.widget.ImageView) -> <init>
    202:202:com.ru.astron.ui.util.Attachment access$000(com.ru.astron.ui.adapter.MediaAdapter$BitmapWorkerTask) -> access$000
    202:202:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    214:219:android.graphics.Bitmap doInBackground(com.ru.astron.ui.util.Attachment[]) -> doInBackground
    202:202:void onPostExecute(java.lang.Object) -> onPostExecute
    224:231:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
com.ru.astron.ui.adapter.MediaAdapter$MediaViewHolder -> com.ru.astron.ui.adapter.MediaAdapter$MediaViewHolder:
    196:199:void <init>(com.ru.astron.ui.adapter.MediaAdapter,com.ru.astron.databinding.MediaBinding) -> <init>
    192:192:com.ru.astron.databinding.MediaBinding access$100(com.ru.astron.ui.adapter.MediaAdapter$MediaViewHolder) -> access$100
com.ru.astron.ui.adapter.MediaPreviewAdapter -> com.ru.astron.ui.adapter.MediaPreviewAdapter:
    33:35:void <init>(com.ru.astron.ui.ConversationFragment) -> <init>
    65:67:void addMediaPreviews(java.util.List) -> addMediaPreviews
    92:102:boolean cancelPotentialWork(com.ru.astron.ui.util.Attachment,android.widget.ImageView) -> cancelPotentialWork
    130:131:void clearPreviews() -> clearPreviews
    126:126:java.util.ArrayList getAttachments() -> getAttachments
    106:113:com.ru.astron.ui.adapter.MediaPreviewAdapter$BitmapWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> getBitmapWorkerTask
    118:118:int getItemCount() -> getItemCount
    122:122:boolean hasAttachments() -> hasAttachments
    57:61:void lambda$onBindViewHolder$0(com.ru.astron.ui.util.Attachment,android.view.View) -> lambda$onBindViewHolder$0$MediaPreviewAdapter
    70:89:void loadPreview(com.ru.astron.ui.util.Attachment,android.widget.ImageView) -> loadPreview
    27:27:void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    47:62:void onBindViewHolder(com.ru.astron.ui.adapter.MediaPreviewAdapter$MediaPreviewViewHolder,int) -> onBindViewHolder
    27:27:android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    40:42:com.ru.astron.ui.adapter.MediaPreviewAdapter$MediaPreviewViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.ru.astron.ui.adapter.MediaPreviewAdapter$AsyncDrawable -> com.ru.astron.ui.adapter.MediaPreviewAdapter$AsyncDrawable:
    147:149:void <init>(android.content.res.Resources,android.graphics.Bitmap,com.ru.astron.ui.adapter.MediaPreviewAdapter$BitmapWorkerTask) -> <init>
    152:152:com.ru.astron.ui.adapter.MediaPreviewAdapter$BitmapWorkerTask getBitmapWorkerTask() -> getBitmapWorkerTask
com.ru.astron.ui.adapter.MediaPreviewAdapter$BitmapWorkerTask -> com.ru.astron.ui.adapter.MediaPreviewAdapter$BitmapWorkerTask:
    160:162:void <init>(android.widget.ImageView) -> <init>
    156:156:com.ru.astron.ui.util.Attachment access$100(com.ru.astron.ui.adapter.MediaPreviewAdapter$BitmapWorkerTask) -> access$100
    156:156:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    166:171:android.graphics.Bitmap doInBackground(com.ru.astron.ui.util.Attachment[]) -> doInBackground
    156:156:void onPostExecute(java.lang.Object) -> onPostExecute
    176:183:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
com.ru.astron.ui.adapter.MediaPreviewAdapter$MediaPreviewViewHolder -> com.ru.astron.ui.adapter.MediaPreviewAdapter$MediaPreviewViewHolder:
    137:140:void <init>(com.ru.astron.ui.adapter.MediaPreviewAdapter,com.ru.astron.databinding.MediaPreviewBinding) -> <init>
    133:133:com.ru.astron.databinding.MediaPreviewBinding access$000(com.ru.astron.ui.adapter.MediaPreviewAdapter$MediaPreviewViewHolder) -> access$000
com.ru.astron.ui.adapter.MessageAdapter -> com.ru.astron.ui.adapter.MessageAdapter:
    92:97:void <init>(com.ru.astron.ui.XmppActivity,java.util.List) -> <init>
    74:74:com.ru.astron.ui.adapter.MessageAdapter$OnQuoteListener access$100(com.ru.astron.ui.adapter.MessageAdapter) -> access$100
    74:74:com.ru.astron.ui.XmppActivity access$200(com.ru.astron.ui.adapter.MessageAdapter) -> access$200
    74:74:java.lang.String access$300(com.ru.astron.ui.adapter.MessageAdapter,java.lang.CharSequence,int,int,boolean) -> access$300
    342:355:void applyQuoteSpan(android.text.SpannableStringBuilder,int,int,boolean) -> applyQuoteSpan
    537:544:void displayAudioMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,com.ru.astron.entities.Message,boolean) -> displayAudioMessage
    510:516:void displayDownloadableMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,com.ru.astron.entities.Message,java.lang.String) -> displayDownloadableMessage
    326:339:void displayEmojiMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,java.lang.String,boolean) -> displayEmojiMessage
    547:573:void displayImageMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,com.ru.astron.entities.Message) -> displayImageMessage
    312:323:void displayInfoMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,java.lang.CharSequence,boolean) -> displayInfoMessage
    528:534:void displayLocationMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,com.ru.astron.entities.Message) -> displayLocationMessage
    519:525:void displayOpenableMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,com.ru.astron.entities.Message) -> displayOpenableMessage
    165:309:void displayStatus(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,com.ru.astron.entities.Message,int,boolean) -> displayStatus
    410:507:void displayTextMessage(com.ru.astron.ui.adapter.MessageAdapter$ViewHolder,com.ru.astron.entities.Message,boolean,int) -> displayTextMessage
    112:113:void flagScreenOff() -> flagScreenOff
    108:109:void flagScreenOn() -> flagScreenOn
    120:120:android.app.Activity getActivity() -> getActivity
    857:857:com.ru.astron.persistance.FileBackend getFileBackend() -> getFileBackend
    138:148:int getItemViewType(com.ru.astron.entities.Message) -> getItemViewType
    153:153:int getItemViewType(int) -> getItemViewType
    157:160:int getMessageTextColor(boolean,boolean) -> getMessageTextColor
    595:811:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    134:134:int getViewTypeCount() -> getViewTypeCount
    362:406:boolean handleTextQuotes(android.text.SpannableStringBuilder,boolean) -> handleTextQuotes
    515:515:void lambda$displayDownloadableMessage$0(com.ru.astron.entities.Message,android.view.View) -> lambda$displayDownloadableMessage$0$MessageAdapter
    572:572:void lambda$displayImageMessage$3(com.ru.astron.entities.Message,android.view.View) -> lambda$displayImageMessage$3$MessageAdapter
    533:533:void lambda$displayLocationMessage$2(com.ru.astron.entities.Message,android.view.View) -> lambda$displayLocationMessage$2$MessageAdapter
    524:524:void lambda$displayOpenableMessage$1(com.ru.astron.entities.Message,android.view.View) -> lambda$displayOpenableMessage$1$MessageAdapter
    676:676:void lambda$getView$4(com.ru.astron.entities.Message,android.view.View) -> lambda$getView$4$MessageAdapter
    706:711:void lambda$getView$5(com.ru.astron.entities.Message,android.view.View) -> lambda$getView$5$MessageAdapter
    713:718:boolean lambda$getView$6(com.ru.astron.entities.Message,android.view.View) -> lambda$getView$6$MessageAdapter
    576:591:void loadMoreMessages(com.ru.astron.entities.Conversation) -> loadMoreMessages
    820:823:void notifyDataSetChanged() -> notifyDataSetChanged
    873:880:void openDownloadable(com.ru.astron.entities.Message) -> openDownloadable
    815:816:void promptOpenKeychainInstall(android.view.View) -> promptOpenKeychainInstall
    102:105:void resetClickListener(android.view.View[]) -> resetClickListener
    900:901:void setHighlightedTerm(java.util.List) -> setHighlightedTerm
    116:117:void setOnContactPictureClicked(com.ru.astron.ui.adapter.MessageAdapter$OnContactPictureClicked) -> setOnContactPictureClicked
    125:126:void setOnContactPictureLongClicked(com.ru.astron.ui.adapter.MessageAdapter$OnContactPictureLongClicked) -> setOnContactPictureLongClicked
    129:130:void setOnQuoteListener(com.ru.astron.ui.adapter.MessageAdapter$OnQuoteListener) -> setOnQuoteListener
    883:890:void showLocation(com.ru.astron.entities.Message) -> showLocation
    869:870:void startStopPending() -> startStopPending
    861:862:void stopAudioPlayer() -> stopAudioPlayer
    826:836:java.lang.String transformText(java.lang.CharSequence,int,int,boolean) -> transformText
    849:852:java.lang.String transformTextForCopy(java.lang.CharSequence,int,int) -> transformTextForCopy
    865:866:void unregisterListenerInAudioPlayer() -> unregisterListenerInAudioPlayer
    893:896:void updatePreferences() -> updatePreferences
com.ru.astron.ui.adapter.MessageAdapter$MessageBodyActionModeCallback -> com.ru.astron.ui.adapter.MessageAdapter$MessageBodyActionModeCallback:
    937:939:void <init>(com.ru.astron.ui.adapter.MessageAdapter,android.widget.TextView) -> <init>
    959:971:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    943:949:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    976:976:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    954:954:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
com.ru.astron.ui.adapter.MessageAdapter$ViewHolder -> com.ru.astron.ui.adapter.MessageAdapter$ViewHolder:
    915:915:void <init>() -> <init>
    915:915:void <init>(com.ru.astron.ui.adapter.MessageAdapter$1) -> <init>
com.ru.astron.ui.adapter.PresenceTemplateAdapter -> com.ru.astron.ui.adapter.PresenceTemplateAdapter:
    83:85:void <init>(android.content.Context,int,java.util.List) -> <init>
    44:44:java.util.List access$000(com.ru.astron.ui.adapter.PresenceTemplateAdapter) -> access$000
    90:90:android.widget.Filter getFilter() -> getFilter
com.ru.astron.ui.adapter.PresenceTemplateAdapter$1 -> com.ru.astron.ui.adapter.PresenceTemplateAdapter$1:
    48:48:void <init>(com.ru.astron.ui.adapter.PresenceTemplateAdapter) -> <init>
    52:68:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    73:79:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.ru.astron.ui.adapter.UserAdapter -> com.ru.astron.ui.adapter.UserAdapter:
    31:31:void <clinit>() -> <clinit>
    56:58:void <init>(boolean) -> <init>
    120:120:com.ru.astron.entities.MucOptions$User getSelectedUser() -> getSelectedUser
    71:75:void lambda$onBindViewHolder$0(com.ru.astron.entities.MucOptions$User,android.view.View) -> lambda$onBindViewHolder$0
    79:80:boolean lambda$onBindViewHolder$1(com.ru.astron.entities.MucOptions$User,android.view.View) -> lambda$onBindViewHolder$1$UserAdapter
    99:112:void lambda$onBindViewHolder$2(com.ru.astron.entities.MucOptions$User,android.view.View) -> lambda$onBindViewHolder$2
    29:29:void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    68:117:void onBindViewHolder(com.ru.astron.ui.adapter.UserAdapter$ViewHolder,int) -> onBindViewHolder
    125:126:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    29:29:android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    63:63:com.ru.astron.ui.adapter.UserAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.ru.astron.ui.adapter.UserAdapter$1 -> com.ru.astron.ui.adapter.UserAdapter$1:
    31:31:void <init>() -> <init>
    31:31:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    49:49:boolean areContentsTheSame(com.ru.astron.entities.MucOptions$User,com.ru.astron.entities.MucOptions$User) -> areContentsTheSame
    31:31:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    34:43:boolean areItemsTheSame(com.ru.astron.entities.MucOptions$User,com.ru.astron.entities.MucOptions$User) -> areItemsTheSame
com.ru.astron.ui.adapter.UserAdapter$ViewHolder -> com.ru.astron.ui.adapter.UserAdapter$ViewHolder:
    128:128:void <init>(com.ru.astron.ui.adapter.UserAdapter,com.ru.astron.databinding.ContactBinding,com.ru.astron.ui.adapter.UserAdapter$1) -> <init>
    132:135:void <init>(com.ru.astron.ui.adapter.UserAdapter,com.ru.astron.databinding.ContactBinding) -> <init>
    128:128:com.ru.astron.databinding.ContactBinding access$100(com.ru.astron.ui.adapter.UserAdapter$ViewHolder) -> access$100
com.ru.astron.ui.adapter.UserPreviewAdapter -> com.ru.astron.ui.adapter.UserPreviewAdapter:
    24:25:void <init>() -> <init>
    57:57:com.ru.astron.entities.MucOptions$User getSelectedUser() -> getSelectedUser
    38:42:void lambda$onBindViewHolder$0(com.ru.astron.entities.MucOptions$User,android.view.View) -> lambda$onBindViewHolder$0
    46:47:boolean lambda$onBindViewHolder$1(com.ru.astron.entities.MucOptions$User,android.view.View) -> lambda$onBindViewHolder$1$UserPreviewAdapter
    19:19:void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    35:49:void onBindViewHolder(com.ru.astron.ui.adapter.UserPreviewAdapter$ViewHolder,int) -> onBindViewHolder
    53:54:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    19:19:android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    30:30:com.ru.astron.ui.adapter.UserPreviewAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.ru.astron.ui.adapter.UserPreviewAdapter$ViewHolder -> com.ru.astron.ui.adapter.UserPreviewAdapter$ViewHolder:
    60:60:void <init>(com.ru.astron.ui.adapter.UserPreviewAdapter,com.ru.astron.databinding.UserPreviewBinding,com.ru.astron.ui.adapter.UserPreviewAdapter$1) -> <init>
    64:67:void <init>(com.ru.astron.ui.adapter.UserPreviewAdapter,com.ru.astron.databinding.UserPreviewBinding) -> <init>
    60:60:com.ru.astron.databinding.UserPreviewBinding access$100(com.ru.astron.ui.adapter.UserPreviewAdapter$ViewHolder) -> access$100
com.ru.astron.ui.service.AudioPlayer -> com.ru.astron.ui.service.AudioPlayer:
    39:41:void <clinit>() -> <clinit>
    51:64:void <init>(com.ru.astron.ui.adapter.MessageAdapter) -> <init>
    389:393:void acquireProximityWakeLock() -> acquireProximityWakeLock
    68:68:java.lang.String formatTime(int) -> formatTime
    405:411:com.ru.astron.ui.service.AudioPlayer$ViewHolder getCurrentViewHolder() -> getCurrentViewHolder
    86:94:void init(android.widget.RelativeLayout,com.ru.astron.entities.Message) -> init
    98:125:boolean init(com.ru.astron.ui.service.AudioPlayer$ViewHolder,com.ru.astron.entities.Message) -> init
    72:83:void initializeProximityWakeLock(android.content.Context) -> initializeProximityWakeLock
    386:386:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    131:130:void onClick(android.view.View) -> onClick
    257:268:void onCompletion(android.media.MediaPlayer) -> onCompletion
    273:282:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    352:356:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    288:288:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    293:293:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    175:178:void play(com.ru.astron.ui.service.AudioPlayer$ViewHolder,com.ru.astron.entities.Message,boolean,double) -> play
    181:200:boolean play(com.ru.astron.ui.service.AudioPlayer$ViewHolder,com.ru.astron.entities.Message,boolean) -> play
    156:171:boolean playPauseCurrent(com.ru.astron.ui.service.AudioPlayer$ViewHolder) -> playPauseCurrent
    341:342:boolean refreshAudioPlayer(android.widget.RelativeLayout,int,int) -> refreshAudioPlayer
    397:401:void releaseProximityWakeLock() -> releaseProximityWakeLock
    236:239:void resetPlayerUi() -> resetPlayerUi
    242:253:void resetPlayerUi(android.widget.RelativeLayout) -> resetPlayerUi
    325:337:void run() -> run
    139:153:void startStop(android.widget.ImageButton) -> startStop
    215:221:boolean startStop(com.ru.astron.ui.service.AudioPlayer$ViewHolder,com.ru.astron.entities.Message) -> startStop
    205:212:void startStopPending() -> startStopPending
    296:307:void stop() -> stop
    225:233:void stopCurrent() -> stopCurrent
    311:315:void stopRefresher(boolean) -> stopRefresher
    318:321:void unregisterListener() -> unregisterListener
com.ru.astron.ui.service.AudioPlayer$ViewHolder -> com.ru.astron.ui.service.AudioPlayer$ViewHolder:
    414:418:void <init>() -> <init>
    414:414:boolean access$000(com.ru.astron.ui.service.AudioPlayer$ViewHolder) -> access$000
    414:414:android.widget.TextView access$100(com.ru.astron.ui.service.AudioPlayer$ViewHolder) -> access$100
    414:414:android.widget.SeekBar access$200(com.ru.astron.ui.service.AudioPlayer$ViewHolder) -> access$200
    414:414:android.widget.ImageButton access$300(com.ru.astron.ui.service.AudioPlayer$ViewHolder) -> access$300
    421:429:com.ru.astron.ui.service.AudioPlayer$ViewHolder get(android.widget.RelativeLayout) -> get
    433:434:void setDarkBackground(boolean) -> setDarkBackground
com.ru.astron.ui.service.CameraManager -> com.ru.astron.ui.service.CameraManager:
    181:181:void <clinit>() -> <clinit>
    44:51:void <init>() -> <init>
    273:273:com.google.zxing.PlanarYUVLuminanceSource buildLuminanceSource(byte[]) -> buildLuminanceSource
    170:179:void close() -> close
    149:166:int determineCameraId() -> determineCameraId
    197:240:android.hardware.Camera$Size findBestPreviewSizeValue(android.hardware.Camera$Parameters,int,int) -> findBestPreviewSizeValue
    316:320:java.lang.String findValue(java.util.Collection,java.lang.String[]) -> findValue
    65:65:int getFacing() -> getFacing
    57:57:android.graphics.Rect getFrame() -> getFrame
    61:61:android.graphics.RectF getFramePreview() -> getFramePreview
    69:69:int getOrientation() -> getOrientation
    284:291:boolean getTorchEnabled(android.hardware.Camera) -> getTorchEnabled
    74:84:android.hardware.Camera open(android.view.TextureView,int,boolean) -> open
    266:270:void requestPreviewFrame(android.hardware.Camera$PreviewCallback) -> requestPreviewFrame
    246:262:void setDesiredCameraParameters(android.hardware.Camera,android.hardware.Camera$Size,boolean) -> setDesiredCameraParameters
    279:281:void setTorch(boolean) -> setTorch
    295:313:void setTorchEnabled(android.hardware.Camera,boolean) -> setTorchEnabled
com.ru.astron.ui.service.CameraManager$1 -> com.ru.astron.ui.service.CameraManager$1:
    181:181:void <init>() -> <init>
    181:181:int compare(java.lang.Object,java.lang.Object) -> compare
    184:192:int compare(android.hardware.Camera$Size,android.hardware.Camera$Size) -> compare
com.ru.astron.ui.service.EmojiService -> com.ru.astron.ui.service.EmojiService:
    12:14:void <init>(android.content.Context) -> <init>
    17:24:void init() -> init
com.ru.astron.ui.text.DividerSpan -> com.ru.astron.ui.text.DividerSpan:
    12:14:void <init>(boolean) -> <init>
    17:17:boolean isLarge() -> isLarge
    22:23:void updateDrawState(android.text.TextPaint) -> updateDrawState
    27:28:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
com.ru.astron.ui.text.FixedURLSpan -> com.ru.astron.ui.text.FixedURLSpan:
    54:55:void <init>(java.lang.String) -> <init>
    58:64:void fix(android.text.Editable) -> fix
    68:88:void onClick(android.view.View) -> onClick
com.ru.astron.ui.text.QuoteSpan -> com.ru.astron.ui.text.QuoteSpan:
    25:30:void <init>(int,android.util.DisplayMetrics) -> <init>
    45:52:void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout) -> drawLeadingMargin
    56:56:int getColor() -> getColor
    39:39:int getLeadingMargin(boolean) -> getLeadingMargin
    34:35:void updateDrawState(android.text.TextPaint) -> updateDrawState
com.ru.astron.ui.util.ActivityResult -> com.ru.astron.ui.util.ActivityResult:
    40:44:void <init>(int,int,android.content.Intent) -> <init>
    47:47:com.ru.astron.ui.util.ActivityResult of(int,int,android.content.Intent) -> of
com.ru.astron.ui.util.Attachment -> com.ru.astron.ui.util.Attachment:
    71:71:void <clinit>() -> <clinit>
    51:56:void <init>(android.os.Parcel) -> <init>
    100:105:void <init>(java.util.UUID,android.net.Uri,com.ru.astron.ui.util.Attachment$Type,java.lang.String) -> <init>
    107:112:void <init>(android.net.Uri,com.ru.astron.ui.util.Attachment$Type,java.lang.String) -> <init>
    68:68:int describeContents() -> describeContents
    133:154:java.util.List extractAttachments(android.content.Context,android.content.Intent,com.ru.astron.ui.util.Attachment$Type) -> extractAttachments
    84:84:java.lang.String getMime() -> getMime
    88:88:com.ru.astron.ui.util.Attachment$Type getType() -> getType
    162:162:android.net.Uri getUri() -> getUri
    166:166:java.util.UUID getUuid() -> getUuid
    115:116:java.util.List of(android.content.Context,android.net.Uri,com.ru.astron.ui.util.Attachment$Type) -> of
    120:125:java.util.List of(android.content.Context,java.util.List) -> of
    129:129:com.ru.astron.ui.util.Attachment of(java.util.UUID,java.io.File,java.lang.String) -> of
    158:158:boolean renderThumbnail() -> renderThumbnail
    60:64:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.ru.astron.ui.util.Attachment$1 -> com.ru.astron.ui.util.Attachment$1:
    71:71:void <init>() -> <init>
    71:71:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    74:74:com.ru.astron.ui.util.Attachment createFromParcel(android.os.Parcel) -> createFromParcel
    71:71:java.lang.Object[] newArray(int) -> newArray
    79:79:com.ru.astron.ui.util.Attachment[] newArray(int) -> newArray
com.ru.astron.ui.util.Attachment$Type -> com.ru.astron.ui.util.Attachment$Type:
    92:91:void <clinit>() -> <clinit>
    91:91:void <init>(java.lang.String,int) -> <init>
    91:91:com.ru.astron.ui.util.Attachment$Type valueOf(java.lang.String) -> valueOf
    91:91:com.ru.astron.ui.util.Attachment$Type[] values() -> values
com.ru.astron.ui.util.AvatarWorkerTask -> com.ru.astron.ui.util.AvatarWorkerTask:
    22:25:void <init>(android.widget.ImageView,int) -> <init>
    49:59:boolean cancelPotentialWork(com.ru.astron.services.AvatarService$Avatarable,android.widget.ImageView) -> cancelPotentialWork
    17:17:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    29:34:android.graphics.Bitmap doInBackground(com.ru.astron.services.AvatarService$Avatarable[]) -> doInBackground
    63:70:com.ru.astron.ui.util.AvatarWorkerTask getBitmapWorkerTask(android.widget.ImageView) -> getBitmapWorkerTask
    74:96:void loadAvatar(com.ru.astron.services.AvatarService$Avatarable,android.widget.ImageView,int) -> loadAvatar
    17:17:void onPostExecute(java.lang.Object) -> onPostExecute
    39:46:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
com.ru.astron.ui.util.AvatarWorkerTask$AsyncDrawable -> com.ru.astron.ui.util.AvatarWorkerTask$AsyncDrawable:
    102:104:void <init>(android.content.res.Resources,android.graphics.Bitmap,com.ru.astron.ui.util.AvatarWorkerTask) -> <init>
    107:107:com.ru.astron.ui.util.AvatarWorkerTask getAvatarWorkerTask() -> getAvatarWorkerTask
com.ru.astron.ui.util.ChangeWatcher -> com.ru.astron.ui.util.ChangeWatcher:
    32:34:void <init>() -> <init>
    48:48:java.lang.Object get() -> get
    37:36:boolean watch(java.lang.Object) -> watch
com.ru.astron.ui.util.ConversationMenuConfigurator -> com.ru.astron.ui.util.ConversationMenuConfigurator:
    47:47:void <clinit>() -> <clinit>
    54:67:void configureAttachmentMenu(com.ru.astron.entities.Conversation,android.view.Menu) -> configureAttachmentMenu
    70:125:void configureEncryptionMenu(com.ru.astron.entities.Conversation,android.view.Menu) -> configureEncryptionMenu
    50:51:void reloadFeatures(android.content.Context) -> reloadFeatures
com.ru.astron.ui.util.DateSeparator -> com.ru.astron.ui.util.DateSeparator:
    41:48:void addAll(java.util.List) -> addAll
com.ru.astron.ui.util.DelayedHintHelper -> com.ru.astron.ui.util.DelayedHintHelper:
    41:41:void lambda$null$0(android.widget.EditText,int) -> lambda$null$0
    40:45:void lambda$setHint$1(android.widget.EditText,int,android.view.View,boolean) -> lambda$setHint$1
    39:46:void setHint(int,android.widget.EditText) -> setHint
com.ru.astron.ui.util.EditMessageActionModeCallback -> com.ru.astron.ui.util.EditMessageActionModeCallback:
    49:52:void <init>(com.ru.astron.ui.widget.EditMessage) -> <init>
    75:82:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    56:65:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    88:88:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    70:70:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
com.ru.astron.ui.util.GridManager -> com.ru.astron.ui.util.GridManager:
    13:13:com.ru.astron.ui.util.GridManager$ColumnInfo access$200(android.content.Context,int,int) -> access$200
    13:13:void access$300(android.support.v7.widget.RecyclerView,com.ru.astron.ui.util.GridManager$ColumnInfo) -> access$300
    51:55:com.ru.astron.ui.util.GridManager$ColumnInfo calculateColumnCount(android.content.Context,int,int) -> calculateColumnCount
    59:63:int getCurrentColumnCount(android.support.v7.widget.RecyclerView) -> getCurrentColumnCount
    16:41:void setupLayoutManager(android.content.Context,android.support.v7.widget.RecyclerView,int) -> setupLayoutManager
    44:48:void setupLayoutManagerInternal(android.support.v7.widget.RecyclerView,com.ru.astron.ui.util.GridManager$ColumnInfo) -> setupLayoutManagerInternal
com.ru.astron.ui.util.GridManager$1 -> com.ru.astron.ui.util.GridManager$1:
    21:21:void <init>(android.support.v7.widget.RecyclerView,android.content.Context,int) -> <init>
    24:39:void onGlobalLayout() -> onGlobalLayout
com.ru.astron.ui.util.GridManager$ColumnInfo -> com.ru.astron.ui.util.GridManager$ColumnInfo:
    67:67:void <init>(int,int,com.ru.astron.ui.util.GridManager$1) -> <init>
    71:74:void <init>(int,int) -> <init>
    67:67:int access$000(com.ru.astron.ui.util.GridManager$ColumnInfo) -> access$000
    67:67:int access$100(com.ru.astron.ui.util.GridManager$ColumnInfo) -> access$100
com.ru.astron.ui.util.JidDialog -> com.ru.astron.ui.util.JidDialog:
    13:21:android.text.SpannableString style(android.content.Context,int,java.lang.String[]) -> style
com.ru.astron.ui.util.ListViewUtils -> com.ru.astron.ui.util.ListViewUtils:
    39:43:void scrollToBottom(android.widget.ListView) -> scrollToBottom
    46:54:void setSelection(android.widget.ListView,int,boolean) -> setSelection
com.ru.astron.ui.util.LocationHelper -> com.ru.astron.ui.util.LocationHelper:
    37:70:boolean isBetterLocation(android.location.Location,android.location.Location) -> isBetterLocation
    30:33:boolean isSameProvider(java.lang.String,java.lang.String) -> isSameProvider
    18:19:org.osmdroid.util.GeoPoint parseLatLong(java.lang.String) -> parseLatLong
com.ru.astron.ui.util.MenuDoubleTabUtil -> com.ru.astron.ui.util.MenuDoubleTabUtil:
    41:41:void <clinit>() -> <clinit>
    44:45:void recordMenuOpen() -> recordMenuOpen
    48:52:boolean shouldIgnoreTap() -> shouldIgnoreTap
com.ru.astron.ui.util.MucConfiguration -> com.ru.astron.ui.util.MucConfiguration:
    18:23:void <init>(int,java.lang.String[],boolean[],com.ru.astron.ui.util.MucConfiguration$Option[]) -> <init>
    79:105:java.lang.String describe(android.content.Context,com.ru.astron.entities.MucOptions) -> describe
    26:74:com.ru.astron.ui.util.MucConfiguration get(android.content.Context,boolean,com.ru.astron.entities.MucOptions) -> get
    109:114:android.os.Bundle toBundle(boolean[]) -> toBundle
com.ru.astron.ui.util.MucConfiguration$Option -> com.ru.astron.ui.util.MucConfiguration$Option:
    117:117:void <init>(java.lang.String,com.ru.astron.ui.util.MucConfiguration$1) -> <init>
    117:117:void <init>(java.lang.String,java.lang.String,java.lang.String,com.ru.astron.ui.util.MucConfiguration$1) -> <init>
    121:124:void <init>(java.lang.String) -> <init>
    126:129:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
com.ru.astron.ui.util.MucDetailsContextMenuHelper -> com.ru.astron.ui.util.MucDetailsContextMenuHelper:
    52:126:void configureMucDetailsContextMenu(android.app.Activity,android.view.Menu,com.ru.astron.entities.Conversation,com.ru.astron.entities.MucOptions$User) -> configureMucDetailsContextMenu
    208:212:void lambda$removeFromRoom$0(com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Conversation,com.ru.astron.entities.MucOptions$User,com.ru.astron.services.XmppConnectionService$OnAffiliationChanged,android.content.DialogInterface,int) -> lambda$removeFromRoom$0
    129:129:boolean onContextItemSelected(android.view.MenuItem,com.ru.astron.entities.MucOptions$User,com.ru.astron.ui.XmppActivity) -> onContextItemSelected
    133:142:boolean onContextItemSelected(android.view.MenuItem,com.ru.astron.entities.MucOptions$User,com.ru.astron.ui.XmppActivity,java.lang.String) -> onContextItemSelected
    32:49:void onCreateContextMenu(android.view.ContextMenu,android.view.View) -> onCreateContextMenu
    190:215:void removeFromRoom(com.ru.astron.entities.MucOptions$User,com.ru.astron.ui.XmppActivity,com.ru.astron.services.XmppConnectionService$OnAffiliationChanged) -> removeFromRoom
    218:222:void startConversation(com.ru.astron.entities.MucOptions$User,com.ru.astron.ui.XmppActivity) -> startConversation
com.ru.astron.ui.util.MyLinkify -> com.ru.astron.ui.util.MyLinkify:
    45:92:void <clinit>() -> <clinit>
    116:122:void addLinks(android.text.Editable,boolean) -> addLinks
    98:109:boolean isAlphabetic(int) -> isAlphabetic
    46:51:java.lang.String lambda$static$0(java.util.regex.Matcher,java.lang.String) -> lambda$static$0
    74:89:boolean lambda$static$1(java.lang.CharSequence,int,int) -> lambda$static$1
    93:94:boolean lambda$static$2(java.lang.CharSequence,int,int) -> lambda$static$2
    58:69:java.lang.String removeTrailingBracket(java.lang.String) -> removeTrailingBracket
com.ru.astron.ui.util.PendingActionHelper -> com.ru.astron.ui.util.PendingActionHelper:
    7:7:void <init>() -> <init>
    16:20:void execute() -> execute
    12:13:void push(com.ru.astron.ui.util.PendingActionHelper$PendingAction) -> push
    23:24:void undo() -> undo
com.ru.astron.ui.util.PendingItem -> com.ru.astron.ui.util.PendingItem:
    32:34:void <init>() -> <init>
    51:50:boolean clear() -> clear
    47:47:java.lang.Object peek() -> peek
    41:40:java.lang.Object pop() -> pop
    37:36:void push(java.lang.Object) -> push
com.ru.astron.ui.util.PresenceSelector -> com.ru.astron.ui.util.PresenceSelector:
    87:87:void lambda$showPresenceSelectionDialog$0(java.util.concurrent.atomic.AtomicInteger,android.content.DialogInterface,int) -> lambda$showPresenceSelectionDialog$0
    91:97:void lambda$showPresenceSelectionDialog$1(com.ru.astron.entities.Contact,java.lang.String[],java.util.concurrent.atomic.AtomicInteger,com.ru.astron.entities.Conversation,com.ru.astron.ui.util.PresenceSelector$OnPresenceSelected,android.content.DialogInterface,int) -> lambda$showPresenceSelectionDialog$1
    107:111:void lambda$warnMutualPresenceSubscription$2(com.ru.astron.entities.Conversation,com.ru.astron.ui.util.PresenceSelector$OnPresenceSelected,android.content.DialogInterface,int) -> lambda$warnMutualPresenceSubscription$2
    51:99:void showPresenceSelectionDialog(android.app.Activity,com.ru.astron.entities.Conversation,com.ru.astron.ui.util.PresenceSelector$OnPresenceSelected) -> showPresenceSelectionDialog
    116:118:java.lang.String translateType(android.content.Context,java.lang.String) -> translateType
    102:113:void warnMutualPresenceSubscription(android.app.Activity,com.ru.astron.entities.Conversation,com.ru.astron.ui.util.PresenceSelector$OnPresenceSelected) -> warnMutualPresenceSubscription
com.ru.astron.ui.util.ScrollState -> com.ru.astron.ui.util.ScrollState:
    50:50:void <clinit>() -> <clinit>
    35:35:void <init>(android.os.Parcel,com.ru.astron.ui.util.ScrollState$1) -> <init>
    40:43:void <init>(android.os.Parcel) -> <init>
    45:48:void <init>(int,int) -> <init>
    64:64:int describeContents() -> describeContents
    69:71:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.ru.astron.ui.util.ScrollState$1 -> com.ru.astron.ui.util.ScrollState$1:
    50:50:void <init>() -> <init>
    50:50:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    53:53:com.ru.astron.ui.util.ScrollState createFromParcel(android.os.Parcel) -> createFromParcel
    50:50:java.lang.Object[] newArray(int) -> newArray
    58:58:com.ru.astron.ui.util.ScrollState[] newArray(int) -> newArray
com.ru.astron.ui.util.SendButtonAction -> com.ru.astron.ui.util.SendButtonAction:
    39:38:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    50:60:com.ru.astron.ui.util.SendButtonAction of(int) -> of
    67:69:int toChoice() -> toChoice
    38:38:com.ru.astron.ui.util.SendButtonAction valueOf(java.lang.String) -> valueOf
    43:45:com.ru.astron.ui.util.SendButtonAction valueOfOrDefault(java.lang.String,com.ru.astron.ui.util.SendButtonAction) -> valueOfOrDefault
    38:38:com.ru.astron.ui.util.SendButtonAction[] values() -> values
com.ru.astron.ui.util.SendButtonAction$1 -> com.ru.astron.ui.util.SendButtonAction$1:
    67:67:void <clinit>() -> <clinit>
com.ru.astron.ui.util.SendButtonTool -> com.ru.astron.ui.util.SendButtonTool:
    46:75:com.ru.astron.ui.util.SendButtonAction getAction(android.app.Activity,com.ru.astron.entities.Conversation,java.lang.String) -> getAction
    81:86:int getSendButtonImageResource(android.app.Activity,com.ru.astron.ui.util.SendButtonAction,com.ru.astron.entities.Presence$Status) -> getSendButtonImageResource
    178:184:int getThemeResource(android.app.Activity,int,int) -> getThemeResource
com.ru.astron.ui.util.SendButtonTool$1 -> com.ru.astron.ui.util.SendButtonTool$1:
    81:83:void <clinit>() -> <clinit>
com.ru.astron.ui.util.ShareUtil -> com.ru.astron.ui.util.ShareUtil:
    130:138:boolean containsXmppUri(java.lang.String) -> containsXmppUri
    106:127:void copyLinkToClipboard(com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Message) -> copyLinkToClipboard
    82:85:void copyToClipboard(com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Message) -> copyToClipboard
    90:103:void copyUrlToClipboard(com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Message) -> copyUrlToClipboard
    50:64:void share(com.ru.astron.ui.XmppActivity,com.ru.astron.entities.Message) -> share
com.ru.astron.ui.util.SoftKeyboardUtils -> com.ru.astron.ui.util.SoftKeyboardUtils:
    44:53:void hideSoftKeyboard(android.app.Activity) -> hideSoftKeyboard
    56:61:void hideSoftKeyboard(android.widget.EditText) -> hideSoftKeyboard
    64:69:void showKeyboard(android.widget.EditText) -> showKeyboard
com.ru.astron.ui.util.StyledAttributes -> com.ru.astron.ui.util.StyledAttributes:
    53:56:int getColor(android.content.Context,int) -> getColor
    39:42:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    46:49:float getFloat(android.content.Context,int) -> getFloat
com.ru.astron.ui.util.UriHelper -> com.ru.astron.ui.util.UriHelper:
    16:17:java.util.HashMap parseQueryString(java.lang.String) -> parseQueryString
com.ru.astron.ui.util.ViewUtil -> com.ru.astron.ui.util.ViewUtil:
    23:26:void view(android.content.Context,com.ru.astron.ui.util.Attachment) -> view
    29:38:void view(android.content.Context,com.ru.astron.entities.DownloadableFile) -> view
    41:48:void view(android.content.Context,java.io.File,java.lang.String) -> view
com.ru.astron.ui.widget.ClickableMovementMethod -> com.ru.astron.ui.widget.ClickableMovementMethod:
    10:10:void <init>() -> <init>
    35:38:com.ru.astron.ui.widget.ClickableMovementMethod getInstance() -> getInstance
    15:31:boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent) -> onTouchEvent
com.ru.astron.ui.widget.CopyTextView -> com.ru.astron.ui.widget.CopyTextView:
    14:15:void <init>(android.content.Context) -> <init>
    18:19:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    28:29:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    43:63:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    38:39:void setCopyHandler(com.ru.astron.ui.widget.CopyTextView$CopyHandler) -> setCopyHandler
com.ru.astron.ui.widget.DisabledActionModeCallback -> com.ru.astron.ui.widget.DisabledActionModeCallback:
    36:36:void <init>() -> <init>
    49:49:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    39:39:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    55:55:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    44:44:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
com.ru.astron.ui.widget.EditMessage -> com.ru.astron.ui.widget.EditMessage:
    27:27:void <clinit>() -> <clinit>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    49:50:void <init>(android.content.Context) -> <init>
    25:25:boolean access$000(com.ru.astron.ui.widget.EditMessage) -> access$000
    25:25:boolean access$002(com.ru.astron.ui.widget.EditMessage,boolean) -> access$002
    72:72:int getAutofillType() -> getAutofillType
    132:146:void insertAsQuote(java.lang.String) -> insertAsQuote
    154:154:boolean lambda$onCreateInputConnection$1(android.support.v13.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> lambda$onCreateInputConnection$1$EditMessage
    27:27:java.lang.CharSequence lambda$static$0(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> lambda$static$0
    150:156:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    54:67:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    77:92:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    103:122:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    161:175:void refreshIme() -> refreshIme
    95:99:void setKeyboardListener(com.ru.astron.ui.widget.EditMessage$KeyboardListener) -> setKeyboardListener
    127:129:void setRichContentListener(java.lang.String[],com.ru.astron.ui.widget.EditMessage$OnCommitContentListener) -> setRichContentListener
com.ru.astron.ui.widget.EditMessage$1 -> com.ru.astron.ui.widget.EditMessage$1:
    33:33:void <init>(com.ru.astron.ui.widget.EditMessage) -> <init>
    36:40:void run() -> run
com.ru.astron.ui.widget.EmojiWrapperEditText -> com.ru.astron.ui.widget.EmojiWrapperEditText:
    10:11:void <init>(android.content.Context) -> <init>
    14:15:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
com.ru.astron.ui.widget.ImmediateAutoCompleteTextView -> com.ru.astron.ui.widget.ImmediateAutoCompleteTextView:
    38:39:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:47:boolean enoughToFilter() -> enoughToFilter
com.ru.astron.ui.widget.ListSelectionManager -> com.ru.astron.ui.widget.ListSelectionManager:
    22:191:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    16:16:android.os.Handler access$000() -> access$000
    16:16:java.lang.Object access$102(com.ru.astron.ui.widget.ListSelectionManager,java.lang.Object) -> access$102
    16:16:android.view.ActionMode access$200(com.ru.astron.ui.widget.ListSelectionManager) -> access$200
    16:16:android.view.ActionMode access$202(com.ru.astron.ui.widget.ListSelectionManager,android.view.ActionMode) -> access$202
    16:16:java.lang.Object access$302(com.ru.astron.ui.widget.ListSelectionManager,java.lang.Object) -> access$302
    16:16:android.widget.TextView access$402(com.ru.astron.ui.widget.ListSelectionManager,android.widget.TextView) -> access$402
    107:110:void onAfterNotifyDataSetChanged() -> onAfterNotifyDataSetChanged
    89:104:void onBeforeNotifyDataSetChanged() -> onBeforeNotifyDataSetChanged
    73:75:void onCreate(android.widget.TextView,android.view.ActionMode$Callback) -> onCreate
    78:86:void onUpdate(android.widget.TextView,java.lang.Object) -> onUpdate
    198:210:void startSelection(android.widget.TextView,int,int) -> startSelection
com.ru.astron.ui.widget.ListSelectionManager$1 -> com.ru.astron.ui.widget.ListSelectionManager$1:
    22:22:void <init>() -> <init>
    26:30:boolean handleMessage(android.os.Message) -> handleMessage
com.ru.astron.ui.widget.ListSelectionManager$CustomCallback -> com.ru.astron.ui.widget.ListSelectionManager$CustomCallback:
    118:121:void <init>(com.ru.astron.ui.widget.ListSelectionManager,android.widget.TextView,android.view.ActionMode$Callback) -> <init>
    144:147:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    125:131:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    152:160:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    136:139:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
com.ru.astron.ui.widget.ListSelectionManager$StartSelectionHolder -> com.ru.astron.ui.widget.ListSelectionManager$StartSelectionHolder:
    56:61:void <init>(com.ru.astron.ui.widget.ListSelectionManager,android.widget.TextView,int,int) -> <init>
com.ru.astron.ui.widget.Marker -> com.ru.astron.ui.widget.Marker:
    25:29:void <init>(android.graphics.Bitmap,org.osmdroid.util.GeoPoint) -> <init>
    36:37:void <init>(android.graphics.Bitmap) -> <init>
    41:51:void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean) -> draw
com.ru.astron.ui.widget.MyLocation -> com.ru.astron.ui.widget.MyLocation:
    27:39:void <init>(android.content.Context,android.graphics.Bitmap,android.location.Location) -> <init>
    43:51:void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean) -> draw
com.ru.astron.ui.widget.ScannerView -> com.ru.astron.ui.widget.ScannerView:
    60:81:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:104:void addDot(com.google.zxing.ResultPoint) -> addDot
    108:156:void onDraw(android.graphics.Canvas) -> onDraw
    85:92:void setFraming(android.graphics.Rect,android.graphics.RectF,int,int,boolean) -> setFraming
    95:98:void setIsResult(boolean) -> setIsResult
com.ru.astron.ui.widget.SquareFrameLayout -> com.ru.astron.ui.widget.SquareFrameLayout:
    9:10:void <init>(android.content.Context) -> <init>
    13:14:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    17:18:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    23:24:void onMeasure(int,int) -> onMeasure
com.ru.astron.ui.widget.SwipeRefreshListFragment -> com.ru.astron.ui.widget.SwipeRefreshListFragment:
    36:39:void <init>() -> <init>
    50:78:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    88:94:void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    103:107:void setRefreshing(boolean) -> setRefreshing
com.ru.astron.ui.widget.SwipeRefreshListFragment$ListFragmentSwipeRefreshLayout -> com.ru.astron.ui.widget.SwipeRefreshListFragment$ListFragmentSwipeRefreshLayout:
    125:127:void <init>(com.ru.astron.ui.widget.SwipeRefreshListFragment,android.content.Context) -> <init>
    137:141:boolean canChildScrollUp() -> canChildScrollUp
com.ru.astron.ui.widget.TextInputEditText -> com.ru.astron.ui.widget.TextInputEditText:
    18:19:void <init>(android.content.Context) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:27:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    31:33:java.lang.CharSequence getHint() -> getHint
    44:46:java.lang.CharSequence getSuperHintHack() -> getSuperHintHack
com.ru.astron.ui.widget.UnreadCountCustomView -> com.ru.astron.ui.widget.UnreadCountCustomView:
    22:24:void <init>(android.content.Context) -> <init>
    27:30:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    33:36:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    45:53:void init() -> init
    39:42:void initXMLAttrs(android.content.Context,android.util.AttributeSet) -> initXMLAttrs
    57:66:void onDraw(android.graphics.Canvas) -> onDraw
    74:75:void setBackgroundColor(int) -> setBackgroundColor
    69:71:void setUnreadCount(int) -> setUnreadCount
com.ru.astron.utils.AccountUtils -> com.ru.astron.utils.AccountUtils:
    21:22:void <clinit>() -> <clinit>
    36:40:com.ru.astron.entities.Account getFirst(com.ru.astron.services.XmppConnectionService) -> getFirst
    26:32:com.ru.astron.entities.Account getFirstEnabled(com.ru.astron.services.XmppConnectionService) -> getFirstEnabled
    70:72:java.lang.Class getManageAccountActivityClass() -> getManageAccountActivityClass
    44:52:com.ru.astron.entities.Account getPendingAccount(com.ru.astron.services.XmppConnectionService) -> getPendingAccount
    64:66:void launchManageAccount(com.ru.astron.ui.XmppActivity) -> launchManageAccount
    56:61:void launchManageAccounts(android.app.Activity) -> launchManageAccounts
    77:81:void showHideMenuItems(android.view.Menu) -> showHideMenuItems
com.ru.astron.utils.Android360pFormatStrategy -> com.ru.astron.utils.Android360pFormatStrategy:
    25:29:void <init>() -> <init>
    69:72:android.media.MediaFormat createAudioOutputFormat(android.media.MediaFormat) -> createAudioOutputFormat
    34:49:android.media.MediaFormat createVideoOutputFormat(android.media.MediaFormat) -> createVideoOutputFormat
com.ru.astron.utils.Android720pFormatStrategy -> com.ru.astron.utils.Android720pFormatStrategy:
    25:29:void <init>() -> <init>
    69:72:android.media.MediaFormat createAudioOutputFormat(android.media.MediaFormat) -> createAudioOutputFormat
    34:49:android.media.MediaFormat createVideoOutputFormat(android.media.MediaFormat) -> createVideoOutputFormat
com.ru.astron.utils.AndroidUsingExecLowPriority -> com.ru.astron.utils.AndroidUsingExecLowPriority:
    32:32:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    42:84:java.lang.String[] getDnsServerAddresses() -> getDnsServerAddresses
    89:89:boolean isAvailable() -> isAvailable
com.ru.astron.utils.AndroidUsingLinkProperties -> com.ru.astron.utils.AndroidUsingLinkProperties:
    25:27:void <init>(android.content.Context) -> <init>
    67:67:android.net.Network getActiveNetwork(android.net.ConnectivityManager) -> getActiveNetwork
    37:62:java.lang.String[] getDnsServerAddresses() -> getDnsServerAddresses
    71:79:java.util.List getIPv4First(java.util.List) -> getIPv4First
    84:89:boolean hasDefaultRoute(android.net.LinkProperties) -> hasDefaultRoute
    31:31:boolean isAvailable() -> isAvailable
com.ru.astron.utils.BackupFileHeader -> com.ru.astron.utils.BackupFileHeader:
    31:37:void <init>(java.lang.String,rocks.xmpp.addr.Jid,long,byte[],byte[]) -> <init>
    78:78:java.lang.String getApp() -> getApp
    70:70:byte[] getIv() -> getIv
    74:74:rocks.xmpp.addr.Jid getJid() -> getJid
    66:66:byte[] getSalt() -> getSalt
    82:82:long getTimestamp() -> getTimestamp
    49:51:com.ru.astron.utils.BackupFileHeader read(java.io.DataInputStream) -> read
    22:22:java.lang.String toString() -> toString
    40:46:void write(java.io.DataOutputStream) -> write
com.ru.astron.utils.CharSequenceUtils -> com.ru.astron.utils.CharSequenceUtils:
    52:59:int getEndIndex(java.lang.CharSequence) -> getEndIndex
    40:48:int getStartIndex(java.lang.CharSequence) -> getStartIndex
    73:84:java.util.List split(android.text.Spannable,char) -> split
    63:68:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
com.ru.astron.utils.Checksum -> com.ru.astron.utils.Checksum:
    42:47:java.lang.String md5(java.io.InputStream) -> md5
com.ru.astron.utils.Compatibility -> com.ru.astron.utils.Compatibility:
    29:34:void <clinit>() -> <clinit>
    54:54:boolean getBooleanPreference(android.content.Context,java.lang.String,int) -> getBooleanPreference
    58:58:android.content.SharedPreferences getPreferences(android.content.Context) -> getPreferences
    38:38:boolean hasStoragePermission(android.content.Context) -> hasStoragePermission
    90:90:boolean keepForegroundService(android.content.Context) -> keepForegroundService
    94:119:void removeUnusedPreferences(com.ru.astron.ui.SettingsFragment) -> removeUnusedPreferences
    86:86:boolean runsAndTargetsTwentyFour(android.content.Context) -> runsAndTargetsTwentyFour
    82:82:boolean runsAndTargetsTwentySix(android.content.Context) -> runsAndTargetsTwentySix
    46:46:boolean runsTwentyFour() -> runsTwentyFour
    42:42:boolean runsTwentySix() -> runsTwentySix
    123:132:void startService(android.content.Context,android.content.Intent) -> startService
    73:77:boolean targetsTwentyFour(android.content.Context) -> targetsTwentyFour
    63:67:boolean targetsTwentySix(android.content.Context) -> targetsTwentySix
    50:50:boolean twentyEight() -> twentyEight
com.ru.astron.utils.ConversationsFileObserver -> com.ru.astron.utils.ConversationsFileObserver:
    27:29:void <init>(java.lang.String) -> <init>
    71:75:int depth(java.io.File) -> depth
    79:84:boolean observing(java.lang.String) -> observing
    102:104:void restartWatching() -> restartWatching
    32:34:void startWatching() -> startWatching
    37:36:void startWatchingInternal() -> startWatchingInternal
    88:90:void stopWatching() -> stopWatching
    93:92:void stopWatchingInternal() -> stopWatchingInternal
com.ru.astron.utils.ConversationsFileObserver$SingleFileObserver -> com.ru.astron.utils.ConversationsFileObserver$SingleFileObserver:
    109:112:void <init>(com.ru.astron.utils.ConversationsFileObserver,java.lang.String,int) -> <init>
    106:106:java.lang.String access$000(com.ru.astron.utils.ConversationsFileObserver$SingleFileObserver) -> access$000
    116:121:void onEvent(int,java.lang.String) -> onEvent
com.ru.astron.utils.CryptoHelper -> com.ru.astron.utils.CryptoHelper:
    38:44:void <clinit>() -> <clinit>
    47:53:java.lang.String bytesToHex(byte[]) -> bytesToHex
    90:93:byte[] concatenateByteArrays(byte[],byte[]) -> concatenateByteArrays
    57:61:java.lang.String createPassword(java.security.SecureRandom) -> createPassword
    262:270:int encryptionTypeToText(int) -> encryptionTypeToText
    174:201:android.util.Pair extractJidAndName(java.security.cert.X509Certificate) -> extractJidAndName
    160:171:void filterWeakCipherSuites(java.util.Collection) -> filterWeakCipherSuites
    249:249:java.lang.String getAccountFingerprint(com.ru.astron.entities.Account,java.lang.String) -> getAccountFingerprint
    254:257:java.lang.String getFingerprint(java.lang.String) -> getFingerprint
    243:245:java.lang.String getFingerprintCert(byte[]) -> getFingerprintCert
    150:156:java.lang.String[] getOrderedCipherSuites(java.lang.String[]) -> getOrderedCipherSuites
    76:82:byte[] hexToBytes(java.lang.String) -> hexToBytes
    86:86:java.lang.String hexToString(java.lang.String) -> hexToString
    299:303:boolean isPgpEncryptedUrl(java.lang.String) -> isPgpEncryptedUrl
    129:138:java.lang.String prettifyFingerprint(java.lang.String) -> prettifyFingerprint
    142:146:java.lang.String prettifyFingerprintCert(java.lang.String) -> prettifyFingerprintCert
    65:72:java.lang.String pronounceable(java.security.SecureRandom) -> pronounceable
    123:125:java.lang.String random(int,java.security.SecureRandom) -> random
    100:115:java.lang.String saslEscape(java.lang.String) -> saslEscape
    119:119:java.lang.String saslPrep(java.lang.String) -> saslPrep
    277:283:java.net.URL toAesGcmUrl(java.net.URL) -> toAesGcmUrl
    288:294:java.net.URL toHttpsUrl(java.net.URL) -> toHttpsUrl
com.ru.astron.utils.EmojiWrapper -> com.ru.astron.utils.EmojiWrapper:
    38:44:java.lang.CharSequence transform(java.lang.CharSequence) -> transform
com.ru.astron.utils.Emoticons -> com.ru.astron.utils.Emoticons:
    42:85:void <clinit>() -> <clinit>
    40:40:com.ru.astron.utils.Emoticons$UnicodeBlocks access$100() -> access$100
    40:40:com.ru.astron.utils.Emoticons$UnicodeRange access$200() -> access$200
    40:40:com.ru.astron.utils.Emoticons$UnicodeBlocks access$300() -> access$300
    40:40:com.ru.astron.utils.Emoticons$UnicodeRange access$400() -> access$400
    40:40:com.ru.astron.utils.Emoticons$UnicodeRange access$500() -> access$500
    40:40:com.ru.astron.utils.Emoticons$UnicodeBlocks access$600() -> access$600
    119:136:java.util.regex.Pattern generatePattern(java.lang.CharSequence) -> generatePattern
    110:115:java.util.regex.Pattern getEmojiPattern(java.lang.CharSequence) -> getEmojiPattern
    140:141:boolean isEmoji(java.lang.String) -> isEmoji
    145:151:boolean isOnlyEmoji(java.lang.String) -> isOnlyEmoji
    88:106:java.util.List parse(java.lang.String) -> parse
com.ru.astron.utils.Emoticons$Builder -> com.ru.astron.utils.Emoticons$Builder:
    198:199:void <init>() -> <init>
    198:198:void <init>(com.ru.astron.utils.Emoticons$1) -> <init>
    247:252:com.ru.astron.utils.Emoticons$Symbol build() -> build
    243:243:boolean isMerger(int) -> isMerger
    203:238:boolean offer(int) -> offer
com.ru.astron.utils.Emoticons$Emoji -> com.ru.astron.utils.Emoticons$Emoji:
    177:178:void <init>(java.util.List) -> <init>
    182:182:boolean isEmoji() -> isEmoji
    174:174:java.lang.String toString() -> toString
com.ru.astron.utils.Emoticons$Other -> com.ru.astron.utils.Emoticons$Other:
    189:190:void <init>(java.util.List) -> <init>
    194:194:boolean isEmoji() -> isEmoji
    186:186:java.lang.String toString() -> toString
com.ru.astron.utils.Emoticons$Symbol -> com.ru.astron.utils.Emoticons$Symbol:
    158:164:void <init>(java.util.List) -> <init>
    170:170:java.lang.String toString() -> toString
com.ru.astron.utils.Emoticons$UnicodeBlocks -> com.ru.astron.utils.Emoticons$UnicodeBlocks:
    259:261:void <init>(com.ru.astron.utils.Emoticons$UnicodeSet[]) -> <init>
    265:270:boolean contains(int) -> contains
com.ru.astron.utils.Emoticons$UnicodeList -> com.ru.astron.utils.Emoticons$UnicodeList:
    282:284:void <init>(java.lang.Integer[]) -> <init>
    288:288:boolean contains(int) -> contains
com.ru.astron.utils.Emoticons$UnicodeRange -> com.ru.astron.utils.Emoticons$UnicodeRange:
    298:301:void <init>(int,int) -> <init>
    304:304:boolean contains(int) -> contains
com.ru.astron.utils.ExceptionHandler -> com.ru.astron.utils.ExceptionHandler:
    15:18:void <init>(android.content.Context) -> <init>
    22:29:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.ru.astron.utils.ExceptionHelper -> com.ru.astron.utils.ExceptionHelper:
    32:32:void <clinit>() -> <clinit>
    43:96:boolean checkForCrash(com.ru.astron.ui.XmppActivity) -> checkForCrash
    35:39:void init(android.content.Context) -> init
    87:91:void lambda$checkForCrash$0(com.ru.astron.entities.Account,com.ru.astron.services.XmppConnectionService,java.lang.StringBuilder,android.content.DialogInterface,int) -> lambda$checkForCrash$0
    92:92:void lambda$checkForCrash$1(android.content.SharedPreferences,android.content.DialogInterface,int) -> lambda$checkForCrash$1
    102:108:void writeToStacktraceFile(android.content.Context,java.lang.String) -> writeToStacktraceFile
com.ru.astron.utils.ExifHelper -> com.ru.astron.utils.ExifHelper:
    28:135:int getOrientation(java.io.InputStream) -> getOrientation
    140:151:int pack(byte[],int,int,boolean) -> pack
    156:158:boolean read(java.io.InputStream,byte[],int) -> read
com.ru.astron.utils.FileUtils -> com.ru.astron.utils.FileUtils:
    20:20:void <clinit>() -> <clinit>
    125:138:java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[]) -> getDataColumn
    33:109:java.lang.String getPath(android.content.Context,android.net.Uri) -> getPath
    161:161:boolean isDownloadsDocument(android.net.Uri) -> isDownloadsDocument
    153:153:boolean isExternalStorageDocument(android.net.Uri) -> isExternalStorageDocument
    169:169:boolean isMediaDocument(android.net.Uri) -> isMediaDocument
com.ru.astron.utils.FileWriterException -> com.ru.astron.utils.FileWriterException:
    3:3:void <init>() -> <init>
com.ru.astron.utils.FtsUtils -> com.ru.astron.utils.FtsUtils:
    40:40:void <clinit>() -> <clinit>
    103:108:java.lang.String clean(java.lang.String) -> clean
    92:99:int getEndIndex(java.lang.String) -> getEndIndex
    80:88:int getStartIndex(java.lang.String) -> getStartIndex
    76:76:boolean isKeyword(java.lang.String) -> isKeyword
    43:55:java.util.List parse(java.lang.String) -> parse
    59:72:java.lang.String toMatchString(java.util.List) -> toMatchString
    113:120:java.lang.String toUserEnteredString(java.util.List) -> toUserEnteredString
com.ru.astron.utils.GeoHelper -> com.ru.astron.utils.GeoHelper:
    29:29:void <clinit>() -> <clinit>
    72:77:java.util.ArrayList createGeoIntentsFromMessage(android.content.Context,com.ru.astron.entities.Message) -> createGeoIntentsFromMessage
    122:124:android.content.Intent geoIntent(org.osmdroid.util.GeoPoint,java.lang.String) -> geoIntent
    42:45:android.content.Intent getFetchIntent(android.content.Context) -> getFetchIntent
    134:141:java.lang.String getLabel(android.content.Context,com.ru.astron.entities.Message) -> getLabel
    32:32:boolean isLocationPluginInstalled(android.content.Context) -> isLocationPluginInstalled
    36:38:boolean isLocationPluginInstalledAndDesired(android.content.Context) -> isLocationPluginInstalledAndDesired
    128:130:boolean openInOsmAnd(android.content.Context,com.ru.astron.entities.Message) -> openInOsmAnd
    50:52:org.osmdroid.util.GeoPoint parseGeoPoint(java.lang.String) -> parseGeoPoint
    116:119:void view(android.content.Context,com.ru.astron.entities.Message) -> view
com.ru.astron.utils.IP -> com.ru.astron.utils.IP:
    7:11:void <clinit>() -> <clinit>
    14:14:boolean matches(java.lang.String) -> matches
com.ru.astron.utils.ImStyleParser -> com.ru.astron.utils.ImStyleParser:
    38:40:void <clinit>() -> <clinit>
    84:84:boolean followedByWhitespace(java.lang.CharSequence,int,int) -> followedByWhitespace
    76:76:boolean isCharRepeatedTwoTimes(java.lang.CharSequence,char,int,int) -> isCharRepeatedTwoTimes
    49:72:java.util.List parse(java.lang.CharSequence,int,int) -> parse
    80:80:boolean precededByWhiteSpace(java.lang.CharSequence,int,int) -> precededByWhiteSpace
    88:104:int seekEnd(java.lang.CharSequence,char,int,int) -> seekEnd
    122:128:int seekEndBlock(java.lang.CharSequence,char,int,int) -> seekEndBlock
    108:118:int seekHigherOrderEndWithoutNewBeginning(java.lang.CharSequence,char,int,int) -> seekHigherOrderEndWithoutNewBeginning
com.ru.astron.utils.ImStyleParser$Style -> com.ru.astron.utils.ImStyleParser$Style:
    138:139:void <init>(char,int,int) -> <init>
    141:145:void <init>(java.lang.String,int,int) -> <init>
    156:156:int getEnd() -> getEnd
    148:148:java.lang.String getKeyword() -> getKeyword
    152:152:int getStart() -> getStart
com.ru.astron.utils.IrregularUnicodeDetector -> com.ru.astron.utils.IrregularUnicodeDetector:
    59:65:void <clinit>() -> <clinit>
    56:56:java.util.Set access$300(java.lang.String) -> access$300
    56:56:java.util.regex.Pattern access$400(java.util.Set) -> access$400
    107:113:void colorize(android.text.SpannableString,java.util.regex.Pattern,int) -> colorize
    209:216:java.util.regex.Pattern create(java.util.Set) -> create
    165:165:java.util.Set eliminateFirstAndGetCodePoints(java.util.Map) -> eliminateFirstAndGetCodePoints
    169:182:java.util.Set eliminateFirstAndGetCodePoints(java.util.Map,java.lang.Object) -> eliminateFirstAndGetCodePoints
    160:160:java.util.Set eliminateFirstAndGetCodePointsCompat(java.util.Map) -> eliminateFirstAndGetCodePointsCompat
    196:205:com.ru.astron.utils.IrregularUnicodeDetector$PatternTuple find(rocks.xmpp.addr.Jid) -> find
    187:192:java.util.Set findIrregularCodePoints(java.lang.String) -> findIrregularCodePoints
    139:156:java.util.Map map(java.lang.String) -> map
    116:134:java.util.Map mapCompat(java.lang.String) -> mapCompat
    68:71:java.lang.Character$UnicodeBlock normalize(java.lang.Character$UnicodeBlock) -> normalize
    76:76:android.text.Spannable style(android.content.Context,rocks.xmpp.addr.Jid) -> style
    80:103:android.text.Spannable style(rocks.xmpp.addr.Jid,int) -> style
com.ru.astron.utils.IrregularUnicodeDetector$PatternTuple -> com.ru.astron.utils.IrregularUnicodeDetector$PatternTuple:
    223:226:void <init>(java.util.regex.Pattern,java.util.List) -> <init>
    219:219:java.util.regex.Pattern access$000(com.ru.astron.utils.IrregularUnicodeDetector$PatternTuple) -> access$000
    219:219:java.util.List access$100(com.ru.astron.utils.IrregularUnicodeDetector$PatternTuple) -> access$100
    219:219:com.ru.astron.utils.IrregularUnicodeDetector$PatternTuple access$200(rocks.xmpp.addr.Jid) -> access$200
    230:242:com.ru.astron.utils.IrregularUnicodeDetector$PatternTuple of(rocks.xmpp.addr.Jid) -> of
com.ru.astron.utils.JidHelper -> com.ru.astron.utils.JidHelper:
    42:42:void <clinit>() -> <clinit>
    45:50:java.lang.String localPartOrFallback(rocks.xmpp.addr.Jid) -> localPartOrFallback
    56:58:rocks.xmpp.addr.Jid parseOrFallbackToInvalid(java.lang.String) -> parseOrFallbackToInvalid
com.ru.astron.utils.LocationProvider -> com.ru.astron.utils.LocationProvider:
    19:19:void <clinit>() -> <clinit>
    41:41:org.osmdroid.util.GeoPoint getGeoPoint(android.content.Context) -> getGeoPoint
    47:46:org.osmdroid.util.GeoPoint getGeoPoint(android.content.Context,java.lang.String) -> getGeoPoint
    23:37:java.lang.String getUserCountry(android.content.Context) -> getUserCountry
com.ru.astron.utils.MessageUtils -> com.ru.astron.utils.MessageUtils:
    42:42:void <clinit>() -> <clinit>
    92:92:java.lang.String filterLtrRtl(java.lang.String) -> filterLtrRtl
    47:63:java.lang.String prepareQuote(com.ru.astron.entities.Message) -> prepareQuote
    68:87:boolean treatAsDownloadable(java.lang.String,boolean) -> treatAsDownloadable
com.ru.astron.utils.MimeUtils -> com.ru.astron.utils.MimeUtils:
    38:390:void <clinit>() -> <clinit>
    397:403:void add(java.lang.String,java.lang.String) -> add
    433:453:void applyOverrides() -> applyOverrides
    543:544:java.lang.String extractRelevantExtension(java.net.URL) -> extractRelevantExtension
    548:548:java.lang.String extractRelevantExtension(java.lang.String) -> extractRelevantExtension
    552:553:java.lang.String extractRelevantExtension(java.lang.String,boolean) -> extractRelevantExtension
    406:424:java.io.InputStream getContentTypesPropertiesStream() -> getContentTypesPropertiesStream
    497:498:java.lang.String guessExtensionFromMimeType(java.lang.String) -> guessExtensionFromMimeType
    473:474:java.lang.String guessMimeTypeFromExtension(java.lang.String) -> guessMimeTypeFromExtension
    520:539:java.lang.String guessMimeTypeFromUri(android.content.Context,android.net.Uri) -> guessMimeTypeFromUri
    504:510:java.lang.String guessMimeTypeFromUriAndMime(android.content.Context,android.net.Uri,java.lang.String) -> guessMimeTypeFromUriAndMime
com.ru.astron.utils.NickValidityChecker -> com.ru.astron.utils.NickValidityChecker:
    13:19:boolean check(com.ru.astron.entities.Conversation,java.lang.String) -> check
    24:30:boolean check(com.ru.astron.entities.Conversation,java.util.List) -> check
com.ru.astron.utils.Patterns -> com.ru.astron.utils.Patterns:
    30:429:void <clinit>() -> <clinit>
com.ru.astron.utils.PermissionUtils -> com.ru.astron.utils.PermissionUtils:
    9:14:boolean allGranted(int[]) -> allGranted
    27:32:java.lang.String getFirstDenied(int[],java.lang.String[]) -> getFirstDenied
    18:23:boolean writeGranted(int[],java.lang.String[]) -> writeGranted
com.ru.astron.utils.PhoneHelper -> com.ru.astron.utils.PhoneHelper:
    17:17:java.lang.String getAndroidId(android.content.Context) -> getAndroidId
    21:29:android.net.Uri getProfilePictureUri(android.content.Context) -> getProfilePictureUri
    40:48:java.lang.String getVersionName(android.content.Context) -> getVersionName
com.ru.astron.utils.QuickLoader -> com.ru.astron.utils.QuickLoader:
    39:40:void <clinit>() -> <clinit>
    49:58:com.ru.astron.entities.Conversation get(java.util.List) -> get
    43:45:void set(java.lang.String) -> set
com.ru.astron.utils.ReplacingSerialSingleThreadExecutor -> com.ru.astron.utils.ReplacingSerialSingleThreadExecutor:
    6:7:void <init>(java.lang.String) -> <init>
    19:18:void cancelRunningTasks() -> cancelRunningTasks
    11:10:void execute(java.lang.Runnable) -> execute
com.ru.astron.utils.ReplacingTaskManager -> com.ru.astron.utils.ReplacingTaskManager:
    36:38:void <init>() -> <init>
    53:55:void clear(com.ru.astron.entities.Account) -> clear
    42:49:void execute(com.ru.astron.entities.Account,java.lang.Runnable) -> execute
com.ru.astron.utils.Resolver -> com.ru.astron.utils.Resolver:
    45:45:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    61:73:void disableHardcodedDnsServers(de.measite.minidns.iterative.ReliableDNSClient) -> disableHardcodedDnsServers
    76:81:java.util.List fromHardCoded(java.lang.String,int) -> fromHardCoded
    149:158:java.util.List fromIpAddress(java.lang.String) -> fromIpAddress
    49:57:void init(com.ru.astron.services.XmppConnectionService) -> init
    95:102:void lambda$resolve$0(java.lang.String,java.util.List) -> lambda$resolve$0
    105:112:void lambda$resolve$1(java.lang.String,java.util.List) -> lambda$resolve$1
    114:117:void lambda$resolve$2(java.lang.String,java.util.List) -> lambda$resolve$2
    172:180:void lambda$resolveSrv$3(de.measite.minidns.record.SRV,de.measite.minidns.hla.ResolverResult,boolean,java.util.List) -> lambda$resolveSrv$3
    184:187:void lambda$resolveSrv$4(de.measite.minidns.record.SRV,de.measite.minidns.hla.ResolverResult,boolean,java.util.List) -> lambda$resolveSrv$4
    86:144:java.util.List resolve(java.lang.String) -> resolve
    204:216:java.util.List resolveIp(de.measite.minidns.record.SRV,java.lang.Class,boolean,boolean) -> resolveIp
    220:237:java.util.List resolveNoSrvRecords(de.measite.minidns.DNSName,boolean) -> resolveNoSrvRecords
    163:200:java.util.List resolveSrv(java.lang.String,boolean) -> resolveSrv
    241:241:de.measite.minidns.hla.ResolverResult resolveWithFallback(de.measite.minidns.DNSName,java.lang.Class) -> resolveWithFallback
    245:258:de.measite.minidns.hla.ResolverResult resolveWithFallback(de.measite.minidns.DNSName,java.lang.Class,boolean) -> resolveWithFallback
    262:262:boolean validateHostname() -> validateHostname
com.ru.astron.utils.Resolver$Result -> com.ru.astron.utils.Resolver$Result:
    265:277:void <init>() -> <init>
    265:265:de.measite.minidns.DNSName access$002(com.ru.astron.utils.Resolver$Result,de.measite.minidns.DNSName) -> access$002
    265:265:int access$102(com.ru.astron.utils.Resolver$Result,int) -> access$102
    265:265:boolean access$202(com.ru.astron.utils.Resolver$Result,boolean) -> access$202
    265:265:boolean access$302(com.ru.astron.utils.Resolver$Result,boolean) -> access$302
    265:265:java.net.InetAddress access$402(com.ru.astron.utils.Resolver$Result,java.net.InetAddress) -> access$402
    265:265:int compareTo(java.lang.Object) -> compareTo
    377:394:int compareTo(com.ru.astron.utils.Resolver$Result) -> compareTo
    290:294:com.ru.astron.utils.Resolver$Result createDefault(de.measite.minidns.DNSName,java.net.InetAddress) -> createDefault
    298:298:com.ru.astron.utils.Resolver$Result createDefault(de.measite.minidns.DNSName) -> createDefault
    319:320:boolean equals(java.lang.Object) -> equals
    302:314:com.ru.astron.utils.Resolver$Result fromCursor(android.database.Cursor) -> fromCursor
    281:286:com.ru.astron.utils.Resolver$Result fromRecord(de.measite.minidns.record.SRV,boolean) -> fromRecord
    352:352:de.measite.minidns.DNSName getHostname() -> getHostname
    344:344:java.net.InetAddress getIp() -> getIp
    348:348:int getPort() -> getPort
    334:340:int hashCode() -> hashCode
    360:360:boolean isAuthenticated() -> isAuthenticated
    356:356:boolean isDirectTls() -> isDirectTls
    399:406:android.content.ContentValues toContentValues() -> toContentValues
    365:365:java.lang.String toString() -> toString
com.ru.astron.utils.SSLSocketHelper -> com.ru.astron.utils.SSLSocketHelper:
    93:95:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    100:102:void log(com.ru.astron.entities.Account,javax.net.ssl.SSLSocket) -> log
    84:89:void setApplicationProtocol(javax.net.ssl.SSLSocket,java.lang.String) -> setApplicationProtocol
    70:81:void setApplicationProtocolReflection(javax.net.ssl.SSLSocket,java.lang.String) -> setApplicationProtocolReflection
    44:51:void setHostname(javax.net.ssl.SSLSocket,java.lang.String) -> setHostname
    63:66:void setHostnameNougat(javax.net.ssl.SSLSocket,java.lang.String) -> setHostnameNougat
    55:59:void setHostnameReflection(javax.net.ssl.SSLSocket,java.lang.String) -> setHostnameReflection
    29:41:void setSecurity(javax.net.ssl.SSLSocket) -> setSecurity
com.ru.astron.utils.SerialSingleThreadExecutor -> com.ru.astron.utils.SerialSingleThreadExecutor:
    19:21:void <init>(java.lang.String) -> <init>
    11:11:void access$100(com.ru.astron.utils.SerialSingleThreadExecutor) -> access$100
    24:23:void execute(java.lang.Runnable) -> execute
    31:30:void scheduleNext() -> scheduleNext
com.ru.astron.utils.SerialSingleThreadExecutor$Runner -> com.ru.astron.utils.SerialSingleThreadExecutor$Runner:
    40:40:void <init>(com.ru.astron.utils.SerialSingleThreadExecutor,java.lang.Runnable,com.ru.astron.utils.SerialSingleThreadExecutor$1) -> <init>
    44:46:void <init>(com.ru.astron.utils.SerialSingleThreadExecutor,java.lang.Runnable) -> <init>
    50:53:void cancel() -> cancel
    58:60:void run() -> run
com.ru.astron.utils.SignupUtils -> com.ru.astron.utils.SignupUtils:
    24:45:android.content.Intent getRedirectionIntent(com.ru.astron.ui.ConversationsActivity) -> getRedirectionIntent
    18:20:android.content.Intent getSignUpIntent(android.app.Activity) -> getSignUpIntent
com.ru.astron.utils.SocksSocketFactory -> com.ru.astron.utils.SocksSocketFactory:
    15:15:void <clinit>() -> <clinit>
    38:42:java.net.Socket createSocket(java.net.InetSocketAddress,java.lang.String,int) -> createSocket
    49:49:java.net.Socket createSocketOverTor(java.lang.String,int) -> createSocketOverTor
    18:33:void createSocksConnection(java.net.Socket,java.lang.String,int) -> createSocksConnection
com.ru.astron.utils.SocksSocketFactory$SocksConnectionException -> com.ru.astron.utils.SocksSocketFactory$SocksConnectionException:
    52:52:void <init>() -> <init>
com.ru.astron.utils.SocksSocketFactory$SocksProxyNotFoundException -> com.ru.astron.utils.SocksSocketFactory$SocksProxyNotFoundException:
    56:56:void <init>() -> <init>
com.ru.astron.utils.StringUtils -> com.ru.astron.utils.StringUtils:
    35:35:java.lang.String blankOnNull(java.lang.String) -> blankOnNull
    43:43:boolean changed(java.lang.String,java.lang.String) -> changed
    39:39:boolean equals(java.lang.String,java.lang.String) -> equals
    47:47:java.lang.String nullOnEmpty(java.lang.String) -> nullOnEmpty
com.ru.astron.utils.StylingHelper -> com.ru.astron.utils.StylingHelper:
    61:61:void <clinit>() -> <clinit>
    69:75:void clear(android.text.Editable) -> clear
    164:173:android.text.ParcelableSpan clone(android.text.ParcelableSpan) -> clone
    183:185:android.text.ParcelableSpan createSpanForStyle(com.ru.astron.utils.ImStyleParser$Style) -> createSpanForStyle
    105:123:java.util.List filterHighlightedWords(java.util.List) -> filterHighlightedWords
    78:84:void format(android.text.Editable,int,int,int) -> format
    87:94:void format(android.text.Editable,int) -> format
    97:102:void highlight(android.content.Context,android.text.Editable,java.util.List,boolean) -> highlight
    127:137:void highlight(android.content.Context,android.text.Editable,java.lang.String,boolean) -> highlight
    212:213:int indexOfIgnoreCase(java.lang.String,java.lang.String,int) -> indexOfIgnoreCase
    178:179:boolean isDarkText(android.widget.TextView) -> isDarkText
    199:203:void makeKeywordOpaque(android.text.Editable,int,int,int) -> makeKeywordOpaque
    140:159:java.lang.CharSequence subSequence(java.lang.CharSequence,int,int) -> subSequence
    208:208:int transformColor(int) -> transformColor
com.ru.astron.utils.StylingHelper$MessageEditorStyler -> com.ru.astron.utils.StylingHelper$MessageEditorStyler:
    234:236:void <init>(android.widget.EditText) -> <init>
    250:252:void afterTextChanged(android.text.Editable) -> afterTextChanged
    241:241:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    246:246:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.ru.astron.utils.TLSSocketFactory -> com.ru.astron.utils.TLSSocketFactory:
    18:22:void <init>(javax.net.ssl.X509TrustManager[],java.security.SecureRandom) -> <init>
    36:36:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    41:41:java.net.Socket createSocket(java.lang.String,int) -> createSocket
    46:46:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    51:51:java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    56:56:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    60:63:java.net.Socket enableTLSOnSocket(java.net.Socket) -> enableTLSOnSocket
    26:26:java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    31:31:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
com.ru.astron.utils.ThemeHelper -> com.ru.astron.utils.ThemeHelper:
    49:55:int find(android.content.Context) -> find
    64:70:int findDialog(android.content.Context) -> findDialog
    90:103:void fix(android.support.design.widget.Snackbar) -> fix
    79:83:boolean isDark(int) -> isDark
com.ru.astron.utils.TimeframeUtils -> com.ru.astron.utils.TimeframeUtils:
    42:50:void <clinit>() -> <clinit>
    53:61:java.lang.String resolve(android.content.Context,long) -> resolve
com.ru.astron.utils.TimeframeUtils$Timeframe -> com.ru.astron.utils.TimeframeUtils$Timeframe:
    65:65:void <init>(long,int,com.ru.astron.utils.TimeframeUtils$1) -> <init>
    69:72:void <init>(long,int) -> <init>
com.ru.astron.utils.TorServiceUtils -> com.ru.astron.utils.TorServiceUtils:
    16:16:void <clinit>() -> <clinit>
    30:36:void downloadOrbot(android.app.Activity,int) -> downloadOrbot
    21:24:boolean isOrbotInstalled(android.content.Context) -> isOrbotInstalled
    39:42:void startOrbot(android.app.Activity,int) -> startOrbot
com.ru.astron.utils.UIHelper -> com.ru.astron.utils.UIHelper:
    33:125:void <clinit>() -> <clinit>
    396:404:boolean closingBeforeWhitespace(java.lang.CharSequence,int) -> closingBeforeWhitespace
    443:443:java.lang.String concatNames(java.util.List) -> concatNames
    447:458:java.lang.String concatNames(java.util.List,int) -> concatNames
    571:576:java.lang.String filesizeToString(long) -> filesizeToString
    223:223:int getColorForName(java.lang.String) -> getColorForName
    228:228:int getColorForName(java.lang.String,boolean) -> getColorForName
    426:438:java.lang.String getDisplayName(com.ru.astron.entities.MucOptions$User) -> getDisplayName
    535:540:java.lang.String getDisplayedMucCounterpart(rocks.xmpp.addr.Jid) -> getDisplayedMucCounterpart
    462:483:java.lang.String getFileDescriptionString(android.content.Context,com.ru.astron.entities.Message) -> getFileDescriptionString
    490:507:java.lang.String getMessageDisplayName(com.ru.astron.entities.Message) -> getMessageDisplayName
    513:518:java.lang.String getMessageHint(android.content.Context,com.ru.astron.entities.Conversation) -> getMessageHint
    250:250:android.util.Pair getMessagePreview(android.content.Context,com.ru.astron.entities.Message) -> getMessagePreview
    254:334:android.util.Pair getMessagePreview(android.content.Context,com.ru.astron.entities.Message,int) -> getMessagePreview
    556:558:com.ru.astron.entities.ListItem$Tag getTagForStatus(android.content.Context,com.ru.astron.entities.Presence$Status) -> getTagForStatus
    340:352:boolean isLastLineQuote(java.lang.String) -> isLastLineQuote
    385:389:boolean isPositionFollowedByEmoticon(java.lang.CharSequence,int) -> isPositionFollowedByEmoticon
    381:381:boolean isPositionFollowedByEquals(java.lang.CharSequence,int) -> isPositionFollowedByEquals
    366:377:boolean isPositionFollowedByNumber(java.lang.CharSequence,int) -> isPositionFollowedByNumber
    408:409:boolean isPositionFollowedByQuote(java.lang.CharSequence,int) -> isPositionFollowedByQuote
    360:360:boolean isPositionFollowedByQuoteableCharacter(java.lang.CharSequence,int) -> isPositionFollowedByQuoteableCharacter
    200:217:java.lang.String lastseen(android.content.Context,boolean,long) -> lastseen
    133:133:java.lang.String readableTimeDifference(android.content.Context,long) -> readableTimeDifference
    142:161:java.lang.String readableTimeDifference(android.content.Context,long,boolean) -> readableTimeDifference
    137:137:java.lang.String readableTimeDifferenceFull(android.content.Context,long) -> readableTimeDifferenceFull
    545:548:boolean receivedLocationQuestion(com.ru.astron.entities.Message) -> receivedLocationQuestion
    186:186:boolean sameDay(long,long) -> sameDay
    190:194:boolean sameDay(java.util.Date,java.util.Date) -> sameDay
    356:356:java.lang.CharSequence shorten(java.lang.CharSequence) -> shorten
    168:168:boolean today(java.util.Date) -> today
    172:172:boolean today(long) -> today
    176:180:boolean yesterday(long) -> yesterday
com.ru.astron.utils.UIHelper$1 -> com.ru.astron.utils.UIHelper$1:
    556:556:void <clinit>() -> <clinit>
com.ru.astron.utils.WakeLockHelper -> com.ru.astron.utils.WakeLockHelper:
    41:45:void acquire(android.os.PowerManager$WakeLock) -> acquire
    48:58:void release(android.os.PowerManager$WakeLock) -> release
com.ru.astron.utils.WeakReferenceSet -> com.ru.astron.utils.WeakReferenceSet:
    7:7:void <init>() -> <init>
    19:25:void addWeakReferenceTo(java.lang.Object) -> addWeakReferenceTo
    10:15:void removeWeakReferenceTo(java.lang.Object) -> removeWeakReferenceTo
com.ru.astron.utils.XEP0392Helper -> com.ru.astron.utils.XEP0392Helper:
    13:18:double angle(java.lang.String) -> angle
    23:28:int rgbFromNick(java.lang.String) -> rgbFromNick
com.ru.astron.utils.XmlHelper -> com.ru.astron.utils.XmlHelper:
    7:13:java.lang.String encodeEntities(java.lang.String) -> encodeEntities
    17:28:java.lang.String printElementNames(com.ru.astron.xml.Element) -> printElementNames
com.ru.astron.utils.XmppUri -> com.ru.astron.utils.XmppUri:
    30:40:void <init>(java.lang.String) -> <init>
    42:44:void <init>(android.net.Uri) -> <init>
    46:49:void <init>(android.net.Uri,boolean) -> <init>
    202:202:java.lang.String getBody() -> getBody
    222:236:java.lang.String getFingerprintUri(java.lang.String,java.util.List,char) -> getFingerprintUri
    210:210:java.util.List getFingerprints() -> getFingerprints
    183:185:rocks.xmpp.addr.Jid getJid() -> getJid
    206:206:java.lang.String getName() -> getName
    167:173:boolean hasAction(java.lang.String,java.lang.String) -> hasAction
    214:214:boolean hasFingerprints() -> hasFingerprints
    177:177:boolean isAction(java.lang.String) -> isAction
    190:197:boolean isJidValid() -> isJidValid
    52:52:boolean isSafeSource() -> isSafeSource
    257:257:java.lang.String lameUrlDecode(java.lang.String) -> lameUrlDecode
    261:261:java.lang.String lameUrlEncode(java.lang.String) -> lameUrlEncode
    56:118:void parse(android.net.Uri) -> parse
    128:128:java.util.List parseFingerprints(java.lang.String) -> parseFingerprints
    132:149:java.util.List parseFingerprints(java.lang.String,char) -> parseFingerprints
    153:163:java.lang.String parseParameter(java.lang.String,java.lang.String) -> parseParameter
    121:124:java.lang.String toString() -> toString
com.ru.astron.utils.XmppUri$Fingerprint -> com.ru.astron.utils.XmppUri$Fingerprint:
    244:248:void <init>(com.ru.astron.utils.XmppUri$FingerprintType,java.lang.String,int) -> <init>
    252:252:java.lang.String toString() -> toString
com.ru.astron.utils.XmppUri$FingerprintType -> com.ru.astron.utils.XmppUri$FingerprintType:
    218:217:void <clinit>() -> <clinit>
    217:217:void <init>(java.lang.String,int) -> <init>
    217:217:com.ru.astron.utils.XmppUri$FingerprintType valueOf(java.lang.String) -> valueOf
    217:217:com.ru.astron.utils.XmppUri$FingerprintType[] values() -> values
com.ru.astron.xml.Element -> com.ru.astron.xml.Element:
    22:24:void <init>(java.lang.String) -> <init>
    26:29:void <init>(java.lang.String,java.lang.String) -> <init>
    32:34:com.ru.astron.xml.Element addChild(com.ru.astron.xml.Element) -> addChild
    38:41:com.ru.astron.xml.Element addChild(java.lang.String) -> addChild
    45:49:com.ru.astron.xml.Element addChild(java.lang.String,java.lang.String) -> addChild
    203:204:void clearChildren() -> clearChildren
    59:64:com.ru.astron.xml.Element findChild(java.lang.String) -> findChild
    100:105:com.ru.astron.xml.Element findChild(java.lang.String,java.lang.String) -> findChild
    68:69:java.lang.String findChildContent(java.lang.String) -> findChildContent
    109:110:java.lang.String findChildContent(java.lang.String,java.lang.String) -> findChildContent
    73:73:java.lang.String findInternationalizedChildContent(java.lang.String) -> findInternationalizedChildContent
    77:96:java.lang.String findInternationalizedChildContent(java.lang.String,java.lang.String) -> findInternationalizedChildContent
    152:155:java.lang.String getAttribute(java.lang.String) -> getAttribute
    215:216:boolean getAttributeAsBoolean(java.lang.String) -> getAttributeAsBoolean
    160:168:rocks.xmpp.addr.Jid getAttributeAsJid(java.lang.String) -> getAttributeAsJid
    172:172:java.util.Hashtable getAttributes() -> getAttributes
    122:122:java.util.List getChildren() -> getChildren
    131:131:java.lang.String getContent() -> getContent
    199:199:java.lang.String getName() -> getName
    220:220:java.lang.String getNamespace() -> getNamespace
    114:114:boolean hasChild(java.lang.String) -> hasChild
    118:118:boolean hasChild(java.lang.String,java.lang.String) -> hasChild
    142:143:com.ru.astron.xml.Element removeAttribute(java.lang.String) -> removeAttribute
    135:138:com.ru.astron.xml.Element setAttribute(java.lang.String,java.lang.String) -> setAttribute
    207:208:void setAttribute(java.lang.String,long) -> setAttribute
    211:212:void setAttribute(java.lang.String,int) -> setAttribute
    147:148:com.ru.astron.xml.Element setAttributes(java.util.Hashtable) -> setAttributes
    126:127:com.ru.astron.xml.Element setChildren(java.util.List) -> setChildren
    53:55:com.ru.astron.xml.Element setContent(java.lang.String) -> setContent
    176:195:java.lang.String toString() -> toString
com.ru.astron.xml.Tag -> com.ru.astron.xml.Tag:
    20:23:void <init>(int,java.lang.String) -> <init>
    38:38:com.ru.astron.xml.Tag empty(java.lang.String) -> empty
    34:34:com.ru.astron.xml.Tag end(java.lang.String) -> end
    46:46:java.lang.String getAttribute(java.lang.String) -> getAttribute
    102:102:java.util.Hashtable getAttributes() -> getAttributes
    42:42:java.lang.String getName() -> getName
    66:68:boolean isEnd(java.lang.String) -> isEnd
    72:72:boolean isNo() -> isNo
    60:62:boolean isStart(java.lang.String) -> isStart
    26:26:com.ru.astron.xml.Tag no(java.lang.String) -> no
    50:51:com.ru.astron.xml.Tag setAttribute(java.lang.String,java.lang.String) -> setAttribute
    55:56:com.ru.astron.xml.Tag setAtttributes(java.util.Hashtable) -> setAtttributes
    30:30:com.ru.astron.xml.Tag start(java.lang.String) -> start
    76:98:java.lang.String toString() -> toString
com.ru.astron.xml.TagWriter -> com.ru.astron.xml.TagWriter:
    46:47:void <init>() -> <init>
    15:15:java.util.concurrent.CountDownLatch access$000(com.ru.astron.xml.TagWriter) -> access$000
    15:15:java.util.concurrent.CountDownLatch access$002(com.ru.astron.xml.TagWriter,java.util.concurrent.CountDownLatch) -> access$002
    15:15:boolean access$100(com.ru.astron.xml.TagWriter) -> access$100
    15:15:java.util.concurrent.LinkedBlockingQueue access$200(com.ru.astron.xml.TagWriter) -> access$200
    15:15:java.io.OutputStreamWriter access$300(com.ru.astron.xml.TagWriter) -> access$300
    105:108:boolean await(long,java.util.concurrent.TimeUnit) -> await
    57:58:com.ru.astron.xml.TagWriter beginDocument() -> beginDocument
    101:102:void finish() -> finish
    117:116:void forceClose() -> forceClose
    113:113:boolean isActive() -> isActive
    50:49:void setOutputStream(java.io.OutputStream) -> setOutputStream
    75:74:com.ru.astron.xml.TagWriter writeElement(com.ru.astron.xml.Element) -> writeElement
    84:96:com.ru.astron.xml.TagWriter writeStanzaAsync(com.ru.astron.xmpp.stanzas.AbstractStanza) -> writeStanzaAsync
    66:65:com.ru.astron.xml.TagWriter writeTag(com.ru.astron.xml.Tag) -> writeTag
com.ru.astron.xml.TagWriter$1 -> com.ru.astron.xml.TagWriter$1:
    22:22:void <init>(com.ru.astron.xml.TagWriter) -> <init>
    26:42:void run() -> run
com.ru.astron.xml.XmlReader -> com.ru.astron.xml.XmlReader:
    19:26:void <init>() -> <init>
    86:90:com.ru.astron.xml.Element readElement(com.ru.astron.xml.Tag) -> readElement
    53:79:com.ru.astron.xml.Tag readTag() -> readTag
    41:42:void reset() -> reset
    29:30:void setInputStream(java.io.InputStream) -> setInputStream
com.ru.astron.xmpp.InvalidJid -> com.ru.astron.xmpp.InvalidJid:
    41:43:void <init>(java.lang.String) -> <init>
    78:78:rocks.xmpp.addr.Jid asBareJid() -> asBareJid
    128:128:char charAt(int) -> charAt
    37:37:int compareTo(java.lang.Object) -> compareTo
    138:138:int compareTo(rocks.xmpp.addr.Jid) -> compareTo
    108:108:java.lang.String getDomain() -> getDomain
    103:103:java.lang.String getEscapedLocal() -> getEscapedLocal
    98:98:java.lang.String getLocal() -> getLocal
    142:145:rocks.xmpp.addr.Jid getNullForInvalid(rocks.xmpp.addr.Jid) -> getNullForInvalid
    113:113:java.lang.String getResource() -> getResource
    154:162:boolean hasValidFrom(com.ru.astron.xmpp.stanzas.AbstractStanza) -> hasValidFrom
    68:68:boolean isBareJid() -> isBareJid
    73:73:boolean isDomainJid() -> isDomainJid
    150:150:boolean isValid(rocks.xmpp.addr.Jid) -> isValid
    123:123:int length() -> length
    46:52:rocks.xmpp.addr.Jid of(java.lang.String,boolean) -> of
    133:133:java.lang.CharSequence subSequence(int,int) -> subSequence
    118:118:java.lang.String toEscapedString() -> toEscapedString
    58:58:java.lang.String toString() -> toString
    88:88:rocks.xmpp.addr.Jid withResource(java.lang.CharSequence) -> withResource
com.ru.astron.xmpp.OnUpdateBlocklist$Status -> com.ru.astron.xmpp.OnUpdateBlocklist$Status:
    7:6:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:com.ru.astron.xmpp.OnUpdateBlocklist$Status valueOf(java.lang.String) -> valueOf
    6:6:com.ru.astron.xmpp.OnUpdateBlocklist$Status[] values() -> values
com.ru.astron.xmpp.Patches -> com.ru.astron.xmpp.Patches:
    8:11:void <clinit>() -> <clinit>
com.ru.astron.xmpp.XmppConnection -> com.ru.astron.xmpp.XmppConnection:
    180:183:void <init>(com.ru.astron.entities.Account,com.ru.astron.services.XmppConnectionService) -> <init>
    104:104:java.util.HashMap access$1000(com.ru.astron.xmpp.XmppConnection) -> access$1000
    104:104:java.lang.String access$1100(com.ru.astron.xmpp.XmppConnection) -> access$1100
    104:104:com.ru.astron.xml.Element access$1200(com.ru.astron.xmpp.XmppConnection) -> access$1200
    104:104:java.util.List access$1300(com.ru.astron.xmpp.XmppConnection,java.lang.String) -> access$1300
    104:104:com.ru.astron.xmpp.XmppConnection$Features access$800(com.ru.astron.xmpp.XmppConnection) -> access$800
    104:104:com.ru.astron.services.XmppConnectionService access$900(com.ru.astron.xmpp.XmppConnection) -> access$900
    652:670:boolean acknowledgeStanzaUpTo(int) -> acknowledgeStanzaUpTo
    1459:1460:void addOnAdvancedStreamFeaturesAvailableListener(com.ru.astron.xmpp.OnAdvancedStreamFeaturesLoaded) -> addOnAdvancedStreamFeaturesAvailableListener
    877:910:void authenticate() -> authenticate
    205:224:void changeStatus(com.ru.astron.entities.Account$State) -> changeStatus
    1084:1097:void clearIqCallbacks() -> clearIqCallbacks
    247:397:void connect() -> connect
    1341:1341:java.lang.String createNewResource() -> createNewResource
    1481:1513:void disconnect(boolean) -> disconnect
    1221:1229:void discoverMamPreferences() -> discoverMamPreferences
    1244:1254:void enableAdvancedStreamFeatures() -> enableAdvancedStreamFeatures
    915:920:java.util.List extractMechanisms(com.ru.astron.xml.Element) -> extractMechanisms
    1236:1241:void finalizeBind() -> finalizeBind
    1532:1536:rocks.xmpp.addr.Jid findDiscoItemByFeature(java.lang.String) -> findDiscoItemByFeature
    1520:1528:java.util.List findDiscoItemsByFeature(java.lang.String) -> findDiscoItemsByFeature
    186:194:void fixResource(android.content.Context,com.ru.astron.entities.Account) -> fixResource
    1463:1472:void forceCloseSocket() -> forceCloseSocket
    1582:1582:int getAttempt() -> getAttempt
    1586:1586:com.ru.astron.xmpp.XmppConnection$Features getFeatures() -> getFeatures
    1652:1652:com.ru.astron.generator.IqGenerator getIqGenerator() -> getIqGenerator
    1595:1595:long getLastConnect() -> getLastConnect
    1603:1603:long getLastDiscoStarted() -> getLastDiscoStarted
    1607:1607:long getLastPacketReceived() -> getLastPacketReceived
    1599:1599:long getLastPingSent() -> getLastPingSent
    1590:1591:long getLastSessionEstablished() -> getLastSessionEstablished
    1571:1572:java.lang.String getMucServer() -> getMucServer
    1555:1566:java.util.List getMucServers() -> getMucServers
    1549:1551:java.util.List getMucServersWithholdAccount() -> getMucServersWithholdAccount
    1009:1009:java.net.URL getRedirectionUrl() -> getRedirectionUrl
    1630:1647:com.ru.astron.xmpp.XmppConnection$Identity getServerIdentity() -> getServerIdentity
    1576:1578:int getTimeToNextAttempt() -> getTimeToNextAttempt
    432:444:com.ru.astron.xmpp.XmppConnection$TlsFactoryVerifier getTlsFactoryVerifier() -> getTlsFactoryVerifier
    243:244:void incrementSmCatchupMessageCounter() -> incrementSmCatchupMessageCounter
    1475:1478:void interrupt() -> interrupt
    1232:1232:boolean isMamPreferenceAlways() -> isMamPreferenceAlways
    239:239:boolean isWaitingForSmCatchup() -> isWaitingForSmCatchup
    1224:1228:void lambda$discoverMamPreferences$4(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$discoverMamPreferences$4$XmppConnection
    1041:1079:void lambda$sendBindRequest$1(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$sendBindRequest$1$XmppConnection
    928:932:void lambda$sendRegistryRequest$0(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$sendRegistryRequest$0$XmppConnection
    1194:1217:void lambda$sendServiceDiscoveryInfo$3(rocks.xmpp.addr.Jid,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$sendServiceDiscoveryInfo$3$XmppConnection
    1262:1285:void lambda$sendServiceDiscoveryItems$5(rocks.xmpp.addr.Jid,com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$sendServiceDiscoveryItems$5$XmppConnection
    1121:1124:void lambda$sendStartSession$2(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$sendStartSession$2$XmppConnection
    1345:1345:java.lang.String nextRandomId() -> nextRandomId
    1349:1349:java.lang.String nextRandomId(boolean) -> nextRandomId
    231:236:void prepareNewConnection() -> prepareNewConnection
    729:762:void processIq(com.ru.astron.xml.Tag) -> processIq
    774:780:void processMessage(com.ru.astron.xml.Tag) -> processMessage
    676:692:com.ru.astron.xml.Element processPacket(com.ru.astron.xml.Tag,int) -> processPacket
    783:789:void processPresence(com.ru.astron.xml.Tag) -> processPresence
    461:649:void processStream() -> processStream
    1308:1315:void processStreamError(com.ru.astron.xml.Tag) -> processStreamError
    842:874:void processStreamFeatures(com.ru.astron.xml.Tag) -> processStreamFeatures
    1540:1544:boolean r() -> r
    1619:1623:void resetAttemptCount(boolean) -> resetAttemptCount
    1013:1021:void resetEverything() -> resetEverything
    1516:1517:void resetStreamId() -> resetStreamId
    449:456:void run() -> run
    1611:1612:void sendActive() -> sendActive
    1026:1029:void sendBindRequest() -> sendBindRequest
    1110:1114:void sendDiscoTimeout() -> sendDiscoTimeout
    1289:1305:void sendEnableCarbons() -> sendEnableCarbons
    1615:1616:void sendInactive() -> sendInactive
    1353:1354:java.lang.String sendIqPacket(com.ru.astron.xmpp.stanzas.IqPacket,com.ru.astron.xmpp.OnIqPacketReceived) -> sendIqPacket
    1371:1372:void sendMessagePacket(com.ru.astron.xmpp.stanzas.MessagePacket) -> sendMessagePacket
    1379:1378:void sendPacket(com.ru.astron.xmpp.stanzas.AbstractStanza) -> sendPacket
    1383:1382:void sendPacket(com.ru.astron.xmpp.stanzas.AbstractStanza,boolean) -> sendPacket
    1417:1424:void sendPing() -> sendPing
    1130:1148:void sendPostBindInitialization() -> sendPostBindInitialization
    1375:1376:void sendPresencePacket(com.ru.astron.xmpp.stanzas.PresencePacket) -> sendPresencePacket
    924:992:void sendRegistryRequest() -> sendRegistryRequest
    1189:1218:void sendServiceDiscoveryInfo(rocks.xmpp.addr.Jid) -> sendServiceDiscoveryInfo
    1257:1286:void sendServiceDiscoveryItems(rocks.xmpp.addr.Jid) -> sendServiceDiscoveryItems
    1117:1127:void sendStartSession() -> sendStartSession
    1331:1338:void sendStartStream() -> sendStartStream
    792:795:void sendStartTLS() -> sendStartTLS
    1358:1357:java.lang.String sendUnmodifiedIqPacket(com.ru.astron.xmpp.stanzas.IqPacket,com.ru.astron.xmpp.OnIqPacketReceived,boolean) -> sendUnmodifiedIqPacket
    995:1005:void setAccountCreationFailed(java.lang.String) -> setAccountCreationFailed
    1626:1627:void setInteractive(boolean) -> setInteractive
    1451:1452:void setOnBindListener(com.ru.astron.xmpp.OnBindListener) -> setOnBindListener
    1443:1444:void setOnJinglePacketReceivedListener(com.ru.astron.xmpp.jingle.OnJinglePacketReceived) -> setOnJinglePacketReceivedListener
    1455:1456:void setOnMessageAcknowledgeListener(com.ru.astron.xmpp.OnMessageAcknowledged) -> setOnMessageAcknowledgeListener
    1428:1429:void setOnMessagePacketReceivedListener(com.ru.astron.xmpp.OnMessagePacketReceived) -> setOnMessagePacketReceivedListener
    1438:1439:void setOnPresencePacketReceivedListener(com.ru.astron.xmpp.OnPresencePacketReceived) -> setOnPresencePacketReceivedListener
    1447:1448:void setOnStatusChangedListener(com.ru.astron.xmpp.OnStatusChanged) -> setOnStatusChangedListener
    1433:1434:void setOnUnregisteredIqPacketReceivedListener(com.ru.astron.xmpp.OnIqPacketReceived) -> setOnUnregisteredIqPacketReceivedListener
    408:409:boolean startXmpp(java.net.Socket) -> startXmpp
    798:837:void switchOverToTls() -> switchOverToTls
    198:200:boolean validBase64(java.lang.String) -> validBase64
com.ru.astron.xmpp.XmppConnection$1 -> com.ru.astron.xmpp.XmppConnection$1:
    109:109:void <init>(com.ru.astron.xmpp.XmppConnection) -> <init>
    112:114:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.XmppConnection$2 -> com.ru.astron.xmpp.XmppConnection$2:
    1291:1291:void <init>(com.ru.astron.xmpp.XmppConnection) -> <init>
    1295:1303:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.XmppConnection$Features -> com.ru.astron.xmpp.XmppConnection$Features:
    1742:1744:void <init>(com.ru.astron.xmpp.XmppConnection,com.ru.astron.xmpp.XmppConnection) -> <init>
    1736:1736:boolean access$000(com.ru.astron.xmpp.XmppConnection$Features) -> access$000
    1736:1736:boolean access$002(com.ru.astron.xmpp.XmppConnection$Features,boolean) -> access$002
    1736:1736:boolean access$600(com.ru.astron.xmpp.XmppConnection$Features) -> access$600
    1736:1736:boolean access$602(com.ru.astron.xmpp.XmppConnection$Features,boolean) -> access$602
    1736:1736:boolean access$700(com.ru.astron.xmpp.XmppConnection$Features) -> access$700
    1736:1736:boolean access$702(com.ru.astron.xmpp.XmppConnection$Features,boolean) -> access$702
    1766:1766:boolean blocking() -> blocking
    1758:1758:boolean bookmarksConversion() -> bookmarksConversion
    1754:1754:boolean carbons() -> carbons
    1787:1787:boolean csi() -> csi
    1774:1774:boolean flexibleOfflineMessageRetrieval() -> flexibleOfflineMessageRetrieval
    1817:1818:java.util.List getAccountFeatures() -> getAccountFeatures
    1867:1877:long getMaxHttpUploadSize() -> getMaxHttpUploadSize
    1747:1750:boolean hasDiscoFeature(rocks.xmpp.addr.Jid,java.lang.String) -> hasDiscoFeature
    1842:1858:boolean httpUpload(long) -> httpUpload
    1813:1813:boolean mam() -> mam
    1835:1835:boolean p1S3FileTransfer() -> p1S3FileTransfer
    1791:1794:boolean pep() -> pep
    1809:1809:boolean pepOmemoWhitelisted() -> pepOmemoWhitelisted
    1798:1801:boolean pepPersistent() -> pepPersistent
    1805:1805:boolean pepPublishOptions() -> pepPublishOptions
    1778:1778:boolean register() -> register
    1827:1827:boolean rosterVersioning() -> rosterVersioning
    1831:1832:void setBlockListRequested(boolean) -> setBlockListRequested
    1782:1782:boolean sm() -> sm
    1770:1770:boolean spamReporting() -> spamReporting
    1881:1881:boolean stanzaIds() -> stanzaIds
    1863:1863:boolean useLegacyHttpUpload() -> useLegacyHttpUpload
com.ru.astron.xmpp.XmppConnection$Identity -> com.ru.astron.xmpp.XmppConnection$Identity:
    1656:1655:void <clinit>() -> <clinit>
    1655:1655:void <init>(java.lang.String,int) -> <init>
    1655:1655:com.ru.astron.xmpp.XmppConnection$Identity valueOf(java.lang.String) -> valueOf
    1655:1655:com.ru.astron.xmpp.XmppConnection$Identity[] values() -> values
com.ru.astron.xmpp.XmppConnection$MyKeyManager -> com.ru.astron.xmpp.XmppConnection$MyKeyManager:
    1677:1677:void <init>(com.ru.astron.xmpp.XmppConnection) -> <init>
    1677:1677:void <init>(com.ru.astron.xmpp.XmppConnection,com.ru.astron.xmpp.XmppConnection$1) -> <init>
    1680:1680:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    1685:1685:java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    1690:1695:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    1701:1702:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    1713:1715:java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
    1707:1707:java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
com.ru.astron.xmpp.XmppConnection$StateChangingError -> com.ru.astron.xmpp.XmppConnection$StateChangingError:
    1723:1725:void <init>(com.ru.astron.xmpp.XmppConnection,com.ru.astron.entities.Account$State) -> <init>
    1720:1720:com.ru.astron.entities.Account$State access$500(com.ru.astron.xmpp.XmppConnection$StateChangingError) -> access$500
com.ru.astron.xmpp.XmppConnection$StateChangingException -> com.ru.astron.xmpp.XmppConnection$StateChangingException:
    1731:1733:void <init>(com.ru.astron.xmpp.XmppConnection,com.ru.astron.entities.Account$State) -> <init>
    1728:1728:com.ru.astron.entities.Account$State access$300(com.ru.astron.xmpp.XmppConnection$StateChangingException) -> access$300
com.ru.astron.xmpp.XmppConnection$TlsFactoryVerifier -> com.ru.astron.xmpp.XmppConnection$TlsFactoryVerifier:
    1668:1672:void <init>(javax.net.ssl.SSLSocketFactory,com.ru.astron.crypto.DomainHostnameVerifier) -> <init>
    1664:1664:javax.net.ssl.SSLSocketFactory access$100(com.ru.astron.xmpp.XmppConnection$TlsFactoryVerifier) -> access$100
    1664:1664:com.ru.astron.crypto.DomainHostnameVerifier access$200(com.ru.astron.xmpp.XmppConnection$TlsFactoryVerifier) -> access$200
com.ru.astron.xmpp.chatstate.ChatState -> com.ru.astron.xmpp.chatstate.ChatState:
    7:5:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    10:22:com.ru.astron.xmpp.chatstate.ChatState parse(com.ru.astron.xml.Element) -> parse
    27:30:com.ru.astron.xml.Element toElement(com.ru.astron.xmpp.chatstate.ChatState) -> toElement
    5:5:com.ru.astron.xmpp.chatstate.ChatState valueOf(java.lang.String) -> valueOf
    5:5:com.ru.astron.xmpp.chatstate.ChatState[] values() -> values
com.ru.astron.xmpp.forms.Data -> com.ru.astron.xmpp.forms.Data:
    18:20:void <init>() -> <init>
    116:122:com.ru.astron.xmpp.forms.Data create(java.lang.String,android.os.Bundle) -> create
    34:40:com.ru.astron.xmpp.forms.Field getFieldByName(java.lang.String) -> getFieldByName
    23:30:java.util.List getFields() -> getFields
    101:102:java.lang.String getFormType() -> getFormType
    106:107:java.lang.String getValue(java.lang.String) -> getValue
    89:92:com.ru.astron.xmpp.forms.Data parse(com.ru.astron.xml.Element) -> parse
    44:50:com.ru.astron.xmpp.forms.Field put(java.lang.String,java.lang.String) -> put
    54:60:void put(java.lang.String,java.util.Collection) -> put
    80:86:void removeUnnecessaryChildren() -> removeUnnecessaryChildren
    96:98:void setFormType(java.lang.String) -> setFormType
    63:69:void submit(android.os.Bundle) -> submit
    72:77:void submit() -> submit
com.ru.astron.xmpp.forms.Field -> com.ru.astron.xmpp.forms.Field:
    13:15:void <init>(java.lang.String) -> <init>
    18:19:void <init>() -> <init>
    22:22:java.lang.String getFieldName() -> getFieldName
    54:54:java.lang.String getValue() -> getValue
    58:64:java.util.List getValues() -> getValues
    47:50:com.ru.astron.xmpp.forms.Field parse(com.ru.astron.xml.Element) -> parse
    38:44:void removeNonValueChildren() -> removeNonValueChildren
    26:28:void setValue(java.lang.String) -> setValue
    31:35:void setValues(java.util.Collection) -> setValues
com.ru.astron.xmpp.jingle.JingleCandidate -> com.ru.astron.xmpp.jingle.JingleCandidate:
    13:14:void <clinit>() -> <clinit>
    25:28:void <init>(java.lang.String,boolean) -> <init>
    89:89:boolean equalValues(com.ru.astron.xmpp.jingle.JingleCandidate) -> equalValues
    85:85:boolean equals(com.ru.astron.xmpp.jingle.JingleCandidate) -> equals
    137:138:void flagAsUsedByCounterpart() -> flagAsUsedByCounterpart
    31:31:java.lang.String getCid() -> getCid
    39:39:java.lang.String getHost() -> getHost
    47:47:rocks.xmpp.addr.Jid getJid() -> getJid
    55:55:int getPort() -> getPort
    81:81:int getPriority() -> getPriority
    97:97:int getType() -> getType
    93:93:boolean isOurs() -> isOurs
    141:141:boolean isUsedByCounterpart() -> isUsedByCounterpart
    101:105:java.util.List parse(java.util.List) -> parse
    109:118:com.ru.astron.xmpp.jingle.JingleCandidate parse(com.ru.astron.xml.Element) -> parse
    35:36:void setHost(java.lang.String) -> setHost
    43:44:void setJid(rocks.xmpp.addr.Jid) -> setJid
    51:52:void setPort(int) -> setPort
    77:78:void setPriority(int) -> setPriority
    59:60:void setType(int) -> setType
    63:74:void setType(java.lang.String) -> setType
    122:133:com.ru.astron.xml.Element toElement() -> toElement
    145:145:java.lang.String toString() -> toString
com.ru.astron.xmpp.jingle.JingleConnection -> com.ru.astron.xmpp.jingle.JingleConnection:
    188:192:void <init>(com.ru.astron.xmpp.jingle.JingleConnectionManager) -> <init>
    881:897:void abort() -> abort
    44:44:boolean access$000(com.ru.astron.xmpp.jingle.JingleConnection) -> access$000
    44:44:byte[] access$100(com.ru.astron.xmpp.jingle.JingleConnection) -> access$100
    44:44:void access$1000(com.ru.astron.xmpp.jingle.JingleConnection) -> access$1000
    44:44:rocks.xmpp.addr.Jid access$1100(com.ru.astron.xmpp.jingle.JingleConnection) -> access$1100
    44:44:com.ru.astron.entities.DownloadableFile access$1200(com.ru.astron.xmpp.jingle.JingleConnection) -> access$1200
    44:44:com.ru.astron.xmpp.jingle.JingleTransport access$1300(com.ru.astron.xmpp.jingle.JingleConnection) -> access$1300
    44:44:void access$1400(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.entities.Message,com.ru.astron.crypto.axolotl.XmppAxolotlMessage) -> access$1400
    44:44:java.util.concurrent.ConcurrentHashMap access$1500(com.ru.astron.xmpp.jingle.JingleConnection) -> access$1500
    44:44:void access$1600(com.ru.astron.xmpp.jingle.JingleConnection) -> access$1600
    44:44:void access$1700(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.xmpp.jingle.JingleCandidate) -> access$1700
    44:44:int access$1800(com.ru.astron.xmpp.jingle.JingleConnection) -> access$1800
    44:44:int access$1802(com.ru.astron.xmpp.jingle.JingleConnection,int) -> access$1802
    44:44:void access$1900(com.ru.astron.xmpp.jingle.JingleConnection,java.lang.String) -> access$1900
    44:44:com.ru.astron.entities.Account access$200(com.ru.astron.xmpp.jingle.JingleConnection) -> access$200
    44:44:com.ru.astron.xmpp.jingle.stanzas.JinglePacket access$2000(com.ru.astron.xmpp.jingle.JingleConnection,java.lang.String) -> access$2000
    44:44:java.lang.String access$2100(com.ru.astron.xmpp.jingle.JingleConnection) -> access$2100
    44:44:java.lang.String access$2200(com.ru.astron.xmpp.jingle.JingleConnection) -> access$2200
    44:44:com.ru.astron.xml.Element access$2300(com.ru.astron.xmpp.jingle.JingleConnection) -> access$2300
    44:44:java.lang.String access$2400(com.ru.astron.xmpp.jingle.JingleConnection) -> access$2400
    44:44:boolean access$2500(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.xmpp.jingle.JingleCandidate) -> access$2500
    44:44:java.util.List access$2600(com.ru.astron.xmpp.jingle.JingleConnection) -> access$2600
    44:44:void access$2700(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> access$2700
    44:44:void access$2800(com.ru.astron.xmpp.jingle.JingleConnection) -> access$2800
    44:44:com.ru.astron.xmpp.jingle.JingleConnection$OnProxyActivated access$2900(com.ru.astron.xmpp.jingle.JingleConnection) -> access$2900
    44:44:void access$300(com.ru.astron.xmpp.jingle.JingleConnection) -> access$300
    44:44:void access$3000(com.ru.astron.xmpp.jingle.JingleConnection,java.lang.String) -> access$3000
    44:44:void access$3100(com.ru.astron.xmpp.jingle.JingleConnection,java.lang.String) -> access$3100
    44:44:void access$3200(com.ru.astron.xmpp.jingle.JingleConnection) -> access$3200
    44:44:com.ru.astron.entities.Message access$400(com.ru.astron.xmpp.jingle.JingleConnection) -> access$400
    44:44:com.ru.astron.services.XmppConnectionService access$500(com.ru.astron.xmpp.jingle.JingleConnection) -> access$500
    44:44:boolean access$600(com.ru.astron.xmpp.jingle.JingleConnection) -> access$600
    44:44:com.ru.astron.xmpp.jingle.stanzas.Content$Version access$700(com.ru.astron.xmpp.jingle.JingleConnection) -> access$700
    44:44:void access$800(com.ru.astron.xmpp.jingle.JingleConnection) -> access$800
    44:44:void access$900(com.ru.astron.xmpp.jingle.JingleConnection) -> access$900
    579:585:com.ru.astron.xmpp.jingle.stanzas.JinglePacket bootstrapPacket(java.lang.String) -> bootstrapPacket
    876:878:void cancel() -> cancel
    727:758:com.ru.astron.xmpp.jingle.JingleSocks5Transport chooseConnection() -> chooseConnection
    666:724:void connect() -> connect
    937:945:void connectNextCandidate() -> connectNextCandidate
    948:969:void connectWithCandidate(com.ru.astron.xmpp.jingle.JingleCandidate) -> connectWithCandidate
    207:260:void deliverPacket(com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> deliverPacket
    972:979:void disconnectSocks5Connections() -> disconnectSocks5Connections
    1022:1027:boolean equalCandidateExists(com.ru.astron.xmpp.jingle.JingleCandidate) -> equalCandidateExists
    900:901:void fail() -> fail
    904:926:void fail(java.lang.String) -> fail
    199:199:com.ru.astron.entities.Account getAccount() -> getAccount
    1046:1051:com.ru.astron.xmpp.jingle.JingleCandidate getCandidate(java.lang.String) -> getCandidate
    521:527:java.util.List getCandidatesAsElements() -> getCandidatesAsElements
    1118:1118:com.ru.astron.services.AbstractConnectionManager getConnectionManager() -> getConnectionManager
    203:203:rocks.xmpp.addr.Jid getCounterPart() -> getCounterPart
    155:155:java.io.InputStream getFileInputStream() -> getFileInputStream
    159:166:java.io.OutputStream getFileOutputStream() -> getFileOutputStream
    1105:1108:long getFileSize() -> getFileSize
    1064:1064:com.ru.astron.xmpp.jingle.stanzas.Content$Version getFtVersion() -> getFtVersion
    1018:1018:int getJingleStatus() -> getJingleStatus
    1114:1114:int getProgress() -> getProgress
    195:195:java.lang.String getSessionId() -> getSessionId
    1100:1100:int getStatus() -> getStatus
    1078:1078:com.ru.astron.xmpp.jingle.JingleTransport getTransport() -> getTransport
    1060:1060:java.lang.String getTransportId() -> getTransportId
    1074:1074:boolean hasTransportId(java.lang.String) -> hasTransportId
    263:278:void init(com.ru.astron.entities.Message) -> init
    281:334:void init(com.ru.astron.entities.Message,com.ru.astron.crypto.axolotl.XmppAxolotlMessage) -> init
    354:466:void init(com.ru.astron.entities.Account,com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> init
    104:104:boolean initiating() -> initiating
    93:96:void lambda$new$0(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> lambda$new$0$JingleConnection
    1031:1037:void mergeCandidate(com.ru.astron.xmpp.jingle.JingleCandidate) -> mergeCandidate
    1040:1043:void mergeCandidates(java.util.List) -> mergeCandidates
    597:603:boolean receiveAccept(com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> receiveAccept
    800:833:boolean receiveFallbackToIbb(com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> receiveFallbackToIbb
    861:873:void receiveSuccess() -> receiveSuccess
    837:856:boolean receiveTransportAccept(com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> receiveTransportAccept
    607:661:boolean receiveTransportInfo(com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> receiveTransportInfo
    100:100:boolean responding() -> responding
    531:576:void sendAccept() -> sendAccept
    929:934:void sendCancel() -> sendCancel
    1005:1015:void sendCandidateError() -> sendCandidateError
    992:1002:void sendCandidateUsed(java.lang.String) -> sendCandidateUsed
    776:785:void sendFallbackToIbb() -> sendFallbackToIbb
    515:518:void sendHash() -> sendHash
    469:512:void sendInitRequest() -> sendInitRequest
    589:590:void sendJinglePacket(com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> sendJinglePacket
    593:594:void sendJinglePacket(com.ru.astron.xmpp.jingle.stanzas.JinglePacket,com.ru.astron.xmpp.OnIqPacketReceived) -> sendJinglePacket
    982:989:void sendProxyActivated(java.lang.String) -> sendProxyActivated
    762:773:void sendSuccess() -> sendSuccess
    1082:1094:boolean start() -> start
    1055:1057:void updateProgress(int) -> updateProgress
    337:351:void upgradeNamespace() -> upgradeNamespace
com.ru.astron.xmpp.jingle.JingleConnection$1 -> com.ru.astron.xmpp.jingle.JingleConnection$1:
    107:107:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    124:124:void lambda$onFileTransmitted$0() -> lambda$onFileTransmitted$0$JingleConnection$1
    149:151:void onFileTransferAborted() -> onFileTransferAborted
    111:145:void onFileTransmitted(com.ru.astron.entities.DownloadableFile) -> onFileTransmitted
com.ru.astron.xmpp.jingle.JingleConnection$10 -> com.ru.astron.xmpp.jingle.JingleConnection$10:
    951:951:void <init>(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.xmpp.jingle.JingleCandidate) -> <init>
    963:967:void established() -> established
    955:959:void failed() -> failed
com.ru.astron.xmpp.jingle.JingleConnection$11 -> com.ru.astron.xmpp.jingle.JingleConnection$11:
    1084:1084:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    1088:1089:void run() -> run
com.ru.astron.xmpp.jingle.JingleConnection$2 -> com.ru.astron.xmpp.jingle.JingleConnection$2:
    169:169:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    184:185:void failed() -> failed
    173:180:void success() -> success
com.ru.astron.xmpp.jingle.JingleConnection$3 -> com.ru.astron.xmpp.jingle.JingleConnection$3:
    265:265:void <init>(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.entities.Message) -> <init>
    268:273:void run(com.ru.astron.crypto.axolotl.XmppAxolotlMessage) -> run
com.ru.astron.xmpp.jingle.JingleConnection$4 -> com.ru.astron.xmpp.jingle.JingleConnection$4:
    297:297:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    302:330:void onPrimaryCandidateFound(boolean,com.ru.astron.xmpp.jingle.JingleCandidate) -> onPrimaryCandidateFound
com.ru.astron.xmpp.jingle.JingleConnection$4$1 -> com.ru.astron.xmpp.jingle.JingleConnection$4$1:
    308:308:void <init>(com.ru.astron.xmpp.jingle.JingleConnection$4,com.ru.astron.xmpp.jingle.JingleCandidate) -> <init>
    319:323:void established() -> established
    312:315:void failed() -> failed
com.ru.astron.xmpp.jingle.JingleConnection$5 -> com.ru.astron.xmpp.jingle.JingleConnection$5:
    493:493:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    497:508:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.jingle.JingleConnection$6 -> com.ru.astron.xmpp.jingle.JingleConnection$6:
    534:534:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    537:574:void onPrimaryCandidateFound(boolean,com.ru.astron.xmpp.jingle.JingleCandidate) -> onPrimaryCandidateFound
com.ru.astron.xmpp.jingle.JingleConnection$6$1 -> com.ru.astron.xmpp.jingle.JingleConnection$6$1:
    546:546:void <init>(com.ru.astron.xmpp.jingle.JingleConnection$6,com.ru.astron.xmpp.jingle.stanzas.Content,com.ru.astron.xmpp.jingle.stanzas.JinglePacket,com.ru.astron.xmpp.jingle.JingleCandidate) -> <init>
    559:565:void established() -> established
    550:555:void failed() -> failed
com.ru.astron.xmpp.jingle.JingleConnection$7 -> com.ru.astron.xmpp.jingle.JingleConnection$7:
    695:695:void <init>(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.xmpp.jingle.JingleSocks5Transport) -> <init>
    700:706:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.jingle.JingleConnection$8 -> com.ru.astron.xmpp.jingle.JingleConnection$8:
    787:787:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    795:796:void established() -> established
    790:791:void failed() -> failed
com.ru.astron.xmpp.jingle.JingleConnection$9 -> com.ru.astron.xmpp.jingle.JingleConnection$9:
    820:820:void <init>(com.ru.astron.xmpp.jingle.JingleConnection) -> <init>
    823:827:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.jingle.JingleConnectionManager -> com.ru.astron.xmpp.jingle.JingleConnectionManager:
    34:35:void <init>(com.ru.astron.services.XmppConnectionService) -> <init>
    25:25:java.util.HashMap access$000(com.ru.astron.xmpp.jingle.JingleConnectionManager) -> access$000
    168:173:void cancelInTransmission() -> cancelInTransmission
    63:71:com.ru.astron.xmpp.jingle.JingleConnection createNewConnection(com.ru.astron.entities.Message) -> createNewConnection
    137:165:void deliverIbbPacket(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> deliverIbbPacket
    38:60:void deliverPacket(com.ru.astron.entities.Account,com.ru.astron.xmpp.jingle.stanzas.JinglePacket) -> deliverPacket
    81:82:void finishConnection(com.ru.astron.xmpp.jingle.JingleConnection) -> finishConnection
    90:130:void getPrimaryCandidate(com.ru.astron.entities.Account,com.ru.astron.xmpp.jingle.OnPrimaryCandidateFound) -> getPrimaryCandidate
    133:133:java.lang.String nextRandomId() -> nextRandomId
com.ru.astron.xmpp.jingle.JingleConnectionManager$1 -> com.ru.astron.xmpp.jingle.JingleConnectionManager$1:
    96:96:void <init>(com.ru.astron.xmpp.jingle.JingleConnectionManager,rocks.xmpp.addr.Jid,com.ru.astron.xmpp.jingle.OnPrimaryCandidateFound) -> <init>
    100:120:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.jingle.JingleInbandTransport -> com.ru.astron.xmpp.jingle.JingleInbandTransport:
    58:64:void <init>(com.ru.astron.xmpp.jingle.JingleConnection,java.lang.String,int) -> <init>
    23:23:boolean access$000(com.ru.astron.xmpp.jingle.JingleInbandTransport) -> access$000
    23:23:long access$100(com.ru.astron.xmpp.jingle.JingleInbandTransport) -> access$100
    23:23:void access$200(com.ru.astron.xmpp.jingle.JingleInbandTransport) -> access$200
    75:95:void connect(com.ru.astron.xmpp.jingle.OnTransportConnected) -> connect
    218:242:void deliverPayload(com.ru.astron.xmpp.stanzas.IqPacket,com.ru.astron.xml.Element) -> deliverPayload
    144:147:void disconnect() -> disconnect
    99:115:void receive(com.ru.astron.entities.DownloadableFile,com.ru.astron.xmpp.jingle.OnFileTransmissionStatusChanged) -> receive
    195:215:void receiveNextBlock(java.lang.String) -> receiveNextBlock
    119:140:void send(com.ru.astron.entities.DownloadableFile,com.ru.astron.xmpp.jingle.OnFileTransmissionStatusChanged) -> send
    67:72:void sendClose() -> sendClose
    150:191:void sendNextBlock() -> sendNextBlock
com.ru.astron.xmpp.jingle.JingleInbandTransport$1 -> com.ru.astron.xmpp.jingle.JingleInbandTransport$1:
    47:47:void <init>(com.ru.astron.xmpp.jingle.JingleInbandTransport) -> <init>
    50:55:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.jingle.JingleInbandTransport$2 -> com.ru.astron.xmpp.jingle.JingleInbandTransport$2:
    83:83:void <init>(com.ru.astron.xmpp.jingle.JingleInbandTransport,com.ru.astron.xmpp.jingle.OnTransportConnected) -> <init>
    88:93:void onIqPacketReceived(com.ru.astron.entities.Account,com.ru.astron.xmpp.stanzas.IqPacket) -> onIqPacketReceived
com.ru.astron.xmpp.jingle.JingleSocks5Transport -> com.ru.astron.xmpp.jingle.JingleSocks5Transport:
    34:59:void <init>(com.ru.astron.xmpp.jingle.JingleConnection,com.ru.astron.xmpp.jingle.JingleCandidate) -> <init>
    62:82:void connect(com.ru.astron.xmpp.jingle.OnTransportConnected) -> connect
    182:185:void disconnect() -> disconnect
    192:192:com.ru.astron.xmpp.jingle.JingleCandidate getCandidate() -> getCandidate
    188:188:boolean isEstablished() -> isEstablished
    174:174:boolean isProxy() -> isProxy
    64:80:void lambda$connect$0(com.ru.astron.xmpp.jingle.OnTransportConnected) -> lambda$connect$0$JingleSocks5Transport
    127:168:void lambda$receive$2(com.ru.astron.xmpp.jingle.OnFileTransmissionStatusChanged,com.ru.astron.entities.DownloadableFile) -> lambda$receive$2$JingleSocks5Transport
    86:119:void lambda$send$1(com.ru.astron.xmpp.jingle.OnFileTransmissionStatusChanged,com.ru.astron.entities.DownloadableFile) -> lambda$send$1$JingleSocks5Transport
    178:178:boolean needsActivation() -> needsActivation
    126:171:void receive(com.ru.astron.entities.DownloadableFile,com.ru.astron.xmpp.jingle.OnFileTransmissionStatusChanged) -> receive
    85:123:void send(com.ru.astron.entities.DownloadableFile,com.ru.astron.xmpp.jingle.OnFileTransmissionStatusChanged) -> send
    196:197:void setActivated(boolean) -> setActivated
com.ru.astron.xmpp.jingle.JingleTransport -> com.ru.astron.xmpp.jingle.JingleTransport:
    5:5:void <init>() -> <init>
com.ru.astron.xmpp.jingle.stanzas.Content -> com.ru.astron.xmpp.jingle.stanzas.Content:
    27:28:void <init>() -> <init>
    31:35:void <init>(java.lang.String,java.lang.String) -> <init>
    71:82:com.ru.astron.xml.Element getFileOffer(com.ru.astron.xmpp.jingle.stanzas.Content$Version) -> getFileOffer
    96:101:java.lang.String getTransportId() -> getTransportId
    38:45:com.ru.astron.xmpp.jingle.stanzas.Content$Version getVersion() -> getVersion
    131:131:boolean hasIbbTransport() -> hasIbbTransport
    127:127:boolean hasSocks5Transport() -> hasSocks5Transport
    116:123:com.ru.astron.xml.Element ibbTransport() -> ibbTransport
    53:67:com.ru.astron.xml.Element setFileOffer(com.ru.astron.entities.DownloadableFile,boolean,com.ru.astron.xmpp.jingle.stanzas.Content$Version) -> setFileOffer
    87:93:void setFileOffer(com.ru.astron.xml.Element,com.ru.astron.xmpp.jingle.stanzas.Content$Version) -> setFileOffer
    49:50:void setTransportId(java.lang.String) -> setTransportId
    105:112:com.ru.astron.xml.Element socks5transport() -> socks5transport
com.ru.astron.xmpp.jingle.stanzas.Content$Version -> com.ru.astron.xmpp.jingle.stanzas.Content$Version:
    9:8:void <clinit>() -> <clinit>
    15:17:void <init>(java.lang.String,int,java.lang.String) -> <init>
    8:8:java.lang.String access$000(com.ru.astron.xmpp.jingle.stanzas.Content$Version) -> access$000
    20:20:java.lang.String getNamespace() -> getNamespace
    8:8:com.ru.astron.xmpp.jingle.stanzas.Content$Version valueOf(java.lang.String) -> valueOf
    8:8:com.ru.astron.xmpp.jingle.stanzas.Content$Version[] values() -> values
com.ru.astron.xmpp.jingle.stanzas.JinglePacket -> com.ru.astron.xmpp.jingle.stanzas.JinglePacket:
    9:13:void <init>() -> <init>
    109:114:void addChecksum(byte[],java.lang.String) -> addChecksum
    17:33:com.ru.astron.xml.Element addChild(com.ru.astron.xml.Element) -> addChild
    62:76:void build() -> build
    97:97:java.lang.String getAction() -> getAction
    58:58:com.ru.astron.xml.Element getChecksum() -> getChecksum
    42:45:com.ru.astron.xmpp.jingle.stanzas.Content getJingleContent() -> getJingleContent
    54:54:com.ru.astron.xmpp.jingle.stanzas.Reason getReason() -> getReason
    79:79:java.lang.String getSessionId() -> getSessionId
    105:105:boolean isAction(java.lang.String) -> isAction
    93:94:void setAction(java.lang.String) -> setAction
    37:38:com.ru.astron.xmpp.jingle.stanzas.JinglePacket setContent(com.ru.astron.xmpp.jingle.stanzas.Content) -> setContent
    101:102:void setInitiator(rocks.xmpp.addr.Jid) -> setInitiator
    49:50:com.ru.astron.xmpp.jingle.stanzas.JinglePacket setReason(com.ru.astron.xmpp.jingle.stanzas.Reason) -> setReason
    83:84:void setSessionId(java.lang.String) -> setSessionId
    88:89:java.lang.String toString() -> toString
com.ru.astron.xmpp.jingle.stanzas.Reason -> com.ru.astron.xmpp.jingle.stanzas.Reason:
    11:12:void <init>() -> <init>
com.ru.astron.xmpp.mam.MamReference -> com.ru.astron.xmpp.mam.MamReference:
    8:11:void <init>(long) -> <init>
    13:16:void <init>(long,java.lang.String) -> <init>
    49:61:com.ru.astron.xmpp.mam.MamReference fromAttribute(java.lang.String) -> fromAttribute
    23:23:java.lang.String getReference() -> getReference
    19:19:long getTimestamp() -> getTimestamp
    27:27:boolean greaterThan(com.ru.astron.xmpp.mam.MamReference) -> greaterThan
    31:31:boolean greaterThan(long) -> greaterThan
    35:40:com.ru.astron.xmpp.mam.MamReference max(com.ru.astron.xmpp.mam.MamReference,com.ru.astron.xmpp.mam.MamReference) -> max
    45:45:com.ru.astron.xmpp.mam.MamReference max(com.ru.astron.xmpp.mam.MamReference,long) -> max
    67:67:com.ru.astron.xmpp.mam.MamReference timeOnly() -> timeOnly
com.ru.astron.xmpp.pep.Avatar -> com.ru.astron.xmpp.pep.Avatar:
    8:19:void <init>() -> <init>
    77:81:boolean equals(java.lang.Object) -> equals
    26:26:java.lang.String getFilename() -> getFilename
    22:22:byte[] getImageAsBytes() -> getImageAsBytes
    100:100:boolean isValidSHA1(java.lang.String) -> isValidSHA1
    30:72:com.ru.astron.xmpp.pep.Avatar parseMetadata(com.ru.astron.xml.Element) -> parseMetadata
    86:96:com.ru.astron.xmpp.pep.Avatar parsePresence(com.ru.astron.xml.Element) -> parsePresence
com.ru.astron.xmpp.pep.Avatar$Origin -> com.ru.astron.xmpp.pep.Avatar$Origin:
    10:10:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.String,int) -> <init>
    10:10:com.ru.astron.xmpp.pep.Avatar$Origin valueOf(java.lang.String) -> valueOf
    10:10:com.ru.astron.xmpp.pep.Avatar$Origin[] values() -> values
com.ru.astron.xmpp.pep.PublishOptions -> com.ru.astron.xmpp.pep.PublishOptions:
    16:18:android.os.Bundle openAccess() -> openAccess
    22:25:android.os.Bundle persistentWhitelistAccess() -> persistentWhitelistAccess
    29:30:boolean preconditionNotMet(com.ru.astron.xmpp.stanzas.IqPacket) -> preconditionNotMet
com.ru.astron.xmpp.stanzas.AbstractAcknowledgeableStanza -> com.ru.astron.xmpp.stanzas.AbstractAcknowledgeableStanza:
    9:10:void <init>(java.lang.String) -> <init>
    22:30:com.ru.astron.xml.Element getError() -> getError
    14:14:java.lang.String getId() -> getId
    18:19:void setId(java.lang.String) -> setId
    34:34:boolean valid() -> valid
com.ru.astron.xmpp.stanzas.AbstractStanza -> com.ru.astron.xmpp.stanzas.AbstractStanza:
    10:11:void <init>(java.lang.String) -> <init>
    50:51:boolean fromAccount(com.ru.astron.entities.Account) -> fromAccount
    34:35:boolean fromServer(com.ru.astron.entities.Account) -> fromServer
    18:18:rocks.xmpp.addr.Jid getFrom() -> getFrom
    14:14:rocks.xmpp.addr.Jid getTo() -> getTo
    28:31:void setFrom(rocks.xmpp.addr.Jid) -> setFrom
    22:25:void setTo(rocks.xmpp.addr.Jid) -> setTo
    42:43:boolean toServer(com.ru.astron.entities.Account) -> toServer
com.ru.astron.xmpp.stanzas.IqPacket -> com.ru.astron.xmpp.stanzas.IqPacket:
    17:21:void <init>(com.ru.astron.xmpp.stanzas.IqPacket$TYPE) -> <init>
    24:25:void <init>() -> <init>
    63:66:com.ru.astron.xmpp.stanzas.IqPacket generateResponse(com.ru.astron.xmpp.stanzas.IqPacket$TYPE) -> generateResponse
    42:48:com.ru.astron.xmpp.stanzas.IqPacket$TYPE getType() -> getType
    28:32:com.ru.astron.xml.Element query() -> query
    36:38:com.ru.astron.xml.Element query(java.lang.String) -> query
    71:72:boolean valid() -> valid
com.ru.astron.xmpp.stanzas.IqPacket$TYPE -> com.ru.astron.xmpp.stanzas.IqPacket$TYPE:
    8:7:void <clinit>() -> <clinit>
    7:7:void <init>(java.lang.String,int) -> <init>
    7:7:com.ru.astron.xmpp.stanzas.IqPacket$TYPE valueOf(java.lang.String) -> valueOf
    7:7:com.ru.astron.xmpp.stanzas.IqPacket$TYPE[] values() -> values
com.ru.astron.xmpp.stanzas.MessagePacket -> com.ru.astron.xmpp.stanzas.MessagePacket:
    16:17:void <init>() -> <init>
    91:97:com.ru.astron.xmpp.stanzas.MessagePacket create(com.ru.astron.xml.Element) -> create
    20:20:java.lang.String getBody() -> getBody
    74:87:android.util.Pair getForwardedMessagePacket(java.lang.String,java.lang.String) -> getForwardedMessagePacket
    55:69:int getType() -> getType
    31:33:void setAxolotlMessage(com.ru.astron.xml.Element) -> setAxolotlMessage
    24:28:void setBody(java.lang.String) -> setBody
    36:52:void setType(int) -> setType
com.ru.astron.xmpp.stanzas.PresencePacket -> com.ru.astron.xmpp.stanzas.PresencePacket:
    6:7:void <init>() -> <init>
com.ru.astron.xmpp.stanzas.csi.ActivePacket -> com.ru.astron.xmpp.stanzas.csi.ActivePacket:
    7:9:void <init>() -> <init>
com.ru.astron.xmpp.stanzas.csi.InactivePacket -> com.ru.astron.xmpp.stanzas.csi.InactivePacket:
    7:9:void <init>() -> <init>
com.ru.astron.xmpp.stanzas.streammgmt.AckPacket -> com.ru.astron.xmpp.stanzas.streammgmt.AckPacket:
    8:11:void <init>(int,int) -> <init>
com.ru.astron.xmpp.stanzas.streammgmt.EnablePacket -> com.ru.astron.xmpp.stanzas.streammgmt.EnablePacket:
    8:11:void <init>(int) -> <init>
com.ru.astron.xmpp.stanzas.streammgmt.RequestPacket -> com.ru.astron.xmpp.stanzas.streammgmt.RequestPacket:
    8:10:void <init>(int) -> <init>
com.ru.astron.xmpp.stanzas.streammgmt.ResumePacket -> com.ru.astron.xmpp.stanzas.streammgmt.ResumePacket:
    8:12:void <init>(java.lang.String,int,int) -> <init>
com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask -> com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask:
    101:122:void <init>(com.theartofdev.edmodo.cropper.CropImageView,android.graphics.Bitmap,float[],int,boolean,int,int,int,int,boolean,boolean,com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions,android.net.Uri,android.graphics.Bitmap$CompressFormat,int) -> <init>
    141:162:void <init>(com.theartofdev.edmodo.cropper.CropImageView,android.net.Uri,float[],int,int,int,boolean,int,int,int,int,boolean,boolean,com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions,android.net.Uri,android.graphics.Bitmap$CompressFormat,int) -> <init>
    23:23:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    178:228:com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result doInBackground(java.lang.Void[]) -> doInBackground
    23:23:void onPostExecute(java.lang.Object) -> onPostExecute
    239:253:void onPostExecute(com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result) -> onPostExecute
com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result -> com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result:
    275:281:void <init>(android.graphics.Bitmap,int) -> <init>
    283:289:void <init>(android.net.Uri,int) -> <init>
    291:297:void <init>(java.lang.Exception,boolean) -> <init>
com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask -> com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask:
    44:54:void <init>(com.theartofdev.edmodo.cropper.CropImageView,android.net.Uri) -> <init>
    24:24:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    70:86:com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result doInBackground(java.lang.Void[]) -> doInBackground
    58:58:android.net.Uri getUri() -> getUri
    24:24:void onPostExecute(java.lang.Object) -> onPostExecute
    97:111:void onPostExecute(com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result) -> onPostExecute
com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result -> com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result:
    133:139:void <init>(android.net.Uri,android.graphics.Bitmap,int,int) -> <init>
    141:147:void <init>(android.net.Uri,java.lang.Exception) -> <init>
com.theartofdev.edmodo.cropper.BitmapUtils -> com.theartofdev.edmodo.cropper.BitmapUtils:
    44:55:void <clinit>() -> <clinit>
    738:748:int calculateInSampleSizeByMaxTextureSize(int,int) -> calculateInSampleSizeByMaxTextureSize
    724:730:int calculateInSampleSizeByReqestedSize(int,int,int,int) -> calculateInSampleSizeByReqestedSize
    829:835:void closeSafe(java.io.Closeable) -> closeSafe
    250:279:com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled cropBitmap(android.content.Context,android.net.Uri,float[],int,int,int,boolean,int,int,int,int,boolean,boolean) -> cropBitmap
    473:514:com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled cropBitmap(android.content.Context,android.net.Uri,float[],int,int,int,boolean,int,int,int,int,boolean,boolean,int) -> cropBitmap
    549:589:com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled cropBitmap(android.content.Context,android.net.Uri,float[],int,boolean,int,int,int,android.graphics.Rect,int,int,boolean,boolean) -> cropBitmap
    151:169:com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled cropBitmapObjectHandleOOM(android.graphics.Bitmap,float[],int,boolean,int,int,boolean,boolean) -> cropBitmapObjectHandleOOM
    197:228:android.graphics.Bitmap cropBitmapObjectWithScale(android.graphics.Bitmap,float[],int,boolean,int,int,float,boolean,boolean) -> cropBitmapObjectWithScale
    686:715:android.graphics.Bitmap cropForRotatedImage(android.graphics.Bitmap,float[],android.graphics.Rect,int,boolean,int,int) -> cropForRotatedImage
    621:628:android.graphics.Bitmap decodeImage(android.content.ContentResolver,android.net.Uri,android.graphics.BitmapFactory$Options) -> decodeImage
    600:609:android.graphics.BitmapFactory$Options decodeImageForOption(android.content.ContentResolver,android.net.Uri) -> decodeImageForOption
    111:130:com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled decodeSampledBitmap(android.content.Context,android.net.Uri,int,int) -> decodeSampledBitmap
    642:666:com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled decodeSampledBitmapRegion(android.content.Context,android.net.Uri,android.graphics.Rect,int,int,int) -> decodeSampledBitmapRegion
    355:362:void fixRectForAspectRatio(android.graphics.Rect,int,int) -> fixRectForAspectRatio
    778:818:int getMaxTextureSize() -> getMaxTextureSize
    303:303:float getRectBottom(float[]) -> getRectBottom
    318:318:float getRectCenterX(float[]) -> getRectCenterX
    323:323:float getRectCenterY(float[]) -> getRectCenterY
    337:347:android.graphics.Rect getRectFromPoints(float[],int,int,boolean,int,int) -> getRectFromPoints
    313:313:float getRectHeight(float[]) -> getRectHeight
    288:288:float getRectLeft(float[]) -> getRectLeft
    298:298:float getRectRight(float[]) -> getRectRight
    293:293:float getRectTop(float[]) -> getRectTop
    308:308:float getRectWidth(float[]) -> getRectWidth
    413:442:android.graphics.Bitmap resizeBitmap(android.graphics.Bitmap,int,int,com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions) -> resizeBitmap
    757:766:android.graphics.Bitmap rotateAndFlipBitmapInt(android.graphics.Bitmap,int,boolean,boolean) -> rotateAndFlipBitmapInt
    69:78:com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult rotateBitmapByExif(android.graphics.Bitmap,android.content.Context,android.net.Uri) -> rotateBitmapByExif
    88:104:com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult rotateBitmapByExif(android.graphics.Bitmap,android.support.media.ExifInterface) -> rotateBitmapByExif
    400:405:void writeBitmapToUri(android.content.Context,android.graphics.Bitmap,android.net.Uri,android.graphics.Bitmap$CompressFormat,int) -> writeBitmapToUri
    374:388:android.net.Uri writeTempStateStoreBitmap(android.content.Context,android.graphics.Bitmap,android.net.Uri) -> writeTempStateStoreBitmap
com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled -> com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled:
    849:852:void <init>(android.graphics.Bitmap,int) -> <init>
com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult -> com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult:
    867:870:void <init>(android.graphics.Bitmap,int) -> <init>
com.theartofdev.edmodo.cropper.CropImage -> com.theartofdev.edmodo.cropper.CropImage:
    417:417:com.theartofdev.edmodo.cropper.CropImage$ActivityBuilder activity() -> activity
    430:430:com.theartofdev.edmodo.cropper.CropImage$ActivityBuilder activity(android.net.Uri) -> activity
    442:442:com.theartofdev.edmodo.cropper.CropImage$ActivityResult getActivityResult(android.content.Intent) -> getActivityResult
    240:257:java.util.List getCameraIntents(android.content.Context,android.content.pm.PackageManager) -> getCameraIntents
    342:347:android.net.Uri getCaptureImageOutputUri(android.content.Context) -> getCaptureImageOutputUri
    266:292:java.util.List getGalleryIntents(android.content.pm.PackageManager,java.lang.String,boolean) -> getGalleryIntents
    162:162:android.content.Intent getPickImageChooserIntent(android.content.Context) -> getPickImageChooserIntent
    183:214:android.content.Intent getPickImageChooserIntent(android.content.Context,java.lang.CharSequence,boolean,boolean) -> getPickImageChooserIntent
    359:364:android.net.Uri getPickImageResultUri(android.content.Context,android.content.Intent) -> getPickImageResultUri
    318:332:boolean hasPermissionInManifest(android.content.Context,java.lang.String) -> hasPermissionInManifest
    304:304:boolean isExplicitCameraPermissionRequired(android.content.Context) -> isExplicitCameraPermissionRequired
    381:381:boolean isReadExternalStoragePermissionsRequired(android.content.Context,android.net.Uri) -> isReadExternalStoragePermissionsRequired
    397:404:boolean isUriRequiresPermissions(android.content.Context,android.net.Uri) -> isUriRequiresPermissions
    136:138:void startPickImageActivity(android.app.Activity) -> startPickImageActivity
com.theartofdev.edmodo.cropper.CropImage$ActivityBuilder -> com.theartofdev.edmodo.cropper.CropImage$ActivityBuilder:
    448:448:void <init>(android.net.Uri,com.theartofdev.edmodo.cropper.CropImage$1) -> <init>
    456:459:void <init>(android.net.Uri) -> <init>
    463:463:android.content.Intent getIntent(android.content.Context) -> getIntent
    468:476:android.content.Intent getIntent(android.content.Context,java.lang.Class) -> getIntent
    654:657:com.theartofdev.edmodo.cropper.CropImage$ActivityBuilder setAspectRatio(int,int) -> setAspectRatio
    758:760:com.theartofdev.edmodo.cropper.CropImage$ActivityBuilder setMinCropResultSize(int,int) -> setMinCropResultSize
    806:807:com.theartofdev.edmodo.cropper.CropImage$ActivityBuilder setOutputCompressFormat(android.graphics.Bitmap$CompressFormat) -> setOutputCompressFormat
    485:487:void start(android.app.Activity) -> start
com.theartofdev.edmodo.cropper.CropImage$ActivityResult -> com.theartofdev.edmodo.cropper.CropImage$ActivityResult:
    950:950:void <clinit>() -> <clinit>
    972:983:void <init>(android.net.Uri,android.net.Uri,java.lang.Exception,float[],android.graphics.Rect,int,android.graphics.Rect,int) -> <init>
    986:997:void <init>(android.os.Parcel) -> <init>
    1013:1013:int describeContents() -> describeContents
    1001:1009:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.theartofdev.edmodo.cropper.CropImage$ActivityResult$1 -> com.theartofdev.edmodo.cropper.CropImage$ActivityResult$1:
    951:951:void <init>() -> <init>
    951:951:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    954:954:com.theartofdev.edmodo.cropper.CropImage$ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    951:951:java.lang.Object[] newArray(int) -> newArray
    959:959:com.theartofdev.edmodo.cropper.CropImage$ActivityResult[] newArray(int) -> newArray
com.theartofdev.edmodo.cropper.CropImageActivity -> com.theartofdev.edmodo.cropper.CropImageActivity:
    41:41:void <init>() -> <init>
    263:275:void cropImage() -> cropImage
    287:296:android.net.Uri getOutputUri() -> getOutputUri
    317:330:android.content.Intent getResultIntent(android.net.Uri,java.lang.Exception,int) -> getResultIntent
    194:216:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    185:187:void onBackPressed() -> onBackPressed
    57:96:void onCreate(android.os.Bundle) -> onCreate
    114:151:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    256:257:void onCropImageComplete(com.theartofdev.edmodo.cropper.CropImageView,com.theartofdev.edmodo.cropper.CropImageView$CropResult) -> onCropImageComplete
    156:180:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    221:238:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    242:252:void onSetImageUriComplete(com.theartofdev.edmodo.cropper.CropImageView,android.net.Uri,java.lang.Exception) -> onSetImageUriComplete
    100:103:void onStart() -> onStart
    107:110:void onStop() -> onStop
    279:280:void rotateImage(int) -> rotateImage
    304:307:void setResult(android.net.Uri,java.lang.Exception,int) -> setResult
    311:313:void setResultCancel() -> setResultCancel
    335:348:void updateMenuItemIconColor(android.view.Menu,int,int) -> updateMenuItemIconColor
com.theartofdev.edmodo.cropper.CropImageAnimation -> com.theartofdev.edmodo.cropper.CropImageAnimation:
    53:61:void <init>(android.widget.ImageView,com.theartofdev.edmodo.cropper.CropOverlayView) -> <init>
    79:109:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    116:117:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    120:120:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    112:112:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    71:74:void setEndState(float[],android.graphics.Matrix) -> setEndState
    64:68:void setStartState(float[],android.graphics.Matrix) -> setStartState
com.theartofdev.edmodo.cropper.CropImageOptions -> com.theartofdev.edmodo.cropper.CropImageOptions:
    32:32:void <clinit>() -> <clinit>
    226:286:void <init>() -> <init>
    289:338:void <init>(android.os.Parcel) -> <init>
    394:394:int describeContents() -> describeContents
    403:404:void validate() -> validate
    342:390:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.theartofdev.edmodo.cropper.CropImageOptions$1 -> com.theartofdev.edmodo.cropper.CropImageOptions$1:
    33:33:void <init>() -> <init>
    33:33:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    36:36:com.theartofdev.edmodo.cropper.CropImageOptions createFromParcel(android.os.Parcel) -> createFromParcel
    33:33:java.lang.Object[] newArray(int) -> newArray
    41:41:com.theartofdev.edmodo.cropper.CropImageOptions[] newArray(int) -> newArray
com.theartofdev.edmodo.cropper.CropImageView -> com.theartofdev.edmodo.cropper.CropImageView:
    179:180:void <init>(android.content.Context) -> <init>
    183:352:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:void access$000(com.theartofdev.edmodo.cropper.CropImageView,boolean,boolean) -> access$000
    42:42:com.theartofdev.edmodo.cropper.CropImageView$OnSetCropOverlayReleasedListener access$100(com.theartofdev.edmodo.cropper.CropImageView) -> access$100
    42:42:com.theartofdev.edmodo.cropper.CropImageView$OnSetCropOverlayMovedListener access$200(com.theartofdev.edmodo.cropper.CropImageView) -> access$200
    1630:1728:void applyImageMatrix(float,float,boolean,boolean) -> applyImageMatrix
    1222:1241:void clearImageInt() -> clearImageInt
    1121:1123:void flipImageHorizontally() -> flipImageHorizontally
    1127:1129:void flipImageVertically() -> flipImageVertically
    512:512:android.util.Pair getAspectRatio() -> getAspectRatio
    685:706:float[] getCropPoints() -> getCropPoints
    640:653:android.graphics.Rect getCropRect() -> getCropRect
    372:372:com.theartofdev.edmodo.cropper.CropImageView$CropShape getCropShape() -> getCropShape
    668:671:android.graphics.RectF getCropWindowRect() -> getCropWindowRect
    737:737:android.graphics.Bitmap getCroppedImage() -> getCroppedImage
    761:805:android.graphics.Bitmap getCroppedImage(int,int,com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions) -> getCroppedImage
    814:815:void getCroppedImageAsync() -> getCroppedImageAsync
    840:841:void getCroppedImageAsync(int,int,com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions) -> getCroppedImageAsync
    499:499:com.theartofdev.edmodo.cropper.CropImageView$Guidelines getGuidelines() -> getGuidelines
    608:608:int getImageResource() -> getImageResource
    613:613:android.net.Uri getImageUri() -> getImageUri
    407:407:int getMaxZoom() -> getMaxZoom
    1769:1780:int getOnMeasureSpec(int,int,int) -> getOnMeasureSpec
    441:441:int getRotatedDegrees() -> getRotatedDegrees
    356:356:com.theartofdev.edmodo.cropper.CropImageView$ScaleType getScaleType() -> getScaleType
    622:630:android.graphics.Rect getWholeImageRect() -> getWholeImageRect
    1565:1621:void handleCropWindowChanged(boolean,boolean) -> handleCropWindowChanged
    1736:1754:void mapImagePointsByImageMatrix() -> mapImagePointsByImageMatrix
    1163:1182:void onImageCroppingAsyncComplete(com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result) -> onImageCroppingAsyncComplete
    1508:1542:void onLayout(boolean,int,int,int,int) -> onLayout
    1447:1503:void onMeasure(int,int) -> onMeasure
    1380:1443:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1332:1374:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1141:1153:void onSetImageUriAsyncComplete(com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result) -> onSetImageUriAsyncComplete
    1550:1552:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1045:1117:void rotateImage(int) -> rotateImage
    919:920:void saveCroppedImageAsync(android.net.Uri,android.graphics.Bitmap$CompressFormat,int,int,int,com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions) -> saveCroppedImageAsync
    390:395:void setAutoZoomEnabled(boolean) -> setAutoZoomEnabled
    1191:1212:void setBitmap(android.graphics.Bitmap,int,android.net.Uri,int,int) -> setBitmap
    1787:1790:void setCropOverlayVisibility() -> setCropOverlayVisibility
    716:717:void setCropRect(android.graphics.Rect) -> setCropRect
    380:381:void setCropShape(com.theartofdev.edmodo.cropper.CropImageView$CropShape) -> setCropShape
    468:469:void setFixedAspectRatio(boolean) -> setFixedAspectRatio
    478:482:void setFlippedHorizontally(boolean) -> setFlippedHorizontally
    491:495:void setFlippedVertically(boolean) -> setFlippedVertically
    507:508:void setGuidelines(com.theartofdev.edmodo.cropper.CropImageView$Guidelines) -> setGuidelines
    963:965:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    997:1002:void setImageResource(int) -> setImageResource
    1012:1030:void setImageUriAsync(android.net.Uri) -> setImageUriAsync
    412:417:void setMaxZoom(int) -> setMaxZoom
    399:403:void setMultiTouchEnabled(boolean) -> setMultiTouchEnabled
    954:955:void setOnCropImageCompleteListener(com.theartofdev.edmodo.cropper.CropImageView$OnCropImageCompleteListener) -> setOnCropImageCompleteListener
    938:939:void setOnCropWindowChangedListener(com.theartofdev.edmodo.cropper.CropImageView$OnSetCropWindowChangeListener) -> setOnCropWindowChangedListener
    933:934:void setOnSetCropOverlayMovedListener(com.theartofdev.edmodo.cropper.CropImageView$OnSetCropOverlayMovedListener) -> setOnSetCropOverlayMovedListener
    928:929:void setOnSetCropOverlayReleasedListener(com.theartofdev.edmodo.cropper.CropImageView$OnSetCropOverlayReleasedListener) -> setOnSetCropOverlayReleasedListener
    946:947:void setOnSetImageUriCompleteListener(com.theartofdev.edmodo.cropper.CropImageView$OnSetImageUriCompleteListener) -> setOnSetImageUriCompleteListener
    1796:1801:void setProgressBarVisibility() -> setProgressBarVisibility
    450:453:void setRotatedDegrees(int) -> setRotatedDegrees
    603:604:void setSaveBitmapToInstanceState(boolean) -> setSaveBitmapToInstanceState
    361:368:void setScaleType(com.theartofdev.edmodo.cropper.CropImageView$ScaleType) -> setScaleType
    580:584:void setShowCropOverlay(boolean) -> setShowCropOverlay
    559:563:void setShowProgressBar(boolean) -> setShowProgressBar
    541:544:void setSnapRadius(float) -> setSnapRadius
    1267:1328:void startCropWorkerTask(int,int,com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions,android.net.Uri,android.graphics.Bitmap$CompressFormat,int) -> startCropWorkerTask
    1805:1819:void updateImageBounds(boolean) -> updateImageBounds
com.theartofdev.edmodo.cropper.CropImageView$1 -> com.theartofdev.edmodo.cropper.CropImageView$1:
    334:334:void <init>(com.theartofdev.edmodo.cropper.CropImageView) -> <init>
    337:346:void onCropWindowChanged(boolean) -> onCropWindowChanged
com.theartofdev.edmodo.cropper.CropImageView$CropResult -> com.theartofdev.edmodo.cropper.CropImageView$CropResult:
    2054:2065:void <init>(android.graphics.Bitmap,android.net.Uri,android.graphics.Bitmap,android.net.Uri,java.lang.Exception,float[],android.graphics.Rect,android.graphics.Rect,int,int) -> <init>
    2111:2111:float[] getCropPoints() -> getCropPoints
    2116:2116:android.graphics.Rect getCropRect() -> getCropRect
    2106:2106:java.lang.Exception getError() -> getError
    2080:2080:android.net.Uri getOriginalUri() -> getOriginalUri
    2126:2126:int getRotation() -> getRotation
    2131:2131:int getSampleSize() -> getSampleSize
    2101:2101:android.net.Uri getUri() -> getUri
    2121:2121:android.graphics.Rect getWholeImageRect() -> getWholeImageRect
com.theartofdev.edmodo.cropper.CropImageView$CropShape -> com.theartofdev.edmodo.cropper.CropImageView$CropShape:
    1829:1828:void <clinit>() -> <clinit>
    1828:1828:void <init>(java.lang.String,int) -> <init>
    1828:1828:com.theartofdev.edmodo.cropper.CropImageView$CropShape valueOf(java.lang.String) -> valueOf
    1828:1828:com.theartofdev.edmodo.cropper.CropImageView$CropShape[] values() -> values
com.theartofdev.edmodo.cropper.CropImageView$Guidelines -> com.theartofdev.edmodo.cropper.CropImageView$Guidelines:
    1881:1879:void <clinit>() -> <clinit>
    1879:1879:void <init>(java.lang.String,int) -> <init>
    1879:1879:com.theartofdev.edmodo.cropper.CropImageView$Guidelines valueOf(java.lang.String) -> valueOf
    1879:1879:com.theartofdev.edmodo.cropper.CropImageView$Guidelines[] values() -> values
com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions -> com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions:
    1897:1894:void <clinit>() -> <clinit>
    1894:1894:void <init>(java.lang.String,int) -> <init>
    1894:1894:com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions valueOf(java.lang.String) -> valueOf
    1894:1894:com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions[] values() -> values
com.theartofdev.edmodo.cropper.CropImageView$ScaleType -> com.theartofdev.edmodo.cropper.CropImageView$ScaleType:
    1847:1840:void <clinit>() -> <clinit>
    1840:1840:void <init>(java.lang.String,int) -> <init>
    1840:1840:com.theartofdev.edmodo.cropper.CropImageView$ScaleType valueOf(java.lang.String) -> valueOf
    1840:1840:com.theartofdev.edmodo.cropper.CropImageView$ScaleType[] values() -> values
com.theartofdev.edmodo.cropper.CropOverlayView -> com.theartofdev.edmodo.cropper.CropOverlayView:
    136:137:void <init>(android.content.Context) -> <init>
    140:141:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    33:33:com.theartofdev.edmodo.cropper.CropWindowHandler access$100(com.theartofdev.edmodo.cropper.CropOverlayView) -> access$100
    894:961:boolean calculateBounds(android.graphics.RectF) -> calculateBounds
    973:979:void callOnCropWindowChanged(boolean) -> callOnCropWindowChanged
    599:639:void drawBackground(android.graphics.Canvas) -> drawBackground
    691:704:void drawBorders(android.graphics.Canvas) -> drawBorders
    708:780:void drawCorners(android.graphics.Canvas) -> drawCorners
    646:687:void drawGuidelines(android.graphics.Canvas) -> drawGuidelines
    516:567:void fixCropWindowRectByRules(android.graphics.RectF) -> fixCropWindowRectByRules
    160:163:void fixCurrentCropWindowRect() -> fixCurrentCropWindowRect
    268:268:int getAspectRatioX() -> getAspectRatioX
    289:289:int getAspectRatioY() -> getAspectRatioY
    200:200:com.theartofdev.edmodo.cropper.CropImageView$CropShape getCropShape() -> getCropShape
    150:150:android.graphics.RectF getCropWindowRect() -> getCropWindowRect
    228:228:com.theartofdev.edmodo.cropper.CropImageView$Guidelines getGuidelines() -> getGuidelines
    361:361:android.graphics.Rect getInitialCropWindowRect() -> getInitialCropWindowRect
    784:786:android.graphics.Paint getNewPaint(int) -> getNewPaint
    791:799:android.graphics.Paint getNewPaintOrNull(float,int) -> getNewPaintOrNull
    429:435:void initCropWindow() -> initCropWindow
    249:249:boolean isFixAspectRatio() -> isFixAspectRatio
    967:967:boolean isNonStraightAngleRotated() -> isNonStraightAngleRotated
    837:841:void onActionDown(float,float) -> onActionDown
    858:880:void onActionMove(float,float) -> onActionMove
    845:850:void onActionUp() -> onActionUp
    576:594:void onDraw(android.graphics.Canvas) -> onDraw
    806:828:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    191:196:void resetCropOverlayView() -> resetCropOverlayView
    273:274:void setAspectRatioX(int) -> setAspectRatioX
    298:299:void setAspectRatioY(int) -> setAspectRatioY
    174:187:void setBounds(float[],int,int) -> setBounds
    205:224:void setCropShape(com.theartofdev.edmodo.cropper.CropImageView$CropShape) -> setCropShape
    145:146:void setCropWindowChangeListener(com.theartofdev.edmodo.cropper.CropOverlayView$CropWindowChangeListener) -> setCropWindowChangeListener
    355:357:void setCropWindowLimits(float,float,float,float) -> setCropWindowLimits
    155:156:void setCropWindowRect(android.graphics.RectF) -> setCropWindowRect
    257:264:void setFixedAspectRatio(boolean) -> setFixedAspectRatio
    236:242:void setGuidelines(com.theartofdev.edmodo.cropper.CropImageView$Guidelines) -> setGuidelines
    389:419:void setInitialAttributeValues(com.theartofdev.edmodo.cropper.CropImageOptions) -> setInitialAttributeValues
    366:372:void setInitialCropWindowRect(android.graphics.Rect) -> setInitialCropWindowRect
    323:330:boolean setMultiTouchEnabled(boolean) -> setMultiTouchEnabled
    318:319:void setSnapRadius(float) -> setSnapRadius
com.theartofdev.edmodo.cropper.CropOverlayView$ScaleListener -> com.theartofdev.edmodo.cropper.CropOverlayView$ScaleListener:
    999:999:void <init>(com.theartofdev.edmodo.cropper.CropOverlayView) -> <init>
    999:999:void <init>(com.theartofdev.edmodo.cropper.CropOverlayView,com.theartofdev.edmodo.cropper.CropOverlayView$1) -> <init>
    1004:1028:boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.theartofdev.edmodo.cropper.CropWindowHandler -> com.theartofdev.edmodo.cropper.CropWindowHandler:
    18:71:void <init>() -> <init>
    368:368:boolean focusCenter() -> focusCenter
    97:97:float getMaxCropHeight() -> getMaxCropHeight
    92:92:float getMaxCropWidth() -> getMaxCropWidth
    87:87:float getMinCropHeight() -> getMinCropHeight
    82:82:float getMinCropWidth() -> getMinCropWidth
    176:180:com.theartofdev.edmodo.cropper.CropWindowMoveHandler getMoveHandler(float,float,float,com.theartofdev.edmodo.cropper.CropImageView$CropShape) -> getMoveHandler
    257:292:com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type getOvalPressedMoveType(float,float) -> getOvalPressedMoveType
    76:77:android.graphics.RectF getRect() -> getRect
    196:232:com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type getRectanglePressedMoveType(float,float,float) -> getRectanglePressedMoveType
    107:107:float getScaleFactorHeight() -> getScaleFactorHeight
    102:102:float getScaleFactorWidth() -> getScaleFactorWidth
    355:355:boolean isInCenterTargetZone(float,float,float,float,float,float) -> isInCenterTargetZone
    307:307:boolean isInCornerTargetZone(float,float,float,float,float) -> isInCornerTargetZone
    323:323:boolean isInHorizontalTargetZone(float,float,float,float,float,float) -> isInHorizontalTargetZone
    339:339:boolean isInVerticalTargetZone(float,float,float,float,float,float) -> isInVerticalTargetZone
    134:138:void setCropWindowLimits(float,float,float,float) -> setCropWindowLimits
    142:148:void setInitialAttributeValues(com.theartofdev.edmodo.cropper.CropImageOptions) -> setInitialAttributeValues
    152:153:void setRect(android.graphics.RectF) -> setRect
    162:162:boolean showGuidelines() -> showGuidelines
com.theartofdev.edmodo.cropper.CropWindowMoveHandler -> com.theartofdev.edmodo.cropper.CropWindowMoveHandler:
    28:28:void <clinit>() -> <clinit>
    63:70:void <init>(com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type,com.theartofdev.edmodo.cropper.CropWindowHandler,float,float) -> <init>
    616:683:void adjustBottom(android.graphics.RectF,float,android.graphics.RectF,int,float,float,boolean,boolean) -> adjustBottom
    714:715:void adjustBottomByAspectRatio(android.graphics.RectF,float) -> adjustBottomByAspectRatio
    353:420:void adjustLeft(android.graphics.RectF,float,android.graphics.RectF,float,float,boolean,boolean) -> adjustLeft
    690:691:void adjustLeftByAspectRatio(android.graphics.RectF,float) -> adjustLeftByAspectRatio
    722:729:void adjustLeftRightByAspectRatio(android.graphics.RectF,android.graphics.RectF,float) -> adjustLeftRightByAspectRatio
    441:510:void adjustRight(android.graphics.RectF,float,android.graphics.RectF,int,float,float,boolean,boolean) -> adjustRight
    706:707:void adjustRightByAspectRatio(android.graphics.RectF,float) -> adjustRightByAspectRatio
    529:595:void adjustTop(android.graphics.RectF,float,android.graphics.RectF,float,float,boolean,boolean) -> adjustTop
    736:743:void adjustTopBottomByAspectRatio(android.graphics.RectF,android.graphics.RectF,float) -> adjustTopBottomByAspectRatio
    698:699:void adjustTopByAspectRatio(android.graphics.RectF,float) -> adjustTopByAspectRatio
    747:747:float calculateAspectRatio(float,float,float,float) -> calculateAspectRatio
    134:181:void calculateTouchOffset(android.graphics.RectF,float,float) -> calculateTouchOffset
    110:123:void move(android.graphics.RectF,float,float,android.graphics.RectF,int,int,float,boolean,float) -> move
    186:204:void moveCenter(android.graphics.RectF,float,float,android.graphics.RectF,int,int,float) -> moveCenter
    262:318:void moveSizeWithFixedAspectRatio(android.graphics.RectF,float,float,android.graphics.RectF,int,int,float,float) -> moveSizeWithFixedAspectRatio
    213:245:void moveSizeWithFreeAspectRatio(android.graphics.RectF,float,float,android.graphics.RectF,int,int,float) -> moveSizeWithFreeAspectRatio
    322:334:void snapEdgesToBounds(android.graphics.RectF,android.graphics.RectF,float) -> snapEdgesToBounds
com.theartofdev.edmodo.cropper.CropWindowMoveHandler$1 -> com.theartofdev.edmodo.cropper.CropWindowMoveHandler$1:
    138:138:void <clinit>() -> <clinit>
com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type -> com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type:
    755:754:void <clinit>() -> <clinit>
    754:754:void <init>(java.lang.String,int) -> <init>
    754:754:com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type valueOf(java.lang.String) -> valueOf
    754:754:com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type[] values() -> values
com.theartofdev.edmodo.cropper.R$styleable -> com.theartofdev.edmodo.cropper.R$styleable:
    1215:1662:void <clinit>() -> <clinit>
com.wefika.flowlayout.FlowLayout -> com.wefika.flowlayout.FlowLayout:
    49:50:void <init>(android.content.Context) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    39:39:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    344:344:com.wefika.flowlayout.FlowLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    39:39:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    39:39:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    328:328:com.wefika.flowlayout.FlowLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    336:336:com.wefika.flowlayout.FlowLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    364:364:int getGravity() -> getGravity
    371:371:boolean isIcs() -> isIcs
    175:324:void onLayout(boolean,int,int,int,int) -> onLayout
    78:167:void onMeasure(int,int) -> onMeasure
    349:361:void setGravity(int) -> setGravity
com.wefika.flowlayout.FlowLayout$LayoutParams -> com.wefika.flowlayout.FlowLayout$LayoutParams:
    379:386:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    391:392:void <init>(int,int) -> <init>
    395:396:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
com.wefika.flowlayout.R$styleable -> com.wefika.flowlayout.R$styleable:
    15:19:void <clinit>() -> <clinit>
de.measite.minidns.AbstractDNSClient -> de.measite.minidns.AbstractDNSClient:
    40:66:void <clinit>() -> <clinit>
    80:89:void <init>(de.measite.minidns.DNSCache) -> <init>
    95:96:void <init>() -> <init>
    218:222:de.measite.minidns.DNSMessage$Builder buildMessage(de.measite.minidns.Question) -> buildMessage
    341:361:java.util.Set getCachedIPNameserverAddressesFor(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE) -> getCachedIPNameserverAddressesFor
    332:332:java.util.Set getCachedIPv4AddressesFor(de.measite.minidns.DNSName) -> getCachedIPv4AddressesFor
    365:365:java.util.Set getCachedIPv4NameserverAddressesFor(de.measite.minidns.DNSName) -> getCachedIPv4NameserverAddressesFor
    336:336:java.util.Set getCachedIPv6AddressesFor(de.measite.minidns.DNSName) -> getCachedIPv6AddressesFor
    369:369:java.util.Set getCachedIPv6NameserverAddressesFor(de.measite.minidns.DNSName) -> getCachedIPv6NameserverAddressesFor
    328:328:java.util.Set getCachedNameserverRecordsFor(de.measite.minidns.DNSName) -> getCachedNameserverRecordsFor
    317:324:java.util.Set getCachedRecordsFor(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE) -> getCachedRecordsFor
    282:282:de.measite.minidns.source.DNSDataSource getDataSource() -> getDataSource
    311:313:de.measite.minidns.DNSMessage getQueryFor(de.measite.minidns.Question) -> getQueryFor
    203:208:boolean isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) -> isResponseCacheable
    144:145:de.measite.minidns.DNSMessage query(de.measite.minidns.Question) -> query
    164:178:de.measite.minidns.DNSMessage query(de.measite.minidns.DNSMessage,java.net.InetAddress,int) -> query
    261:261:de.measite.minidns.DNSMessage query(de.measite.minidns.DNSMessage,java.net.InetAddress) -> query
de.measite.minidns.AbstractDNSClient$1 -> de.measite.minidns.AbstractDNSClient$1:
    348:348:void <clinit>() -> <clinit>
de.measite.minidns.AbstractDNSClient$IpVersionSetting -> de.measite.minidns.AbstractDNSClient$IpVersionSetting:
    59:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:de.measite.minidns.AbstractDNSClient$IpVersionSetting valueOf(java.lang.String) -> valueOf
    58:58:de.measite.minidns.AbstractDNSClient$IpVersionSetting[] values() -> values
de.measite.minidns.DNSCache -> de.measite.minidns.DNSCache:
    16:16:void <init>() -> <init>
    38:38:de.measite.minidns.DNSMessage get(de.measite.minidns.DNSMessage) -> get
    25:26:void put(de.measite.minidns.DNSMessage,de.measite.minidns.DNSMessage) -> put
de.measite.minidns.DNSClient -> de.measite.minidns.DNSClient:
    41:66:void <clinit>() -> <clinit>
    79:80:void <init>() -> <init>
    83:84:void <init>(de.measite.minidns.DNSCache) -> <init>
    243:242:void addDnsServerLookupMechanism(de.measite.minidns.dnsserverlookup.DNSServerLookupMechanism) -> addDnsServerLookupMechanism
    213:212:java.lang.String[] findDNS() -> findDNS
    292:292:java.net.InetAddress getRandomHarcodedIpv6DnsServer() -> getRandomHarcodedIpv6DnsServer
    288:288:java.net.InetAddress getRandomHardcodedIpv4DnsServer() -> getRandomHardcodedIpv4DnsServer
    88:90:de.measite.minidns.DNSMessage$Builder newQuestion(de.measite.minidns.DNSMessage$Builder) -> newQuestion
    95:204:de.measite.minidns.DNSMessage query(de.measite.minidns.DNSMessage$Builder) -> query
    252:252:boolean removeDNSServerLookupMechanism(de.measite.minidns.dnsserverlookup.DNSServerLookupMechanism) -> removeDNSServerLookupMechanism
de.measite.minidns.DNSClient$1 -> de.measite.minidns.DNSClient$1:
    180:129:void <clinit>() -> <clinit>
de.measite.minidns.DNSMessage -> de.measite.minidns.DNSMessage:
    48:48:void <clinit>() -> <clinit>
    302:373:void <init>(de.measite.minidns.DNSMessage$Builder) -> <init>
    381:417:void <init>(byte[]) -> <init>
    424:441:void <init>(de.measite.minidns.DNSMessage) -> <init>
    791:791:de.measite.minidns.DNSMessage$Builder asBuilder() -> asBuilder
    466:467:java.net.DatagramPacket asDatagram(java.net.InetAddress,int) -> asDatagram
    797:800:de.measite.minidns.DNSMessage asNormalizedVersion() -> asNormalizedVersion
    829:829:de.measite.minidns.DNSMessage$Builder builder() -> builder
    539:567:int calculateHeaderBitmap() -> calculateHeaderBitmap
    593:595:java.util.List copyAnswers() -> copyAnswers
    605:607:java.util.List copyAuthority() -> copyAuthority
    816:825:boolean equals(java.lang.Object) -> equals
    770:787:java.util.Set getAnswersFor(de.measite.minidns.Question) -> getAnswersFor
    611:616:de.measite.minidns.EDNS getEdns() -> getEdns
    621:622:de.measite.minidns.Record getOptPseudoRecord() -> getOptPseudoRecord
    444:452:int getOptRrPosition(java.util.List) -> getOptRrPosition
    571:571:de.measite.minidns.Question getQuestion() -> getQuestion
    807:811:int hashCode() -> hashCode
    631:635:boolean isDnssecOk() -> isDnssecOk
    479:532:byte[] serialize() -> serialize
    642:694:java.lang.String toString() -> toString
    471:474:void writeTo(java.io.DataOutputStream) -> writeTo
de.measite.minidns.DNSMessage$Builder -> de.measite.minidns.DNSMessage$Builder:
    832:832:void <init>(de.measite.minidns.DNSMessage$1) -> <init>
    832:832:void <init>(de.measite.minidns.DNSMessage,de.measite.minidns.DNSMessage$1) -> <init>
    834:835:void <init>() -> <init>
    837:859:void <init>(de.measite.minidns.DNSMessage) -> <init>
    832:832:int access$000(de.measite.minidns.DNSMessage$Builder) -> access$000
    832:832:de.measite.minidns.DNSMessage$OPCODE access$100(de.measite.minidns.DNSMessage$Builder) -> access$100
    832:832:boolean access$1000(de.measite.minidns.DNSMessage$Builder) -> access$1000
    832:832:java.util.List access$1100(de.measite.minidns.DNSMessage$Builder) -> access$1100
    832:832:java.util.List access$1200(de.measite.minidns.DNSMessage$Builder) -> access$1200
    832:832:java.util.List access$1300(de.measite.minidns.DNSMessage$Builder) -> access$1300
    832:832:java.util.List access$1400(de.measite.minidns.DNSMessage$Builder) -> access$1400
    832:832:de.measite.minidns.EDNS$Builder access$1500(de.measite.minidns.DNSMessage$Builder) -> access$1500
    832:832:de.measite.minidns.DNSMessage$RESPONSE_CODE access$200(de.measite.minidns.DNSMessage$Builder) -> access$200
    832:832:long access$300(de.measite.minidns.DNSMessage$Builder) -> access$300
    832:832:boolean access$400(de.measite.minidns.DNSMessage$Builder) -> access$400
    832:832:boolean access$500(de.measite.minidns.DNSMessage$Builder) -> access$500
    832:832:boolean access$600(de.measite.minidns.DNSMessage$Builder) -> access$600
    832:832:boolean access$700(de.measite.minidns.DNSMessage$Builder) -> access$700
    832:832:boolean access$800(de.measite.minidns.DNSMessage$Builder) -> access$800
    832:832:boolean access$900(de.measite.minidns.DNSMessage$Builder) -> access$900
    1128:1128:de.measite.minidns.DNSMessage build() -> build
    1121:1124:de.measite.minidns.EDNS$Builder getEdnsBuilder() -> getEdnsBuilder
    1080:1082:de.measite.minidns.DNSMessage$Builder setAdditionalResourceRecords(java.util.Collection) -> setAdditionalResourceRecords
    1053:1055:de.measite.minidns.DNSMessage$Builder setAnswers(java.util.Collection) -> setAnswers
    963:964:de.measite.minidns.DNSMessage$Builder setAuthenticData(boolean) -> setAuthenticData
    986:987:de.measite.minidns.DNSMessage$Builder setCheckingDisabled(boolean) -> setCheckingDisabled
    887:888:de.measite.minidns.DNSMessage$Builder setId(int) -> setId
    1074:1076:de.measite.minidns.DNSMessage$Builder setNameserverRecords(java.util.Collection) -> setNameserverRecords
    1031:1033:de.measite.minidns.DNSMessage$Builder setQuestion(de.measite.minidns.Question) -> setQuestion
    941:942:de.measite.minidns.DNSMessage$Builder setRecursionDesired(boolean) -> setRecursionDesired
de.measite.minidns.DNSMessage$OPCODE -> de.measite.minidns.DNSMessage$OPCODE:
    138:158:void <clinit>() -> <clinit>
    169:171:void <init>(java.lang.String,int) -> <init>
    191:192:de.measite.minidns.DNSMessage$OPCODE getOpcode(int) -> getOpcode
    179:179:byte getValue() -> getValue
    137:137:de.measite.minidns.DNSMessage$OPCODE valueOf(java.lang.String) -> valueOf
    137:137:de.measite.minidns.DNSMessage$OPCODE[] values() -> values
de.measite.minidns.DNSMessage$RESPONSE_CODE -> de.measite.minidns.DNSMessage$RESPONSE_CODE:
    59:89:void <clinit>() -> <clinit>
    101:103:void <init>(java.lang.String,int,int) -> <init>
    122:123:de.measite.minidns.DNSMessage$RESPONSE_CODE getResponseCode(int) -> getResponseCode
    111:111:byte getValue() -> getValue
    58:58:de.measite.minidns.DNSMessage$RESPONSE_CODE valueOf(java.lang.String) -> valueOf
    58:58:de.measite.minidns.DNSMessage$RESPONSE_CODE[] values() -> values
de.measite.minidns.DNSName -> de.measite.minidns.DNSName:
    24:55:void <clinit>() -> <clinit>
    80:81:void <init>(java.lang.String) -> <init>
    83:97:void <init>(java.lang.String,boolean) -> <init>
    109:122:void <init>(java.lang.String[]) -> <init>
    235:235:char charAt(int) -> charAt
    24:24:int compareTo(java.lang.Object) -> compareTo
    330:330:int compareTo(de.measite.minidns.DNSName) -> compareTo
    335:344:boolean equals(java.lang.Object) -> equals
    249:249:de.measite.minidns.DNSName from(java.lang.CharSequence) -> from
    253:253:de.measite.minidns.DNSName from(java.lang.String) -> from
    257:263:de.measite.minidns.DNSName from(de.measite.minidns.DNSName,de.measite.minidns.DNSName) -> from
    135:136:byte[] getBytes() -> getBytes
    201:202:java.lang.String getHostpart() -> getHostpart
    388:389:int getLabelCount() -> getLabelCount
    427:428:de.measite.minidns.DNSName getParent() -> getParent
    349:353:int hashCode() -> hashCode
    373:384:boolean isChildOf(de.measite.minidns.DNSName) -> isChildOf
    432:432:boolean isRootLabel() -> isRootLabel
    230:230:int length() -> length
    277:294:de.measite.minidns.DNSName parse(java.io.DataInputStream,byte[]) -> parse
    308:325:de.measite.minidns.DNSName parse(byte[],int,java.util.HashSet) -> parse
    140:156:void setBytesIfRequired() -> setBytesIfRequired
    206:215:void setHostnameAndDomainpartIfRequired() -> setHostnameAndDomainpartIfRequired
    159:175:void setLabelsIfRequired() -> setLabelsIfRequired
    218:225:int size() -> size
    393:396:de.measite.minidns.DNSName stripToLabels(int) -> stripToLabels
    240:240:java.lang.CharSequence subSequence(int,int) -> subSequence
    245:245:java.lang.String toString() -> toString
    125:127:void writeToStream(java.io.OutputStream) -> writeToStream
de.measite.minidns.DNSSECConstants -> de.measite.minidns.DNSSECConstants:
    23:67:void <clinit>() -> <clinit>
    16:16:java.util.Map access$000() -> access$000
    16:16:java.util.Map access$100() -> access$100
de.measite.minidns.DNSSECConstants$DigestAlgorithm -> de.measite.minidns.DNSSECConstants$DigestAlgorithm:
    77:76:void <clinit>() -> <clinit>
    83:85:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    96:96:de.measite.minidns.DNSSECConstants$DigestAlgorithm forByte(byte) -> forByte
    76:76:de.measite.minidns.DNSSECConstants$DigestAlgorithm valueOf(java.lang.String) -> valueOf
    76:76:de.measite.minidns.DNSSECConstants$DigestAlgorithm[] values() -> values
de.measite.minidns.DNSSECConstants$SignatureAlgorithm -> de.measite.minidns.DNSSECConstants$SignatureAlgorithm:
    33:32:void <clinit>() -> <clinit>
    50:52:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    63:63:de.measite.minidns.DNSSECConstants$SignatureAlgorithm forByte(byte) -> forByte
    32:32:de.measite.minidns.DNSSECConstants$SignatureAlgorithm valueOf(java.lang.String) -> valueOf
    32:32:de.measite.minidns.DNSSECConstants$SignatureAlgorithm[] values() -> values
de.measite.minidns.EDNS -> de.measite.minidns.EDNS:
    102:114:void <init>(de.measite.minidns.Record) -> <init>
    116:131:void <init>(de.measite.minidns.EDNS$Builder) -> <init>
    144:150:de.measite.minidns.Record asRecord() -> asRecord
    156:176:java.lang.String asTerminalOutput() -> asTerminalOutput
    193:193:de.measite.minidns.EDNS$Builder builder() -> builder
    185:189:de.measite.minidns.EDNS fromRecord(de.measite.minidns.Record) -> fromRecord
    181:181:java.lang.String toString() -> toString
de.measite.minidns.EDNS$Builder -> de.measite.minidns.EDNS$Builder:
    196:196:void <init>(de.measite.minidns.EDNS$1) -> <init>
    203:204:void <init>() -> <init>
    196:196:int access$000(de.measite.minidns.EDNS$Builder) -> access$000
    196:196:int access$100(de.measite.minidns.EDNS$Builder) -> access$100
    196:196:int access$200(de.measite.minidns.EDNS$Builder) -> access$200
    196:196:boolean access$300(de.measite.minidns.EDNS$Builder) -> access$300
    196:196:java.util.List access$400(de.measite.minidns.EDNS$Builder) -> access$400
    233:233:de.measite.minidns.EDNS build() -> build
    215:216:de.measite.minidns.EDNS$Builder setDnssecOk(boolean) -> setDnssecOk
    220:221:de.measite.minidns.EDNS$Builder setDnssecOk() -> setDnssecOk
    207:208:de.measite.minidns.EDNS$Builder setUdpPayloadSize(int) -> setUdpPayloadSize
de.measite.minidns.EDNS$OptionCode -> de.measite.minidns.EDNS$OptionCode:
    46:56:void <clinit>() -> <clinit>
    61:64:void <init>(java.lang.String,int,int,java.lang.Class) -> <init>
    67:69:de.measite.minidns.EDNS$OptionCode from(int) -> from
    45:45:de.measite.minidns.EDNS$OptionCode valueOf(java.lang.String) -> valueOf
    45:45:de.measite.minidns.EDNS$OptionCode[] values() -> values
de.measite.minidns.InvalidDNSNameException -> de.measite.minidns.InvalidDNSNameException:
    19:21:void <init>(java.lang.String) -> <init>
de.measite.minidns.InvalidDNSNameException$DNSNameTooLongException -> de.measite.minidns.InvalidDNSNameException$DNSNameTooLongException:
    53:55:void <init>(java.lang.String,byte[]) -> <init>
    59:59:java.lang.String getMessage() -> getMessage
de.measite.minidns.InvalidDNSNameException$LabelTooLongException -> de.measite.minidns.InvalidDNSNameException$LabelTooLongException:
    32:34:void <init>(java.lang.String,java.lang.String) -> <init>
    38:38:java.lang.String getMessage() -> getMessage
de.measite.minidns.MiniDNSException -> de.measite.minidns.MiniDNSException:
    22:23:void <init>(java.lang.String) -> <init>
de.measite.minidns.MiniDNSException$IdMismatch -> de.measite.minidns.MiniDNSException$IdMismatch:
    36:40:void <init>(de.measite.minidns.DNSMessage,de.measite.minidns.DNSMessage) -> <init>
    51:51:java.lang.String getString(de.measite.minidns.DNSMessage,de.measite.minidns.DNSMessage) -> getString
de.measite.minidns.MiniDNSException$NullResultException -> de.measite.minidns.MiniDNSException$NullResultException:
    65:67:void <init>(de.measite.minidns.DNSMessage) -> <init>
de.measite.minidns.Question -> de.measite.minidns.Question:
    63:71:void <init>(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE,de.measite.minidns.Record$CLASS,boolean) -> <init>
    80:81:void <init>(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE,de.measite.minidns.Record$CLASS) -> <init>
    89:90:void <init>(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE) -> <init>
    99:100:void <init>(java.lang.CharSequence,de.measite.minidns.Record$TYPE,de.measite.minidns.Record$CLASS) -> <init>
    117:122:void <init>(java.io.DataInputStream,byte[]) -> <init>
    171:173:de.measite.minidns.DNSMessage$Builder asMessageBuilder() -> asMessageBuilder
    154:162:boolean equals(java.lang.Object) -> equals
    149:149:int hashCode() -> hashCode
    129:144:byte[] toByteArray() -> toByteArray
    167:167:java.lang.String toString() -> toString
de.measite.minidns.Record -> de.measite.minidns.Record:
    425:426:void <init>(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE,int,long,de.measite.minidns.record.Data) -> <init>
    428:436:void <init>(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE,de.measite.minidns.Record$CLASS,int,long,de.measite.minidns.record.Data,boolean) -> <init>
    557:571:boolean equals(java.lang.Object) -> equals
    592:599:void filter(java.util.Collection,java.lang.Class,java.util.Collection) -> filter
    502:502:de.measite.minidns.record.Data getPayload() -> getPayload
    544:552:int hashCode() -> hashCode
    584:587:de.measite.minidns.Record ifPossibleAs(java.lang.Class) -> ifPossibleAs
    484:484:boolean isAnswer(de.measite.minidns.Question) -> isAnswer
    336:409:de.measite.minidns.Record parse(java.io.DataInputStream,byte[]) -> parse
    455:466:byte[] toByteArray() -> toByteArray
    439:440:void toOutputStream(java.io.DataOutputStream) -> toOutputStream
    475:475:java.lang.String toString() -> toString
de.measite.minidns.Record$1 -> de.measite.minidns.Record$1:
    346:346:void <clinit>() -> <clinit>
de.measite.minidns.Record$CLASS -> de.measite.minidns.Record$CLASS:
    236:254:void <clinit>() -> <clinit>
    265:267:void <init>(java.lang.String,int,int) -> <init>
    283:283:de.measite.minidns.Record$CLASS getClass(int) -> getClass
    274:274:int getValue() -> getValue
    235:235:de.measite.minidns.Record$CLASS valueOf(java.lang.String) -> valueOf
    235:235:de.measite.minidns.Record$CLASS[] values() -> values
de.measite.minidns.Record$TYPE -> de.measite.minidns.Record$TYPE:
    58:165:void <clinit>() -> <clinit>
    173:174:void <init>(java.lang.String,int,int) -> <init>
    183:186:void <init>(java.lang.String,int,int,java.lang.Class) -> <init>
    57:57:java.lang.Class access$000(de.measite.minidns.Record$TYPE) -> access$000
    213:215:de.measite.minidns.Record$TYPE getType(int) -> getType
    226:226:de.measite.minidns.Record$TYPE getType(java.lang.Class) -> getType
    193:193:int getValue() -> getValue
    57:57:de.measite.minidns.Record$TYPE valueOf(java.lang.String) -> valueOf
    57:57:de.measite.minidns.Record$TYPE[] values() -> values
de.measite.minidns.cache.LRUCache -> de.measite.minidns.cache.LRUCache:
    63:75:void <init>(int,long) -> <init>
    82:83:void <init>(int) -> <init>
    95:94:de.measite.minidns.DNSMessage getNormalized(de.measite.minidns.DNSMessage) -> getNormalized
    161:161:void offer(de.measite.minidns.DNSMessage,de.measite.minidns.DNSMessage,de.measite.minidns.DNSName) -> offer
    87:86:void putNormalized(de.measite.minidns.DNSMessage,de.measite.minidns.DNSMessage) -> putNormalized
    156:156:java.lang.String toString() -> toString
de.measite.minidns.cache.LRUCache$1 -> de.measite.minidns.cache.LRUCache$1:
    68:68:void <init>(de.measite.minidns.cache.LRUCache,int,float,boolean,int) -> <init>
    72:72:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
de.measite.minidns.dnssec.DNSSECClient -> de.measite.minidns.dnssec.DNSSECClient:
    45:47:void <clinit>() -> <clinit>
    62:64:void <init>(de.measite.minidns.DNSCache) -> <init>
    490:491:void addSecureEntryPoint(de.measite.minidns.DNSName,byte[]) -> addSecureEntryPoint
    112:125:de.measite.minidns.dnssec.DNSSECMessage createDnssecMessage(de.measite.minidns.DNSMessage,java.util.Set) -> createDnssecMessage
    324:334:boolean isParentOrSelf(java.lang.String,java.lang.String) -> isParentOrSelf
    462:473:java.lang.String isResponseAcceptable(de.measite.minidns.DNSMessage) -> isResponseAcceptable
    141:141:boolean isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) -> isResponseCacheable
    455:457:de.measite.minidns.DNSMessage$Builder newQuestion(de.measite.minidns.DNSMessage$Builder) -> newQuestion
    99:108:de.measite.minidns.dnssec.DNSSECMessage performVerification(de.measite.minidns.Question,de.measite.minidns.DNSMessage) -> performVerification
    82:82:de.measite.minidns.DNSMessage query(de.measite.minidns.Question) -> query
    86:89:de.measite.minidns.dnssec.DNSSECMessage queryDnssec(java.lang.CharSequence,de.measite.minidns.Record$TYPE) -> queryDnssec
    93:95:de.measite.minidns.dnssec.DNSSECMessage queryDnssec(de.measite.minidns.Question) -> queryDnssec
    129:136:java.util.List stripSignatureRecords(java.util.List) -> stripSignatureRecords
    145:148:java.util.Set verify(de.measite.minidns.DNSMessage) -> verify
    153:197:java.util.Set verifyAnswer(de.measite.minidns.DNSMessage) -> verifyAnswer
    201:212:java.util.Set verifyNsec(de.measite.minidns.DNSMessage) -> verifyNsec
    381:450:java.util.Set verifySecureEntryPoint(de.measite.minidns.Question,de.measite.minidns.Record) -> verifySecureEntryPoint
    258:320:de.measite.minidns.dnssec.DNSSECClient$VerifySignaturesResult verifySignatures(de.measite.minidns.Question,java.util.Collection,java.util.List) -> verifySignatures
    338:358:java.util.Set verifySignedRecords(de.measite.minidns.Question,de.measite.minidns.record.RRSIG,java.util.List) -> verifySignedRecords
de.measite.minidns.dnssec.DNSSECClient$1 -> de.measite.minidns.dnssec.DNSSECClient$1:
    216:216:void <clinit>() -> <clinit>
de.measite.minidns.dnssec.DNSSECClient$VerifySignaturesResult -> de.measite.minidns.dnssec.DNSSECClient$VerifySignaturesResult:
    251:254:void <init>(de.measite.minidns.dnssec.DNSSECClient) -> <init>
    251:251:void <init>(de.measite.minidns.dnssec.DNSSECClient,de.measite.minidns.dnssec.DNSSECClient$1) -> <init>
de.measite.minidns.dnssec.DNSSECMessage -> de.measite.minidns.dnssec.DNSSECMessage:
    25:28:void <init>(de.measite.minidns.DNSMessage$Builder,java.util.Set,java.util.Set) -> <init>
    35:35:java.util.Set getUnverifiedReasons() -> getUnverifiedReasons
de.measite.minidns.dnssec.DNSSECValidationFailedException -> de.measite.minidns.dnssec.DNSSECValidationFailedException:
    23:24:void <init>(de.measite.minidns.Question,java.lang.String) -> <init>
    27:28:void <init>(java.lang.String) -> <init>
    31:32:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    35:36:void <init>(de.measite.minidns.Record,java.lang.String) -> <init>
    39:40:void <init>(java.util.List,java.lang.String) -> <init>
de.measite.minidns.dnssec.DNSSECValidatorInitializationException -> de.measite.minidns.dnssec.DNSSECValidatorInitializationException:
    17:18:void <init>(java.lang.String,java.lang.Throwable) -> <init>
de.measite.minidns.dnssec.UnverifiedReason -> de.measite.minidns.dnssec.UnverifiedReason:
    23:23:void <init>() -> <init>
    38:38:boolean equals(java.lang.Object) -> equals
    33:33:int hashCode() -> hashCode
    28:28:java.lang.String toString() -> toString
de.measite.minidns.dnssec.UnverifiedReason$AlgorithmExceptionThrownReason -> de.measite.minidns.dnssec.UnverifiedReason$AlgorithmExceptionThrownReason:
    64:69:void <init>(de.measite.minidns.DNSSECConstants$DigestAlgorithm,java.lang.String,de.measite.minidns.Record,java.lang.Exception) -> <init>
    73:73:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$AlgorithmNotSupportedReason -> de.measite.minidns.dnssec.UnverifiedReason$AlgorithmNotSupportedReason:
    46:50:void <init>(byte,java.lang.String,de.measite.minidns.Record) -> <init>
    54:54:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$ConflictsWithSep -> de.measite.minidns.dnssec.UnverifiedReason$ConflictsWithSep:
    80:82:void <init>(de.measite.minidns.Record) -> <init>
    86:86:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$NSECDoesNotMatchReason -> de.measite.minidns.dnssec.UnverifiedReason$NSECDoesNotMatchReason:
    163:166:void <init>(de.measite.minidns.Question,de.measite.minidns.Record) -> <init>
    170:170:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$NoActiveSignaturesReason -> de.measite.minidns.dnssec.UnverifiedReason$NoActiveSignaturesReason:
    143:147:void <init>(de.measite.minidns.Question,java.util.List) -> <init>
    151:151:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$NoRootSecureEntryPointReason -> de.measite.minidns.dnssec.UnverifiedReason$NoRootSecureEntryPointReason:
    117:118:void <init>() -> <init>
    122:122:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$NoSecureEntryPointReason -> de.measite.minidns.dnssec.UnverifiedReason$NoSecureEntryPointReason:
    106:108:void <init>(java.lang.String) -> <init>
    112:112:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$NoSignaturesReason -> de.measite.minidns.dnssec.UnverifiedReason$NoSignaturesReason:
    129:131:void <init>(de.measite.minidns.Question) -> <init>
    135:135:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.UnverifiedReason$NoTrustAnchorReason -> de.measite.minidns.dnssec.UnverifiedReason$NoTrustAnchorReason:
    93:95:void <init>(java.lang.String) -> <init>
    99:99:java.lang.String getReasonString() -> getReasonString
de.measite.minidns.dnssec.Verifier -> de.measite.minidns.dnssec.Verifier:
    38:39:void <init>() -> <init>
    120:165:byte[] combine(de.measite.minidns.record.RRSIG,java.util.List) -> combine
    224:230:byte[] nsec3hash(de.measite.minidns.dnssec.DigestCalculator,byte[],byte[],int) -> nsec3hash
    171:171:boolean nsecMatches(java.lang.String,java.lang.String,java.lang.String) -> nsecMatches
    183:197:boolean nsecMatches(de.measite.minidns.DNSName,de.measite.minidns.DNSName,de.measite.minidns.DNSName) -> nsecMatches
    42:57:de.measite.minidns.dnssec.UnverifiedReason verify(de.measite.minidns.Record,de.measite.minidns.record.DS) -> verify
    67:76:de.measite.minidns.dnssec.UnverifiedReason verify(java.util.List,de.measite.minidns.record.RRSIG,de.measite.minidns.record.DNSKEY) -> verify
    81:88:de.measite.minidns.dnssec.UnverifiedReason verifyNsec(de.measite.minidns.Record,de.measite.minidns.Question) -> verifyNsec
    96:116:de.measite.minidns.dnssec.UnverifiedReason verifyNsec3(de.measite.minidns.DNSName,de.measite.minidns.Record,de.measite.minidns.Question) -> verifyNsec3
de.measite.minidns.dnssec.Verifier$1 -> de.measite.minidns.dnssec.Verifier$1:
    147:147:void <init>(int) -> <init>
    147:147:int compare(java.lang.Object,java.lang.Object) -> compare
    150:155:int compare(byte[],byte[]) -> compare
de.measite.minidns.dnssec.algorithms.AlgorithmMap -> de.measite.minidns.dnssec.algorithms.AlgorithmMap:
    29:29:void <clinit>() -> <clinit>
    36:42:void <init>() -> <init>
    105:105:de.measite.minidns.dnssec.DigestCalculator getDsDigestCalculator(de.measite.minidns.DNSSECConstants$DigestAlgorithm) -> getDsDigestCalculator
    113:113:de.measite.minidns.dnssec.DigestCalculator getNsecDigestCalculator(de.measite.minidns.record.NSEC3$HashAlgorithm) -> getNsecDigestCalculator
    109:109:de.measite.minidns.dnssec.SignatureVerifier getSignatureVerifier(de.measite.minidns.DNSSECConstants$SignatureAlgorithm) -> getSignatureVerifier
de.measite.minidns.dnssec.algorithms.DSASignatureVerifier -> de.measite.minidns.dnssec.algorithms.DSASignatureVerifier:
    31:32:void <init>(java.lang.String) -> <init>
    73:96:java.security.PublicKey getPublicKey(byte[]) -> getPublicKey
    36:66:byte[] getSignature(byte[]) -> getSignature
de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier -> de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier:
    36:37:void <init>(java.math.BigInteger[],int,java.lang.String) -> <init>
    40:43:void <init>(java.security.spec.ECParameterSpec,int,java.lang.String) -> <init>
    81:94:java.security.PublicKey getPublicKey(byte[]) -> getPublicKey
    47:73:byte[] getSignature(byte[]) -> getSignature
de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier$P256SHA256 -> de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier$P256SHA256:
    99:99:void <clinit>() -> <clinit>
    109:110:void <init>() -> <init>
de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier$P384SHA284 -> de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier$P384SHA284:
    114:114:void <clinit>() -> <clinit>
    124:125:void <init>() -> <init>
de.measite.minidns.dnssec.algorithms.ECGOSTSignatureVerifier -> de.measite.minidns.dnssec.algorithms.ECGOSTSignatureVerifier:
    31:31:void <clinit>() -> <clinit>
    43:44:void <init>() -> <init>
    53:68:java.security.PublicKey getPublicKey(byte[]) -> getPublicKey
    48:48:byte[] getSignature(byte[]) -> getSignature
    73:79:void reverse(byte[]) -> reverse
de.measite.minidns.dnssec.algorithms.JavaSecDigestCalculator -> de.measite.minidns.dnssec.algorithms.JavaSecDigestCalculator:
    21:23:void <init>(java.lang.String) -> <init>
    27:27:byte[] digest(byte[]) -> digest
de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier -> de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier:
    27:33:void <init>(java.lang.String,java.lang.String) -> <init>
    36:36:java.security.KeyFactory getKeyFactory() -> getKeyFactory
    42:49:boolean verify(byte[],byte[],byte[]) -> verify
de.measite.minidns.dnssec.algorithms.RSASignatureVerifier -> de.measite.minidns.dnssec.algorithms.RSASignatureVerifier:
    27:28:void <init>(java.lang.String) -> <init>
    31:52:java.security.PublicKey getPublicKey(byte[]) -> getPublicKey
    58:58:byte[] getSignature(byte[]) -> getSignature
de.measite.minidns.dnsserverlookup.AbstractDNSServerLookupMechanism -> de.measite.minidns.dnsserverlookup.AbstractDNSServerLookupMechanism:
    17:17:void <clinit>() -> <clinit>
    22:25:void <init>(java.lang.String,int) -> <init>
    15:15:int compareTo(java.lang.Object) -> compareTo
    39:39:int compareTo(de.measite.minidns.dnsserverlookup.DNSServerLookupMechanism) -> compareTo
    29:29:java.lang.String getName() -> getName
    34:34:int getPriority() -> getPriority
de.measite.minidns.dnsserverlookup.AndroidUsingExec -> de.measite.minidns.dnsserverlookup.AndroidUsingExec:
    28:28:void <clinit>() -> <clinit>
    32:33:void <init>() -> <init>
    38:80:java.lang.String[] getDnsServerAddresses() -> getDnsServerAddresses
    85:85:boolean isAvailable() -> isAvailable
de.measite.minidns.dnsserverlookup.AndroidUsingReflection -> de.measite.minidns.dnsserverlookup.AndroidUsingReflection:
    25:25:void <clinit>() -> <clinit>
    29:30:void <init>() -> <init>
    35:71:java.lang.String[] getDnsServerAddresses() -> getDnsServerAddresses
    76:76:boolean isAvailable() -> isAvailable
de.measite.minidns.dnsserverlookup.UnixUsingEtcResolvConf -> de.measite.minidns.dnsserverlookup.UnixUsingEtcResolvConf:
    29:35:void <clinit>() -> <clinit>
    41:42:void <init>() -> <init>
    46:76:java.lang.String[] getDnsServerAddresses() -> getDnsServerAddresses
    92:102:boolean isAvailable() -> isAvailable
de.measite.minidns.edns.EDNSOption -> de.measite.minidns.edns.EDNSOption:
    25:29:void <init>(int,byte[]) -> <init>
    31:35:void <init>(byte[]) -> <init>
    60:63:java.lang.String asTerminalOutput() -> asTerminalOutput
    69:79:de.measite.minidns.edns.EDNSOption parse(int,byte[]) -> parse
    49:52:java.lang.String toString() -> toString
    38:41:void writeToDos(java.io.DataOutputStream) -> writeToDos
de.measite.minidns.edns.EDNSOption$1 -> de.measite.minidns.edns.EDNSOption$1:
    71:71:void <clinit>() -> <clinit>
de.measite.minidns.edns.NSID -> de.measite.minidns.edns.NSID:
    18:18:void <clinit>() -> <clinit>
    21:22:void <init>() -> <init>
    25:26:void <init>(byte[]) -> <init>
    42:42:java.lang.CharSequence asTerminalOutputInternal() -> asTerminalOutputInternal
    30:30:de.measite.minidns.EDNS$OptionCode getOptionCode() -> getOptionCode
    35:37:java.lang.CharSequence toStringInternal() -> toStringInternal
de.measite.minidns.edns.UnknownEDNSOption -> de.measite.minidns.edns.UnknownEDNSOption:
    19:20:void <init>(int,byte[]) -> <init>
    29:29:java.lang.CharSequence asTerminalOutputInternal() -> asTerminalOutputInternal
    24:24:de.measite.minidns.EDNS$OptionCode getOptionCode() -> getOptionCode
    34:34:java.lang.CharSequence toStringInternal() -> toStringInternal
de.measite.minidns.hla.DnssecResolverApi -> de.measite.minidns.hla.DnssecResolverApi:
    31:31:void <clinit>() -> <clinit>
    38:44:void <init>() -> <init>
    47:48:void <init>(de.measite.minidns.cache.MiniDnsCacheFactory) -> <init>
    51:61:void <init>(de.measite.minidns.dnssec.DNSSECClient,de.measite.minidns.cache.MiniDnsCacheFactory) -> <init>
    65:66:de.measite.minidns.hla.ResolverResult resolve(de.measite.minidns.Question) -> resolve
    108:112:de.measite.minidns.hla.ResolverResult resolveDnssecReliable(de.measite.minidns.Question) -> resolveDnssecReliable
    120:122:de.measite.minidns.hla.ResolverResult toResolverResult(de.measite.minidns.Question,de.measite.minidns.dnssec.DNSSECMessage) -> toResolverResult
de.measite.minidns.hla.DnssecResolverApi$1 -> de.measite.minidns.hla.DnssecResolverApi$1:
    38:38:void <init>() -> <init>
    41:41:de.measite.minidns.DNSCache newCache() -> newCache
de.measite.minidns.hla.ResolutionUnsuccessfulException -> de.measite.minidns.hla.ResolutionUnsuccessfulException:
    28:31:void <init>(de.measite.minidns.Question,de.measite.minidns.DNSMessage$RESPONSE_CODE) -> <init>
de.measite.minidns.hla.ResolverApi -> de.measite.minidns.hla.ResolverApi:
    25:25:void <clinit>() -> <clinit>
    29:31:void <init>(de.measite.minidns.AbstractDNSClient) -> <init>
    50:50:de.measite.minidns.AbstractDNSClient getClient() -> getClient
    44:46:de.measite.minidns.hla.ResolverResult resolve(de.measite.minidns.Question) -> resolve
de.measite.minidns.hla.ResolverResult -> de.measite.minidns.hla.ResolverResult:
    33:35:void <init>(de.measite.minidns.Question,de.measite.minidns.DNSMessage,java.util.Set) -> <init>
    67:67:java.util.Set getAnswersOrEmptySet() -> getAnswersOrEmptySet
    96:102:de.measite.minidns.hla.ResolutionUnsuccessfulException getResolutionUnsuccessfulException() -> getResolutionUnsuccessfulException
    75:76:boolean isAuthenticData() -> isAuthenticData
    121:123:void throwIseIfErrorResponse() -> throwIseIfErrorResponse
    58:58:boolean wasSuccessful() -> wasSuccessful
de.measite.minidns.idna.DefaultIdnaTransformator -> de.measite.minidns.idna.DefaultIdnaTransformator:
    15:15:void <init>() -> <init>
    19:19:java.lang.String toASCII(java.lang.String) -> toASCII
    24:24:java.lang.String toUnicode(java.lang.String) -> toUnicode
de.measite.minidns.idna.MiniDnsIdna -> de.measite.minidns.idna.MiniDnsIdna:
    15:15:void <clinit>() -> <clinit>
    18:18:java.lang.String toASCII(java.lang.String) -> toASCII
    22:22:java.lang.String toUnicode(java.lang.String) -> toUnicode
de.measite.minidns.iterative.IterativeClientException -> de.measite.minidns.iterative.IterativeClientException:
    23:24:void <init>(java.lang.String) -> <init>
de.measite.minidns.iterative.IterativeClientException$LoopDetected -> de.measite.minidns.iterative.IterativeClientException$LoopDetected:
    34:35:void <init>() -> <init>
de.measite.minidns.iterative.IterativeClientException$MaxIterativeStepsReached -> de.measite.minidns.iterative.IterativeClientException$MaxIterativeStepsReached:
    47:48:void <init>() -> <init>
de.measite.minidns.iterative.IterativeDNSClient -> de.measite.minidns.iterative.IterativeDNSClient:
    47:67:void <clinit>() -> <clinit>
    95:96:void <init>(de.measite.minidns.DNSCache) -> <init>
    579:580:void abortIfFatal(java.io.IOException) -> abortIfFatal
    45:45:de.measite.minidns.AbstractDNSClient$IpVersionSetting access$300() -> access$300
    45:45:de.measite.minidns.AbstractDNSClient$IpVersionSetting access$400() -> access$400
    45:45:de.measite.minidns.AbstractDNSClient$IpVersionSetting access$500() -> access$500
    45:45:de.measite.minidns.AbstractDNSClient$IpVersionSetting access$600() -> access$600
    114:114:java.net.Inet4Address getRandomIpv4RootServer() -> getRandomIpv4RootServer
    118:118:java.net.Inet6Address getRandomIpv6RootServer() -> getRandomIpv6RootServer
    123:150:java.net.InetAddress[] getTargets(java.util.Collection,java.util.Collection) -> getTargets
    388:391:java.net.InetAddress inetAddressFromRecord(java.lang.String,de.measite.minidns.record.A) -> inetAddressFromRecord
    397:400:java.net.InetAddress inetAddressFromRecord(java.lang.String,de.measite.minidns.record.AAAA) -> inetAddressFromRecord
    480:480:boolean isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) -> isResponseCacheable
    491:491:de.measite.minidns.iterative.IterativeDNSClient$IpResultSet$Builder newIpResultSetBuilder() -> newIpResultSetBuilder
    485:487:de.measite.minidns.DNSMessage$Builder newQuestion(de.measite.minidns.DNSMessage$Builder) -> newQuestion
    107:110:de.measite.minidns.DNSMessage query(de.measite.minidns.DNSMessage$Builder) -> query
    154:233:de.measite.minidns.DNSMessage queryRecursive(de.measite.minidns.iterative.ResolutionState,de.measite.minidns.DNSMessage) -> queryRecursive
    237:324:de.measite.minidns.DNSMessage queryRecursive(de.measite.minidns.iterative.ResolutionState,de.measite.minidns.DNSMessage,java.net.InetAddress,de.measite.minidns.DNSName) -> queryRecursive
    328:364:de.measite.minidns.iterative.IterativeDNSClient$IpResultSet resolveIpRecursive(de.measite.minidns.iterative.ResolutionState,de.measite.minidns.DNSName) -> resolveIpRecursive
    445:452:java.net.Inet4Address rootServerInet4Address(char,int,int,int,int) -> rootServerInet4Address
    460:473:java.net.Inet6Address rootServerInet6Address(char,int,int,int,int,int,int,int,int) -> rootServerInet6Address
    369:383:de.measite.minidns.iterative.IterativeDNSClient$IpResultSet searchAdditional(de.measite.minidns.DNSMessage,de.measite.minidns.DNSName) -> searchAdditional
de.measite.minidns.iterative.IterativeDNSClient$1 -> de.measite.minidns.iterative.IterativeDNSClient$1:
    374:159:void <clinit>() -> <clinit>
de.measite.minidns.iterative.IterativeDNSClient$IpResultSet -> de.measite.minidns.iterative.IterativeDNSClient$IpResultSet:
    494:494:void <init>(java.util.List,java.util.List,java.util.Random,de.measite.minidns.iterative.IterativeDNSClient$1) -> <init>
    498:561:void <init>(java.util.List,java.util.List,java.util.Random) -> <init>
de.measite.minidns.iterative.IterativeDNSClient$IpResultSet$Builder -> de.measite.minidns.iterative.IterativeDNSClient$IpResultSet$Builder:
    563:563:void <init>(java.util.Random,de.measite.minidns.iterative.IterativeDNSClient$1) -> <init>
    568:570:void <init>(java.util.Random) -> <init>
    563:563:java.util.List access$000(de.measite.minidns.iterative.IterativeDNSClient$IpResultSet$Builder) -> access$000
    563:563:java.util.List access$100(de.measite.minidns.iterative.IterativeDNSClient$IpResultSet$Builder) -> access$100
    573:573:de.measite.minidns.iterative.IterativeDNSClient$IpResultSet build() -> build
de.measite.minidns.iterative.ReliableDNSClient -> de.measite.minidns.iterative.ReliableDNSClient:
    56:81:void <init>(de.measite.minidns.DNSCache) -> <init>
    84:85:void <init>() -> <init>
    159:159:java.lang.String isResponseAcceptable(de.measite.minidns.DNSMessage) -> isResponseAcceptable
    147:147:boolean isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) -> isResponseCacheable
    142:142:de.measite.minidns.DNSMessage$Builder newQuestion(de.measite.minidns.DNSMessage$Builder) -> newQuestion
    89:137:de.measite.minidns.DNSMessage query(de.measite.minidns.DNSMessage$Builder) -> query
    175:176:void setMode(de.measite.minidns.iterative.ReliableDNSClient$Mode) -> setMode
de.measite.minidns.iterative.ReliableDNSClient$1 -> de.measite.minidns.iterative.ReliableDNSClient$1:
    57:57:void <init>(de.measite.minidns.iterative.ReliableDNSClient,de.measite.minidns.DNSCache) -> <init>
    65:66:boolean isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) -> isResponseCacheable
    60:61:de.measite.minidns.DNSMessage$Builder newQuestion(de.measite.minidns.DNSMessage$Builder) -> newQuestion
de.measite.minidns.iterative.ReliableDNSClient$2 -> de.measite.minidns.iterative.ReliableDNSClient$2:
    69:69:void <init>(de.measite.minidns.iterative.ReliableDNSClient,de.measite.minidns.DNSCache) -> <init>
    77:78:boolean isResponseCacheable(de.measite.minidns.Question,de.measite.minidns.DNSMessage) -> isResponseCacheable
    72:73:de.measite.minidns.DNSMessage$Builder newQuestion(de.measite.minidns.DNSMessage$Builder) -> newQuestion
de.measite.minidns.iterative.ReliableDNSClient$Mode -> de.measite.minidns.iterative.ReliableDNSClient$Mode:
    37:33:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:de.measite.minidns.iterative.ReliableDNSClient$Mode valueOf(java.lang.String) -> valueOf
    33:33:de.measite.minidns.iterative.ReliableDNSClient$Mode[] values() -> values
de.measite.minidns.iterative.ResolutionState -> de.measite.minidns.iterative.ResolutionState:
    29:31:void <init>(de.measite.minidns.iterative.IterativeDNSClient) -> <init>
    50:51:void decrementSteps() -> decrementSteps
    34:38:void recurse(java.net.InetAddress,de.measite.minidns.DNSMessage) -> recurse
de.measite.minidns.record.A -> de.measite.minidns.record.A:
    36:38:void <init>(byte[]) -> <init>
    44:46:de.measite.minidns.record.A parse(java.io.DataInputStream) -> parse
    51:51:java.lang.String toString() -> toString
de.measite.minidns.record.AAAA -> de.measite.minidns.record.AAAA:
    29:31:void <init>(byte[]) -> <init>
    37:39:de.measite.minidns.record.AAAA parse(java.io.DataInputStream) -> parse
    44:53:java.lang.String toString() -> toString
de.measite.minidns.record.CNAME -> de.measite.minidns.record.CNAME:
    41:43:void <init>(de.measite.minidns.DNSName) -> <init>
    33:34:de.measite.minidns.record.CNAME parse(java.io.DataInputStream,byte[]) -> parse
    29:30:void serialize(java.io.DataOutputStream) -> serialize
    52:52:java.lang.String toString() -> toString
de.measite.minidns.record.DLV -> de.measite.minidns.record.DLV:
    36:37:void <init>(int,de.measite.minidns.DNSSECConstants$SignatureAlgorithm,de.measite.minidns.DNSSECConstants$DigestAlgorithm,byte[]) -> <init>
    27:28:de.measite.minidns.record.DLV parse(java.io.DataInputStream,int) -> parse
de.measite.minidns.record.DNSKEY -> de.measite.minidns.record.DNSKEY:
    91:100:void <init>(short,byte,de.measite.minidns.DNSSECConstants$SignatureAlgorithm,byte,byte[]) -> <init>
    103:104:void <init>(short,byte,byte,byte[]) -> <init>
    107:108:void <init>(short,byte,de.measite.minidns.DNSSECConstants$SignatureAlgorithm,byte[]) -> <init>
    160:160:byte[] getKey() -> getKey
    124:134:int getKeyTag() -> getKeyTag
    173:173:boolean keyEquals(byte[]) -> keyEquals
    83:88:de.measite.minidns.record.DNSKEY parse(java.io.DataInputStream,int) -> parse
    139:143:void serialize(java.io.DataOutputStream) -> serialize
    147:152:java.lang.String toString() -> toString
de.measite.minidns.record.DS -> de.measite.minidns.record.DS:
    75:88:void <init>(int,de.measite.minidns.DNSSECConstants$SignatureAlgorithm,byte,de.measite.minidns.DNSSECConstants$DigestAlgorithm,byte,byte[]) -> <init>
    91:92:void <init>(int,byte,byte,byte[]) -> <init>
    99:100:void <init>(int,de.measite.minidns.DNSSECConstants$SignatureAlgorithm,de.measite.minidns.DNSSECConstants$DigestAlgorithm,byte[]) -> <init>
    144:144:boolean digestEquals(byte[]) -> digestEquals
    67:71:de.measite.minidns.record.DS parse(java.io.DataInputStream,int) -> parse
    109:113:void serialize(java.io.DataOutputStream) -> serialize
    117:122:java.lang.String toString() -> toString
de.measite.minidns.record.Data -> de.measite.minidns.record.Data:
    25:26:void <init>() -> <init>
    92:102:boolean equals(java.lang.Object) -> equals
    83:87:int hashCode() -> hashCode
    59:60:int length() -> length
    45:53:void setBytes() -> setBytes
    75:76:byte[] toByteArray() -> toByteArray
    70:72:void toOutputStream(java.io.DataOutputStream) -> toOutputStream
de.measite.minidns.record.InternetAddressRR -> de.measite.minidns.record.InternetAddressRR:
    34:36:void <init>(byte[]) -> <init>
    53:62:java.net.InetAddress getInetAddress() -> getInetAddress
    49:49:byte[] getIp() -> getIp
    40:41:void serialize(java.io.DataOutputStream) -> serialize
de.measite.minidns.record.MX -> de.measite.minidns.record.MX:
    47:50:void <init>(int,de.measite.minidns.DNSName) -> <init>
    38:40:de.measite.minidns.record.MX parse(java.io.DataInputStream,byte[]) -> parse
    54:56:void serialize(java.io.DataOutputStream) -> serialize
    60:60:java.lang.String toString() -> toString
de.measite.minidns.record.NS -> de.measite.minidns.record.NS:
    30:31:void <init>(de.measite.minidns.DNSName) -> <init>
    25:26:de.measite.minidns.record.NS parse(java.io.DataInputStream,byte[]) -> parse
de.measite.minidns.record.NSEC -> de.measite.minidns.record.NSEC:
    55:59:void <init>(de.measite.minidns.DNSName,de.measite.minidns.Record$TYPE[]) -> <init>
    83:109:byte[] createTypeBitMap(de.measite.minidns.Record$TYPE[]) -> createTypeBitMap
    43:46:de.measite.minidns.record.NSEC parse(java.io.DataInputStream,byte[],int) -> parse
    127:143:de.measite.minidns.Record$TYPE[] readTypeBitMap(byte[]) -> readTypeBitMap
    68:70:void serialize(java.io.DataOutputStream) -> serialize
    74:79:java.lang.String toString() -> toString
    116:124:void writeOutBlock(byte[],java.io.DataOutputStream) -> writeOutBlock
de.measite.minidns.record.NSEC3 -> de.measite.minidns.record.NSEC3:
    26:34:void <clinit>() -> <clinit>
    122:133:void <init>(de.measite.minidns.record.NSEC3$HashAlgorithm,byte,byte,int,byte[],byte[],de.measite.minidns.Record$TYPE[]) -> <init>
    136:137:void <init>(byte,byte,int,byte[],byte[],de.measite.minidns.Record$TYPE[]) -> <init>
    26:26:java.util.Map access$000() -> access$000
    107:112:de.measite.minidns.record.NSEC3 parse(java.io.DataInputStream,int) -> parse
    146:154:void serialize(java.io.DataOutputStream) -> serialize
    158:167:java.lang.String toString() -> toString
de.measite.minidns.record.NSEC3$HashAlgorithm -> de.measite.minidns.record.NSEC3$HashAlgorithm:
    44:43:void <clinit>() -> <clinit>
    48:50:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    61:61:de.measite.minidns.record.NSEC3$HashAlgorithm forByte(byte) -> forByte
    43:43:de.measite.minidns.record.NSEC3$HashAlgorithm valueOf(java.lang.String) -> valueOf
    43:43:de.measite.minidns.record.NSEC3$HashAlgorithm[] values() -> values
de.measite.minidns.record.NSEC3PARAM -> de.measite.minidns.record.NSEC3PARAM:
    60:68:void <init>(de.measite.minidns.record.NSEC3$HashAlgorithm,byte,byte,int,byte[]) -> <init>
    71:72:void <init>(byte,byte,int,byte[]) -> <init>
    51:57:de.measite.minidns.record.NSEC3PARAM parse(java.io.DataInputStream) -> parse
    81:86:void serialize(java.io.DataOutputStream) -> serialize
    90:95:java.lang.String toString() -> toString
de.measite.minidns.record.OPENPGPKEY -> de.measite.minidns.record.OPENPGPKEY:
    30:32:void <init>(byte[]) -> <init>
    52:55:java.lang.String getPublicKeyPacketBase64() -> getPublicKeyPacketBase64
    25:27:de.measite.minidns.record.OPENPGPKEY parse(java.io.DataInputStream,int) -> parse
    41:42:void serialize(java.io.DataOutputStream) -> serialize
    46:46:java.lang.String toString() -> toString
de.measite.minidns.record.OPT -> de.measite.minidns.record.OPT:
    31:32:void <init>() -> <init>
    34:36:void <init>(java.util.List) -> <init>
    40:57:de.measite.minidns.record.OPT parse(java.io.DataInputStream,int) -> parse
    67:70:void serialize(java.io.DataOutputStream) -> serialize
de.measite.minidns.record.PTR -> de.measite.minidns.record.PTR:
    34:35:void <init>(de.measite.minidns.DNSName) -> <init>
    25:26:de.measite.minidns.record.PTR parse(java.io.DataInputStream,byte[]) -> parse
de.measite.minidns.record.RRSIG -> de.measite.minidns.record.RRSIG:
    97:111:void <init>(de.measite.minidns.Record$TYPE,de.measite.minidns.DNSSECConstants$SignatureAlgorithm,byte,byte,long,java.util.Date,java.util.Date,int,de.measite.minidns.DNSName,byte[]) -> <init>
    81:91:de.measite.minidns.record.RRSIG parse(java.io.DataInputStream,byte[],int) -> parse
    142:144:void serialize(java.io.DataOutputStream) -> serialize
    159:171:java.lang.String toString() -> toString
    147:155:void writePartialSignature(java.io.DataOutputStream) -> writePartialSignature
de.measite.minidns.record.SOA -> de.measite.minidns.record.SOA:
    78:86:void <init>(de.measite.minidns.DNSName,de.measite.minidns.DNSName,long,int,int,int,long) -> <init>
    64:71:de.measite.minidns.record.SOA parse(java.io.DataInputStream,byte[]) -> parse
    95:102:void serialize(java.io.DataOutputStream) -> serialize
    106:114:java.lang.String toString() -> toString
de.measite.minidns.record.SRV -> de.measite.minidns.record.SRV:
    60:65:void <init>(int,int,int,de.measite.minidns.DNSName) -> <init>
    49:53:de.measite.minidns.record.SRV parse(java.io.DataInputStream,byte[]) -> parse
    69:73:void serialize(java.io.DataOutputStream) -> serialize
    77:77:java.lang.String toString() -> toString
de.measite.minidns.record.TLSA -> de.measite.minidns.record.TLSA:
    66:71:void <init>(byte,byte,byte,byte[]) -> <init>
    58:62:de.measite.minidns.record.TLSA parse(java.io.DataInputStream,int) -> parse
    80:84:void serialize(java.io.DataOutputStream) -> serialize
    88:88:java.lang.String toString() -> toString
de.measite.minidns.record.TXT -> de.measite.minidns.record.TXT:
    37:39:void <init>(byte[]) -> <init>
    58:67:java.util.List getExtents() -> getExtents
    46:54:java.lang.String getText() -> getText
    32:34:de.measite.minidns.record.TXT parse(java.io.DataInputStream,int) -> parse
    72:73:void serialize(java.io.DataOutputStream) -> serialize
    82:82:java.lang.String toString() -> toString
de.measite.minidns.record.UNKNOWN -> de.measite.minidns.record.UNKNOWN:
    24:28:void <init>(java.io.DataInputStream,int,de.measite.minidns.Record$TYPE) -> <init>
    42:42:de.measite.minidns.record.UNKNOWN parse(java.io.DataInputStream,int,de.measite.minidns.Record$TYPE) -> parse
    37:38:void serialize(java.io.DataOutputStream) -> serialize
de.measite.minidns.source.DNSDataSource -> de.measite.minidns.source.DNSDataSource:
    18:26:void <init>() -> <init>
    51:51:int getUdpPayloadSize() -> getUdpPayloadSize
    44:45:void setTimeout(int) -> setTimeout
de.measite.minidns.source.NetworkDataSource -> de.measite.minidns.source.NetworkDataSource:
    31:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    36:58:de.measite.minidns.DNSMessage query(de.measite.minidns.DNSMessage,java.net.InetAddress,int) -> query
    88:111:de.measite.minidns.DNSMessage queryTcp(de.measite.minidns.DNSMessage,java.net.InetAddress,int) -> queryTcp
    64:80:de.measite.minidns.DNSMessage queryUdp(de.measite.minidns.DNSMessage,java.net.InetAddress,int) -> queryUdp
de.measite.minidns.util.Base32 -> de.measite.minidns.util.Base32:
    27:39:java.lang.String encodeToString(byte[]) -> encodeToString
de.measite.minidns.util.Base64 -> de.measite.minidns.util.Base64:
    27:36:java.lang.String encodeToString(byte[]) -> encodeToString
de.measite.minidns.util.CollectionsUtil -> de.measite.minidns.util.CollectionsUtil:
    20:26:java.lang.Object getRandomFrom(java.util.Set,java.util.Random) -> getRandomFrom
de.measite.minidns.util.Hex -> de.measite.minidns.util.Hex:
    16:20:java.lang.StringBuilder from(byte[]) -> from
de.measite.minidns.util.InetAddressUtil -> de.measite.minidns.util.InetAddressUtil:
    23:25:java.net.Inet4Address ipv4From(java.lang.CharSequence) -> ipv4From
    36:38:java.net.Inet6Address ipv6From(java.lang.CharSequence) -> ipv6From
de.measite.minidns.util.MultipleIoException -> de.measite.minidns.util.MultipleIoException:
    29:32:void <init>(java.util.List) -> <init>
    39:47:java.lang.String getMessage(java.util.Collection) -> getMessage
    51:52:void throwIfRequired(java.util.List) -> throwIfRequired
de.measite.minidns.util.PlatformDetection -> de.measite.minidns.util.PlatformDetection:
    18:26:boolean isAndroid() -> isAndroid
me.drakeet.support.toast.SafeToastContext -> me.drakeet.support.toast.SafeToastContext:
    25:27:void <init>(android.content.Context,android.widget.Toast) -> <init>
    17:17:me.drakeet.support.toast.BadTokenListener access$200(me.drakeet.support.toast.SafeToastContext) -> access$200
    17:17:android.widget.Toast access$300(me.drakeet.support.toast.SafeToastContext) -> access$300
    32:32:android.content.Context getApplicationContext() -> getApplicationContext
me.drakeet.support.toast.SafeToastContext$ApplicationContextWrapper -> me.drakeet.support.toast.SafeToastContext$ApplicationContextWrapper:
    41:41:void <init>(me.drakeet.support.toast.SafeToastContext,android.content.Context,me.drakeet.support.toast.SafeToastContext$1) -> <init>
    43:45:void <init>(me.drakeet.support.toast.SafeToastContext,android.content.Context) -> <init>
    50:54:java.lang.Object getSystemService(java.lang.String) -> getSystemService
me.drakeet.support.toast.SafeToastContext$WindowManagerWrapper -> me.drakeet.support.toast.SafeToastContext$WindowManagerWrapper:
    59:59:void <init>(me.drakeet.support.toast.SafeToastContext,android.view.WindowManager,me.drakeet.support.toast.SafeToastContext$1) -> <init>
    65:67:void <init>(me.drakeet.support.toast.SafeToastContext,android.view.WindowManager) -> <init>
    85:95:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    72:72:android.view.Display getDefaultDisplay() -> getDefaultDisplay
    106:107:void removeView(android.view.View) -> removeView
    78:79:void removeViewImmediate(android.view.View) -> removeViewImmediate
    100:101:void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams) -> updateViewLayout
me.drakeet.support.toast.ToastCompat -> me.drakeet.support.toast.ToastCompat:
    32:34:void <init>(android.content.Context,android.widget.Toast) -> <init>
    138:138:int getDuration() -> getDuration
    144:144:int getGravity() -> getGravity
    126:126:float getHorizontalMargin() -> getHorizontalMargin
    132:132:float getVerticalMargin() -> getVerticalMargin
    162:162:android.view.View getView() -> getView
    150:150:int getXOffset() -> getXOffset
    156:156:int getYOffset() -> getYOffset
    50:52:me.drakeet.support.toast.ToastCompat makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    68:68:android.widget.Toast makeText(android.content.Context,int,int) -> makeText
    172:181:void setContextCompat(android.view.View,android.content.Context) -> setContextCompat
    89:90:void setDuration(int) -> setDuration
    95:96:void setGravity(int,int,int) -> setGravity
    101:102:void setMargin(float,float) -> setMargin
    107:108:void setText(int) -> setText
    113:114:void setText(java.lang.CharSequence) -> setText
    119:121:void setView(android.view.View) -> setView
    83:84:void show() -> show
me.leolin.shortcutbadger.ShortcutBadgeException -> me.leolin.shortcutbadger.ShortcutBadgeException:
    5:6:void <init>(java.lang.String) -> <init>
    9:10:void <init>(java.lang.String,java.lang.Exception) -> <init>
me.leolin.shortcutbadger.ShortcutBadger -> me.leolin.shortcutbadger.ShortcutBadger:
    41:61:void <clinit>() -> <clinit>
    75:81:boolean applyCount(android.content.Context,int) -> applyCount
    92:102:void applyCountOrThrow(android.content.Context,int) -> applyCountOrThrow
    192:236:boolean initBadger(android.content.Context) -> initBadger
    113:113:boolean removeCount(android.content.Context) -> removeCount
me.leolin.shortcutbadger.impl.AdwHomeBadger -> me.leolin.shortcutbadger.impl.AdwHomeBadger:
    17:17:void <init>() -> <init>
    26:32:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    36:36:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.ApexHomeBadger -> me.leolin.shortcutbadger.impl.ApexHomeBadger:
    17:17:void <init>() -> <init>
    26:32:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    36:36:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.AsusHomeBadger -> me.leolin.shortcutbadger.impl.AsusHomeBadger:
    17:17:void <init>() -> <init>
    26:33:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    37:37:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.DefaultBadger -> me.leolin.shortcutbadger.impl.DefaultBadger:
    18:18:void <init>() -> <init>
    26:32:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    36:36:java.util.List getSupportLaunchers() -> getSupportLaunchers
    44:45:boolean isSupported(android.content.Context) -> isSupported
me.leolin.shortcutbadger.impl.EverythingMeHomeBadger -> me.leolin.shortcutbadger.impl.EverythingMeHomeBadger:
    19:19:void <init>() -> <init>
    28:33:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    37:37:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.HuaweiHomeBadger -> me.leolin.shortcutbadger.impl.HuaweiHomeBadger:
    17:17:void <init>() -> <init>
    21:26:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    30:30:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.NewHtcHomeBadger -> me.leolin.shortcutbadger.impl.NewHtcHomeBadger:
    17:17:void <init>() -> <init>
    29:58:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    62:62:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.NovaHomeBadger -> me.leolin.shortcutbadger.impl.NovaHomeBadger:
    21:21:void <init>() -> <init>
    29:33:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    37:37:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.OPPOHomeBader -> me.leolin.shortcutbadger.impl.OPPOHomeBader:
    25:33:void <init>() -> <init>
    37:46:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    55:64:void executeBadgeByBroadcast(android.content.Context,android.content.ComponentName,int) -> executeBadgeByBroadcast
    75:79:void executeBadgeByContentProvider(android.content.Context,int) -> executeBadgeByContentProvider
    50:50:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.SamsungHomeBadger -> me.leolin.shortcutbadger.impl.SamsungHomeBadger:
    23:23:void <clinit>() -> <clinit>
    27:31:void <init>() -> <init>
    35:61:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    67:75:android.content.ContentValues getContentValues(android.content.ComponentName,int,boolean) -> getContentValues
    80:80:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.SonyHomeBadger -> me.leolin.shortcutbadger.impl.SonyHomeBadger:
    22:35:void <init>() -> <init>
    132:136:android.content.ContentValues createContentValues(int,android.content.ComponentName) -> createContentValues
    42:47:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    56:62:void executeBadgeByBroadcast(android.content.Context,android.content.ComponentName,int) -> executeBadgeByBroadcast
    73:93:void executeBadgeByContentProvider(android.content.Context,android.content.ComponentName,int) -> executeBadgeByContentProvider
    51:51:java.util.List getSupportLaunchers() -> getSupportLaunchers
    101:102:void insertBadgeAsync(android.content.ContentValues) -> insertBadgeAsync
    111:113:void insertBadgeSync(android.content.Context,android.content.ContentValues) -> insertBadgeSync
    146:151:boolean sonyBadgeContentProviderExists(android.content.Context) -> sonyBadgeContentProviderExists
me.leolin.shortcutbadger.impl.SonyHomeBadger$1 -> me.leolin.shortcutbadger.impl.SonyHomeBadger$1:
    83:83:void <init>(me.leolin.shortcutbadger.impl.SonyHomeBadger,android.content.ContentResolver) -> <init>
me.leolin.shortcutbadger.impl.VivoHomeBadger -> me.leolin.shortcutbadger.impl.VivoHomeBadger:
    16:16:void <init>() -> <init>
    20:25:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    29:29:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.XiaomiHomeBadger -> me.leolin.shortcutbadger.impl.XiaomiHomeBadger:
    27:27:void <init>() -> <init>
    37:59:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    91:91:java.util.List getSupportLaunchers() -> getSupportLaunchers
    63:87:void tryNewMiuiBadge(android.content.Context,int) -> tryNewMiuiBadge
me.leolin.shortcutbadger.impl.ZTEHomeBadger -> me.leolin.shortcutbadger.impl.ZTEHomeBadger:
    15:15:void <init>() -> <init>
    20:29:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    33:33:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.impl.ZukHomeBadger -> me.leolin.shortcutbadger.impl.ZukHomeBadger:
    21:23:void <init>() -> <init>
    28:31:void executeBadge(android.content.Context,android.content.ComponentName,int) -> executeBadge
    35:35:java.util.List getSupportLaunchers() -> getSupportLaunchers
me.leolin.shortcutbadger.util.BroadcastHelper -> me.leolin.shortcutbadger.util.BroadcastHelper:
    21:24:java.util.List resolveBroadcast(android.content.Context,android.content.Intent) -> resolveBroadcast
    45:66:void sendDefaultIntentExplicitly(android.content.Context,android.content.Intent) -> sendDefaultIntentExplicitly
    28:31:void sendIntentExplicitly(android.content.Context,android.content.Intent) -> sendIntentExplicitly
me.leolin.shortcutbadger.util.CloseHelper -> me.leolin.shortcutbadger.util.CloseHelper:
    14:17:void close(android.database.Cursor) -> close
net.ypresto.androidtranscoder.MediaTranscoder -> net.ypresto.androidtranscoder.MediaTranscoder:
    44:54:void <init>() -> <init>
    57:64:net.ypresto.androidtranscoder.MediaTranscoder getInstance() -> getInstance
    162:219:java.util.concurrent.Future transcodeVideo(java.io.FileDescriptor,java.lang.String,net.ypresto.androidtranscoder.format.MediaFormatStrategy,net.ypresto.androidtranscoder.MediaTranscoder$Listener) -> transcodeVideo
net.ypresto.androidtranscoder.MediaTranscoder$1 -> net.ypresto.androidtranscoder.MediaTranscoder$1:
    48:48:void <init>(net.ypresto.androidtranscoder.MediaTranscoder) -> <init>
    51:51:java.lang.Thread newThread(java.lang.Runnable) -> newThread
net.ypresto.androidtranscoder.MediaTranscoder$4 -> net.ypresto.androidtranscoder.MediaTranscoder$4:
    166:166:void <init>(net.ypresto.androidtranscoder.MediaTranscoder,android.os.Handler,net.ypresto.androidtranscoder.MediaTranscoder$Listener,java.io.FileDescriptor,java.lang.String,net.ypresto.androidtranscoder.format.MediaFormatStrategy,java.util.concurrent.atomic.AtomicReference) -> <init>
    166:166:java.lang.Object call() -> call
    169:214:java.lang.Void call() -> call
net.ypresto.androidtranscoder.MediaTranscoder$4$1 -> net.ypresto.androidtranscoder.MediaTranscoder$4$1:
    172:172:void <init>(net.ypresto.androidtranscoder.MediaTranscoder$4) -> <init>
    175:181:void onProgress(double) -> onProgress
net.ypresto.androidtranscoder.MediaTranscoder$4$1$1 -> net.ypresto.androidtranscoder.MediaTranscoder$4$1$1:
    175:175:void <init>(net.ypresto.androidtranscoder.MediaTranscoder$4$1,double) -> <init>
    178:179:void run() -> run
net.ypresto.androidtranscoder.MediaTranscoder$4$2 -> net.ypresto.androidtranscoder.MediaTranscoder$4$2:
    198:198:void <init>(net.ypresto.androidtranscoder.MediaTranscoder$4,java.lang.Exception) -> <init>
    201:211:void run() -> run
net.ypresto.androidtranscoder.compat.MediaCodecBufferCompatWrapper -> net.ypresto.androidtranscoder.compat.MediaCodecBufferCompatWrapper:
    18:27:void <init>(android.media.MediaCodec) -> <init>
    30:33:java.nio.ByteBuffer getInputBuffer(int) -> getInputBuffer
    37:40:java.nio.ByteBuffer getOutputBuffer(int) -> getOutputBuffer
net.ypresto.androidtranscoder.engine.AudioChannel -> net.ypresto.androidtranscoder.engine.AudioChannel:
    56:63:void <init>(android.media.MediaCodec,android.media.MediaCodec,android.media.MediaFormat) -> <init>
    96:97:void drainDecoderBufferAndQueue(int,long) -> drainDecoderBufferAndQueue
    172:193:long drainOverflow(java.nio.ShortBuffer) -> drainOverflow
    125:162:boolean feedEncoder(long) -> feedEncoder
    198:229:long remixAndMaybeFillOverflow(net.ypresto.androidtranscoder.engine.AudioChannel$AudioBuffer,java.nio.ShortBuffer) -> remixAndMaybeFillOverflow
    168:168:long sampleCountToDurationUs(int,int,int) -> sampleCountToDurationUs
    66:70:void setActualDecodedFormat(android.media.MediaFormat) -> setActualDecodedFormat
net.ypresto.androidtranscoder.engine.AudioChannel$AudioBuffer -> net.ypresto.androidtranscoder.engine.AudioChannel$AudioBuffer:
    23:23:void <init>() -> <init>
    23:23:void <init>(net.ypresto.androidtranscoder.engine.AudioChannel$1) -> <init>
net.ypresto.androidtranscoder.engine.AudioRemixer -> net.ypresto.androidtranscoder.engine.AudioRemixer:
    8:59:void <clinit>() -> <clinit>
net.ypresto.androidtranscoder.engine.AudioRemixer$1 -> net.ypresto.androidtranscoder.engine.AudioRemixer$1:
    8:8:void <init>() -> <init>
    18:40:void remix(java.nio.ShortBuffer,java.nio.ShortBuffer) -> remix
net.ypresto.androidtranscoder.engine.AudioRemixer$2 -> net.ypresto.androidtranscoder.engine.AudioRemixer$2:
    43:43:void <init>() -> <init>
    47:56:void remix(java.nio.ShortBuffer,java.nio.ShortBuffer) -> remix
net.ypresto.androidtranscoder.engine.AudioRemixer$3 -> net.ypresto.androidtranscoder.engine.AudioRemixer$3:
    59:59:void <init>() -> <init>
    63:64:void remix(java.nio.ShortBuffer,java.nio.ShortBuffer) -> remix
net.ypresto.androidtranscoder.engine.AudioTrackTranscoder -> net.ypresto.androidtranscoder.engine.AudioTrackTranscoder:
    13:13:void <clinit>() -> <clinit>
    44:51:void <init>(android.media.MediaExtractor,int,android.media.MediaFormat,net.ypresto.androidtranscoder.engine.QueuedMuxer) -> <init>
    126:135:int drainDecoder(long) -> drainDecoder
    149:164:int drainEncoder(long) -> drainEncoder
    104:122:int drainExtractor(long) -> drainExtractor
    82:82:android.media.MediaFormat getDeterminedFormat() -> getDeterminedFormat
    188:188:long getWrittenPresentationTimeUs() -> getWrittenPresentationTimeUs
    193:193:boolean isFinished() -> isFinished
    198:208:void release() -> release
    55:59:void setup() -> setup
    87:95:boolean stepPipeline() -> stepPipeline
net.ypresto.androidtranscoder.engine.InputSurface -> net.ypresto.androidtranscoder.engine.InputSurface:
    43:45:void <init>(android.view.Surface) -> <init>
    171:172:void checkEglError(java.lang.String) -> checkEglError
    54:56:void eglSetup() -> eglSetup
    122:123:void makeCurrent() -> makeCurrent
    106:117:void release() -> release
    164:165:void setPresentationTime(long) -> setPresentationTime
    136:136:boolean swapBuffers() -> swapBuffers
net.ypresto.androidtranscoder.engine.InvalidOutputFormatException -> net.ypresto.androidtranscoder.engine.InvalidOutputFormatException:
    20:21:void <init>(java.lang.String) -> <init>
net.ypresto.androidtranscoder.engine.MediaFormatValidator -> net.ypresto.androidtranscoder.engine.MediaFormatValidator:
    45:47:void validateAudioOutputFormat(android.media.MediaFormat) -> validateAudioOutputFormat
    31:35:void validateVideoOutputFormat(android.media.MediaFormat) -> validateVideoOutputFormat
net.ypresto.androidtranscoder.engine.MediaTranscoderEngine -> net.ypresto.androidtranscoder.engine.MediaTranscoderEngine:
    54:55:void <init>() -> <init>
    37:37:net.ypresto.androidtranscoder.engine.TrackTranscoder access$000(net.ypresto.androidtranscoder.engine.MediaTranscoderEngine) -> access$000
    37:37:net.ypresto.androidtranscoder.engine.TrackTranscoder access$100(net.ypresto.androidtranscoder.engine.MediaTranscoderEngine) -> access$100
    195:215:void runPipelines() -> runPipelines
    58:59:void setDataSource(java.io.FileDescriptor) -> setDataSource
    66:67:void setProgressCallback(net.ypresto.androidtranscoder.engine.MediaTranscoderEngine$ProgressCallback) -> setProgressCallback
    133:161:void setupMetadata() -> setupMetadata
    164:192:void setupTrackTranscoders(net.ypresto.androidtranscoder.format.MediaFormatStrategy) -> setupTrackTranscoders
    87:88:void transcodeVideo(java.lang.String,net.ypresto.androidtranscoder.format.MediaFormatStrategy) -> transcodeVideo
net.ypresto.androidtranscoder.engine.MediaTranscoderEngine$1 -> net.ypresto.androidtranscoder.engine.MediaTranscoderEngine$1:
    170:170:void <init>(net.ypresto.androidtranscoder.engine.MediaTranscoderEngine) -> <init>
    173:175:void onDetermineOutputFormat() -> onDetermineOutputFormat
net.ypresto.androidtranscoder.engine.OutputSurface -> net.ypresto.androidtranscoder.engine.OutputSurface:
    71:73:void <init>() -> <init>
    201:218:void awaitNewImage() -> awaitNewImage
    254:255:void drawImage() -> drawImage
    187:187:android.view.Surface getSurface() -> getSurface
    259:265:void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
    158:174:void release() -> release
    79:100:void setup() -> setup
net.ypresto.androidtranscoder.engine.PassThroughTrackTranscoder -> net.ypresto.androidtranscoder.engine.PassThroughTrackTranscoder:
    39:49:void <init>(android.media.MediaExtractor,int,net.ypresto.androidtranscoder.engine.QueuedMuxer,net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType) -> <init>
    57:57:android.media.MediaFormat getDeterminedFormat() -> getDeterminedFormat
    89:89:long getWrittenPresentationTimeUs() -> getWrittenPresentationTimeUs
    94:94:boolean isFinished() -> isFinished
    99:99:void release() -> release
    53:53:void setup() -> setup
    63:84:boolean stepPipeline() -> stepPipeline
net.ypresto.androidtranscoder.engine.QueuedMuxer -> net.ypresto.androidtranscoder.engine.QueuedMuxer:
    44:48:void <init>(android.media.MediaMuxer,net.ypresto.androidtranscoder.engine.QueuedMuxer$Listener) -> <init>
    107:109:int getTrackIndexForSampleType(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType) -> getTrackIndexForSampleType
    65:65:void onSetOutputFormat() -> onSetOutputFormat
    51:62:void setOutputFormat(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType,android.media.MediaFormat) -> setOutputFormat
    93:104:void writeSampleData(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType,java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo) -> writeSampleData
net.ypresto.androidtranscoder.engine.QueuedMuxer$1 -> net.ypresto.androidtranscoder.engine.QueuedMuxer$1:
    51:51:void <clinit>() -> <clinit>
net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleInfo -> net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleInfo:
    119:119:void <init>(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType,int,android.media.MediaCodec$BufferInfo,net.ypresto.androidtranscoder.engine.QueuedMuxer$1) -> <init>
    125:130:void <init>(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType,int,android.media.MediaCodec$BufferInfo) -> <init>
    119:119:void access$000(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleInfo,android.media.MediaCodec$BufferInfo,int) -> access$000
    119:119:net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType access$100(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleInfo) -> access$100
    119:119:int access$200(net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleInfo) -> access$200
    133:134:void writeToBufferInfo(android.media.MediaCodec$BufferInfo,int) -> writeToBufferInfo
net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType -> net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType:
    117:117:void <clinit>() -> <clinit>
    117:117:void <init>(java.lang.String,int) -> <init>
    117:117:net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType valueOf(java.lang.String) -> valueOf
    117:117:net.ypresto.androidtranscoder.engine.QueuedMuxer$SampleType[] values() -> values
net.ypresto.androidtranscoder.engine.TextureRender -> net.ypresto.androidtranscoder.engine.TextureRender:
    73:79:void <init>() -> <init>
    206:208:void checkGlError(java.lang.String) -> checkGlError
    176:202:int createProgram(java.lang.String,java.lang.String) -> createProgram
    84:110:void drawFrame(android.graphics.SurfaceTexture) -> drawFrame
    81:81:int getTextureId() -> getTextureId
    161:173:int loadShader(int,java.lang.String) -> loadShader
    115:117:void surfaceCreated() -> surfaceCreated
net.ypresto.androidtranscoder.engine.VideoTrackTranscoder -> net.ypresto.androidtranscoder.engine.VideoTrackTranscoder:
    54:59:void <init>(android.media.MediaExtractor,int,android.media.MediaFormat,net.ypresto.androidtranscoder.engine.QueuedMuxer) -> <init>
    170:177:int drainDecoder(long) -> drainDecoder
    198:211:int drainEncoder(long) -> drainEncoder
    150:166:int drainExtractor(long) -> drainExtractor
    97:97:android.media.MediaFormat getDeterminedFormat() -> getDeterminedFormat
    118:118:long getWrittenPresentationTimeUs() -> getWrittenPresentationTimeUs
    123:123:boolean isFinished() -> isFinished
    129:147:void release() -> release
    63:67:void setup() -> setup
    102:110:boolean stepPipeline() -> stepPipeline
net.ypresto.androidtranscoder.format.OutputFormatUnavailableException -> net.ypresto.androidtranscoder.format.OutputFormatUnavailableException:
    20:21:void <init>(java.lang.String) -> <init>
net.ypresto.androidtranscoder.utils.AvcCsdUtils -> net.ypresto.androidtranscoder.utils.AvcCsdUtils:
    28:29:void <clinit>() -> <clinit>
    40:52:java.nio.ByteBuffer getSpsBuffer(android.media.MediaFormat) -> getSpsBuffer
    56:63:void skipStartCode(java.nio.ByteBuffer) -> skipStartCode
net.ypresto.androidtranscoder.utils.AvcSpsUtils -> net.ypresto.androidtranscoder.utils.AvcSpsUtils:
    24:24:byte getProfileIdc(java.nio.ByteBuffer) -> getProfileIdc
net.ypresto.androidtranscoder.utils.ISO6709LocationParser -> net.ypresto.androidtranscoder.utils.ISO6709LocationParser:
    9:11:void <init>() -> <init>
    23:35:float[] parse(java.lang.String) -> parse
net.ypresto.androidtranscoder.utils.MediaExtractorUtils -> net.ypresto.androidtranscoder.utils.MediaExtractorUtils:
    40:59:net.ypresto.androidtranscoder.utils.MediaExtractorUtils$TrackResult getFirstVideoAndAudioTrack(android.media.MediaExtractor) -> getFirstVideoAndAudioTrack
net.ypresto.androidtranscoder.utils.MediaExtractorUtils$TrackResult -> net.ypresto.androidtranscoder.utils.MediaExtractorUtils$TrackResult:
    26:26:void <init>(net.ypresto.androidtranscoder.utils.MediaExtractorUtils$1) -> <init>
    28:29:void <init>() -> <init>
org.conscrypt.AbstractConscryptEngine -> org.conscrypt.AbstractConscryptEngine:
    29:29:void <init>() -> <init>
    98:98:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
org.conscrypt.AbstractConscryptSocket -> org.conscrypt.AbstractConscryptSocket:
    88:93:void <init>() -> <init>
    96:101:void <init>(java.lang.String,int) -> <init>
    104:109:void <init>(java.net.InetAddress,int) -> <init>
    113:118:void <init>(java.lang.String,int,java.net.InetAddress,int) -> <init>
    122:127:void <init>(java.net.InetAddress,int,java.net.InetAddress,int) -> <init>
    130:135:void <init>(java.net.Socket,java.lang.String,int,boolean) -> <init>
    237:239:void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> addHandshakeCompletedListener
    161:166:void bind(java.net.SocketAddress) -> bind
    573:574:void checkOpen() -> checkOpen
    171:180:void close() -> close
    139:140:void connect(java.net.SocketAddress) -> connect
    147:157:void connect(java.net.SocketAddress,int) -> connect
    295:295:java.nio.channels.SocketChannel getChannel() -> getChannel
    251:254:java.io.FileDescriptor getFileDescriptor$() -> getFileDescriptor$
    520:520:java.lang.String getHostname() -> getHostname
    538:547:java.lang.String getHostnameOrIP() -> getHostnameOrIP
    184:187:java.net.InetAddress getInetAddress() -> getInetAddress
    300:303:java.io.InputStream getInputStream() -> getInputStream
    397:400:boolean getKeepAlive() -> getKeepAlive
    192:195:java.net.InetAddress getLocalAddress() -> getLocalAddress
    200:203:int getLocalPort() -> getLocalPort
    216:219:java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    668:668:byte[] getNpnSelectedProtocol() -> getNpnSelectedProtocol
    289:289:boolean getOOBInline() -> getOOBInline
    308:311:java.io.OutputStream getOutputStream() -> getOutputStream
    224:232:int getPort() -> getPort
    380:383:int getReceiveBufferSize() -> getReceiveBufferSize
    208:211:java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    431:434:boolean getReuseAddress() -> getReuseAddress
    361:364:int getSendBufferSize() -> getSendBufferSize
    342:345:int getSoLinger() -> getSoLinger
    271:274:int getSoTimeout() -> getSoTimeout
    561:561:int getSoWriteTimeout() -> getSoWriteTimeout
    325:328:boolean getTcpNoDelay() -> getTcpNoDelay
    414:417:int getTrafficClass() -> getTrafficClass
    465:468:boolean isBound() -> isBound
    473:476:boolean isClosed() -> isClosed
    457:460:boolean isConnected() -> isConnected
    613:613:boolean isDelegating() -> isDelegating
    481:484:boolean isInputShutdown() -> isInputShutdown
    489:492:boolean isOutputShutdown() -> isOutputShutdown
    591:608:void notifyHandshakeCompletedListeners() -> notifyHandshakeCompletedListeners
    579:579:org.conscrypt.PeerInfoProvider peerInfoProvider() -> peerInfoProvider
    243:245:void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> removeHandshakeCompletedListener
    279:279:void sendUrgentData(int) -> sendUrgentData
    569:569:void setHandshakeTimeout(int) -> setHandshakeTimeout
    529:530:void setHostname(java.lang.String) -> setHostname
    388:393:void setKeepAlive(boolean) -> setKeepAlive
    676:676:void setNpnProtocols(byte[]) -> setNpnProtocols
    284:284:void setOOBInline(boolean) -> setOOBInline
    497:502:void setPerformancePreferences(int,int,int) -> setPerformancePreferences
    370:375:void setReceiveBufferSize(int) -> setReceiveBufferSize
    422:427:void setReuseAddress(boolean) -> setReuseAddress
    351:356:void setSendBufferSize(int) -> setSendBufferSize
    333:338:void setSoLinger(boolean,int) -> setSoLinger
    260:266:void setSoTimeout(int) -> setSoTimeout
    554:554:void setSoWriteTimeout(int) -> setSoWriteTimeout
    316:321:void setTcpNoDelay(boolean) -> setTcpNoDelay
    405:410:void setTrafficClass(int) -> setTrafficClass
    439:444:void shutdownInput() -> shutdownInput
    448:453:void shutdownOutput() -> shutdownOutput
    506:512:java.lang.String toString() -> toString
org.conscrypt.AbstractConscryptSocket$1 -> org.conscrypt.AbstractConscryptSocket$1:
    61:61:void <init>(org.conscrypt.AbstractConscryptSocket) -> <init>
    64:64:java.lang.String getHostname() -> getHostname
    69:69:java.lang.String getHostnameOrIP() -> getHostnameOrIP
    74:74:int getPort() -> getPort
org.conscrypt.AbstractSessionContext -> org.conscrypt.AbstractSessionContext:
    66:68:void <init>(int) -> <init>
    31:31:int access$000(org.conscrypt.AbstractSessionContext) -> access$000
    203:205:void cacheSession(org.conscrypt.NativeSslSession) -> cacheSession
    193:195:void finalize() -> finalize
    78:81:java.util.Enumeration getIds() -> getIds
    119:120:javax.net.ssl.SSLSession getSession(byte[]) -> getSession
    135:135:int getSessionCacheSize() -> getSessionCacheSize
    242:250:org.conscrypt.NativeSslSession getSessionFromCache(byte[]) -> getSessionFromCache
    140:140:int getSessionTimeout() -> getSessionTimeout
    224:226:void removeSession(org.conscrypt.NativeSslSession) -> removeSession
    177:178:void setSessionCacheSize(int) -> setSessionCacheSize
    145:146:void setSessionTimeout(int) -> setSessionTimeout
    291:302:void trimToSize() -> trimToSize
org.conscrypt.AbstractSessionContext$1 -> org.conscrypt.AbstractSessionContext$1:
    46:46:void <init>(org.conscrypt.AbstractSessionContext) -> <init>
    52:57:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.conscrypt.AbstractSessionContext$2 -> org.conscrypt.AbstractSessionContext$2:
    82:82:void <init>(org.conscrypt.AbstractSessionContext,java.util.Iterator) -> <init>
    87:98:boolean hasMoreElements() -> hasMoreElements
    82:82:java.lang.Object nextElement() -> nextElement
    103:108:byte[] nextElement() -> nextElement
org.conscrypt.ActiveSession -> org.conscrypt.ActiveSession:
    51:54:void <init>(org.conscrypt.NativeSsl,org.conscrypt.AbstractSessionContext) -> <init>
    314:315:void checkPeerCertificatesPresent() -> checkPeerCertificatesPresent
    282:288:void configurePeer(java.lang.String,int,java.security.cert.X509Certificate[]) -> configurePeer
    270:270:int getApplicationBufferSize() -> getApplicationBufferSize
    235:237:java.lang.String getCipherSuite() -> getCipherSuite
    73:78:long getCreationTime() -> getCreationTime
    58:63:byte[] getId() -> getId
    91:91:long getLastAccessedTime() -> getLastAccessedTime
    187:187:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    223:226:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    265:265:int getPacketBufferSize() -> getPacketBufferSize
    205:212:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    36:36:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    181:182:java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    255:255:java.lang.String getPeerHost() -> getPeerHost
    260:260:int getPeerPort() -> getPeerPort
    217:218:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    126:129:byte[] getPeerSignedCertificateTimestamp() -> getPeerSignedCertificateTimestamp
    243:250:java.lang.String getProtocol() -> getProtocol
    134:136:java.lang.String getRequestedServerName() -> getRequestedServerName
    68:68:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    111:115:java.util.List getStatusResponses() -> getStatusResponses
    163:163:java.lang.Object getValue(java.lang.String) -> getValue
    175:175:java.lang.String[] getValueNames() -> getValueNames
    141:143:void invalidate() -> invalidate
    148:152:boolean isValid() -> isValid
    320:324:void notifyUnbound(java.lang.Object,java.lang.String) -> notifyUnbound
    296:307:void onPeerCertificateAvailable(java.lang.String,int) -> onPeerCertificateAvailable
    278:279:void onPeerCertificatesReceived(java.lang.String,int,java.security.cert.X509Certificate[]) -> onPeerCertificatesReceived
    157:157:void putValue(java.lang.String,java.lang.Object) -> putValue
    169:169:void removeValue(java.lang.String) -> removeValue
    95:96:void setLastAccessedTime(long) -> setLastAccessedTime
org.conscrypt.AddressUtils -> org.conscrypt.AddressUtils:
    33:33:void <init>() -> <init>
    56:60:boolean isLiteralIpAddress(java.lang.String) -> isLiteralIpAddress
    39:44:boolean isValidSniHostname(java.lang.String) -> isValidSniHostname
org.conscrypt.AllocatedBuffer -> org.conscrypt.AllocatedBuffer:
    42:42:void <init>() -> <init>
    66:68:org.conscrypt.AllocatedBuffer wrap(java.nio.ByteBuffer) -> wrap
org.conscrypt.AllocatedBuffer$1 -> org.conscrypt.AllocatedBuffer$1:
    68:68:void <init>(java.nio.ByteBuffer) -> <init>
    72:72:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    84:84:org.conscrypt.AllocatedBuffer release() -> release
    78:78:org.conscrypt.AllocatedBuffer retain() -> retain
org.conscrypt.ApplicationProtocolSelector -> org.conscrypt.ApplicationProtocolSelector:
    28:28:void <init>() -> <init>
org.conscrypt.ApplicationProtocolSelectorAdapter -> org.conscrypt.ApplicationProtocolSelectorAdapter:
    36:40:void <init>(javax.net.ssl.SSLEngine,org.conscrypt.ApplicationProtocolSelector) -> <init>
    42:46:void <init>(javax.net.ssl.SSLSocket,org.conscrypt.ApplicationProtocolSelector) -> <init>
    56:57:int selectApplicationProtocol(byte[]) -> selectApplicationProtocol
org.conscrypt.ArrayUtils -> org.conscrypt.ArrayUtils:
    23:23:void <init>() -> <init>
    30:31:void checkOffsetAndCount(int,int,int) -> checkOffsetAndCount
org.conscrypt.BaseOpenSSLSocketAdapterFactory -> org.conscrypt.BaseOpenSSLSocketAdapterFactory:
    29:31:void <init>(org.conscrypt.OpenSSLSocketFactoryImpl) -> <init>
    45:45:java.net.Socket createSocket() -> createSocket
    51:51:java.net.Socket createSocket(java.lang.String,int) -> createSocket
    57:57:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    62:62:java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    71:71:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    78:78:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    35:35:java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    40:40:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
org.conscrypt.BufferAllocator -> org.conscrypt.BufferAllocator:
    26:26:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    37:37:org.conscrypt.BufferAllocator unpooled() -> unpooled
org.conscrypt.BufferAllocator$1 -> org.conscrypt.BufferAllocator$1:
    26:26:void <init>() -> <init>
    29:29:org.conscrypt.AllocatedBuffer allocateDirectBuffer(int) -> allocateDirectBuffer
org.conscrypt.BuildConfig -> org.conscrypt.BuildConfig:
    6:6:void <init>() -> <init>
org.conscrypt.ByteArray -> org.conscrypt.ByteArray:
    28:31:void <init>(byte[]) -> <init>
    40:44:boolean equals(java.lang.Object) -> equals
    35:35:int hashCode() -> hashCode
org.conscrypt.CertificatePriorityComparator -> org.conscrypt.CertificatePriorityComparator:
    54:76:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    42:42:int compare(java.lang.Object,java.lang.Object) -> compare
    81:102:int compare(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> compare
    121:132:int compareKeyAlgorithm(java.security.PublicKey,java.security.PublicKey) -> compareKeyAlgorithm
    137:140:int compareKeySize(java.security.PublicKey,java.security.PublicKey) -> compareKeySize
    159:167:int compareSignatureAlgorithm(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> compareSignatureAlgorithm
    107:117:int compareStrength(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> compareStrength
    148:154:int getKeySize(java.security.PublicKey) -> getKeySize
org.conscrypt.ChainStrengthAnalyzer -> org.conscrypt.ChainStrengthAnalyzer:
    41:41:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    51:59:void check(java.security.cert.X509Certificate[]) -> check
    62:70:void check(java.util.List) -> check
    73:75:void checkCert(java.security.cert.X509Certificate) -> checkCert
    78:102:void checkKeyLength(java.security.cert.X509Certificate) -> checkKeyLength
    108:114:void checkSignatureAlgorithm(java.security.cert.X509Certificate) -> checkSignatureAlgorithm
org.conscrypt.ClientSessionContext -> org.conscrypt.ClientSessionContext:
    47:48:void <init>() -> <init>
    63:62:org.conscrypt.NativeSslSession getCachedSession(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> getCachedSession
    120:131:org.conscrypt.NativeSslSession getSession(java.lang.String,int) -> getSession
    221:221:org.conscrypt.NativeSslSession getSessionFromPersistentCache(byte[]) -> getSessionFromPersistentCache
    189:205:void onBeforeAddSession(org.conscrypt.NativeSslSession) -> onBeforeAddSession
    209:216:void onBeforeRemoveSession(org.conscrypt.NativeSslSession) -> onBeforeRemoveSession
    154:172:void putSession(org.conscrypt.ClientSessionContext$HostAndPort,org.conscrypt.NativeSslSession) -> putSession
    176:184:void removeSession(org.conscrypt.ClientSessionContext$HostAndPort,org.conscrypt.NativeSslSession) -> removeSession
    55:56:void setPersistentCache(org.conscrypt.SSLClientSessionCache) -> setPersistentCache
    103:108:int size() -> size
org.conscrypt.ClientSessionContext$HostAndPort -> org.conscrypt.ClientSessionContext$HostAndPort:
    228:231:void <init>(java.lang.String,int) -> <init>
    240:244:boolean equals(java.lang.Object) -> equals
    235:235:int hashCode() -> hashCode
org.conscrypt.Conscrypt -> org.conscrypt.Conscrypt:
    38:38:void <init>() -> <init>
    58:59:void checkAvailability() -> checkAvailability
    430:430:byte[] exportKeyingMaterial(javax.net.ssl.SSLSocket,java.lang.String,byte[],int) -> exportKeyingMaterial
    682:682:byte[] exportKeyingMaterial(javax.net.ssl.SSLEngine,java.lang.String,byte[],int) -> exportKeyingMaterial
    338:338:java.lang.String getApplicationProtocol(javax.net.ssl.SSLSocket) -> getApplicationProtocol
    631:631:java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine) -> getApplicationProtocol
    374:374:java.lang.String[] getApplicationProtocols(javax.net.ssl.SSLSocket) -> getApplicationProtocols
    609:609:java.lang.String[] getApplicationProtocols(javax.net.ssl.SSLEngine) -> getApplicationProtocols
    310:310:byte[] getChannelId(javax.net.ssl.SSLSocket) -> getChannelId
    524:524:byte[] getChannelId(javax.net.ssl.SSLEngine) -> getChannelId
    131:132:javax.net.ssl.X509TrustManager getDefaultX509TrustManager() -> getDefaultX509TrustManager
    264:264:java.lang.String getHostname(javax.net.ssl.SSLSocket) -> getHostname
    482:482:java.lang.String getHostname(javax.net.ssl.SSLEngine) -> getHostname
    272:272:java.lang.String getHostnameOrIP(javax.net.ssl.SSLSocket) -> getHostnameOrIP
    383:383:byte[] getTlsUnique(javax.net.ssl.SSLSocket) -> getTlsUnique
    640:640:byte[] getTlsUnique(javax.net.ssl.SSLEngine) -> getTlsUnique
    412:412:int getTokenBindingParams(javax.net.ssl.SSLSocket) -> getTokenBindingParams
    664:664:int getTokenBindingParams(javax.net.ssl.SSLEngine) -> getTokenBindingParams
    45:48:boolean isAvailable() -> isAvailable
    65:65:boolean isConscrypt(java.security.Provider) -> isConscrypt
    139:139:boolean isConscrypt(javax.net.ssl.SSLContext) -> isConscrypt
    179:179:boolean isConscrypt(javax.net.ssl.SSLSocketFactory) -> isConscrypt
    212:212:boolean isConscrypt(javax.net.ssl.SSLServerSocketFactory) -> isConscrypt
    235:235:boolean isConscrypt(javax.net.ssl.SSLSocket) -> isConscrypt
    437:437:boolean isConscrypt(javax.net.ssl.SSLEngine) -> isConscrypt
    123:123:int maxEncryptedPacketLength() -> maxEncryptedPacketLength
    489:489:int maxSealOverhead(javax.net.ssl.SSLEngine) -> maxSealOverhead
    146:147:javax.net.ssl.SSLContextSpi newPreferredSSLContextSpi() -> newPreferredSSLContextSpi
    72:73:java.security.Provider newProvider() -> newProvider
    83:84:java.security.Provider newProvider(java.lang.String) -> newProvider
    116:116:org.conscrypt.Conscrypt$ProviderBuilder newProviderBuilder() -> newProviderBuilder
    350:351:void setApplicationProtocolSelector(javax.net.ssl.SSLSocket,org.conscrypt.ApplicationProtocolSelector) -> setApplicationProtocolSelector
    621:622:void setApplicationProtocolSelector(javax.net.ssl.SSLEngine,org.conscrypt.ApplicationProtocolSelector) -> setApplicationProtocolSelector
    363:364:void setApplicationProtocols(javax.net.ssl.SSLSocket,java.lang.String[]) -> setApplicationProtocols
    598:599:void setApplicationProtocols(javax.net.ssl.SSLEngine,java.lang.String[]) -> setApplicationProtocols
    453:454:void setBufferAllocator(javax.net.ssl.SSLEngine,org.conscrypt.BufferAllocator) -> setBufferAllocator
    296:297:void setChannelIdEnabled(javax.net.ssl.SSLSocket,boolean) -> setChannelIdEnabled
    510:511:void setChannelIdEnabled(javax.net.ssl.SSLEngine,boolean) -> setChannelIdEnabled
    328:329:void setChannelIdPrivateKey(javax.net.ssl.SSLSocket,java.security.PrivateKey) -> setChannelIdPrivateKey
    541:542:void setChannelIdPrivateKey(javax.net.ssl.SSLEngine,java.security.PrivateKey) -> setChannelIdPrivateKey
    154:157:void setClientSessionCache(javax.net.ssl.SSLContext,org.conscrypt.SSLClientSessionCache) -> setClientSessionCache
    462:463:void setDefaultBufferAllocator(org.conscrypt.BufferAllocator) -> setDefaultBufferAllocator
    496:497:void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener) -> setHandshakeListener
    255:256:void setHostname(javax.net.ssl.SSLSocket,java.lang.String) -> setHostname
    473:474:void setHostname(javax.net.ssl.SSLEngine,java.lang.String) -> setHostname
    166:169:void setServerSessionCache(javax.net.ssl.SSLContext,org.conscrypt.SSLServerSessionCache) -> setServerSessionCache
    402:403:void setTokenBindingParams(javax.net.ssl.SSLSocket,int[]) -> setTokenBindingParams
    655:656:void setTokenBindingParams(javax.net.ssl.SSLEngine,int[]) -> setTokenBindingParams
    204:205:void setUseEngineSocket(javax.net.ssl.SSLSocketFactory,boolean) -> setUseEngineSocket
    228:229:void setUseEngineSocket(javax.net.ssl.SSLServerSocketFactory,boolean) -> setUseEngineSocket
    195:197:void setUseEngineSocketByDefault(boolean) -> setUseEngineSocketByDefault
    282:283:void setUseSessionTickets(javax.net.ssl.SSLSocket,boolean) -> setUseSessionTickets
    585:586:void setUseSessionTickets(javax.net.ssl.SSLEngine,boolean) -> setUseSessionTickets
    183:185:org.conscrypt.OpenSSLSocketFactoryImpl toConscrypt(javax.net.ssl.SSLSocketFactory) -> toConscrypt
    216:218:org.conscrypt.OpenSSLServerSocketFactoryImpl toConscrypt(javax.net.ssl.SSLServerSocketFactory) -> toConscrypt
    239:241:org.conscrypt.AbstractConscryptSocket toConscrypt(javax.net.ssl.SSLSocket) -> toConscrypt
    441:443:org.conscrypt.AbstractConscryptEngine toConscrypt(javax.net.ssl.SSLEngine) -> toConscrypt
    555:555:javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine,java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> unwrap
    574:574:javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine,java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int) -> unwrap
org.conscrypt.Conscrypt$ProviderBuilder -> org.conscrypt.Conscrypt$ProviderBuilder:
    87:87:void <init>(org.conscrypt.Conscrypt$1) -> <init>
    91:91:void <init>() -> <init>
    111:111:java.security.Provider build() -> build
    106:107:org.conscrypt.Conscrypt$ProviderBuilder provideTrustManager() -> provideTrustManager
    97:98:org.conscrypt.Conscrypt$ProviderBuilder setName(java.lang.String) -> setName
org.conscrypt.ConscryptEngine -> org.conscrypt.ConscryptEngine:
    103:113:void <clinit>() -> <clinit>
    182:188:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    190:196:void <init>(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> <init>
    198:204:void <init>(org.conscrypt.SSLParametersImpl,org.conscrypt.PeerInfoProvider) -> <init>
    100:100:org.conscrypt.ConscryptSession access$000(org.conscrypt.ConscryptEngine) -> access$000
    100:100:org.conscrypt.ConscryptSession access$100(org.conscrypt.ConscryptEngine) -> access$100
    394:396:void beginHandshake() -> beginHandshake
    400:402:void beginHandshakeInternal() -> beginHandshakeInternal
    933:944:int calcDstsLength(java.nio.ByteBuffer[],int,int) -> calcDstsLength
    948:956:long calcSrcsLength(java.nio.ByteBuffer[],int,int) -> calcSrcsLength
    1701:1705:java.lang.String chooseClientAlias(javax.net.ssl.X509KeyManager,javax.security.auth.x500.X500Principal[],java.lang.String[]) -> chooseClientAlias
    1718:1718:java.lang.String chooseClientPSKIdentity(org.conscrypt.PSKKeyManager,java.lang.String) -> chooseClientPSKIdentity
    1690:1694:java.lang.String chooseServerAlias(javax.net.ssl.X509KeyManager,java.lang.String) -> chooseServerAlias
    1712:1712:java.lang.String chooseServerPSKIdentityHint(org.conscrypt.PSKKeyManager) -> chooseServerPSKIdentityHint
    1659:1660:void clientCertificateRequested(byte[],int[],byte[][]) -> clientCertificateRequested
    1565:1565:int clientPSKKeyRequested(java.lang.String,byte[],byte[]) -> clientPSKKeyRequested
    1819:1819:org.conscrypt.ClientSessionContext clientSessionContext() -> clientSessionContext
    1360:1362:void closeAll() -> closeAll
    1672:1677:void closeAndFreeResources() -> closeAndFreeResources
    455:464:void closeInbound() -> closeInbound
    469:484:void closeOutbound() -> closeOutbound
    1147:1148:javax.net.ssl.SSLException convertException(java.lang.Throwable) -> convertException
    1228:1228:long directByteBufferAddress(java.nio.ByteBuffer,int) -> directByteBufferAddress
    1776:1780:byte[] exportKeyingMaterial(java.lang.String,byte[],int) -> exportKeyingMaterial
    1682:1684:void finalize() -> finalize
    1017:1022:void finishHandshake() -> finishHandshake
    1790:1790:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    1739:1739:java.lang.String[] getApplicationProtocols() -> getApplicationProtocols
    275:285:byte[] getChannelId() -> getChannelId
    490:490:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    505:505:boolean getEnableSessionCreation() -> getEnableSessionCreation
    495:495:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    500:500:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    1349:1353:javax.net.ssl.SSLEngineResult$Status getEngineStatus() -> getEngineStatus
    1795:1797:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    523:525:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    1345:1345:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus(int) -> getHandshakeStatus
    529:544:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatusInternal() -> getHandshakeStatusInternal
    379:379:java.lang.String getHostname() -> getHostname
    566:566:boolean getNeedClientAuth() -> getNeedClientAuth
    1219:1224:java.nio.ByteBuffer getOrCreateLazyDirectBuffer() -> getOrCreateLazyDirectBuffer
    1724:1724:javax.crypto.SecretKey getPSKKey(org.conscrypt.PSKKeyManager,java.lang.String,java.lang.String) -> getPSKKey
    384:384:java.lang.String getPeerHost() -> getPeerHost
    389:389:int getPeerPort() -> getPeerPort
    510:512:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    589:589:javax.net.ssl.SSLSession getSession() -> getSession
    614:614:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    619:619:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    1755:1755:byte[] getTlsUnique() -> getTlsUnique
    1771:1771:int getTokenBindingParams() -> getTokenBindingParams
    624:624:boolean getUseClientMode() -> getUseClientMode
    629:629:boolean getWantClientAuth() -> getWantClientAuth
    965:1012:javax.net.ssl.SSLEngineResult$HandshakeStatus handshake() -> handshake
    574:584:javax.net.ssl.SSLSession handshakeSession() -> handshakeSession
    352:355:boolean isHandshakeStarted() -> isHandshakeStarted
    634:637:boolean isInboundDone() -> isInboundDone
    642:644:boolean isOutboundDone() -> isOutboundDone
    238:238:int maxSealOverhead() -> maxSealOverhead
    1335:1340:javax.net.ssl.SSLEngineResult$HandshakeStatus mayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus) -> mayFinishHandshake
    1373:1373:javax.net.ssl.SSLEngineResult newResult(int,int,javax.net.ssl.SSLEngineResult$HandshakeStatus) -> newResult
    208:210:org.conscrypt.NativeSsl newSsl(org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine) -> newSsl
    1365:1368:javax.net.ssl.SSLException newSslExceptionWithMessage(java.lang.String) -> newSslExceptionWithMessage
    1602:1617:void onNewSessionEstablished(long) -> onNewSessionEstablished
    1575:1595:void onSSLStateChange(int,int) -> onSSLStateChange
    556:556:int pendingInboundCleartextBytes() -> pendingInboundCleartextBytes
    552:552:int pendingOutboundEncryptedBytes() -> pendingOutboundEncryptedBytes
    561:561:javax.net.ssl.SSLEngineResult$HandshakeStatus pendingStatus(int) -> pendingStatus
    606:609:org.conscrypt.ConscryptSession provideHandshakeSession() -> provideHandshakeSession
    593:602:org.conscrypt.ConscryptSession provideSession() -> provideSession
    1275:1294:int readEncryptedData(java.nio.ByteBuffer,int) -> readEncryptedData
    1299:1299:int readEncryptedDataDirect(java.nio.ByteBuffer,int,int) -> readEncryptedDataDirect
    1303:1328:int readEncryptedDataHeap(java.nio.ByteBuffer,int) -> readEncryptedDataHeap
    1235:1266:javax.net.ssl.SSLEngineResult readPendingBytesFromBIO(java.nio.ByteBuffer,int,int,javax.net.ssl.SSLEngineResult$HandshakeStatus) -> readPendingBytesFromBIO
    1089:1103:int readPlaintextData(java.nio.ByteBuffer) -> readPlaintextData
    1109:1109:int readPlaintextDataDirect(java.nio.ByteBuffer,int,int) -> readPlaintextDataDirect
    1114:1141:int readPlaintextDataHeap(java.nio.ByteBuffer,int) -> readPlaintextDataHeap
    1815:1816:void resetSingleDstBuffer() -> resetSingleDstBuffer
    1806:1807:void resetSingleSrcBuffer() -> resetSingleSrcBuffer
    1664:1669:void sendSSLShutdown() -> sendSSLShutdown
    1570:1570:int serverPSKKeyRequested(java.lang.String,java.lang.String,byte[]) -> serverPSKKeyRequested
    1622:1622:long serverSessionRequested(byte[]) -> serverSessionRequested
    1823:1823:org.conscrypt.AbstractSessionContext sessionContext() -> sessionContext
    1749:1751:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector) -> setApplicationProtocolSelector
    1785:1786:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter) -> setApplicationProtocolSelector
    1744:1745:void setApplicationProtocols(java.lang.String[]) -> setApplicationProtocols
    224:230:void setBufferAllocator(org.conscrypt.BufferAllocator) -> setBufferAllocator
    251:260:void setChannelIdEnabled(boolean) -> setChannelIdEnabled
    302:303:void setChannelIdPrivateKey(java.security.PrivateKey) -> setChannelIdPrivateKey
    219:220:void setDefaultBufferAllocator(org.conscrypt.BufferAllocator) -> setDefaultBufferAllocator
    659:660:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    649:650:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    654:655:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    342:348:void setHandshakeListener(org.conscrypt.HandshakeListener) -> setHandshakeListener
    368:370:void setHostname(java.lang.String) -> setHostname
    664:665:void setNeedClientAuth(boolean) -> setNeedClientAuth
    517:519:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    1760:1765:void setTokenBindingParams(int[]) -> setTokenBindingParams
    669:676:void setUseClientMode(boolean) -> setUseClientMode
    1734:1735:void setUseSessionTickets(boolean) -> setUseSessionTickets
    681:682:void setWantClientAuth(boolean) -> setWantClientAuth
    1810:1811:java.nio.ByteBuffer[] singleDstBuffer(java.nio.ByteBuffer) -> singleDstBuffer
    1801:1802:java.nio.ByteBuffer[] singleSrcBuffer(java.nio.ByteBuffer) -> singleSrcBuffer
    1827:1845:void transitionTo(int) -> transitionTo
    686:693:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    698:704:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    710:716:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    721:723:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> unwrap
    730:929:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int) -> unwrap
    1629:1649:void verifyCertificateChain(byte[][],java.lang.String) -> verifyCertificateChain
    1380:1386:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    1392:1396:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    1158:1172:int writeEncryptedData(java.nio.ByteBuffer,int) -> writeEncryptedData
    1177:1177:int writeEncryptedDataDirect(java.nio.ByteBuffer,int,int) -> writeEncryptedDataDirect
    1181:1213:int writeEncryptedDataHeap(java.nio.ByteBuffer,int,int) -> writeEncryptedDataHeap
    1031:1043:int writePlaintextData(java.nio.ByteBuffer,int) -> writePlaintextData
    1048:1048:int writePlaintextDataDirect(java.nio.ByteBuffer,int,int) -> writePlaintextDataDirect
    1052:1079:int writePlaintextDataHeap(java.nio.ByteBuffer,int,int) -> writePlaintextDataHeap
org.conscrypt.ConscryptEngine$1 -> org.conscrypt.ConscryptEngine$1:
    159:159:void <init>(org.conscrypt.ConscryptEngine) -> <init>
    162:162:org.conscrypt.ConscryptSession provideSession() -> provideSession
org.conscrypt.ConscryptEngine$2 -> org.conscrypt.ConscryptEngine$2:
    576:576:void <init>(org.conscrypt.ConscryptEngine) -> <init>
    579:579:org.conscrypt.ConscryptSession provideSession() -> provideSession
org.conscrypt.ConscryptEngineSocket -> org.conscrypt.ConscryptEngineSocket:
    46:46:void <clinit>() -> <clinit>
    60:62:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    66:68:void <init>(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> <init>
    72:74:void <init>(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    78:80:void <init>(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    84:86:void <init>(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    90:92:void <init>(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl) -> <init>
    45:45:void access$000(org.conscrypt.ConscryptEngineSocket) -> access$000
    45:45:java.io.InputStream access$1000(org.conscrypt.ConscryptEngineSocket) -> access$1000
    45:45:org.conscrypt.ConscryptEngine access$400(org.conscrypt.ConscryptEngineSocket) -> access$400
    45:45:java.io.OutputStream access$500(org.conscrypt.ConscryptEngineSocket) -> access$500
    45:45:java.lang.Object access$600(org.conscrypt.ConscryptEngineSocket) -> access$600
    45:45:int access$700(org.conscrypt.ConscryptEngineSocket) -> access$700
    45:45:java.lang.Object access$800(org.conscrypt.ConscryptEngineSocket) -> access$800
    45:45:void access$900(org.conscrypt.ConscryptEngineSocket) -> access$900
    394:409:void close() -> close
    167:209:void doHandshake() -> doHandshake
    356:356:byte[] exportKeyingMaterial(java.lang.String,byte[],int) -> exportKeyingMaterial
    264:264:javax.net.ssl.SSLSession getActiveSession() -> getActiveSession
    431:431:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    426:426:java.lang.String[] getApplicationProtocols() -> getApplicationProtocols
    331:331:byte[] getChannelId() -> getChannelId
    269:269:boolean getEnableSessionCreation() -> getEnableSessionCreation
    284:284:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    299:299:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    436:436:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    236:236:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    213:219:java.io.InputStream getInputStream() -> getInputStream
    376:376:boolean getNeedClientAuth() -> getNeedClientAuth
    224:231:java.io.OutputStream getOutputStream() -> getOutputStream
    117:117:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    241:259:javax.net.ssl.SSLSession getSession() -> getSession
    279:279:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    294:294:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    341:341:byte[] getTlsUnique() -> getTlsUnique
    351:351:int getTokenBindingParams() -> getTokenBindingParams
    500:500:java.io.InputStream getUnderlyingInputStream() -> getUnderlyingInputStream
    496:496:java.io.OutputStream getUnderlyingOutputStream() -> getUnderlyingOutputStream
    361:361:boolean getUseClientMode() -> getUseClientMode
    371:371:boolean getWantClientAuth() -> getWantClientAuth
    96:112:org.conscrypt.ConscryptEngine newEngine(org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngineSocket) -> newEngine
    451:465:void onHandshakeFinished() -> onHandshakeFinished
    441:443:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector) -> setApplicationProtocolSelector
    447:448:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter) -> setApplicationProtocolSelector
    421:422:void setApplicationProtocols(java.lang.String[]) -> setApplicationProtocols
    326:327:void setChannelIdEnabled(boolean) -> setChannelIdEnabled
    336:337:void setChannelIdPrivateKey(java.security.PrivateKey) -> setChannelIdPrivateKey
    274:275:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    289:290:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    304:305:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    315:317:void setHostname(java.lang.String) -> setHostname
    381:382:void setNeedClientAuth(boolean) -> setNeedClientAuth
    122:123:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    346:347:void setTokenBindingParams(int[]) -> setTokenBindingParams
    366:367:void setUseClientMode(boolean) -> setUseClientMode
    321:322:void setUseSessionTickets(boolean) -> setUseSessionTickets
    386:387:void setWantClientAuth(boolean) -> setWantClientAuth
    127:154:void startHandshake() -> startHandshake
    476:492:void waitForHandshake() -> waitForHandshake
org.conscrypt.ConscryptEngineSocket$1 -> org.conscrypt.ConscryptEngineSocket$1:
    99:99:void <init>(org.conscrypt.ConscryptEngineSocket) -> <init>
    106:107:void onHandshakeFinished() -> onHandshakeFinished
org.conscrypt.ConscryptEngineSocket$2 -> org.conscrypt.ConscryptEngineSocket$2:
    714:169:void <clinit>() -> <clinit>
org.conscrypt.ConscryptEngineSocket$SSLInputStream -> org.conscrypt.ConscryptEngineSocket$SSLInputStream:
    615:621:void <init>(org.conscrypt.ConscryptEngineSocket) -> <init>
    607:607:int access$100(org.conscrypt.ConscryptEngineSocket$SSLInputStream,byte[],int,int) -> access$100
    663:668:int available() -> available
    625:626:void close() -> close
    781:784:void init() -> init
    766:768:boolean isHandshakeFinished() -> isHandshakeFinished
    672:676:boolean isHandshaking(javax.net.ssl.SSLEngineResult$HandshakeStatus) -> isHandshaking
    630:642:int read() -> read
    647:650:int read(byte[]) -> read
    655:658:int read(byte[],int,int) -> read
    790:800:int readFromSocket() -> readFromSocket
    683:762:int readInternal(byte[],int,int) -> readInternal
    775:777:void renegotiate() -> renegotiate
org.conscrypt.ConscryptEngineSocket$SSLOutputStream -> org.conscrypt.ConscryptEngineSocket$SSLOutputStream:
    512:515:void <init>(org.conscrypt.ConscryptEngineSocket) -> <init>
    506:506:void access$200(org.conscrypt.ConscryptEngineSocket$SSLOutputStream,java.nio.ByteBuffer) -> access$200
    506:506:void access$300(org.conscrypt.ConscryptEngineSocket$SSLOutputStream) -> access$300
    519:520:void close() -> close
    580:583:void flush() -> flush
    587:590:void flushInternal() -> flushInternal
    593:596:void init() -> init
    524:527:void write(int) -> write
    532:535:void write(byte[]) -> write
    540:543:void write(byte[],int,int) -> write
    547:560:void writeInternal(java.nio.ByteBuffer) -> writeInternal
    600:601:void writeToSocket() -> writeToSocket
org.conscrypt.ConscryptFileDescriptorSocket -> org.conscrypt.ConscryptFileDescriptorSocket:
    122:126:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    130:134:void <init>(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> <init>
    138:142:void <init>(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    146:150:void <init>(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    154:158:void <init>(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    162:166:void <init>(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl) -> <init>
    61:61:org.conscrypt.ConscryptSession access$000(org.conscrypt.ConscryptFileDescriptorSocket) -> access$000
    61:61:org.conscrypt.NativeSsl access$100(org.conscrypt.ConscryptFileDescriptorSocket) -> access$100
    61:61:int access$200(org.conscrypt.ConscryptFileDescriptorSocket) -> access$200
    61:61:int access$300(org.conscrypt.ConscryptFileDescriptorSocket) -> access$300
    61:61:org.conscrypt.ConscryptSession access$400(org.conscrypt.ConscryptFileDescriptorSocket) -> access$400
    467:468:void assertReadableOrWriteableState() -> assertReadableOrWriteableState
    1148:1148:java.lang.String chooseClientAlias(javax.net.ssl.X509KeyManager,javax.security.auth.x500.X500Principal[],java.lang.String[]) -> chooseClientAlias
    1160:1160:java.lang.String chooseClientPSKIdentity(org.conscrypt.PSKKeyManager,java.lang.String) -> chooseClientPSKIdentity
    1142:1142:java.lang.String chooseServerAlias(javax.net.ssl.X509KeyManager,java.lang.String) -> chooseServerAlias
    1154:1154:java.lang.String chooseServerPSKIdentityHint(org.conscrypt.PSKKeyManager) -> chooseServerPSKIdentityHint
    315:316:void clientCertificateRequested(byte[],int[],byte[][]) -> clientCertificateRequested
    321:321:int clientPSKKeyRequested(java.lang.String,byte[],byte[]) -> clientPSKKeyRequested
    1170:1170:org.conscrypt.ClientSessionContext clientSessionContext() -> clientSessionContext
    970:1012:void close() -> close
    1050:1051:void closeUnderlyingSocket() -> closeUnderlyingSocket
    891:895:byte[] exportKeyingMaterial(java.lang.String,byte[],int) -> exportKeyingMaterial
    1079:1088:void finalize() -> finalize
    1054:1058:void free() -> free
    690:690:javax.net.ssl.SSLSession getActiveSession() -> getActiveSession
    1116:1116:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    1111:1111:java.lang.String[] getApplicationProtocols() -> getApplicationProtocols
    806:807:byte[] getChannelId() -> getChannelId
    710:710:boolean getEnableSessionCreation() -> getEnableSessionCreation
    725:725:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    740:740:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    1121:1124:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    695:705:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    420:433:java.io.InputStream getInputStream() -> getInputStream
    922:922:boolean getNeedClientAuth() -> getNeedClientAuth
    444:457:java.io.OutputStream getOutputStream() -> getOutputStream
    1166:1166:javax.crypto.SecretKey getPSKKey(org.conscrypt.PSKKeyManager,java.lang.String,java.lang.String) -> getPSKKey
    1129:1131:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    651:651:javax.net.ssl.SSLSession getSession() -> getSession
    950:950:int getSoWriteTimeout() -> getSoWriteTimeout
    720:720:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    735:735:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    870:870:byte[] getTlsUnique() -> getTlsUnique
    886:886:int getTokenBindingParams() -> getTokenBindingParams
    901:901:boolean getUseClientMode() -> getUseClientMode
    917:917:boolean getWantClientAuth() -> getWantClientAuth
    170:170:org.conscrypt.NativeSsl newSsl(org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptFileDescriptorSocket) -> newSsl
    366:381:void onNewSessionEstablished(long) -> onNewSessionEstablished
    333:350:void onSSLStateChange(int,int) -> onSSLStateChange
    682:685:org.conscrypt.ConscryptSession provideHandshakeSession() -> provideHandshakeSession
    655:670:org.conscrypt.ConscryptSession provideSession() -> provideSession
    327:327:int serverPSKKeyRequested(java.lang.String,java.lang.String,byte[]) -> serverPSKKeyRequested
    386:386:long serverSessionRequested(byte[]) -> serverSessionRequested
    1174:1174:org.conscrypt.AbstractSessionContext sessionContext() -> sessionContext
    1095:1097:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector) -> setApplicationProtocolSelector
    1101:1102:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter) -> setApplicationProtocolSelector
    1106:1107:void setApplicationProtocols(java.lang.String[]) -> setApplicationProtocols
    780:781:void setChannelIdEnabled(boolean) -> setChannelIdEnabled
    833:834:void setChannelIdPrivateKey(java.security.PrivateKey) -> setChannelIdPrivateKey
    715:716:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    730:731:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    745:746:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    959:960:void setHandshakeTimeout(int) -> setHandshakeTimeout
    766:768:void setHostname(java.lang.String) -> setHostname
    927:928:void setNeedClientAuth(boolean) -> setNeedClientAuth
    1136:1138:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    940:943:void setSoWriteTimeout(int) -> setSoWriteTimeout
    875:880:void setTokenBindingParams(int[]) -> setTokenBindingParams
    906:911:void setUseClientMode(boolean) -> setUseClientMode
    755:756:void setUseSessionTickets(boolean) -> setUseSessionTickets
    932:933:void setWantClientAuth(boolean) -> setWantClientAuth
    1034:1047:void shutdownAndFreeSslNative() -> shutdownAndFreeSslNative
    182:191:void startHandshake() -> startHandshake
    1178:1192:void transitionTo(int) -> transitionTo
    393:412:void verifyCertificateChain(byte[][],java.lang.String) -> verifyCertificateChain
    475:492:void waitForHandshake() -> waitForHandshake
org.conscrypt.ConscryptFileDescriptorSocket$1 -> org.conscrypt.ConscryptFileDescriptorSocket$1:
    110:110:void <init>(org.conscrypt.ConscryptFileDescriptorSocket) -> <init>
    113:113:org.conscrypt.ConscryptSession provideSession() -> provideSession
org.conscrypt.ConscryptFileDescriptorSocket$2 -> org.conscrypt.ConscryptFileDescriptorSocket$2:
    697:697:void <init>(org.conscrypt.ConscryptFileDescriptorSocket) -> <init>
    700:700:org.conscrypt.ConscryptSession provideSession() -> provideSession
org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream -> org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream:
    508:509:void <init>(org.conscrypt.ConscryptFileDescriptorSocket) -> <init>
    570:570:void awaitPendingOps() -> awaitPendingOps
    518:520:int read() -> read
    529:558:int read(byte[],int,int) -> read
org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream -> org.conscrypt.ConscryptFileDescriptorSocket$SSLOutputStream:
    587:588:void <init>(org.conscrypt.ConscryptFileDescriptorSocket) -> <init>
    645:645:void awaitPendingOps() -> awaitPendingOps
    596:599:void write(int) -> write
    607:633:void write(byte[],int,int) -> write
org.conscrypt.ConscryptServerSocket -> org.conscrypt.ConscryptServerSocket:
    32:34:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    38:40:void <init>(int,org.conscrypt.SSLParametersImpl) -> <init>
    44:46:void <init>(int,int,org.conscrypt.SSLParametersImpl) -> <init>
    53:55:void <init>(int,int,java.net.InetAddress,org.conscrypt.SSLParametersImpl) -> <init>
    179:187:java.net.Socket accept() -> accept
    67:67:boolean getEnableSessionCreation() -> getEnableSessionCreation
    116:116:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    92:92:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    158:158:boolean getNeedClientAuth() -> getNeedClientAuth
    111:111:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    82:82:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    173:173:boolean getUseClientMode() -> getUseClientMode
    148:148:boolean getWantClientAuth() -> getWantClientAuth
    130:130:boolean isChannelIdEnabled() -> isChannelIdEnabled
    123:124:void setChannelIdEnabled(boolean) -> setChannelIdEnabled
    72:73:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    143:144:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    106:107:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    163:164:void setNeedClientAuth(boolean) -> setNeedClientAuth
    168:169:void setUseClientMode(boolean) -> setUseClientMode
    61:62:org.conscrypt.ConscryptServerSocket setUseEngineSocket(boolean) -> setUseEngineSocket
    153:154:void setWantClientAuth(boolean) -> setWantClientAuth
org.conscrypt.CryptoUpcalls -> org.conscrypt.CryptoUpcalls:
    39:39:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    62:64:byte[] ecSignDigestWithPrivateKey(java.security.PrivateKey,byte[]) -> ecSignDigestWithPrivateKey
    47:56:java.util.ArrayList getExternalProviders(java.lang.String) -> getExternalProviders
    135:135:byte[] rsaDecryptWithPrivateKey(java.security.PrivateKey,int,byte[]) -> rsaDecryptWithPrivateKey
    140:180:byte[] rsaOpWithPrivateKey(java.security.PrivateKey,int,int,byte[]) -> rsaOpWithPrivateKey
    131:131:byte[] rsaSignDigestWithPrivateKey(java.security.PrivateKey,int,byte[]) -> rsaSignDigestWithPrivateKey
    78:87:byte[] signDigestWithPrivateKey(java.security.PrivateKey,byte[],java.lang.String) -> signDigestWithPrivateKey
org.conscrypt.DESEDESecretKeyFactory -> org.conscrypt.DESEDESecretKeyFactory:
    34:34:void <init>() -> <init>
    37:38:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) -> engineGenerateSecret
    63:64:java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class) -> engineGetKeySpec
    92:93:javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey) -> engineTranslateKey
org.conscrypt.DefaultSSLContextImpl -> org.conscrypt.DefaultSSLContextImpl:
    60:61:void <init>() -> <init>
    129:129:void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom) -> engineInit
    65:83:javax.net.ssl.KeyManager[] getKeyManagers() -> getKeyManagers
    96:116:javax.net.ssl.TrustManager[] getTrustManagers() -> getTrustManagers
org.conscrypt.DuckTypedPSKKeyManager -> org.conscrypt.DuckTypedPSKKeyManager:
    40:42:void <init>(java.lang.Object) -> <init>
    97:101:java.lang.String chooseClientKeyIdentity(java.lang.String,java.net.Socket) -> chooseClientKeyIdentity
    108:112:java.lang.String chooseClientKeyIdentity(java.lang.String,javax.net.ssl.SSLEngine) -> chooseClientKeyIdentity
    75:79:java.lang.String chooseServerKeyIdentityHint(java.net.Socket) -> chooseServerKeyIdentityHint
    86:90:java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine) -> chooseServerKeyIdentityHint
    52:69:org.conscrypt.DuckTypedPSKKeyManager getInstance(java.lang.Object) -> getInstance
    119:123:javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,java.net.Socket) -> getKey
    130:134:javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,javax.net.ssl.SSLEngine) -> getKey
org.conscrypt.ECParameters -> org.conscrypt.ECParameters:
    34:34:void <init>() -> <init>
    98:98:byte[] engineGetEncoded() -> engineGetEncoded
    103:104:byte[] engineGetEncoded(java.lang.String) -> engineGetEncoded
    87:92:java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class) -> engineGetParameterSpec
    41:60:void engineInit(java.security.spec.AlgorithmParameterSpec) -> engineInit
    67:69:void engineInit(byte[]) -> engineInit
    76:81:void engineInit(byte[],java.lang.String) -> engineInit
    111:111:java.lang.String engineToString() -> engineToString
org.conscrypt.EmptyArray -> org.conscrypt.EmptyArray:
    24:34:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
org.conscrypt.EvpMdRef -> org.conscrypt.EvpMdRef:
    160:160:void <init>() -> <init>
    73:85:int getDigestSizeBytesByJcaDigestAlgorithmStandardName(java.lang.String) -> getDigestSizeBytesByJcaDigestAlgorithmStandardName
    55:67:long getEVP_MDByJcaDigestAlgorithmStandardName(java.lang.String) -> getEVP_MDByJcaDigestAlgorithmStandardName
    34:36:java.lang.String getJcaDigestAlgorithmStandardName(java.lang.String) -> getJcaDigestAlgorithmStandardName
    90:103:java.lang.String getJcaDigestAlgorithmStandardNameFromEVP_MD(long) -> getJcaDigestAlgorithmStandardNameFromEVP_MD
org.conscrypt.EvpMdRef$MD5 -> org.conscrypt.EvpMdRef$MD5:
    110:111:void <clinit>() -> <clinit>
    113:113:void <init>() -> <init>
org.conscrypt.EvpMdRef$SHA1 -> org.conscrypt.EvpMdRef$SHA1:
    119:120:void <clinit>() -> <clinit>
    121:121:void <init>() -> <init>
org.conscrypt.EvpMdRef$SHA224 -> org.conscrypt.EvpMdRef$SHA224:
    127:128:void <clinit>() -> <clinit>
    130:130:void <init>() -> <init>
org.conscrypt.EvpMdRef$SHA256 -> org.conscrypt.EvpMdRef$SHA256:
    136:137:void <clinit>() -> <clinit>
    139:139:void <init>() -> <init>
org.conscrypt.EvpMdRef$SHA384 -> org.conscrypt.EvpMdRef$SHA384:
    145:146:void <clinit>() -> <clinit>
    148:148:void <init>() -> <init>
org.conscrypt.EvpMdRef$SHA512 -> org.conscrypt.EvpMdRef$SHA512:
    154:155:void <clinit>() -> <clinit>
    157:157:void <init>() -> <init>
org.conscrypt.ExternalSession -> org.conscrypt.ExternalSession:
    54:56:void <init>(org.conscrypt.ExternalSession$Provider) -> <init>
    161:161:int getApplicationBufferSize() -> getApplicationBufferSize
    136:136:java.lang.String getCipherSuite() -> getCipherSuite
    90:90:long getCreationTime() -> getCreationTime
    60:60:org.conscrypt.ConscryptSession getDelegate() -> getDelegate
    80:80:byte[] getId() -> getId
    95:95:long getLastAccessedTime() -> getLastAccessedTime
    116:116:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    131:131:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    156:156:int getPacketBufferSize() -> getPacketBufferSize
    121:121:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    48:48:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    111:111:java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    146:146:java.lang.String getPeerHost() -> getPeerHost
    151:151:int getPeerPort() -> getPeerPort
    126:126:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    75:75:byte[] getPeerSignedCertificateTimestamp() -> getPeerSignedCertificateTimestamp
    141:141:java.lang.String getProtocol() -> getProtocol
    65:65:java.lang.String getRequestedServerName() -> getRequestedServerName
    85:85:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    70:70:java.util.List getStatusResponses() -> getStatusResponses
    166:167:java.lang.Object getValue(java.lang.String) -> getValue
    174:174:java.lang.String[] getValueNames() -> getValueNames
    100:101:void invalidate() -> invalidate
    105:105:boolean isValid() -> isValid
    179:180:void putValue(java.lang.String,java.lang.Object) -> putValue
    194:195:void removeValue(java.lang.String) -> removeValue
org.conscrypt.FileClientSessionCache -> org.conscrypt.FileClientSessionCache:
    44:323:void <clinit>() -> <clinit>
    48:48:void <init>() -> <init>
    43:43:java.util.logging.Logger access$000() -> access$000
    348:347:void reset() -> reset
    338:337:org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File) -> usingDirectory
org.conscrypt.FileClientSessionCache$CacheFile -> org.conscrypt.FileClientSessionCache$CacheFile:
    357:359:void <init>(java.io.File,java.lang.String) -> <init>
    352:352:int compareTo(java.lang.Object) -> compareTo
    375:379:int compareTo(java.io.File) -> compareTo
    365:369:long lastModified() -> lastModified
org.conscrypt.FileClientSessionCache$Impl -> org.conscrypt.FileClientSessionCache$Impl:
    83:107:void <init>(java.io.File) -> <init>
    302:308:void delete(java.io.File) -> delete
    126:127:java.lang.String fileName(java.lang.String,int) -> fileName
    140:139:byte[] getSessionData(java.lang.String,int) -> getSessionData
    272:298:void indexFiles() -> indexFiles
    187:191:void logReadError(java.lang.String,java.io.File,java.lang.Throwable) -> logReadError
    311:315:void logWriteError(java.lang.String,java.io.File,java.lang.Throwable) -> logWriteError
    252:264:void makeRoom() -> makeRoom
    119:119:java.util.Map newAccessOrder() -> newAccessOrder
    195:194:void putSessionData(javax.net.ssl.SSLSession,byte[]) -> putSessionData
org.conscrypt.GCMParameters -> org.conscrypt.GCMParameters:
    46:46:void <init>() -> <init>
    48:51:void <init>(int,byte[]) -> <init>
    123:138:byte[] engineGetEncoded() -> engineGetEncoded
    144:145:byte[] engineGetEncoded(java.lang.String) -> engineGetEncoded
    114:117:java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class) -> engineGetParameterSpec
    70:72:void engineInit(java.security.spec.AlgorithmParameterSpec) -> engineInit
    80:98:void engineInit(byte[]) -> engineInit
    104:109:void engineInit(byte[],java.lang.String) -> engineInit
    152:152:java.lang.String engineToString() -> engineToString
    64:64:byte[] getIV() -> getIV
    57:57:int getTLen() -> getTLen
org.conscrypt.HandshakeListener -> org.conscrypt.HandshakeListener:
    25:25:void <init>() -> <init>
org.conscrypt.IvParameters -> org.conscrypt.IvParameters:
    32:32:void <init>() -> <init>
    83:92:byte[] engineGetEncoded() -> engineGetEncoded
    98:99:byte[] engineGetEncoded(java.lang.String) -> engineGetEncoded
    74:75:java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class) -> engineGetParameterSpec
    38:39:void engineInit(java.security.spec.AlgorithmParameterSpec) -> engineInit
    46:55:void engineInit(byte[]) -> engineInit
    61:68:void engineInit(byte[],java.lang.String) -> engineInit
    109:109:java.lang.String engineToString() -> engineToString
org.conscrypt.IvParameters$AES -> org.conscrypt.IvParameters$AES:
    112:112:void <init>() -> <init>
org.conscrypt.IvParameters$ChaCha20 -> org.conscrypt.IvParameters$ChaCha20:
    114:114:void <init>() -> <init>
org.conscrypt.IvParameters$DESEDE -> org.conscrypt.IvParameters$DESEDE:
    113:113:void <init>() -> <init>
org.conscrypt.Java7ExtendedSSLSession -> org.conscrypt.Java7ExtendedSSLSession:
    32:37:void <clinit>() -> <clinit>
    41:43:void <init>(org.conscrypt.ConscryptSession) -> <init>
    183:183:int getApplicationBufferSize() -> getApplicationBufferSize
    158:158:java.lang.String getCipherSuite() -> getCipherSuite
    92:92:long getCreationTime() -> getCreationTime
    47:47:org.conscrypt.ConscryptSession getDelegate() -> getDelegate
    82:82:byte[] getId() -> getId
    97:97:long getLastAccessedTime() -> getLastAccessedTime
    138:138:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    153:153:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    53:53:java.lang.String[] getLocalSupportedSignatureAlgorithms() -> getLocalSupportedSignatureAlgorithms
    178:178:int getPacketBufferSize() -> getPacketBufferSize
    143:143:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    30:30:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    133:133:java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    168:168:java.lang.String getPeerHost() -> getPeerHost
    173:173:int getPeerPort() -> getPeerPort
    148:148:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    77:77:byte[] getPeerSignedCertificateTimestamp() -> getPeerSignedCertificateTimestamp
    59:59:java.lang.String[] getPeerSupportedSignatureAlgorithms() -> getPeerSupportedSignatureAlgorithms
    163:163:java.lang.String getProtocol() -> getProtocol
    64:64:java.lang.String getRequestedServerName() -> getRequestedServerName
    87:87:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    72:72:java.util.List getStatusResponses() -> getStatusResponses
    117:117:java.lang.Object getValue(java.lang.String) -> getValue
    127:127:java.lang.String[] getValueNames() -> getValueNames
    102:103:void invalidate() -> invalidate
    107:107:boolean isValid() -> isValid
    112:113:void putValue(java.lang.String,java.lang.Object) -> putValue
    122:123:void removeValue(java.lang.String) -> removeValue
org.conscrypt.Java8EngineSocket -> org.conscrypt.Java8EngineSocket:
    20:21:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    25:26:void <init>(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> <init>
    30:31:void <init>(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    35:36:void <init>(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    40:41:void <init>(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    45:46:void <init>(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl) -> <init>
    59:59:java.util.function.BiFunction getHandshakeApplicationProtocolSelector() -> getHandshakeApplicationProtocolSelector
    52:54:void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    64:64:org.conscrypt.ApplicationProtocolSelector toApplicationProtocolSelector(java.util.function.BiFunction) -> toApplicationProtocolSelector
org.conscrypt.Java8EngineSocket$1 -> org.conscrypt.Java8EngineSocket$1:
    64:64:void <init>(java.util.function.BiFunction) -> <init>
    67:67:java.lang.String selectApplicationProtocol(javax.net.ssl.SSLEngine,java.util.List) -> selectApplicationProtocol
    72:72:java.lang.String selectApplicationProtocol(javax.net.ssl.SSLSocket,java.util.List) -> selectApplicationProtocol
org.conscrypt.Java8EngineWrapper -> org.conscrypt.Java8EngineWrapper:
    42:44:void <init>(org.conscrypt.ConscryptEngine) -> <init>
    121:122:void beginHandshake() -> beginHandshake
    126:127:void closeInbound() -> closeInbound
    131:132:void closeOutbound() -> closeOutbound
    315:315:byte[] exportKeyingMaterial(java.lang.String,byte[],int) -> exportKeyingMaterial
    289:289:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    284:284:java.lang.String[] getApplicationProtocols() -> getApplicationProtocols
    86:86:byte[] getChannelId() -> getChannelId
    47:50:javax.net.ssl.SSLEngine getDelegate(javax.net.ssl.SSLEngine) -> getDelegate
    136:136:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    151:151:boolean getEnableSessionCreation() -> getEnableSessionCreation
    141:141:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    146:146:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    320:320:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    334:334:java.util.function.BiFunction getHandshakeApplicationProtocolSelector() -> getHandshakeApplicationProtocolSelector
    156:156:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    106:106:java.lang.String getHostname() -> getHostname
    161:161:boolean getNeedClientAuth() -> getNeedClientAuth
    111:111:java.lang.String getPeerHost() -> getPeerHost
    116:116:int getPeerPort() -> getPeerPort
    61:61:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    171:171:javax.net.ssl.SSLSession getSession() -> getSession
    176:176:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    181:181:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    300:300:byte[] getTlsUnique() -> getTlsUnique
    310:310:int getTokenBindingParams() -> getTokenBindingParams
    186:186:boolean getUseClientMode() -> getUseClientMode
    191:191:boolean getWantClientAuth() -> getWantClientAuth
    166:166:javax.net.ssl.SSLSession handshakeSession() -> handshakeSession
    196:196:boolean isInboundDone() -> isInboundDone
    201:201:boolean isOutboundDone() -> isOutboundDone
    76:76:int maxSealOverhead() -> maxSealOverhead
    294:296:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelector) -> setApplicationProtocolSelector
    279:280:void setApplicationProtocols(java.lang.String[]) -> setApplicationProtocols
    71:72:void setBufferAllocator(org.conscrypt.BufferAllocator) -> setBufferAllocator
    81:82:void setChannelIdEnabled(boolean) -> setChannelIdEnabled
    91:92:void setChannelIdPrivateKey(java.security.PrivateKey) -> setChannelIdPrivateKey
    216:217:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    206:207:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    211:212:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    327:329:void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    96:97:void setHandshakeListener(org.conscrypt.HandshakeListener) -> setHandshakeListener
    101:102:void setHostname(java.lang.String) -> setHostname
    221:222:void setNeedClientAuth(boolean) -> setNeedClientAuth
    66:67:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    305:306:void setTokenBindingParams(int[]) -> setTokenBindingParams
    226:227:void setUseClientMode(boolean) -> setUseClientMode
    274:275:void setUseSessionTickets(boolean) -> setUseSessionTickets
    231:232:void setWantClientAuth(boolean) -> setWantClientAuth
    339:339:org.conscrypt.ApplicationProtocolSelector toApplicationProtocolSelector(java.util.function.BiFunction) -> toApplicationProtocolSelector
    236:236:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    241:241:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    247:247:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    252:252:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> unwrap
    258:258:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int) -> unwrap
    56:56:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    263:263:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    269:269:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
org.conscrypt.Java8EngineWrapper$1 -> org.conscrypt.Java8EngineWrapper$1:
    339:339:void <init>(java.util.function.BiFunction) -> <init>
    342:342:java.lang.String selectApplicationProtocol(javax.net.ssl.SSLEngine,java.util.List) -> selectApplicationProtocol
    347:347:java.lang.String selectApplicationProtocol(javax.net.ssl.SSLSocket,java.util.List) -> selectApplicationProtocol
org.conscrypt.Java8ExtendedSSLSession -> org.conscrypt.Java8ExtendedSSLSession:
    32:33:void <init>(org.conscrypt.ConscryptSession) -> <init>
    37:42:java.util.List getRequestedServerNames() -> getRequestedServerNames
org.conscrypt.Java8FileDescriptorSocket -> org.conscrypt.Java8FileDescriptorSocket:
    20:21:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    25:26:void <init>(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> <init>
    30:31:void <init>(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    35:36:void <init>(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    40:41:void <init>(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> <init>
    45:46:void <init>(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl) -> <init>
    59:59:java.util.function.BiFunction getHandshakeApplicationProtocolSelector() -> getHandshakeApplicationProtocolSelector
    52:54:void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    64:64:org.conscrypt.ApplicationProtocolSelector toApplicationProtocolSelector(java.util.function.BiFunction) -> toApplicationProtocolSelector
org.conscrypt.Java8FileDescriptorSocket$1 -> org.conscrypt.Java8FileDescriptorSocket$1:
    64:64:void <init>(java.util.function.BiFunction) -> <init>
    67:67:java.lang.String selectApplicationProtocol(javax.net.ssl.SSLEngine,java.util.List) -> selectApplicationProtocol
    72:72:java.lang.String selectApplicationProtocol(javax.net.ssl.SSLSocket,java.util.List) -> selectApplicationProtocol
org.conscrypt.KeyGeneratorImpl -> org.conscrypt.KeyGeneratorImpl:
    34:34:void <init>(java.lang.String,int,org.conscrypt.KeyGeneratorImpl$1) -> <init>
    39:42:void <init>(java.lang.String,int) -> <init>
    45:46:void checkKeySize(int) -> checkKeySize
    74:76:byte[] doKeyGeneration(int) -> doKeyGeneration
    81:85:javax.crypto.SecretKey engineGenerateKey() -> engineGenerateKey
    52:53:void engineInit(java.security.SecureRandom) -> engineInit
    58:62:void engineInit(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInit
    68:71:void engineInit(int,java.security.SecureRandom) -> engineInit
org.conscrypt.KeyGeneratorImpl$AES -> org.conscrypt.KeyGeneratorImpl$AES:
    157:158:void <init>() -> <init>
    162:166:void checkKeySize(int) -> checkKeySize
org.conscrypt.KeyGeneratorImpl$ARC4 -> org.conscrypt.KeyGeneratorImpl$ARC4:
    184:185:void <init>() -> <init>
    189:190:void checkKeySize(int) -> checkKeySize
org.conscrypt.KeyGeneratorImpl$ChaCha20 -> org.conscrypt.KeyGeneratorImpl$ChaCha20:
    171:172:void <init>() -> <init>
    176:177:void checkKeySize(int) -> checkKeySize
org.conscrypt.KeyGeneratorImpl$DESEDE -> org.conscrypt.KeyGeneratorImpl$DESEDE:
    127:128:void <init>() -> <init>
    132:135:void checkKeySize(int) -> checkKeySize
    139:151:byte[] doKeyGeneration(int) -> doKeyGeneration
org.conscrypt.KeyGeneratorImpl$HmacMD5 -> org.conscrypt.KeyGeneratorImpl$HmacMD5:
    91:92:void <init>() -> <init>
org.conscrypt.KeyGeneratorImpl$HmacSHA1 -> org.conscrypt.KeyGeneratorImpl$HmacSHA1:
    97:98:void <init>() -> <init>
org.conscrypt.KeyGeneratorImpl$HmacSHA224 -> org.conscrypt.KeyGeneratorImpl$HmacSHA224:
    103:104:void <init>() -> <init>
org.conscrypt.KeyGeneratorImpl$HmacSHA256 -> org.conscrypt.KeyGeneratorImpl$HmacSHA256:
    109:110:void <init>() -> <init>
org.conscrypt.KeyGeneratorImpl$HmacSHA384 -> org.conscrypt.KeyGeneratorImpl$HmacSHA384:
    115:116:void <init>() -> <init>
org.conscrypt.KeyGeneratorImpl$HmacSHA512 -> org.conscrypt.KeyGeneratorImpl$HmacSHA512:
    121:122:void <init>() -> <init>
org.conscrypt.KeyManagerFactoryImpl -> org.conscrypt.KeyManagerFactoryImpl:
    39:39:void <init>() -> <init>
    111:112:javax.net.ssl.KeyManager[] engineGetKeyManagers() -> engineGetKeyManagers
    54:69:void engineInit(java.security.KeyStore,char[]) -> engineInit
    101:101:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
org.conscrypt.KeyManagerImpl -> org.conscrypt.KeyManagerImpl:
    58:64:void <init>(java.security.KeyStore,char[]) -> <init>
    149:150:java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[]) -> chooseAlias
    86:87:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    138:139:java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine) -> chooseEngineClientAlias
    144:145:java.lang.String chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine) -> chooseEngineServerAlias
    92:93:java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    98:111:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    117:117:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    127:133:java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
    122:122:java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
org.conscrypt.KitKatPlatformOpenSSLSocketAdapterFactory -> org.conscrypt.KitKatPlatformOpenSSLSocketAdapterFactory:
    29:30:void <init>(org.conscrypt.OpenSSLSocketFactoryImpl) -> <init>
    34:34:java.net.Socket wrap(org.conscrypt.OpenSSLSocketImpl) -> wrap
org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter -> org.conscrypt.KitKatPlatformOpenSSLSocketImplAdapter:
    52:54:void <init>(org.conscrypt.AbstractConscryptSocket) -> <init>
    313:314:void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> addHandshakeCompletedListener
    96:97:void bind(java.net.SocketAddress) -> bind
    381:381:void clientCertificateRequested(byte[],byte[][]) -> clientCertificateRequested
    61:62:void close() -> close
    86:87:void connect(java.net.SocketAddress,int) -> connect
    91:92:void connect(java.net.SocketAddress) -> connect
    448:448:byte[] getAlpnSelectedProtocol() -> getAlpnSelectedProtocol
    262:262:java.nio.channels.SocketChannel getChannel() -> getChannel
    412:412:byte[] getChannelId() -> getChannelId
    364:364:boolean getEnableSessionCreation() -> getEnableSessionCreation
    284:284:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    298:298:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    267:267:java.io.FileDescriptor getFileDescriptor$() -> getFileDescriptor$
    116:116:java.net.InetAddress getInetAddress() -> getInetAddress
    66:66:java.io.InputStream getInputStream() -> getInputStream
    179:179:boolean getKeepAlive() -> getKeepAlive
    111:111:java.net.InetAddress getLocalAddress() -> getLocalAddress
    71:71:int getLocalPort() -> getLocalPort
    106:106:java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    349:349:boolean getNeedClientAuth() -> getNeedClientAuth
    437:437:byte[] getNpnSelectedProtocol() -> getNpnSelectedProtocol
    247:247:boolean getOOBInline() -> getOOBInline
    76:76:java.io.OutputStream getOutputStream() -> getOutputStream
    81:81:int getPort() -> getPort
    202:202:int getReceiveBufferSize() -> getReceiveBufferSize
    101:101:java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    174:174:boolean getReuseAddress() -> getReuseAddress
    369:369:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    196:196:int getSendBufferSize() -> getSendBufferSize
    308:308:javax.net.ssl.SSLSession getSession() -> getSession
    190:190:int getSoLinger() -> getSoLinger
    185:185:int getSoTimeout() -> getSoTimeout
    427:427:int getSoWriteTimeout() -> getSoWriteTimeout
    279:279:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    294:294:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    169:169:boolean getTcpNoDelay() -> getTcpNoDelay
    252:252:int getTrafficClass() -> getTrafficClass
    334:334:boolean getUseClientMode() -> getUseClientMode
    354:354:boolean getWantClientAuth() -> getWantClientAuth
    386:386:void handshakeCompleted() -> handshakeCompleted
    217:217:boolean isBound() -> isBound
    212:212:boolean isClosed() -> isClosed
    207:207:boolean isConnected() -> isConnected
    227:227:boolean isInputShutdown() -> isInputShutdown
    222:222:boolean isOutputShutdown() -> isOutputShutdown
    318:319:void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> removeHandshakeCompletedListener
    257:258:void sendUrgentData(int) -> sendUrgentData
    452:453:void setAlpnProtocols(byte[]) -> setAlpnProtocols
    407:408:void setChannelIdEnabled(boolean) -> setChannelIdEnabled
    417:418:void setChannelIdPrivateKey(java.security.PrivateKey) -> setChannelIdPrivateKey
    359:360:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    289:290:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    303:304:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    432:433:void setHandshakeTimeout(int) -> setHandshakeTimeout
    402:403:void setHostname(java.lang.String) -> setHostname
    141:142:void setKeepAlive(boolean) -> setKeepAlive
    339:340:void setNeedClientAuth(boolean) -> setNeedClientAuth
    442:443:void setNpnProtocols(byte[]) -> setNpnProtocols
    242:243:void setOOBInline(boolean) -> setOOBInline
    272:273:void setPerformancePreferences(int,int,int) -> setPerformancePreferences
    164:165:void setReceiveBufferSize(int) -> setReceiveBufferSize
    136:137:void setReuseAddress(boolean) -> setReuseAddress
    374:375:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    158:159:void setSendBufferSize(int) -> setSendBufferSize
    126:127:void setSoLinger(boolean,int) -> setSoLinger
    152:153:void setSoTimeout(int) -> setSoTimeout
    422:423:void setSoWriteTimeout(int) -> setSoWriteTimeout
    131:132:void setTcpNoDelay(boolean) -> setTcpNoDelay
    146:147:void setTrafficClass(int) -> setTrafficClass
    329:330:void setUseClientMode(boolean) -> setUseClientMode
    397:398:void setUseSessionTickets(boolean) -> setUseSessionTickets
    344:345:void setWantClientAuth(boolean) -> setWantClientAuth
    232:233:void shutdownInput() -> shutdownInput
    237:238:void shutdownOutput() -> shutdownOutput
    324:325:void startHandshake() -> startHandshake
    121:121:java.lang.String toString() -> toString
    392:392:void verifyCertificateChain(byte[][],java.lang.String) -> verifyCertificateChain
org.conscrypt.NativeConstants -> org.conscrypt.NativeConstants:
    19:19:void <init>() -> <init>
org.conscrypt.NativeCrypto -> org.conscrypt.NativeCrypto:
    63:963:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
    359:359:int X509_NAME_hash(javax.security.auth.x500.X500Principal) -> X509_NAME_hash
    367:372:int X509_NAME_hash(javax.security.auth.x500.X500Principal,java.lang.String) -> X509_NAME_hash
    363:363:int X509_NAME_hash_old(javax.security.auth.x500.X500Principal) -> X509_NAME_hash_old
    82:83:void checkAvailability() -> checkAvailability
    1061:1062:java.lang.String[] checkEnabledCipherSuites(java.lang.String[]) -> checkEnabledCipherSuites
    1016:1017:java.lang.String[] checkEnabledProtocols(java.lang.String[]) -> checkEnabledProtocols
    761:764:java.lang.String cipherSuiteFromJava(java.lang.String) -> cipherSuiteFromJava
    754:757:java.lang.String cipherSuiteToJava(java.lang.String) -> cipherSuiteToJava
    1002:1011:int getProtocolConstant(java.lang.String) -> getProtocolConstant
    876:876:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    971:971:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    1044:1058:void setEnabledCipherSuites(long,org.conscrypt.NativeSsl,java.lang.String[]) -> setEnabledCipherSuites
    975:996:void setEnabledProtocols(long,org.conscrypt.NativeSsl,java.lang.String[]) -> setEnabledProtocols
org.conscrypt.NativeCryptoJni -> org.conscrypt.NativeCryptoJni:
    32:33:void <init>() -> <init>
    25:30:void init() -> init
org.conscrypt.NativeRef -> org.conscrypt.NativeRef:
    26:28:void <init>(long) -> <init>
    36:40:boolean equals(java.lang.Object) -> equals
    51:55:void finalize() -> finalize
    45:45:int hashCode() -> hashCode
org.conscrypt.NativeRef$EC_GROUP -> org.conscrypt.NativeRef$EC_GROUP:
    63:64:void <init>(long) -> <init>
    68:69:void doFree(long) -> doFree
org.conscrypt.NativeRef$EC_POINT -> org.conscrypt.NativeRef$EC_POINT:
    74:75:void <init>(long) -> <init>
    79:80:void doFree(long) -> doFree
org.conscrypt.NativeRef$EVP_CIPHER_CTX -> org.conscrypt.NativeRef$EVP_CIPHER_CTX:
    85:86:void <init>(long) -> <init>
    90:91:void doFree(long) -> doFree
org.conscrypt.NativeRef$EVP_MD_CTX -> org.conscrypt.NativeRef$EVP_MD_CTX:
    96:97:void <init>(long) -> <init>
    101:102:void doFree(long) -> doFree
org.conscrypt.NativeRef$EVP_PKEY -> org.conscrypt.NativeRef$EVP_PKEY:
    107:108:void <init>(long) -> <init>
    112:113:void doFree(long) -> doFree
org.conscrypt.NativeRef$EVP_PKEY_CTX -> org.conscrypt.NativeRef$EVP_PKEY_CTX:
    118:119:void <init>(long) -> <init>
    123:124:void doFree(long) -> doFree
org.conscrypt.NativeRef$HMAC_CTX -> org.conscrypt.NativeRef$HMAC_CTX:
    129:130:void <init>(long) -> <init>
    134:135:void doFree(long) -> doFree
org.conscrypt.NativeRef$SSL_SESSION -> org.conscrypt.NativeRef$SSL_SESSION:
    140:141:void <init>(long) -> <init>
    145:146:void doFree(long) -> doFree
org.conscrypt.NativeSsl -> org.conscrypt.NativeSsl:
    67:73:void <init>(long,org.conscrypt.SSLParametersImpl,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,org.conscrypt.SSLParametersImpl$AliasChooser,org.conscrypt.SSLParametersImpl$PSKCallbacks) -> <init>
    56:56:long access$100(org.conscrypt.NativeSsl) -> access$100
    56:56:org.conscrypt.NativeCrypto$SSLHandshakeCallbacks access$200(org.conscrypt.NativeSsl) -> access$200
    221:238:void chooseClientCertificate(byte[],int[],byte[][]) -> chooseClientCertificate
    157:174:int clientPSKKeyRequested(java.lang.String,byte[],byte[]) -> clientPSKKeyRequested
    574:582:void close() -> close
    388:395:void doHandshake(java.io.FileDescriptor,int) -> doHandshake
    400:404:int doHandshake() -> doHandshake
    441:460:void enablePSKKeyManagerIfRequested() -> enablePSKKeyManagerIfRequested
    141:142:byte[] exportKeyingMaterial(java.lang.String,byte[],int) -> exportKeyingMaterial
    605:607:void finalize() -> finalize
    557:561:void forceRead() -> forceRead
    595:595:byte[] getApplicationProtocol() -> getApplicationProtocol
    112:112:java.lang.String getCipherSuite() -> getCipherSuite
    591:591:int getError(int) -> getError
    121:121:java.security.cert.X509Certificate[] getLocalCertificates() -> getLocalCertificates
    570:570:int getMaxSealOverhead() -> getMaxSealOverhead
    125:125:byte[] getPeerCertificateOcspData() -> getPeerCertificateOcspData
    116:117:java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    149:149:byte[] getPeerTlsSctData() -> getPeerTlsSctData
    566:566:int getPendingReadableBytes() -> getPendingReadableBytes
    282:282:java.lang.String getRequestedServerName() -> getRequestedServerName
    96:96:byte[] getSessionId() -> getSessionId
    100:100:long getTime() -> getTime
    104:104:long getTimeout() -> getTimeout
    286:286:byte[] getTlsChannelId() -> getTlsChannelId
    129:129:byte[] getTlsUnique() -> getTlsUnique
    137:137:int getTokenBindingParams() -> getTokenBindingParams
    278:278:java.lang.String getVersion() -> getVersion
    290:383:void initialize(java.lang.String,org.conscrypt.OpenSSLKey) -> initialize
    515:516:void interrupt() -> interrupt
    599:599:boolean isClient() -> isClient
    587:587:boolean isClosed() -> isClosed
    85:87:org.conscrypt.NativeSsl$BioWrapper newBio() -> newBio
    78:80:org.conscrypt.NativeSsl newInstance(org.conscrypt.SSLParametersImpl,org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,org.conscrypt.SSLParametersImpl$AliasChooser,org.conscrypt.SSLParametersImpl$PSKCallbacks) -> newInstance
    92:93:void offerToResumeSession(long) -> offerToResumeSession
    411:419:int read(java.io.FileDescriptor,byte[],int,int,int) -> read
    537:542:int readDirectByteBuffer(long,int) -> readDirectByteBuffer
    203:215:int serverPSKKeyRequested(java.lang.String,java.lang.String,byte[]) -> serverPSKKeyRequested
    241:270:void setCertificate(java.lang.String) -> setCertificate
    481:512:void setCertificateValidation() -> setCertificateValidation
    108:109:void setTimeout(long) -> setTimeout
    463:477:void setTlsChannelId(org.conscrypt.OpenSSLKey) -> setTlsChannelId
    133:134:void setTokenBindingParams(int[]) -> setTokenBindingParams
    520:521:void shutdown(java.io.FileDescriptor) -> shutdown
    524:525:void shutdown() -> shutdown
    528:528:boolean wasShutdownReceived() -> wasShutdownReceived
    532:532:boolean wasShutdownSent() -> wasShutdownSent
    426:434:void write(java.io.FileDescriptor,byte[],int,int,int) -> write
    547:552:int writeDirectByteBuffer(long,int) -> writeDirectByteBuffer
org.conscrypt.NativeSsl$BioWrapper -> org.conscrypt.NativeSsl$BioWrapper:
    614:614:void <init>(org.conscrypt.NativeSsl,org.conscrypt.NativeSsl$1) -> <init>
    617:619:void <init>(org.conscrypt.NativeSsl) -> <init>
    640:643:void close() -> close
    622:625:int getPendingWrittenBytes() -> getPendingWrittenBytes
    635:635:int readDirectByteBuffer(long,int) -> readDirectByteBuffer
    630:630:int writeDirectByteBuffer(long,int) -> writeDirectByteBuffer
org.conscrypt.NativeSslSession -> org.conscrypt.NativeSslSession:
    46:46:void <clinit>() -> <clinit>
    45:45:void <init>() -> <init>
    45:45:java.util.logging.Logger access$100() -> access$100
    45:45:void access$200(java.lang.Throwable) -> access$200
    476:477:void checkRemaining(java.nio.ByteBuffer,int) -> checkRemaining
    67:71:byte[] getOcspResponse(org.conscrypt.ConscryptSession) -> getOcspResponse
    471:473:void log(java.lang.Throwable) -> log
    55:63:org.conscrypt.NativeSslSession newInstance(org.conscrypt.NativeRef$SSL_SESSION,org.conscrypt.ConscryptSession) -> newInstance
    83:158:org.conscrypt.NativeSslSession newInstance(org.conscrypt.AbstractSessionContext,byte[],java.lang.String,int) -> newInstance
org.conscrypt.NativeSslSession$Impl -> org.conscrypt.NativeSslSession$Impl:
    217:217:void <init>(org.conscrypt.AbstractSessionContext,org.conscrypt.NativeRef$SSL_SESSION,java.lang.String,int,java.security.cert.X509Certificate[],byte[],byte[],org.conscrypt.NativeSslSession$1) -> <init>
    232:243:void <init>(org.conscrypt.AbstractSessionContext,org.conscrypt.NativeRef$SSL_SESSION,java.lang.String,int,java.security.cert.X509Certificate[],byte[],byte[]) -> <init>
    217:217:long access$300(org.conscrypt.NativeSslSession$Impl) -> access$300
    277:277:java.lang.String getCipherSuite() -> getCipherSuite
    251:251:long getCreationTime() -> getCreationTime
    247:247:byte[] getId() -> getId
    287:287:java.lang.String getPeerHost() -> getPeerHost
    297:297:byte[] getPeerOcspStapledResponse() -> getPeerOcspStapledResponse
    292:292:int getPeerPort() -> getPeerPort
    302:302:byte[] getPeerSignedCertificateTimestamp() -> getPeerSignedCertificateTimestamp
    282:282:java.lang.String getProtocol() -> getProtocol
    267:267:boolean isSingleUse() -> isSingleUse
    256:262:boolean isValid() -> isValid
    272:273:void offerToResume(org.conscrypt.NativeSsl) -> offerToResume
    308:348:byte[] toBytes() -> toBytes
    357:357:javax.net.ssl.SSLSession toSSLSession() -> toSSLSession
org.conscrypt.NativeSslSession$Impl$1 -> org.conscrypt.NativeSslSession$Impl$1:
    357:357:void <init>(org.conscrypt.NativeSslSession$Impl) -> <init>
    463:463:int getApplicationBufferSize() -> getApplicationBufferSize
    365:365:java.lang.String getCipherSuite() -> getCipherSuite
    385:385:long getCreationTime() -> getCreationTime
    360:360:byte[] getId() -> getId
    402:402:long getLastAccessedTime() -> getLastAccessedTime
    437:437:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    453:453:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    458:458:int getPacketBufferSize() -> getPacketBufferSize
    443:443:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    432:432:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    375:375:java.lang.String getPeerHost() -> getPeerHost
    380:380:int getPeerPort() -> getPeerPort
    448:448:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    370:370:java.lang.String getProtocol() -> getProtocol
    397:397:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    417:417:java.lang.Object getValue(java.lang.String) -> getValue
    427:427:java.lang.String[] getValueNames() -> getValueNames
    407:407:void invalidate() -> invalidate
    390:390:boolean isValid() -> isValid
    412:412:void putValue(java.lang.String,java.lang.Object) -> putValue
    422:422:void removeValue(java.lang.String) -> removeValue
org.conscrypt.OAEPParameters -> org.conscrypt.OAEPParameters:
    38:49:void <clinit>() -> <clinit>
    36:53:void <init>() -> <init>
    187:215:byte[] engineGetEncoded() -> engineGetEncoded
    221:222:byte[] engineGetEncoded(java.lang.String) -> engineGetEncoded
    178:181:java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class) -> engineGetParameterSpec
    58:61:void engineInit(java.security.spec.AlgorithmParameterSpec) -> engineInit
    67:104:void engineInit(byte[]) -> engineInit
    110:115:void engineInit(byte[],java.lang.String) -> engineInit
    287:287:java.lang.String engineToString() -> engineToString
    157:170:java.lang.String getHashName(long) -> getHashName
    119:128:java.lang.String readHash(long) -> readHash
    133:153:java.lang.String readMgfHash(long) -> readMgfHash
    274:280:long writeAlgorithmIdentifier(long,java.lang.String) -> writeAlgorithmIdentifier
    230:261:void writeHashAndMgfHash(long,java.lang.String,java.security.spec.MGF1ParameterSpec) -> writeHashAndMgfHash
org.conscrypt.OpenSSLBIOInputStream -> org.conscrypt.OpenSSLBIOInputStream:
    32:35:void <init>(java.io.InputStream,boolean) -> <init>
    38:38:long getBioContext() -> getBioContext
    50:51:int gets(byte[]) -> gets
    42:43:void release() -> release
org.conscrypt.OpenSSLBIOSink -> org.conscrypt.OpenSSLBIOSink:
    34:37:void <init>(java.io.ByteArrayOutputStream) -> <init>
    40:40:int available() -> available
    30:31:org.conscrypt.OpenSSLBIOSink create() -> create
    72:74:void finalize() -> finalize
    58:58:long getContext() -> getContext
    66:66:int position() -> position
    44:46:void reset() -> reset
    49:54:long skip(long) -> skip
    62:62:byte[] toByteArray() -> toByteArray
org.conscrypt.OpenSSLBIOSource -> org.conscrypt.OpenSSLBIOSource:
    34:36:void <init>(org.conscrypt.OpenSSLBIOInputStream) -> <init>
    52:54:void finalize() -> finalize
    39:39:long getContext() -> getContext
    43:42:void release() -> release
    30:30:org.conscrypt.OpenSSLBIOSource wrap(java.nio.ByteBuffer) -> wrap
org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream -> org.conscrypt.OpenSSLBIOSource$ByteBufferInputStream:
    61:63:void <init>(java.nio.ByteBuffer) -> <init>
    76:76:int available() -> available
    67:70:int read() -> read
    81:83:int read(byte[]) -> read
    88:91:int read(byte[],int,int) -> read
    96:97:void reset() -> reset
    101:103:long skip(long) -> skip
org.conscrypt.OpenSSLCipher -> org.conscrypt.OpenSSLCipher:
    116:117:void <init>() -> <init>
    119:123:void <init>(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding) -> <init>
    453:462:byte[] checkAndSetEncodedKey(int,java.security.Key) -> checkAndSetEncodedKey
    346:366:byte[] engineDoFinal(byte[],int,int) -> engineDoFinal
    382:383:int engineDoFinal(byte[],int,int,byte[],int) -> engineDoFinal
    226:226:int engineGetBlockSize() -> engineGetBlockSize
    250:250:byte[] engineGetIV() -> engineGetIV
    440:441:int engineGetKeySize(java.security.Key) -> engineGetKeySize
    245:245:int engineGetOutputSize(int) -> engineGetOutputSize
    255:266:java.security.AlgorithmParameters engineGetParameters() -> engineGetParameters
    284:289:void engineInit(int,java.security.Key,java.security.SecureRandom) -> engineInit
    296:298:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInit
    303:305:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom) -> engineInit
    191:195:void engineSetMode(java.lang.String) -> engineSetMode
    203:211:void engineSetPadding(java.lang.String) -> engineSetPadding
    417:430:java.security.Key engineUnwrap(byte[],java.lang.String,int) -> engineUnwrap
    309:324:byte[] engineUpdate(byte[],int,int) -> engineUpdate
    339:340:int engineUpdate(byte[],int,int,byte[],int) -> engineUpdate
    404:409:byte[] engineWrap(java.security.Key) -> engineWrap
    221:221:org.conscrypt.OpenSSLCipher$Padding getPadding() -> getPadding
    271:279:java.security.spec.AlgorithmParameterSpec getParameterSpec(java.security.AlgorithmParameters) -> getParameterSpec
    475:475:boolean isEncrypting() -> isEncrypting
    184:184:boolean supportsVariableSizeIv() -> supportsVariableSizeIv
    180:180:boolean supportsVariableSizeKey() -> supportsVariableSizeKey
org.conscrypt.OpenSSLCipher$1 -> org.conscrypt.OpenSSLCipher$1:
    678:666:void <clinit>() -> <clinit>
org.conscrypt.OpenSSLCipher$EVP_AEAD -> org.conscrypt.OpenSSLCipher$EVP_AEAD:
    1005:1005:void <clinit>() -> <clinit>
    1049:1050:void <init>(org.conscrypt.OpenSSLCipher$Mode) -> <init>
    1062:1070:boolean arraysAreEqual(byte[],byte[]) -> arraysAreEqual
    1053:1054:void checkInitialization() -> checkInitialization
    1257:1258:void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding) -> checkSupportedPadding
    1234:1246:int doFinalInternal(byte[],int,int) -> doFinalInternal
    1178:1183:int engineDoFinal(byte[],int,int,byte[],int) -> engineDoFinal
    1104:1123:void engineInitInternal(byte[],java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInitInternal
    1279:1289:void engineUpdateAAD(byte[],int,int) -> engineUpdateAAD
    1075:1082:void expand(int) -> expand
    1272:1272:int getOutputSizeForFinal(int) -> getOutputSizeForFinal
    1267:1267:int getOutputSizeForUpdate(int) -> getOutputSizeForUpdate
    1085:1096:void reset() -> reset
    1208:1211:void throwAEADBadTagExceptionIfAvailable(java.lang.String,java.lang.Throwable) -> throwAEADBadTagExceptionIfAvailable
    1189:1191:int updateInternal(byte[],int,int,byte[],int,int) -> updateInternal
org.conscrypt.OpenSSLCipher$EVP_AEAD$AES -> org.conscrypt.OpenSSLCipher$EVP_AEAD$AES:
    1297:1298:void <init>(org.conscrypt.OpenSSLCipher$Mode) -> <init>
    1302:1305:void checkSupportedKeySize(int) -> checkSupportedKeySize
    1314:1314:java.lang.String getBaseCipherName() -> getBaseCipherName
    1319:1319:int getCipherBlockSize() -> getCipherBlockSize
org.conscrypt.OpenSSLCipher$EVP_AEAD$AES$GCM -> org.conscrypt.OpenSSLCipher$EVP_AEAD$AES$GCM:
    1325:1326:void <init>() -> <init>
    1330:1331:void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) -> checkSupportedMode
    1338:1357:java.security.AlgorithmParameters engineGetParameters() -> engineGetParameters
    1379:1384:long getEVP_AEAD(int) -> getEVP_AEAD
    1393:1396:int getOutputSizeForFinal(int) -> getOutputSizeForFinal
    1367:1374:java.security.spec.AlgorithmParameterSpec getParameterSpec(java.security.AlgorithmParameters) -> getParameterSpec
org.conscrypt.OpenSSLCipher$EVP_AEAD$AES$GCM$AES_128 -> org.conscrypt.OpenSSLCipher$EVP_AEAD$AES$GCM$AES_128:
    1400:1400:void <init>() -> <init>
    1403:1404:void checkSupportedKeySize(int) -> checkSupportedKeySize
org.conscrypt.OpenSSLCipher$EVP_AEAD$AES$GCM$AES_256 -> org.conscrypt.OpenSSLCipher$EVP_AEAD$AES$GCM$AES_256:
    1410:1410:void <init>() -> <init>
    1413:1414:void checkSupportedKeySize(int) -> checkSupportedKeySize
org.conscrypt.OpenSSLCipher$EVP_AEAD$ChaCha20 -> org.conscrypt.OpenSSLCipher$EVP_AEAD$ChaCha20:
    1424:1425:void <init>() -> <init>
    1429:1430:void checkSupportedKeySize(int) -> checkSupportedKeySize
    1447:1448:void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) -> checkSupportedMode
    1437:1437:java.lang.String getBaseCipherName() -> getBaseCipherName
    1442:1442:int getCipherBlockSize() -> getCipherBlockSize
    1454:1457:long getEVP_AEAD(int) -> getEVP_AEAD
    1466:1469:int getOutputSizeForFinal(int) -> getOutputSizeForFinal
org.conscrypt.OpenSSLCipher$EVP_CIPHER -> org.conscrypt.OpenSSLCipher$EVP_CIPHER:
    498:499:void <init>(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding) -> <init>
    582:601:int doFinalInternal(byte[],int,int) -> doFinalInternal
    506:516:void engineInitInternal(byte[],java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInitInternal
    616:633:int getOutputSizeForFinal(int) -> getOutputSizeForFinal
    640:640:int getOutputSizeForUpdate(int) -> getOutputSizeForUpdate
    653:655:void reset() -> reset
    562:566:int updateInternal(byte[],int,int,byte[],int,int) -> updateInternal
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES:
    706:707:void <init>(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding) -> <init>
    753:757:void checkSupportedKeySize(int) -> checkSupportedKeySize
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CBC -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CBC:
    711:712:void <init>(org.conscrypt.OpenSSLCipher$Padding) -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CBC$NoPadding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CBC$NoPadding:
    716:717:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CBC$PKCS5Padding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CBC$PKCS5Padding:
    722:723:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CTR -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$CTR:
    729:730:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$ECB -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$ECB:
    735:736:void <init>(org.conscrypt.OpenSSLCipher$Padding) -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$ECB$NoPadding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$ECB$NoPadding:
    740:741:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$ECB$PKCS5Padding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES$ECB$PKCS5Padding:
    746:747:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128 -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128:
    767:768:void <init>(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding) -> <init>
    814:815:void checkSupportedKeySize(int) -> checkSupportedKeySize
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CBC -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CBC:
    772:773:void <init>(org.conscrypt.OpenSSLCipher$Padding) -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CBC$NoPadding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CBC$NoPadding:
    777:778:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CBC$PKCS5Padding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CBC$PKCS5Padding:
    783:784:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CTR -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$CTR:
    790:791:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$ECB -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$ECB:
    796:797:void <init>(org.conscrypt.OpenSSLCipher$Padding) -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$ECB$NoPadding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$ECB$NoPadding:
    801:802:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$ECB$PKCS5Padding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_128$ECB$PKCS5Padding:
    807:808:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256 -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256:
    822:823:void <init>(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding) -> <init>
    869:870:void checkSupportedKeySize(int) -> checkSupportedKeySize
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CBC -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CBC:
    827:828:void <init>(org.conscrypt.OpenSSLCipher$Padding) -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CBC$NoPadding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CBC$NoPadding:
    832:833:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CBC$PKCS5Padding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CBC$PKCS5Padding:
    838:839:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CTR -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$CTR:
    845:846:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$ECB -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$ECB:
    851:852:void <init>(org.conscrypt.OpenSSLCipher$Padding) -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$ECB$NoPadding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$ECB$NoPadding:
    856:857:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$ECB$PKCS5Padding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_256$ECB$PKCS5Padding:
    862:863:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_BASE -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$AES_BASE:
    661:662:void <init>(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding) -> <init>
    666:670:void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) -> checkSupportedMode
    678:681:void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding) -> checkSupportedPadding
    690:690:java.lang.String getBaseCipherName() -> getBaseCipherName
    700:700:int getCipherBlockSize() -> getCipherBlockSize
    695:695:java.lang.String getCipherName(int,org.conscrypt.OpenSSLCipher$Mode) -> getCipherName
org.conscrypt.OpenSSLCipher$EVP_CIPHER$ARC4 -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$ARC4:
    952:953:void <init>() -> <init>
    967:967:void checkSupportedKeySize(int) -> checkSupportedKeySize
    971:974:void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) -> checkSupportedMode
    978:979:void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding) -> checkSupportedPadding
    957:957:java.lang.String getBaseCipherName() -> getBaseCipherName
    985:985:int getCipherBlockSize() -> getCipherBlockSize
    962:962:java.lang.String getCipherName(int,org.conscrypt.OpenSSLCipher$Mode) -> getCipherName
    990:990:boolean supportsVariableSizeKey() -> supportsVariableSizeKey
org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE:
    879:880:void <init>(org.conscrypt.OpenSSLCipher$Mode,org.conscrypt.OpenSSLCipher$Padding) -> <init>
    919:922:void checkSupportedKeySize(int) -> checkSupportedKeySize
    926:927:void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) -> checkSupportedMode
    933:936:void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding) -> checkSupportedPadding
    902:902:java.lang.String getBaseCipherName() -> getBaseCipherName
    945:945:int getCipherBlockSize() -> getCipherBlockSize
    908:914:java.lang.String getCipherName(int,org.conscrypt.OpenSSLCipher$Mode) -> getCipherName
org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE$CBC -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE$CBC:
    884:885:void <init>(org.conscrypt.OpenSSLCipher$Padding) -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE$CBC$NoPadding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE$CBC$NoPadding:
    889:890:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE$CBC$PKCS5Padding -> org.conscrypt.OpenSSLCipher$EVP_CIPHER$DESEDE$CBC$PKCS5Padding:
    895:896:void <init>() -> <init>
org.conscrypt.OpenSSLCipher$Mode -> org.conscrypt.OpenSSLCipher$Mode:
    59:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:org.conscrypt.OpenSSLCipher$Mode valueOf(java.lang.String) -> valueOf
    58:58:org.conscrypt.OpenSSLCipher$Mode[] values() -> values
org.conscrypt.OpenSSLCipher$Padding -> org.conscrypt.OpenSSLCipher$Padding:
    71:70:void <clinit>() -> <clinit>
    70:70:void <init>(java.lang.String,int) -> <init>
    77:81:org.conscrypt.OpenSSLCipher$Padding getNormalized(java.lang.String) -> getNormalized
    70:70:org.conscrypt.OpenSSLCipher$Padding valueOf(java.lang.String) -> valueOf
    70:70:org.conscrypt.OpenSSLCipher$Padding[] values() -> values
org.conscrypt.OpenSSLCipherChaCha20 -> org.conscrypt.OpenSSLCipherChaCha20:
    35:35:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    127:128:void checkSupportedKeySize(int) -> checkSupportedKeySize
    135:136:void checkSupportedMode(org.conscrypt.OpenSSLCipher$Mode) -> checkSupportedMode
    142:143:void checkSupportedPadding(org.conscrypt.OpenSSLCipher$Padding) -> checkSupportedPadding
    111:112:int doFinalInternal(byte[],int,int) -> doFinalInternal
    52:60:void engineInitInternal(byte[],java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInitInternal
    122:122:java.lang.String getBaseCipherName() -> getBaseCipherName
    149:149:int getCipherBlockSize() -> getCipherBlockSize
    154:154:int getOutputSizeForFinal(int) -> getOutputSizeForFinal
    159:159:int getOutputSizeForUpdate(int) -> getOutputSizeForUpdate
    116:118:void reset() -> reset
    75:76:int updateInternal(byte[],int,int,byte[],int,int) -> updateInternal
org.conscrypt.OpenSSLCipherRSA -> org.conscrypt.OpenSSLCipherRSA:
    92:94:void <init>(int) -> <init>
    171:171:void doCryptoInit(java.security.spec.AlgorithmParameterSpec) -> doCryptoInit
    294:299:byte[] engineDoFinal(byte[],int,int) -> engineDoFinal
    331:335:int engineDoFinal(byte[],int,int,byte[],int) -> engineDoFinal
    123:126:int engineGetBlockSize() -> engineGetBlockSize
    162:162:byte[] engineGetIV() -> engineGetIV
    220:238:int engineGetKeySize(java.security.Key) -> engineGetKeySize
    131:134:int engineGetOutputSize(int) -> engineGetOutputSize
    167:167:java.security.AlgorithmParameters engineGetParameters() -> engineGetParameters
    244:246:void engineInit(int,java.security.Key,java.security.SecureRandom) -> engineInit
    253:255:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInit
    264:266:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom) -> engineInit
    175:208:void engineInitInternal(int,java.security.Key,java.security.spec.AlgorithmParameterSpec) -> engineInitInternal
    98:100:void engineSetMode(java.lang.String) -> engineSetMode
    108:118:void engineSetPadding(java.lang.String) -> engineSetPadding
    359:372:java.security.Key engineUnwrap(byte[],java.lang.String,int) -> engineUnwrap
    274:281:byte[] engineUpdate(byte[],int,int) -> engineUpdate
    287:288:int engineUpdate(byte[],int,int,byte[],int) -> engineUpdate
    346:351:byte[] engineWrap(java.security.Key) -> engineWrap
    157:157:boolean isInitialized() -> isInitialized
    147:148:int keySizeBytes() -> keySizeBytes
    138:143:int paddedBlockSizeBytes() -> paddedBlockSizeBytes
org.conscrypt.OpenSSLCipherRSA$DirectRSA -> org.conscrypt.OpenSSLCipherRSA$DirectRSA:
    382:383:void <init>(int) -> <init>
    389:409:int doCryptoOperation(byte[],byte[]) -> doCryptoOperation
org.conscrypt.OpenSSLCipherRSA$OAEP -> org.conscrypt.OpenSSLCipherRSA$OAEP:
    439:442:void <init>(long,int) -> <init>
    533:548:void doCryptoInit(java.security.spec.AlgorithmParameterSpec) -> doCryptoInit
    594:597:int doCryptoOperation(byte[],byte[]) -> doCryptoOperation
    446:469:java.security.AlgorithmParameters engineGetParameters() -> engineGetParameters
    490:496:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInit
    502:513:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom) -> engineInit
    518:520:void engineInitInternal(int,java.security.Key,java.security.spec.AlgorithmParameterSpec) -> engineInitInternal
    477:483:void engineSetPadding(java.lang.String) -> engineSetPadding
    552:556:int paddedBlockSizeBytes() -> paddedBlockSizeBytes
    561:566:void readOAEPParameters(javax.crypto.spec.OAEPParameterSpec) -> readOAEPParameters
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA1 -> org.conscrypt.OpenSSLCipherRSA$OAEP$SHA1:
    603:604:void <init>() -> <init>
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA224 -> org.conscrypt.OpenSSLCipherRSA$OAEP$SHA224:
    609:610:void <init>() -> <init>
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA256 -> org.conscrypt.OpenSSLCipherRSA$OAEP$SHA256:
    615:616:void <init>() -> <init>
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA384 -> org.conscrypt.OpenSSLCipherRSA$OAEP$SHA384:
    621:622:void <init>() -> <init>
org.conscrypt.OpenSSLCipherRSA$OAEP$SHA512 -> org.conscrypt.OpenSSLCipherRSA$OAEP$SHA512:
    627:628:void <init>() -> <init>
org.conscrypt.OpenSSLCipherRSA$PKCS1 -> org.conscrypt.OpenSSLCipherRSA$PKCS1:
    418:419:void <init>() -> <init>
org.conscrypt.OpenSSLCipherRSA$Raw -> org.conscrypt.OpenSSLCipherRSA$Raw:
    424:425:void <init>() -> <init>
org.conscrypt.OpenSSLContextImpl -> org.conscrypt.OpenSSLContextImpl:
    64:68:void <init>(java.lang.String[]) -> <init>
    73:87:void <init>() -> <init>
    125:126:javax.net.ssl.SSLEngine engineCreateSSLEngine(java.lang.String,int) -> engineCreateSSLEngine
    135:136:javax.net.ssl.SSLEngine engineCreateSSLEngine() -> engineCreateSSLEngine
    39:39:javax.net.ssl.SSLSessionContext engineGetClientSessionContext() -> engineGetClientSessionContext
    150:150:org.conscrypt.ClientSessionContext engineGetClientSessionContext() -> engineGetClientSessionContext
    39:39:javax.net.ssl.SSLSessionContext engineGetServerSessionContext() -> engineGetServerSessionContext
    145:145:org.conscrypt.ServerSessionContext engineGetServerSessionContext() -> engineGetServerSessionContext
    117:118:javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory() -> engineGetServerSocketFactory
    109:110:javax.net.ssl.SSLSocketFactory engineGetSocketFactory() -> engineGetSocketFactory
    103:105:void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom) -> engineInit
    61:61:org.conscrypt.OpenSSLContextImpl getPreferred() -> getPreferred
org.conscrypt.OpenSSLContextImpl$TLSv1 -> org.conscrypt.OpenSSLContextImpl$TLSv1:
    185:186:void <init>() -> <init>
    183:183:javax.net.ssl.SSLSessionContext engineGetClientSessionContext() -> engineGetClientSessionContext
    183:183:javax.net.ssl.SSLSessionContext engineGetServerSessionContext() -> engineGetServerSessionContext
org.conscrypt.OpenSSLContextImpl$TLSv11 -> org.conscrypt.OpenSSLContextImpl$TLSv11:
    176:177:void <init>() -> <init>
    174:174:javax.net.ssl.SSLSessionContext engineGetClientSessionContext() -> engineGetClientSessionContext
    174:174:javax.net.ssl.SSLSessionContext engineGetServerSessionContext() -> engineGetServerSessionContext
org.conscrypt.OpenSSLContextImpl$TLSv12 -> org.conscrypt.OpenSSLContextImpl$TLSv12:
    167:168:void <init>() -> <init>
    165:165:javax.net.ssl.SSLSessionContext engineGetClientSessionContext() -> engineGetClientSessionContext
    165:165:javax.net.ssl.SSLSessionContext engineGetServerSessionContext() -> engineGetServerSessionContext
org.conscrypt.OpenSSLContextImpl$TLSv13 -> org.conscrypt.OpenSSLContextImpl$TLSv13:
    158:159:void <init>() -> <init>
    156:156:javax.net.ssl.SSLSessionContext engineGetClientSessionContext() -> engineGetClientSessionContext
    156:156:javax.net.ssl.SSLSessionContext engineGetServerSessionContext() -> engineGetServerSessionContext
org.conscrypt.OpenSSLECDHKeyAgreement -> org.conscrypt.OpenSSLECDHKeyAgreement:
    37:37:void <init>() -> <init>
    147:148:void checkCompleted() -> checkCompleted
    53:54:java.security.Key engineDoPhase(java.security.Key,boolean) -> engineDoPhase
    97:100:int engineGenerateSecret(byte[],int) -> engineGenerateSecret
    110:111:byte[] engineGenerateSecret() -> engineGenerateSecret
    116:117:javax.crypto.SecretKey engineGenerateSecret(java.lang.String) -> engineGenerateSecret
    122:123:void engineInit(java.security.Key,java.security.SecureRandom) -> engineInit
    140:141:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> engineInit
org.conscrypt.OpenSSLECGroupContext -> org.conscrypt.OpenSSLECGroupContext:
    34:36:void <init>(org.conscrypt.NativeRef$EC_GROUP) -> <init>
    56:56:boolean equals(java.lang.Object) -> equals
    41:51:org.conscrypt.OpenSSLECGroupContext getCurveByName(java.lang.String) -> getCurveByName
    158:178:java.security.spec.ECParameterSpec getECParameterSpec() -> getECParameterSpec
    71:85:org.conscrypt.OpenSSLECGroupContext getInstance(java.security.spec.ECParameterSpec) -> getInstance
    66:66:org.conscrypt.NativeRef$EC_GROUP getNativeRef() -> getNativeRef
    62:62:int hashCode() -> hashCode
org.conscrypt.OpenSSLECKeyFactory -> org.conscrypt.OpenSSLECKeyFactory:
    42:42:void <init>() -> <init>
    61:62:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    46:47:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
    78:79:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class) -> engineGetKeySpec
    149:150:java.security.Key engineTranslateKey(java.security.Key) -> engineTranslateKey
org.conscrypt.OpenSSLECKeyPairGenerator -> org.conscrypt.OpenSSLECKeyPairGenerator:
    44:52:void <clinit>() -> <clinit>
    57:58:void <init>() -> <init>
    125:133:void assertCurvesAreValid() -> assertCurvesAreValid
    62:72:java.security.KeyPair generateKeyPair() -> generateKeyPair
    77:79:void initialize(int,java.security.SecureRandom) -> initialize
    97:118:void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> initialize
org.conscrypt.OpenSSLECPointContext -> org.conscrypt.OpenSSLECPointContext:
    26:29:void <init>(org.conscrypt.OpenSSLECGroupContext,org.conscrypt.NativeRef$EC_POINT) -> <init>
    33:33:boolean equals(java.lang.Object) -> equals
    37:41:java.security.spec.ECPoint getECPoint() -> getECPoint
    56:61:org.conscrypt.OpenSSLECPointContext getInstance(org.conscrypt.OpenSSLECGroupContext,java.security.spec.ECPoint) -> getInstance
    51:51:org.conscrypt.NativeRef$EC_POINT getNativeRef() -> getNativeRef
    47:47:int hashCode() -> hashCode
org.conscrypt.OpenSSLECPrivateKey -> org.conscrypt.OpenSSLECPrivateKey:
    47:50:void <init>(org.conscrypt.OpenSSLECGroupContext,org.conscrypt.OpenSSLKey) -> <init>
    52:56:void <init>(org.conscrypt.OpenSSLKey) -> <init>
    58:65:void <init>(java.security.spec.ECPrivateKeySpec) -> <init>
    189:210:boolean equals(java.lang.Object) -> equals
    155:155:java.lang.String getAlgorithm() -> getAlgorithm
    165:165:byte[] getEncoded() -> getEncoded
    160:160:java.lang.String getFormat() -> getFormat
    134:149:org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPrivateKey) -> getInstance
    184:184:org.conscrypt.OpenSSLKey getOpenSSLKey() -> getOpenSSLKey
    170:170:java.security.spec.ECParameterSpec getParams() -> getParams
    179:179:java.math.BigInteger getPrivateKey() -> getPrivateKey
    175:175:java.math.BigInteger getS() -> getS
    218:218:int hashCode() -> hashCode
    231:238:void readObject(java.io.ObjectInputStream) -> readObject
    223:227:java.lang.String toString() -> toString
    86:93:org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey) -> wrapJCAPrivateKeyForTLSStackOnly
    106:112:org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.spec.ECParameterSpec) -> wrapJCAPrivateKeyForTLSStackOnly
    72:74:org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey) -> wrapPlatformKey
    128:128:org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey,org.conscrypt.OpenSSLECGroupContext) -> wrapPlatformKey
    245:247:void writeObject(java.io.ObjectOutputStream) -> writeObject
org.conscrypt.OpenSSLECPublicKey -> org.conscrypt.OpenSSLECPublicKey:
    43:46:void <init>(org.conscrypt.OpenSSLECGroupContext,org.conscrypt.OpenSSLKey) -> <init>
    48:52:void <init>(org.conscrypt.OpenSSLKey) -> <init>
    54:62:void <init>(java.security.spec.ECPublicKeySpec) -> <init>
    118:139:boolean equals(java.lang.Object) -> equals
    81:81:java.lang.String getAlgorithm() -> getAlgorithm
    91:91:byte[] getEncoded() -> getEncoded
    86:86:java.lang.String getFormat() -> getFormat
    68:75:org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.ECPublicKey) -> getInstance
    113:113:org.conscrypt.OpenSSLKey getOpenSSLKey() -> getOpenSSLKey
    96:96:java.security.spec.ECParameterSpec getParams() -> getParams
    100:103:java.security.spec.ECPoint getPublicKey() -> getPublicKey
    108:108:java.security.spec.ECPoint getW() -> getW
    147:147:int hashCode() -> hashCode
    156:163:void readObject(java.io.ObjectInputStream) -> readObject
    152:152:java.lang.String toString() -> toString
    170:172:void writeObject(java.io.ObjectOutputStream) -> writeObject
org.conscrypt.OpenSSLKey -> org.conscrypt.OpenSSLKey:
    41:42:void <init>(long) -> <init>
    44:47:void <init>(long,boolean) -> <init>
    330:343:boolean equals(java.lang.Object) -> equals
    140:150:org.conscrypt.OpenSSLKey fromECPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.spec.ECParameterSpec) -> fromECPrivateKeyForTLSStackOnly
    178:188:org.conscrypt.OpenSSLKey fromKeyMaterial(java.security.PrivateKey) -> fromKeyMaterial
    61:69:org.conscrypt.OpenSSLKey fromPrivateKey(java.security.PrivateKey) -> fromPrivateKey
    116:126:org.conscrypt.OpenSSLKey fromPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey) -> fromPrivateKeyForTLSStackOnly
    91:102:org.conscrypt.OpenSSLKey fromPrivateKeyPemInputStream(java.io.InputStream) -> fromPrivateKeyPemInputStream
    220:225:org.conscrypt.OpenSSLKey fromPublicKey(java.security.PublicKey) -> fromPublicKey
    247:258:org.conscrypt.OpenSSLKey fromPublicKeyPemInputStream(java.io.InputStream) -> fromPublicKeyPemInputStream
    53:53:org.conscrypt.NativeRef$EVP_PKEY getNativeRef() -> getNativeRef
    160:168:org.conscrypt.OpenSSLKey getOpenSSLKey(java.security.PrivateKey) -> getOpenSSLKey
    296:298:java.security.PrivateKey getPrivateKey() -> getPrivateKey
    308:314:java.security.PrivateKey getPrivateKey(java.security.spec.PKCS8EncodedKeySpec,int) -> getPrivateKey
    263:265:java.security.PublicKey getPublicKey() -> getPublicKey
    275:281:java.security.PublicKey getPublicKey(java.security.spec.X509EncodedKeySpec,int) -> getPublicKey
    348:348:int hashCode() -> hashCode
    57:57:boolean isWrapped() -> isWrapped
    199:205:org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey) -> wrapJCAPrivateKeyForTLSStackOnly
    210:215:org.conscrypt.OpenSSLKey wrapPrivateKey(java.security.PrivateKey) -> wrapPrivateKey
org.conscrypt.OpenSSLMac -> org.conscrypt.OpenSSLMac:
    34:34:void <init>(long,int,org.conscrypt.OpenSSLMac$1) -> <init>
    58:61:void <init>(long,int) -> <init>
    149:152:byte[] engineDoFinal() -> engineDoFinal
    65:65:int engineGetMacLength() -> engineGetMacLength
    71:72:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec) -> engineInit
    157:158:void engineReset() -> engineReset
    98:100:void engineUpdate(byte) -> engineUpdate
    104:106:void engineUpdate(byte[],int,int) -> engineUpdate
    114:134:void engineUpdate(java.nio.ByteBuffer) -> engineUpdate
    88:94:void resetContext() -> resetContext
org.conscrypt.OpenSSLMac$HmacMD5 -> org.conscrypt.OpenSSLMac$HmacMD5:
    162:163:void <init>() -> <init>
org.conscrypt.OpenSSLMac$HmacSHA1 -> org.conscrypt.OpenSSLMac$HmacSHA1:
    168:169:void <init>() -> <init>
org.conscrypt.OpenSSLMac$HmacSHA224 -> org.conscrypt.OpenSSLMac$HmacSHA224:
    174:175:void <init>() -> <init>
org.conscrypt.OpenSSLMac$HmacSHA256 -> org.conscrypt.OpenSSLMac$HmacSHA256:
    180:181:void <init>() -> <init>
org.conscrypt.OpenSSLMac$HmacSHA384 -> org.conscrypt.OpenSSLMac$HmacSHA384:
    186:187:void <init>() -> <init>
org.conscrypt.OpenSSLMac$HmacSHA512 -> org.conscrypt.OpenSSLMac$HmacSHA512:
    192:193:void <init>() -> <init>
org.conscrypt.OpenSSLMessageDigestJDK -> org.conscrypt.OpenSSLMessageDigestJDK:
    29:29:void <init>(long,int,org.conscrypt.OpenSSLMessageDigestJDK$1) -> <init>
    55:60:void <init>(long,int) -> <init>
    63:68:void <init>(long,int,org.conscrypt.NativeRef$EVP_MD_CTX,boolean) -> <init>
    198:204:java.lang.Object clone() -> clone
    146:145:byte[] engineDigest() -> engineDigest
    90:90:int engineGetDigestLength() -> engineGetDigestLength
    83:82:void engineReset() -> engineReset
    95:94:void engineUpdate(byte) -> engineUpdate
    101:100:void engineUpdate(byte[],int,int) -> engineUpdate
    111:110:void engineUpdate(java.nio.ByteBuffer) -> engineUpdate
    71:70:void ensureDigestInitializedInContext() -> ensureDigestInitializedInContext
org.conscrypt.OpenSSLMessageDigestJDK$MD5 -> org.conscrypt.OpenSSLMessageDigestJDK$MD5:
    162:163:void <init>() -> <init>
org.conscrypt.OpenSSLMessageDigestJDK$SHA1 -> org.conscrypt.OpenSSLMessageDigestJDK$SHA1:
    168:169:void <init>() -> <init>
org.conscrypt.OpenSSLMessageDigestJDK$SHA224 -> org.conscrypt.OpenSSLMessageDigestJDK$SHA224:
    174:175:void <init>() -> <init>
org.conscrypt.OpenSSLMessageDigestJDK$SHA256 -> org.conscrypt.OpenSSLMessageDigestJDK$SHA256:
    180:181:void <init>() -> <init>
org.conscrypt.OpenSSLMessageDigestJDK$SHA384 -> org.conscrypt.OpenSSLMessageDigestJDK$SHA384:
    186:187:void <init>() -> <init>
org.conscrypt.OpenSSLMessageDigestJDK$SHA512 -> org.conscrypt.OpenSSLMessageDigestJDK$SHA512:
    192:193:void <init>() -> <init>
org.conscrypt.OpenSSLProvider -> org.conscrypt.OpenSSLProvider:
    39:39:void <clinit>() -> <clinit>
    49:50:void <init>() -> <init>
    53:54:void <init>(java.lang.String) -> <init>
    57:483:void <init>(java.lang.String,boolean) -> <init>
    567:575:void putECDHKeyAgreementImplClass(java.lang.String) -> putECDHKeyAgreementImplClass
    581:588:void putImplClassWithKeyConstraints(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> putImplClassWithKeyConstraints
    489:496:void putMacImplClass(java.lang.String,java.lang.String) -> putMacImplClass
    550:560:void putRAWRSASignatureImplClass(java.lang.String) -> putRAWRSASignatureImplClass
    514:524:void putRSACipherImplClass(java.lang.String,java.lang.String) -> putRSACipherImplClass
    534:544:void putSignatureImplClass(java.lang.String,java.lang.String) -> putSignatureImplClass
    501:508:void putSymmetricCipherImplClass(java.lang.String,java.lang.String) -> putSymmetricCipherImplClass
org.conscrypt.OpenSSLRSAKeyFactory -> org.conscrypt.OpenSSLRSAKeyFactory:
    43:43:void <init>() -> <init>
    62:63:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec) -> engineGeneratePrivate
    47:48:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec) -> engineGeneratePublic
    81:82:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class) -> engineGetKeySpec
    187:188:java.security.Key engineTranslateKey(java.security.Key) -> engineTranslateKey
org.conscrypt.OpenSSLRSAKeyPairGenerator -> org.conscrypt.OpenSSLRSAKeyPairGenerator:
    36:47:void <init>() -> <init>
    51:57:java.security.KeyPair generateKeyPair() -> generateKeyPair
    62:63:void initialize(int,java.security.SecureRandom) -> initialize
    68:69:void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom) -> initialize
org.conscrypt.OpenSSLRSAPrivateCrtKey -> org.conscrypt.OpenSSLRSAPrivateCrtKey:
    49:50:void <init>(org.conscrypt.OpenSSLKey) -> <init>
    53:54:void <init>(org.conscrypt.OpenSSLKey,byte[][]) -> <init>
    57:58:void <init>(java.security.spec.RSAPrivateCrtKeySpec) -> <init>
    207:235:boolean equals(java.lang.Object) -> equals
    201:202:java.math.BigInteger getCrtCoefficient() -> getCrtCoefficient
    103:111:org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateCrtKey) -> getInstance
    189:190:java.math.BigInteger getPrimeExponentP() -> getPrimeExponentP
    195:196:java.math.BigInteger getPrimeExponentQ() -> getPrimeExponentQ
    177:178:java.math.BigInteger getPrimeP() -> getPrimeP
    183:184:java.math.BigInteger getPrimeQ() -> getPrimeQ
    171:172:java.math.BigInteger getPublicExponent() -> getPublicExponent
    240:244:int hashCode() -> hashCode
    61:65:org.conscrypt.OpenSSLKey init(java.security.spec.RSAPrivateCrtKeySpec) -> init
    266:278:void readObject(java.io.ObjectInputStream) -> readObject
    146:145:void readParams(byte[][]) -> readParams
    249:262:java.lang.String toString() -> toString
    281:283:void writeObject(java.io.ObjectOutputStream) -> writeObject
org.conscrypt.OpenSSLRSAPrivateKey -> org.conscrypt.OpenSSLRSAPrivateKey:
    48:50:void <init>(org.conscrypt.OpenSSLKey) -> <init>
    53:56:void <init>(org.conscrypt.OpenSSLKey,byte[][]) -> <init>
    64:65:void <init>(java.security.spec.RSAPrivateKeySpec) -> <init>
    165:164:void ensureReadParams() -> ensureReadParams
    216:233:boolean equals(java.lang.Object) -> equals
    211:211:java.lang.String getAlgorithm() -> getAlgorithm
    201:201:byte[] getEncoded() -> getEncoded
    206:206:java.lang.String getFormat() -> getFormat
    93:97:org.conscrypt.OpenSSLRSAPrivateKey getInstance(org.conscrypt.OpenSSLKey) -> getInstance
    136:144:org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateKey) -> getInstance
    195:196:java.math.BigInteger getModulus() -> getModulus
    60:60:org.conscrypt.OpenSSLKey getOpenSSLKey() -> getOpenSSLKey
    189:190:java.math.BigInteger getPrivateExponent() -> getPrivateExponent
    238:246:int hashCode() -> hashCode
    68:72:org.conscrypt.OpenSSLKey init(java.security.spec.RSAPrivateKeySpec) -> init
    261:273:void readObject(java.io.ObjectInputStream) -> readObject
    173:174:void readParams(byte[][]) -> readParams
    251:257:java.lang.String toString() -> toString
    117:124:org.conscrypt.OpenSSLKey wrapJCAPrivateKeyForTLSStackOnly(java.security.PrivateKey,java.security.PublicKey) -> wrapJCAPrivateKeyForTLSStackOnly
    102:106:org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.RSAPrivateKey) -> wrapPlatformKey
    276:278:void writeObject(java.io.ObjectOutputStream) -> writeObject
org.conscrypt.OpenSSLRSAPublicKey -> org.conscrypt.OpenSSLRSAPublicKey:
    46:48:void <init>(org.conscrypt.OpenSSLKey) -> <init>
    55:67:void <init>(java.security.spec.RSAPublicKeySpec) -> <init>
    103:112:void ensureReadParams() -> ensureReadParams
    128:151:boolean equals(java.lang.Object) -> equals
    89:89:java.lang.String getAlgorithm() -> getAlgorithm
    99:99:byte[] getEncoded() -> getEncoded
    94:94:java.lang.String getFormat() -> getFormat
    73:83:org.conscrypt.OpenSSLKey getInstance(java.security.interfaces.RSAPublicKey) -> getInstance
    116:117:java.math.BigInteger getModulus() -> getModulus
    52:52:org.conscrypt.OpenSSLKey getOpenSSLKey() -> getOpenSSLKey
    122:123:java.math.BigInteger getPublicExponent() -> getPublicExponent
    157:159:int hashCode() -> hashCode
    178:190:void readObject(java.io.ObjectInputStream) -> readObject
    164:174:java.lang.String toString() -> toString
    193:195:void writeObject(java.io.ObjectOutputStream) -> writeObject
org.conscrypt.OpenSSLRandom -> org.conscrypt.OpenSSLRandom:
    28:28:void <init>() -> <init>
    45:47:byte[] engineGenerateSeed(int) -> engineGenerateSeed
    40:41:void engineNextBytes(byte[]) -> engineNextBytes
    33:34:void engineSetSeed(byte[]) -> engineSetSeed
org.conscrypt.OpenSSLServerSocketFactoryImpl -> org.conscrypt.OpenSSLServerSocketFactoryImpl:
    32:32:void <clinit>() -> <clinit>
    38:46:void <init>() -> <init>
    48:51:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    80:80:java.net.ServerSocket createServerSocket() -> createServerSocket
    86:86:java.net.ServerSocket createServerSocket(int) -> createServerSocket
    92:92:java.net.ServerSocket createServerSocket(int,int) -> createServerSocket
    99:99:java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress) -> createServerSocket
    70:70:java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    75:75:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    65:66:void setUseEngineSocket(boolean) -> setUseEngineSocket
    57:58:void setUseEngineSocketByDefault(boolean) -> setUseEngineSocketByDefault
org.conscrypt.OpenSSLSignature -> org.conscrypt.OpenSSLSignature:
    42:42:void <init>(long,org.conscrypt.OpenSSLSignature$EngineType,org.conscrypt.OpenSSLSignature$1) -> <init>
    84:87:void <init>(long,org.conscrypt.OpenSSLSignature$EngineType) -> <init>
    176:181:void checkEngineType(org.conscrypt.OpenSSLKey) -> checkEngineType
    108:108:void configureEVP_PKEY_CTX(long) -> configureEVP_PKEY_CTX
    172:172:java.lang.Object engineGetParameter(java.lang.String) -> engineGetParameter
    210:211:void engineInitSign(java.security.PrivateKey) -> engineInitSign
    215:216:void engineInitVerify(java.security.PublicKey) -> engineInitVerify
    221:221:void engineSetParameter(java.lang.String,java.lang.Object) -> engineSetParameter
    226:239:byte[] engineSign() -> engineSign
    112:114:void engineUpdate(byte) -> engineUpdate
    118:124:void engineUpdate(byte[],int,int) -> engineUpdate
    132:152:void engineUpdate(java.nio.ByteBuffer) -> engineUpdate
    247:260:boolean engineVerify(byte[]) -> engineVerify
    270:270:long getEVP_PKEY_CTX() -> getEVP_PKEY_CTX
    197:204:void initInternal(org.conscrypt.OpenSSLKey,boolean) -> initInternal
    90:98:void resetContext() -> resetContext
org.conscrypt.OpenSSLSignature$1 -> org.conscrypt.OpenSSLSignature$1:
    178:178:void <clinit>() -> <clinit>
org.conscrypt.OpenSSLSignature$EngineType -> org.conscrypt.OpenSSLSignature$EngineType:
    44:43:void <clinit>() -> <clinit>
    43:43:void <init>(java.lang.String,int) -> <init>
    43:43:org.conscrypt.OpenSSLSignature$EngineType valueOf(java.lang.String) -> valueOf
    43:43:org.conscrypt.OpenSSLSignature$EngineType[] values() -> values
org.conscrypt.OpenSSLSignature$MD5RSA -> org.conscrypt.OpenSSLSignature$MD5RSA:
    290:291:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$RSAPKCS1Padding -> org.conscrypt.OpenSSLSignature$RSAPKCS1Padding:
    278:279:void <init>(long) -> <init>
    284:285:void configureEVP_PKEY_CTX(long) -> configureEVP_PKEY_CTX
org.conscrypt.OpenSSLSignature$RSAPSSPadding -> org.conscrypt.OpenSSLSignature$RSAPSSPadding:
    359:364:void <init>(long,java.lang.String,int) -> <init>
    369:372:void configureEVP_PKEY_CTX(long) -> configureEVP_PKEY_CTX
    449:459:java.security.AlgorithmParameters engineGetParameters() -> engineGetParameters
    377:380:void engineSetParameter(java.security.spec.AlgorithmParameterSpec) -> engineSetParameter
org.conscrypt.OpenSSLSignature$SHA1ECDSA -> org.conscrypt.OpenSSLSignature$SHA1ECDSA:
    321:322:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA1RSA -> org.conscrypt.OpenSSLSignature$SHA1RSA:
    295:296:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA1RSAPSS -> org.conscrypt.OpenSSLSignature$SHA1RSAPSS:
    468:469:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA224ECDSA -> org.conscrypt.OpenSSLSignature$SHA224ECDSA:
    326:327:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA224RSA -> org.conscrypt.OpenSSLSignature$SHA224RSA:
    300:301:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA224RSAPSS -> org.conscrypt.OpenSSLSignature$SHA224RSAPSS:
    474:475:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA256ECDSA -> org.conscrypt.OpenSSLSignature$SHA256ECDSA:
    331:332:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA256RSA -> org.conscrypt.OpenSSLSignature$SHA256RSA:
    305:306:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA256RSAPSS -> org.conscrypt.OpenSSLSignature$SHA256RSAPSS:
    480:481:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA384ECDSA -> org.conscrypt.OpenSSLSignature$SHA384ECDSA:
    336:337:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA384RSA -> org.conscrypt.OpenSSLSignature$SHA384RSA:
    310:311:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA384RSAPSS -> org.conscrypt.OpenSSLSignature$SHA384RSAPSS:
    486:487:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA512ECDSA -> org.conscrypt.OpenSSLSignature$SHA512ECDSA:
    341:342:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA512RSA -> org.conscrypt.OpenSSLSignature$SHA512RSA:
    315:316:void <init>() -> <init>
org.conscrypt.OpenSSLSignature$SHA512RSAPSS -> org.conscrypt.OpenSSLSignature$SHA512RSAPSS:
    492:493:void <init>() -> <init>
org.conscrypt.OpenSSLSignatureRawECDSA -> org.conscrypt.OpenSSLSignatureRawECDSA:
    33:42:void <init>() -> <init>
    57:57:java.lang.Object engineGetParameter(java.lang.String) -> engineGetParameter
    70:71:void engineInitSign(java.security.PrivateKey) -> engineInitSign
    75:76:void engineInitVerify(java.security.PublicKey) -> engineInitVerify
    81:81:void engineSetParameter(java.lang.String,java.lang.Object) -> engineSetParameter
    85:87:byte[] engineSign() -> engineSign
    46:47:void engineUpdate(byte) -> engineUpdate
    51:52:void engineUpdate(byte[],int,int) -> engineUpdate
    116:118:boolean engineVerify(byte[]) -> engineVerify
    61:63:org.conscrypt.OpenSSLKey verifyKey(org.conscrypt.OpenSSLKey) -> verifyKey
org.conscrypt.OpenSSLSignatureRawRSA -> org.conscrypt.OpenSSLSignatureRawRSA:
    36:36:void <init>() -> <init>
    85:85:java.lang.Object engineGetParameter(java.lang.String) -> engineGetParameter
    90:100:void engineInitSign(java.security.PrivateKey) -> engineInitSign
    111:118:void engineInitVerify(java.security.PublicKey) -> engineInitVerify
    130:130:void engineSetParameter(java.lang.String,java.lang.Object) -> engineSetParameter
    134:136:byte[] engineSign() -> engineSign
    59:67:void engineUpdate(byte) -> engineUpdate
    71:80:void engineUpdate(byte[],int,int) -> engineUpdate
    158:160:boolean engineVerify(byte[]) -> engineVerify
org.conscrypt.OpenSSLSocketFactoryImpl -> org.conscrypt.OpenSSLSocketFactoryImpl:
    37:37:void <clinit>() -> <clinit>
    43:53:void <init>() -> <init>
    55:58:void <init>(org.conscrypt.SSLParametersImpl) -> <init>
    87:88:java.net.Socket createSocket() -> createSocket
    99:103:java.net.Socket createSocket(java.lang.String,int) -> createSocket
    111:115:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    122:126:java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    134:138:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    146:148:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    77:77:java.lang.String[] getDefaultCipherSuites() -> getDefaultCipherSuites
    82:82:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    164:167:boolean hasFileDescriptor(java.net.Socket) -> hasFileDescriptor
    72:73:void setUseEngineSocket(boolean) -> setUseEngineSocket
    64:65:void setUseEngineSocketByDefault(boolean) -> setUseEngineSocketByDefault
org.conscrypt.OpenSSLSocketImpl -> org.conscrypt.OpenSSLSocketImpl:
    36:37:void <init>() -> <init>
    40:41:void <init>(java.lang.String,int) -> <init>
    44:45:void <init>(java.net.InetAddress,int) -> <init>
    49:50:void <init>(java.lang.String,int,java.net.InetAddress,int) -> <init>
    55:56:void <init>(java.net.InetAddress,int,java.net.InetAddress,int) -> <init>
    60:61:void <init>(java.net.Socket,java.lang.String,int,boolean) -> <init>
    34:34:void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> addHandshakeCompletedListener
    34:34:void bind(java.net.SocketAddress) -> bind
    34:34:void close() -> close
    134:134:byte[] getAlpnSelectedProtocol() -> getAlpnSelectedProtocol
    34:34:java.nio.channels.SocketChannel getChannel() -> getChannel
    80:80:java.io.FileDescriptor getFileDescriptor$() -> getFileDescriptor$
    65:65:java.lang.String getHostname() -> getHostname
    75:75:java.lang.String getHostnameOrIP() -> getHostnameOrIP
    34:34:java.net.InetAddress getInetAddress() -> getInetAddress
    34:34:java.io.InputStream getInputStream() -> getInputStream
    34:34:boolean getKeepAlive() -> getKeepAlive
    34:34:java.net.InetAddress getLocalAddress() -> getLocalAddress
    34:34:int getLocalPort() -> getLocalPort
    34:34:java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    116:116:byte[] getNpnSelectedProtocol() -> getNpnSelectedProtocol
    34:34:boolean getOOBInline() -> getOOBInline
    34:34:java.io.OutputStream getOutputStream() -> getOutputStream
    34:34:int getReceiveBufferSize() -> getReceiveBufferSize
    34:34:java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    34:34:boolean getReuseAddress() -> getReuseAddress
    34:34:int getSendBufferSize() -> getSendBufferSize
    34:34:int getSoLinger() -> getSoLinger
    90:90:int getSoWriteTimeout() -> getSoWriteTimeout
    34:34:boolean getTcpNoDelay() -> getTcpNoDelay
    34:34:int getTrafficClass() -> getTrafficClass
    34:34:boolean isBound() -> isBound
    34:34:boolean isClosed() -> isClosed
    34:34:boolean isConnected() -> isConnected
    34:34:boolean isInputShutdown() -> isInputShutdown
    34:34:boolean isOutputShutdown() -> isOutputShutdown
    34:34:void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> removeHandshakeCompletedListener
    128:129:void setAlpnProtocols(java.lang.String[]) -> setAlpnProtocols
    143:144:void setAlpnProtocols(byte[]) -> setAlpnProtocols
    95:95:void setHandshakeTimeout(int) -> setHandshakeTimeout
    70:71:void setHostname(java.lang.String) -> setHostname
    34:34:void setKeepAlive(boolean) -> setKeepAlive
    122:123:void setNpnProtocols(byte[]) -> setNpnProtocols
    34:34:void setPerformancePreferences(int,int,int) -> setPerformancePreferences
    34:34:void setReceiveBufferSize(int) -> setReceiveBufferSize
    34:34:void setReuseAddress(boolean) -> setReuseAddress
    34:34:void setSendBufferSize(int) -> setSendBufferSize
    34:34:void setSoLinger(boolean,int) -> setSoLinger
    85:85:void setSoWriteTimeout(int) -> setSoWriteTimeout
    34:34:void setTcpNoDelay(boolean) -> setTcpNoDelay
    34:34:void setTrafficClass(int) -> setTrafficClass
    34:34:void shutdownInput() -> shutdownInput
    34:34:void shutdownOutput() -> shutdownOutput
    34:34:java.lang.String toString() -> toString
org.conscrypt.OpenSSLX509CRL -> org.conscrypt.OpenSSLX509CRL:
    54:60:void <init>(long) -> <init>
    407:411:void finalize() -> finalize
    88:96:java.util.List fromPkcs7DerInputStream(java.io.InputStream) -> fromPkcs7DerInputStream
    127:136:java.util.List fromPkcs7PemInputStream(java.io.InputStream) -> fromPkcs7PemInputStream
    71:82:org.conscrypt.OpenSSLX509CRL fromX509DerInputStream(java.io.InputStream) -> fromX509DerInputStream
    110:121:org.conscrypt.OpenSSLX509CRL fromX509PemInputStream(java.io.InputStream) -> fromX509PemInputStream
    151:165:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    209:209:byte[] getEncoded() -> getEncoded
    170:170:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    265:265:java.security.Principal getIssuerDN() -> getIssuerDN
    270:271:javax.security.auth.x500.X500Principal getIssuerX500Principal() -> getIssuerX500Principal
    281:281:java.util.Date getNextUpdate() -> getNextUpdate
    175:190:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    286:294:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger) -> getRevokedCertificate
    300:316:java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate) -> getRevokedCertificate
    321:323:java.util.Set getRevokedCertificates() -> getRevokedCertificates
    350:355:java.lang.String getSigAlgName() -> getSigAlgName
    360:360:java.lang.String getSigAlgOID() -> getSigAlgOID
    365:365:byte[] getSigAlgParams() -> getSigAlgParams
    345:345:byte[] getSignature() -> getSignature
    340:340:byte[] getTBSCertList() -> getTBSCertList
    276:276:java.util.Date getThisUpdate() -> getThisUpdate
    260:260:int getVersion() -> getVersion
    195:204:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    370:382:boolean isRevoked(java.security.cert.Certificate) -> isRevoked
    64:67:java.util.Date toDate(long) -> toDate
    394:400:java.lang.String toString() -> toString
    242:249:void verify(java.security.PublicKey) -> verify
    255:256:void verify(java.security.PublicKey,java.lang.String) -> verify
    220:235:void verifyInternal(java.security.PublicKey,java.lang.String) -> verifyInternal
    214:215:void verifyOpenSSL(org.conscrypt.OpenSSLKey) -> verifyOpenSSL
org.conscrypt.OpenSSLX509CRLEntry -> org.conscrypt.OpenSSLX509CRLEntry:
    36:41:void <init>(long) -> <init>
    45:60:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    105:105:byte[] getEncoded() -> getEncoded
    65:65:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    70:85:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    115:115:java.util.Date getRevocationDate() -> getRevocationDate
    110:110:java.math.BigInteger getSerialNumber() -> getSerialNumber
    120:120:boolean hasExtensions() -> hasExtensions
    90:100:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    128:134:java.lang.String toString() -> toString
org.conscrypt.OpenSSLX509CertPath -> org.conscrypt.OpenSSLX509CertPath:
    41:79:void <clinit>() -> <clinit>
    88:91:void <init>(java.util.List) -> <init>
    231:233:java.security.cert.CertPath fromEncoding(java.io.InputStream,org.conscrypt.OpenSSLX509CertPath$Encoding) -> fromEncoding
    243:244:java.security.cert.CertPath fromEncoding(java.io.InputStream,java.lang.String) -> fromEncoding
    256:257:java.security.cert.CertPath fromEncoding(java.io.InputStream) -> fromEncoding
    189:193:java.security.cert.CertPath fromPkcs7Encoding(java.io.InputStream) -> fromPkcs7Encoding
    145:164:java.security.cert.CertPath fromPkiPathEncoding(java.io.InputStream) -> fromPkiPathEncoding
    95:95:java.util.List getCertificates() -> getCertificates
    99:116:byte[] getEncoded(org.conscrypt.OpenSSLX509CertPath$Encoding) -> getEncoded
    126:126:byte[] getEncoded() -> getEncoded
    131:133:byte[] getEncoded(java.lang.String) -> getEncoded
    141:141:java.util.Iterator getEncodings() -> getEncodings
    84:84:java.util.Iterator getEncodingsIterator() -> getEncodingsIterator
org.conscrypt.OpenSSLX509CertPath$1 -> org.conscrypt.OpenSSLX509CertPath$1:
    114:114:void <clinit>() -> <clinit>
org.conscrypt.OpenSSLX509CertPath$Encoding -> org.conscrypt.OpenSSLX509CertPath$Encoding:
    52:51:void <clinit>() -> <clinit>
    57:59:void <init>(java.lang.String,int,java.lang.String) -> <init>
    51:51:java.lang.String access$000(org.conscrypt.OpenSSLX509CertPath$Encoding) -> access$000
    62:68:org.conscrypt.OpenSSLX509CertPath$Encoding findByApiName(java.lang.String) -> findByApiName
    51:51:org.conscrypt.OpenSSLX509CertPath$Encoding valueOf(java.lang.String) -> valueOf
    51:51:org.conscrypt.OpenSSLX509CertPath$Encoding[] values() -> values
org.conscrypt.OpenSSLX509Certificate -> org.conscrypt.OpenSSLX509Certificate:
    69:75:void <init>(long) -> <init>
    78:82:void <init>(long,java.util.Date,java.util.Date) -> <init>
    511:520:java.util.Collection alternativeNameArrayToList(java.lang.Object[][]) -> alternativeNameArrayToList
    253:254:void checkValidity() -> checkValidity
    259:261:void checkValidity(java.util.Date) -> checkValidity
    537:543:boolean equals(java.lang.Object) -> equals
    581:585:void finalize() -> finalize
    193:198:org.conscrypt.OpenSSLX509Certificate fromCertificate(java.security.cert.Certificate) -> fromCertificate
    121:129:java.util.List fromPkcs7DerInputStream(java.io.InputStream) -> fromPkcs7DerInputStream
    168:177:java.util.List fromPkcs7PemInputStream(java.io.InputStream) -> fromPkcs7PemInputStream
    112:114:org.conscrypt.OpenSSLX509Certificate fromX509Der(byte[]) -> fromX509Der
    94:105:org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream) -> fromX509DerInputStream
    150:161:org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream) -> fromX509PemInputStream
    358:367:int getBasicConstraints() -> getBasicConstraints
    562:562:long getContext() -> getContext
    204:218:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    372:372:byte[] getEncoded() -> getEncoded
    502:507:java.util.List getExtendedKeyUsage() -> getExtendedKeyUsage
    223:223:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    531:531:java.util.Collection getIssuerAlternativeNames() -> getIssuerAlternativeNames
    282:282:java.security.Principal getIssuerDN() -> getIssuerDN
    332:332:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    490:491:javax.security.auth.x500.X500Principal getIssuerX500Principal() -> getIssuerX500Principal
    342:353:boolean[] getKeyUsage() -> getKeyUsage
    228:242:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    297:297:java.util.Date getNotAfter() -> getNotAfter
    292:292:java.util.Date getNotBefore() -> getNotBefore
    465:485:java.security.PublicKey getPublicKey() -> getPublicKey
    277:277:java.math.BigInteger getSerialNumber() -> getSerialNumber
    312:317:java.lang.String getSigAlgName() -> getSigAlgName
    322:322:java.lang.String getSigAlgOID() -> getSigAlgOID
    327:327:byte[] getSigAlgParams() -> getSigAlgParams
    307:307:byte[] getSignature() -> getSignature
    525:525:java.util.Collection getSubjectAlternativeNames() -> getSubjectAlternativeNames
    287:287:java.security.Principal getSubjectDN() -> getSubjectDN
    337:337:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    496:497:javax.security.auth.x500.X500Principal getSubjectX500Principal() -> getSubjectX500Principal
    302:302:byte[] getTBSCertificate() -> getTBSCertificate
    272:272:int getVersion() -> getVersion
    247:247:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    548:552:int hashCode() -> hashCode
    85:88:java.util.Date toDate(long) -> toDate
    451:457:java.lang.String toString() -> toString
    407:414:void verify(java.security.PublicKey) -> verify
    420:421:void verify(java.security.PublicKey,java.lang.String) -> verify
    429:445:void verify(java.security.PublicKey,java.security.Provider) -> verify
    391:400:void verifyInternal(java.security.PublicKey,java.lang.String) -> verifyInternal
    379:381:void verifyOpenSSL(org.conscrypt.OpenSSLKey) -> verifyOpenSSL
    573:575:org.conscrypt.OpenSSLX509Certificate withDeletedExtension(java.lang.String) -> withDeletedExtension
org.conscrypt.OpenSSLX509CertificateFactory -> org.conscrypt.OpenSSLX509CertificateFactory:
    43:43:void <clinit>() -> <clinit>
    42:248:void <init>() -> <init>
    42:42:byte[] access$000() -> access$000
    297:299:java.security.cert.CRL engineGenerateCRL(java.io.InputStream) -> engineGenerateCRL
    305:312:java.util.Collection engineGenerateCRLs(java.io.InputStream) -> engineGenerateCRLs
    323:323:java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream) -> engineGenerateCertPath
    329:329:java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String) -> engineGenerateCertPath
    335:346:java.security.cert.CertPath engineGenerateCertPath(java.util.List) -> engineGenerateCertPath
    278:280:java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream) -> engineGenerateCertificate
    288:290:java.util.Collection engineGenerateCertificates(java.io.InputStream) -> engineGenerateCertificates
    318:318:java.util.Iterator engineGetCertPathEncodings() -> engineGetCertPathEncodings
org.conscrypt.OpenSSLX509CertificateFactory$1 -> org.conscrypt.OpenSSLX509CertificateFactory$1:
    222:222:void <init>(org.conscrypt.OpenSSLX509CertificateFactory) -> <init>
    244:244:java.util.List fromPkcs7DerInputStream(java.io.InputStream) -> fromPkcs7DerInputStream
    238:238:java.util.List fromPkcs7PemInputStream(java.io.InputStream) -> fromPkcs7PemInputStream
    222:222:java.lang.Object fromX509DerInputStream(java.io.InputStream) -> fromX509DerInputStream
    232:232:org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream) -> fromX509DerInputStream
    222:222:java.lang.Object fromX509PemInputStream(java.io.InputStream) -> fromX509PemInputStream
    226:226:org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream) -> fromX509PemInputStream
org.conscrypt.OpenSSLX509CertificateFactory$2 -> org.conscrypt.OpenSSLX509CertificateFactory$2:
    249:249:void <init>(org.conscrypt.OpenSSLX509CertificateFactory) -> <init>
    271:271:java.util.List fromPkcs7DerInputStream(java.io.InputStream) -> fromPkcs7DerInputStream
    265:265:java.util.List fromPkcs7PemInputStream(java.io.InputStream) -> fromPkcs7PemInputStream
    249:249:java.lang.Object fromX509DerInputStream(java.io.InputStream) -> fromX509DerInputStream
    259:259:org.conscrypt.OpenSSLX509CRL fromX509DerInputStream(java.io.InputStream) -> fromX509DerInputStream
    249:249:java.lang.Object fromX509PemInputStream(java.io.InputStream) -> fromX509PemInputStream
    253:253:org.conscrypt.OpenSSLX509CRL fromX509PemInputStream(java.io.InputStream) -> fromX509PemInputStream
org.conscrypt.OpenSSLX509CertificateFactory$Parser -> org.conscrypt.OpenSSLX509CertificateFactory$Parser:
    70:70:void <init>() -> <init>
    70:70:void <init>(org.conscrypt.OpenSSLX509CertificateFactory$1) -> <init>
    72:73:java.lang.Object generateItem(java.io.InputStream) -> generateItem
    127:128:java.util.Collection generateItems(java.io.InputStream) -> generateItems
org.conscrypt.OpenSSLX509CertificateFactory$ParsingException -> org.conscrypt.OpenSSLX509CertificateFactory$ParsingException:
    53:54:void <init>(java.lang.String) -> <init>
    57:58:void <init>(java.lang.Exception) -> <init>
    61:62:void <init>(java.lang.String,java.lang.Exception) -> <init>
org.conscrypt.PSSParameters -> org.conscrypt.PSSParameters:
    33:35:void <init>() -> <init>
    115:140:byte[] engineGetEncoded() -> engineGetEncoded
    146:147:byte[] engineGetEncoded(java.lang.String) -> engineGetEncoded
    106:109:java.security.spec.AlgorithmParameterSpec engineGetParameterSpec(java.lang.Class) -> engineGetParameterSpec
    40:43:void engineInit(java.security.spec.AlgorithmParameterSpec) -> engineInit
    49:89:void engineInit(byte[]) -> engineInit
    95:100:void engineInit(byte[],java.lang.String) -> engineInit
    154:154:java.lang.String engineToString() -> engineToString
org.conscrypt.PeerInfoProvider -> org.conscrypt.PeerInfoProvider:
    22:22:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    61:61:org.conscrypt.PeerInfoProvider forHostAndPort(java.lang.String,int) -> forHostAndPort
    57:57:org.conscrypt.PeerInfoProvider nullProvider() -> nullProvider
org.conscrypt.PeerInfoProvider$1 -> org.conscrypt.PeerInfoProvider$1:
    22:22:void <init>() -> <init>
    25:25:java.lang.String getHostname() -> getHostname
    30:30:java.lang.String getHostnameOrIP() -> getHostnameOrIP
    35:35:int getPort() -> getPort
org.conscrypt.PeerInfoProvider$2 -> org.conscrypt.PeerInfoProvider$2:
    61:61:void <init>(java.lang.String,int) -> <init>
    64:64:java.lang.String getHostname() -> getHostname
    69:69:java.lang.String getHostnameOrIP() -> getHostnameOrIP
    74:74:int getPort() -> getPort
org.conscrypt.Platform -> org.conscrypt.Platform:
    70:74:void <clinit>() -> <clinit>
    76:76:void <init>() -> <init>
    811:812:void blockGuardOnNetwork() -> blockGuardOnNetwork
    398:403:void checkClientTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.AbstractConscryptSocket) -> checkClientTrusted
    418:423:void checkClientTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.ConscryptEngine) -> checkClientTrusted
    408:413:void checkServerTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.AbstractConscryptSocket) -> checkServerTrusted
    428:433:void checkServerTrusted(javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,org.conscrypt.ConscryptEngine) -> checkServerTrusted
    380:392:boolean checkTrusted(java.lang.String,javax.net.ssl.X509TrustManager,java.security.cert.X509Certificate[],java.lang.String,java.lang.Class,java.lang.Object) -> checkTrusted
    789:795:void closeGuardClose(java.lang.Object) -> closeGuardClose
    772:776:dalvik.system.CloseGuard closeGuardGet() -> closeGuardGet
    780:786:void closeGuardOpen(java.lang.Object,java.lang.String) -> closeGuardOpen
    798:804:void closeGuardWarnIfOpen(java.lang.Object) -> closeGuardWarnIfOpen
    570:573:org.conscrypt.ConscryptEngineSocket createEngineSocket(org.conscrypt.SSLParametersImpl) -> createEngineSocket
    578:581:org.conscrypt.ConscryptEngineSocket createEngineSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> createEngineSocket
    586:589:org.conscrypt.ConscryptEngineSocket createEngineSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> createEngineSocket
    595:598:org.conscrypt.ConscryptEngineSocket createEngineSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> createEngineSocket
    604:607:org.conscrypt.ConscryptEngineSocket createEngineSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> createEngineSocket
    612:615:org.conscrypt.ConscryptEngineSocket createEngineSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl) -> createEngineSocket
    620:623:org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(org.conscrypt.SSLParametersImpl) -> createFileDescriptorSocket
    628:631:org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.lang.String,int,org.conscrypt.SSLParametersImpl) -> createFileDescriptorSocket
    636:639:org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> createFileDescriptorSocket
    645:649:org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.lang.String,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> createFileDescriptorSocket
    656:660:org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.net.InetAddress,int,java.net.InetAddress,int,org.conscrypt.SSLParametersImpl) -> createFileDescriptorSocket
    666:669:org.conscrypt.ConscryptFileDescriptorSocket createFileDescriptorSocket(java.net.Socket,java.lang.String,int,boolean,org.conscrypt.SSLParametersImpl) -> createFileDescriptorSocket
    691:716:org.conscrypt.GCMParameters fromGCMParameterSpec(java.security.spec.AlgorithmParameterSpec) -> fromGCMParameterSpec
    726:738:java.security.spec.AlgorithmParameterSpec fromGCMParameters(java.security.AlgorithmParameters) -> fromGCMParameters
    352:358:java.lang.Class getClass(java.lang.String[]) -> getClass
    106:112:java.lang.String getCurveName(java.security.spec.ECParameterSpec) -> getCurveName
    972:976:java.security.KeyStore getDefaultCertKeyStore() -> getDefaultCertKeyStore
    85:85:java.lang.String getDefaultProviderName() -> getDefaultProviderName
    368:368:java.lang.String getEndpointIdentificationAlgorithm(javax.net.ssl.SSLParameters) -> getEndpointIdentificationAlgorithm
    90:97:java.io.FileDescriptor getFileDescriptor(java.net.Socket) -> getFileDescriptor
    102:102:java.io.FileDescriptor getFileDescriptorFromSSLSocket(org.conscrypt.AbstractConscryptSocket) -> getFileDescriptorFromSSLSocket
    905:914:java.lang.String getHostStringFromInetSocketAddress(java.net.InetSocketAddress) -> getHostStringFromInetSocketAddress
    874:897:java.lang.String getOriginalHostNameFromInetAddress(java.net.InetAddress) -> getOriginalHostNameFromInetAddress
    297:307:void getSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.AbstractConscryptSocket) -> getSSLParameters
    324:334:void getSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine) -> getSSLParameters
    284:292:void getSSLParametersFromImpl(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl) -> getSSLParametersFromImpl
    268:279:java.lang.String getSniHostnameFromParams(javax.net.ssl.SSLParameters) -> getSniHostnameFromParams
    934:941:boolean isCTVerificationRequired(java.lang.String) -> isCTVerificationRequired
    550:555:boolean isLiteralIpAddress(java.lang.String) -> isLiteralIpAddress
    529:543:void logEvent(java.lang.String) -> logEvent
    211:216:void logStackTraceSnippet(java.lang.String,java.lang.Throwable) -> logStackTraceSnippet
    990:990:org.conscrypt.CertBlacklist newDefaultBlacklist() -> newDefaultBlacklist
    986:986:org.conscrypt.ConscryptCertStore newDefaultCertStore() -> newDefaultCertStore
    994:994:org.conscrypt.ct.CTLogStore newDefaultLogStore() -> newDefaultLogStore
    998:998:org.conscrypt.ct.CTPolicy newDefaultPolicy(org.conscrypt.ct.CTLogStore) -> newDefaultPolicy
    821:830:java.lang.String oidToAlgorithmName(java.lang.String) -> oidToAlgorithmName
    118:122:void setCurveName(java.security.spec.ECParameterSpec,java.lang.String) -> setCurveName
    364:364:void setEndpointIdentificationAlgorithm(javax.net.ssl.SSLParameters,java.lang.String) -> setEndpointIdentificationAlgorithm
    313:319:void setParametersSniHostname(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.AbstractConscryptSocket) -> setParametersSniHostname
    340:346:void setParametersSniHostname(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine) -> setParametersSniHostname
    232:245:void setSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.AbstractConscryptSocket) -> setSSLParameters
    250:263:void setSSLParameters(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl,org.conscrypt.ConscryptEngine) -> setSSLParameters
    220:227:void setSSLParametersOnImpl(javax.net.ssl.SSLParameters,org.conscrypt.SSLParametersImpl) -> setSSLParametersOnImpl
    129:205:void setSocketWriteTimeout(java.net.Socket,long) -> setSocketWriteTimeout
    78:78:void setup() -> setup
    968:968:boolean supportsConscryptCertStore() -> supportsConscryptCertStore
    748:764:java.security.spec.AlgorithmParameterSpec toGCMParameterSpec(int,byte[]) -> toGCMParameterSpec
    565:565:javax.net.ssl.SSLEngine unwrapEngine(javax.net.ssl.SSLEngine) -> unwrapEngine
    560:560:javax.net.ssl.SSLEngine wrapEngine(org.conscrypt.ConscryptEngine) -> wrapEngine
    443:458:org.conscrypt.OpenSSLKey wrapRsaKey(java.security.PrivateKey) -> wrapRsaKey
    866:870:javax.net.ssl.SSLSession wrapSSLSession(org.conscrypt.ConscryptSession) -> wrapSSLSession
    676:681:javax.net.ssl.SSLSocketFactory wrapSocketFactoryIfNeeded(org.conscrypt.OpenSSLSocketFactoryImpl) -> wrapSocketFactoryIfNeeded
org.conscrypt.PreKitKatPlatformOpenSSLSocketAdapterFactory -> org.conscrypt.PreKitKatPlatformOpenSSLSocketAdapterFactory:
    28:29:void <init>(org.conscrypt.OpenSSLSocketFactoryImpl) -> <init>
    33:33:java.net.Socket wrap(org.conscrypt.OpenSSLSocketImpl) -> wrap
org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter -> org.conscrypt.PreKitKatPlatformOpenSSLSocketImplAdapter:
    52:54:void <init>(org.conscrypt.AbstractConscryptSocket) -> <init>
    313:314:void addHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> addHandshakeCompletedListener
    96:97:void bind(java.net.SocketAddress) -> bind
    381:381:void clientCertificateRequested(byte[],byte[][]) -> clientCertificateRequested
    61:62:void close() -> close
    86:87:void connect(java.net.SocketAddress,int) -> connect
    91:92:void connect(java.net.SocketAddress) -> connect
    448:448:byte[] getAlpnSelectedProtocol() -> getAlpnSelectedProtocol
    262:262:java.nio.channels.SocketChannel getChannel() -> getChannel
    412:412:byte[] getChannelId() -> getChannelId
    364:364:boolean getEnableSessionCreation() -> getEnableSessionCreation
    284:284:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    298:298:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    267:267:java.io.FileDescriptor getFileDescriptor$() -> getFileDescriptor$
    116:116:java.net.InetAddress getInetAddress() -> getInetAddress
    66:66:java.io.InputStream getInputStream() -> getInputStream
    179:179:boolean getKeepAlive() -> getKeepAlive
    111:111:java.net.InetAddress getLocalAddress() -> getLocalAddress
    71:71:int getLocalPort() -> getLocalPort
    106:106:java.net.SocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    349:349:boolean getNeedClientAuth() -> getNeedClientAuth
    437:437:byte[] getNpnSelectedProtocol() -> getNpnSelectedProtocol
    247:247:boolean getOOBInline() -> getOOBInline
    76:76:java.io.OutputStream getOutputStream() -> getOutputStream
    81:81:int getPort() -> getPort
    202:202:int getReceiveBufferSize() -> getReceiveBufferSize
    101:101:java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    174:174:boolean getReuseAddress() -> getReuseAddress
    369:369:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    196:196:int getSendBufferSize() -> getSendBufferSize
    308:308:javax.net.ssl.SSLSession getSession() -> getSession
    190:190:int getSoLinger() -> getSoLinger
    185:185:int getSoTimeout() -> getSoTimeout
    427:427:int getSoWriteTimeout() -> getSoWriteTimeout
    279:279:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    294:294:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    169:169:boolean getTcpNoDelay() -> getTcpNoDelay
    252:252:int getTrafficClass() -> getTrafficClass
    334:334:boolean getUseClientMode() -> getUseClientMode
    354:354:boolean getWantClientAuth() -> getWantClientAuth
    386:386:void handshakeCompleted() -> handshakeCompleted
    217:217:boolean isBound() -> isBound
    212:212:boolean isClosed() -> isClosed
    207:207:boolean isConnected() -> isConnected
    227:227:boolean isInputShutdown() -> isInputShutdown
    222:222:boolean isOutputShutdown() -> isOutputShutdown
    318:319:void removeHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener) -> removeHandshakeCompletedListener
    257:258:void sendUrgentData(int) -> sendUrgentData
    452:453:void setAlpnProtocols(byte[]) -> setAlpnProtocols
    407:408:void setChannelIdEnabled(boolean) -> setChannelIdEnabled
    417:418:void setChannelIdPrivateKey(java.security.PrivateKey) -> setChannelIdPrivateKey
    359:360:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    289:290:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    303:304:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    432:433:void setHandshakeTimeout(int) -> setHandshakeTimeout
    402:403:void setHostname(java.lang.String) -> setHostname
    141:142:void setKeepAlive(boolean) -> setKeepAlive
    339:340:void setNeedClientAuth(boolean) -> setNeedClientAuth
    442:443:void setNpnProtocols(byte[]) -> setNpnProtocols
    242:243:void setOOBInline(boolean) -> setOOBInline
    272:273:void setPerformancePreferences(int,int,int) -> setPerformancePreferences
    164:165:void setReceiveBufferSize(int) -> setReceiveBufferSize
    136:137:void setReuseAddress(boolean) -> setReuseAddress
    374:375:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    158:159:void setSendBufferSize(int) -> setSendBufferSize
    126:127:void setSoLinger(boolean,int) -> setSoLinger
    152:153:void setSoTimeout(int) -> setSoTimeout
    422:423:void setSoWriteTimeout(int) -> setSoWriteTimeout
    131:132:void setTcpNoDelay(boolean) -> setTcpNoDelay
    146:147:void setTrafficClass(int) -> setTrafficClass
    329:330:void setUseClientMode(boolean) -> setUseClientMode
    397:398:void setUseSessionTickets(boolean) -> setUseSessionTickets
    344:345:void setWantClientAuth(boolean) -> setWantClientAuth
    232:233:void shutdownInput() -> shutdownInput
    237:238:void shutdownOutput() -> shutdownOutput
    324:325:void startHandshake() -> startHandshake
    121:121:java.lang.String toString() -> toString
    392:392:void verifyCertificateChain(byte[][],java.lang.String) -> verifyCertificateChain
org.conscrypt.Preconditions -> org.conscrypt.Preconditions:
    24:24:void <init>() -> <init>
    100:103:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    89:90:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    49:50:void checkArgument(boolean,java.lang.String) -> checkArgument
    64:65:void checkArgument(boolean,java.lang.String,java.lang.Object) -> checkArgument
    35:36:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    83:84:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
org.conscrypt.R -> org.conscrypt.R:
    10:10:void <init>() -> <init>
org.conscrypt.SSLNullSession -> org.conscrypt.SSLNullSession:
    35:35:void <init>(org.conscrypt.SSLNullSession$1) -> <init>
    57:60:void <init>() -> <init>
    79:79:int getApplicationBufferSize() -> getApplicationBufferSize
    84:84:java.lang.String getCipherSuite() -> getCipherSuite
    89:89:long getCreationTime() -> getCreationTime
    94:94:byte[] getId() -> getId
    99:99:long getLastAccessedTime() -> getLastAccessedTime
    104:104:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    109:109:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    50:50:org.conscrypt.ConscryptSession getNullSession() -> getNullSession
    114:114:int getPacketBufferSize() -> getPacketBufferSize
    120:120:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    35:35:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    125:125:java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    130:130:java.lang.String getPeerHost() -> getPeerHost
    135:135:int getPeerPort() -> getPeerPort
    140:140:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    74:74:byte[] getPeerSignedCertificateTimestamp() -> getPeerSignedCertificateTimestamp
    145:145:java.lang.String getProtocol() -> getProtocol
    64:64:java.lang.String getRequestedServerName() -> getRequestedServerName
    150:150:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    69:69:java.util.List getStatusResponses() -> getStatusResponses
    155:155:java.lang.Object getValue(java.lang.String) -> getValue
    161:161:java.lang.String[] getValueNames() -> getValueNames
    167:167:void invalidate() -> invalidate
    54:54:boolean isNullSession(javax.net.ssl.SSLSession) -> isNullSession
    171:171:boolean isValid() -> isValid
    176:176:void putValue(java.lang.String,java.lang.Object) -> putValue
    182:182:void removeValue(java.lang.String) -> removeValue
org.conscrypt.SSLNullSession$DefaultHolder -> org.conscrypt.SSLNullSession$DefaultHolder:
    43:43:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
org.conscrypt.SSLParametersImpl -> org.conscrypt.SSLParametersImpl:
    410:410:void <clinit>() -> <clinit>
    120:151:void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom,org.conscrypt.ClientSessionContext,org.conscrypt.ServerSessionContext,java.lang.String[]) -> <init>
    463:465:java.lang.Object clone() -> clone
    479:490:javax.net.ssl.X509KeyManager createDefaultX509KeyManager() -> createDefaultX509KeyManager
    547:559:javax.net.ssl.X509TrustManager createDefaultX509TrustManager() -> createDefaultX509TrustManager
    398:399:java.lang.String[] filterFromCipherSuites(java.lang.String[],java.util.Set) -> filterFromCipherSuites
    384:394:java.lang.String[] filterFromProtocols(java.lang.String[],java.lang.String) -> filterFromProtocols
    519:528:org.conscrypt.PSKKeyManager findFirstPSKKeyManager(javax.net.ssl.KeyManager[]) -> findFirstPSKKeyManager
    504:509:javax.net.ssl.X509KeyManager findFirstX509KeyManager(javax.net.ssl.KeyManager[]) -> findFirstX509KeyManager
    572:577:javax.net.ssl.X509TrustManager findFirstX509TrustManager(javax.net.ssl.TrustManager[]) -> findFirstX509TrustManager
    257:257:java.lang.String[] getApplicationProtocols() -> getApplicationProtocols
    178:178:org.conscrypt.ClientSessionContext getClientSessionContext() -> getClientSessionContext
    154:164:org.conscrypt.SSLParametersImpl getDefault() -> getDefault
    599:625:java.lang.String[] getDefaultCipherSuites(boolean,boolean) -> getDefaultCipherSuites
    470:475:javax.net.ssl.X509KeyManager getDefaultX509KeyManager() -> getDefaultX509KeyManager
    536:541:javax.net.ssl.X509TrustManager getDefaultX509TrustManager() -> getDefaultX509TrustManager
    331:331:boolean getEnableSessionCreation() -> getEnableSessionCreation
    207:211:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    230:230:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    581:581:java.lang.String getEndpointIdentificationAlgorithm() -> getEndpointIdentificationAlgorithm
    298:298:boolean getNeedClientAuth() -> getNeedClientAuth
    376:376:byte[] getOCSPResponse() -> getOCSPResponse
    193:193:org.conscrypt.PSKKeyManager getPSKKeyManager() -> getPSKKeyManager
    171:171:org.conscrypt.AbstractSessionContext getSessionContext() -> getSessionContext
    589:589:boolean getUseCipherSuitesOrder() -> getUseCipherSuitesOrder
    281:281:boolean getUseClientMode() -> getUseClientMode
    351:351:boolean getUseSni() -> getUseSni
    315:315:boolean getWantClientAuth() -> getWantClientAuth
    185:185:javax.net.ssl.X509KeyManager getX509KeyManager() -> getX509KeyManager
    200:200:javax.net.ssl.X509TrustManager getX509TrustManager() -> getX509TrustManager
    633:641:boolean isCTVerificationEnabled(java.lang.String) -> isCTVerificationEnabled
    418:428:boolean isSniEnabledByDefault() -> isSniEnabledByDefault
    265:266:void setApplicationProtocolSelector(org.conscrypt.ApplicationProtocolSelectorAdapter) -> setApplicationProtocolSelector
    253:254:void setApplicationProtocols(java.lang.String[]) -> setApplicationProtocols
    358:359:void setCTVerificationEnabled(boolean) -> setCTVerificationEnabled
    323:324:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    221:224:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    238:239:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    585:586:void setEndpointIdentificationAlgorithm(java.lang.String) -> setEndpointIdentificationAlgorithm
    288:291:void setNeedClientAuth(boolean) -> setNeedClientAuth
    372:373:void setOCSPResponse(byte[]) -> setOCSPResponse
    365:366:void setSCTExtension(byte[]) -> setSCTExtension
    593:594:void setUseCipherSuitesOrder(boolean) -> setUseCipherSuitesOrder
    273:274:void setUseClientMode(boolean) -> setUseClientMode
    335:336:void setUseSessionTickets(boolean) -> setUseSessionTickets
    343:344:void setUseSni(boolean) -> setUseSni
    305:308:void setWantClientAuth(boolean) -> setWantClientAuth
org.conscrypt.SSLUtils -> org.conscrypt.SSLUtils:
    65:69:void <clinit>() -> <clinit>
    592:592:void <init>() -> <init>
    361:361:int calculateOutNetBufSize(int) -> calculateOutNetBufSize
    579:589:java.lang.String[] concat(java.lang.String[][]) -> concat
    408:435:java.lang.String[] decodeProtocols(byte[]) -> decodeProtocols
    214:218:java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[]) -> decodeX509Certificate
    195:201:java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][]) -> decodeX509CertificateChain
    448:449:byte[] encodeProtocols(java.lang.String[]) -> encodeProtocols
    324:328:byte[][] encodeSubjectX509Principals(java.security.cert.X509Certificate[]) -> encodeSubjectX509Principals
    206:208:java.security.cert.CertificateFactory getCertificateFactory() -> getCertificateFactory
    248:250:java.lang.String getClientKeyType(byte) -> getClientKeyType
    261:263:java.lang.String getClientKeyTypeFromSignatureAlg(int) -> getClientKeyTypeFromSignatureAlg
    509:531:int getEncryptedPacketLength(java.nio.ByteBuffer[],int) -> getEncryptedPacketLength
    541:567:int getEncryptedPacketLength(java.nio.ByteBuffer) -> getEncryptedPacketLength
    227:229:java.lang.String getServerX509KeyType(long) -> getServerX509KeyType
    290:318:java.util.Set getSupportedClientKeyTypes(byte[],int[]) -> getSupportedClientKeyTypes
    337:348:javax.security.cert.X509Certificate[] toCertificateChain(java.security.cert.X509Certificate[]) -> toCertificateChain
    394:397:byte[] toProtocolBytes(java.lang.String) -> toProtocolBytes
    387:390:java.lang.String toProtocolString(byte[]) -> toProtocolString
    380:383:javax.net.ssl.SSLException toSSLException(java.lang.Throwable) -> toSSLException
    369:373:javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable) -> toSSLHandshakeException
    571:571:short unsignedByte(byte) -> unsignedByte
    575:575:int unsignedShort(short) -> unsignedShort
    187:190:javax.net.ssl.SSLSession unwrapSession(javax.net.ssl.SSLSession) -> unwrapSession
org.conscrypt.SSLUtils$EngineStates -> org.conscrypt.SSLUtils$EngineStates:
    104:104:void <init>() -> <init>
org.conscrypt.SSLUtils$SessionType -> org.conscrypt.SSLUtils$SessionType:
    76:72:void <clinit>() -> <clinit>
    88:90:void <init>(java.lang.String,int,int) -> <init>
    93:93:boolean isSupportedType(int) -> isSupportedType
    72:72:org.conscrypt.SSLUtils$SessionType valueOf(java.lang.String) -> valueOf
    72:72:org.conscrypt.SSLUtils$SessionType[] values() -> values
org.conscrypt.ServerSessionContext -> org.conscrypt.ServerSessionContext:
    32:48:void <init>() -> <init>
    60:71:org.conscrypt.NativeSslSession getSessionFromPersistentCache(byte[]) -> getSessionFromPersistentCache
    77:83:void onBeforeAddSession(org.conscrypt.NativeSslSession) -> onBeforeAddSession
    88:88:void onBeforeRemoveSession(org.conscrypt.NativeSslSession) -> onBeforeRemoveSession
    55:56:void setPersistentCache(org.conscrypt.SSLServerSessionCache) -> setPersistentCache
org.conscrypt.SessionSnapshot -> org.conscrypt.SessionSnapshot:
    44:56:void <init>(org.conscrypt.ConscryptSession) -> <init>
    184:184:int getApplicationBufferSize() -> getApplicationBufferSize
    159:159:java.lang.String getCipherSuite() -> getCipherSuite
    89:89:long getCreationTime() -> getCreationTime
    79:79:byte[] getId() -> getId
    94:94:long getLastAccessedTime() -> getLastAccessedTime
    138:138:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    154:154:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    179:179:int getPacketBufferSize() -> getPacketBufferSize
    144:144:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    31:31:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    133:133:java.security.cert.X509Certificate[] getPeerCertificates() -> getPeerCertificates
    169:169:java.lang.String getPeerHost() -> getPeerHost
    174:174:int getPeerPort() -> getPeerPort
    149:149:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    74:74:byte[] getPeerSignedCertificateTimestamp() -> getPeerSignedCertificateTimestamp
    164:164:java.lang.String getProtocol() -> getProtocol
    60:60:java.lang.String getRequestedServerName() -> getRequestedServerName
    84:84:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    65:69:java.util.List getStatusResponses() -> getStatusResponses
    115:115:java.lang.Object getValue(java.lang.String) -> getValue
    127:127:java.lang.String[] getValueNames() -> getValueNames
    100:100:void invalidate() -> invalidate
    104:104:boolean isValid() -> isValid
    109:109:void putValue(java.lang.String,java.lang.Object) -> putValue
    121:121:void removeValue(java.lang.String) -> removeValue
org.conscrypt.TrustManagerFactoryImpl -> org.conscrypt.TrustManagerFactoryImpl:
    52:52:void <init>() -> <init>
    83:84:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    61:66:void engineInit(java.security.KeyStore) -> engineInit
    74:74:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
org.conscrypt.TrustManagerImpl -> org.conscrypt.TrustManagerImpl:
    93:93:void <clinit>() -> <clinit>
    149:150:void <init>(java.security.KeyStore) -> <init>
    153:154:void <init>(java.security.KeyStore,org.conscrypt.CertPinManager) -> <init>
    158:159:void <init>(java.security.KeyStore,org.conscrypt.CertPinManager,org.conscrypt.ConscryptCertStore) -> <init>
    164:165:void <init>(java.security.KeyStore,org.conscrypt.CertPinManager,org.conscrypt.ConscryptCertStore,org.conscrypt.CertBlacklist) -> <init>
    172:227:void <init>(java.security.KeyStore,org.conscrypt.CertPinManager,org.conscrypt.ConscryptCertStore,org.conscrypt.CertBlacklist,org.conscrypt.ct.CTLogStore,org.conscrypt.ct.CTVerifier,org.conscrypt.ct.CTPolicy) -> <init>
    240:250:java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore) -> acceptedIssuers
    714:717:void checkBlacklist(java.security.cert.X509Certificate) -> checkBlacklist
    721:726:void checkCT(java.lang.String,java.util.List,byte[],byte[]) -> checkCT
    265:266:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    273:273:java.util.List checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String) -> checkClientTrusted
    289:297:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket) -> checkClientTrusted
    302:304:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine) -> checkClientTrusted
    312:313:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    320:320:java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String) -> checkServerTrusted
    359:360:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket) -> checkServerTrusted
    365:366:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine) -> checkServerTrusted
    376:376:java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession) -> checkServerTrusted
    390:409:java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLSession,javax.net.ssl.SSLParameters,boolean) -> checkTrusted
    469:470:java.util.List checkTrusted(java.security.cert.X509Certificate[],byte[],byte[],java.lang.String,java.lang.String,boolean) -> checkTrusted
    521:641:java.util.List checkTrustedRecursive(java.security.cert.X509Certificate[],byte[],byte[],java.lang.String,boolean,java.util.ArrayList,java.util.ArrayList,java.util.Set) -> checkTrustedRecursive
    908:911:java.util.Set findAllTrustAnchorsByIssuerAndSignature(java.security.cert.X509Certificate) -> findAllTrustAnchorsByIssuerAndSignature
    930:951:java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate) -> findTrustAnchorBySubjectAndPublicKey
    956:956:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    279:281:javax.net.ssl.SSLSession getHandshakeSessionOrThrow(javax.net.ssl.SSLSocket) -> getHandshakeSessionOrThrow
    413:436:byte[] getOcspDataFromSession(javax.net.ssl.SSLSession) -> getOcspDataFromSession
    443:463:byte[] getTlsSctDataFromSession(javax.net.ssl.SSLSession) -> getTlsSctDataFromSession
    331:338:java.util.List getTrustedChainForServer(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket) -> getTrustedChainForServer
    348:350:java.util.List getTrustedChainForServer(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine) -> getTrustedChainForServer
    380:385:void handleTrustStorageUpdate() -> handleTrustStorageUpdate
    960:961:void setCTEnabledOverride(boolean) -> setCTEnabledOverride
    970:971:void setCTPolicy(org.conscrypt.ct.CTPolicy) -> setCTPolicy
    965:966:void setCTVerifier(org.conscrypt.ct.CTVerifier) -> setCTVerifier
    735:770:void setOcspResponses(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,byte[]) -> setOcspResponses
    778:783:java.util.Collection sortPotentialAnchors(java.util.Set) -> sortPotentialAnchors
    255:259:java.util.Set trustAnchors(java.security.cert.X509Certificate[]) -> trustAnchors
    652:656:java.util.List verifyChain(java.util.List,java.util.List,java.lang.String,boolean,byte[],byte[]) -> verifyChain
org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker -> org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker:
    818:818:void <clinit>() -> <clinit>
    808:808:void <init>(boolean,java.security.cert.X509Certificate,org.conscrypt.TrustManagerImpl$1) -> <init>
    824:827:void <init>(boolean,java.security.cert.X509Certificate) -> <init>
    848:856:void check(java.security.cert.Certificate,java.util.Collection) -> check
    840:840:java.util.Set getSupportedExtensions() -> getSupportedExtensions
    831:831:void init(boolean) -> init
    835:835:boolean isForwardCheckingSupported() -> isForwardCheckingSupported
org.conscrypt.TrustManagerImpl$TrustAnchorComparator -> org.conscrypt.TrustManagerImpl$TrustAnchorComparator:
    791:791:void <clinit>() -> <clinit>
    790:790:void <init>() -> <init>
    790:790:void <init>(org.conscrypt.TrustManagerImpl$1) -> <init>
    790:790:int compare(java.lang.Object,java.lang.Object) -> compare
    795:797:int compare(java.security.cert.TrustAnchor,java.security.cert.TrustAnchor) -> compare
org.conscrypt.TrustedCertificateIndex -> org.conscrypt.TrustedCertificateIndex:
    45:45:void <init>() -> <init>
    47:49:void <init>(java.util.Set) -> <init>
    177:203:java.util.Set findAllByIssuerAndSignature(java.security.cert.X509Certificate) -> findAllByIssuerAndSignature
    105:126:java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    131:138:java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate) -> findBySubjectAndPublicKey
    143:173:java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate,java.util.Collection) -> findBySubjectAndPublicKey
    52:55:void index(java.util.Set) -> index
    58:60:java.security.cert.TrustAnchor index(java.security.cert.X509Certificate) -> index
    65:88:void index(java.security.cert.TrustAnchor) -> index
    92:94:void reset() -> reset
    98:101:void reset(java.util.Set) -> reset
org.conscrypt.X509PublicKey -> org.conscrypt.X509PublicKey:
    33:36:void <init>(java.lang.String,byte[]) -> <init>
    70:84:boolean equals(java.lang.Object) -> equals
    40:40:java.lang.String getAlgorithm() -> getAlgorithm
    50:50:byte[] getEncoded() -> getEncoded
    45:45:java.lang.String getFormat() -> getFormat
    61:65:int hashCode() -> hashCode
    55:55:java.lang.String toString() -> toString
org.conscrypt.ct.CTConstants -> org.conscrypt.ct.CTConstants:
    25:25:void <init>() -> <init>
org.conscrypt.ct.CTLogInfo -> org.conscrypt.ct.CTLogInfo:
    42:48:void <init>(java.security.PublicKey,java.lang.String,java.lang.String) -> <init>
    77:85:boolean equals(java.lang.Object) -> equals
    68:68:java.lang.String getDescription() -> getDescription
    60:60:byte[] getID() -> getID
    64:64:java.security.PublicKey getPublicKey() -> getPublicKey
    72:72:java.lang.String getUrl() -> getUrl
    93:98:int hashCode() -> hashCode
    109:117:org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry) -> verifySingleSCT
org.conscrypt.ct.CTVerificationResult -> org.conscrypt.ct.CTVerificationResult:
    28:30:void <init>() -> <init>
    33:38:void add(org.conscrypt.ct.VerifiedSCT) -> add
    45:45:java.util.List getInvalidSCTs() -> getInvalidSCTs
    41:41:java.util.List getValidSCTs() -> getValidSCTs
org.conscrypt.ct.CTVerifier -> org.conscrypt.ct.CTVerifier:
    36:38:void <init>(org.conscrypt.ct.CTLogStore) -> <init>
    217:218:java.util.List getSCTsFromOCSPResponse(byte[],org.conscrypt.OpenSSLX509Certificate[]) -> getSCTsFromOCSPResponse
    170:179:java.util.List getSCTsFromSCTList(byte[],org.conscrypt.ct.SignedCertificateTimestamp$Origin) -> getSCTsFromSCTList
    203:203:java.util.List getSCTsFromTLSExtension(byte[]) -> getSCTsFromTLSExtension
    245:256:java.util.List getSCTsFromX509Extension(org.conscrypt.OpenSSLX509Certificate) -> getSCTsFromX509Extension
    156:159:void markSCTsAsInvalid(java.util.List,org.conscrypt.ct.CTVerificationResult) -> markSCTsAsInvalid
    84:109:void verifyEmbeddedSCTs(java.util.List,org.conscrypt.OpenSSLX509Certificate[],org.conscrypt.ct.CTVerificationResult) -> verifyEmbeddedSCTs
    120:129:void verifyExternalSCTs(java.util.List,org.conscrypt.OpenSSLX509Certificate,org.conscrypt.ct.CTVerificationResult) -> verifyExternalSCTs
    42:47:org.conscrypt.ct.CTVerificationResult verifySignedCertificateTimestamps(java.util.List,byte[],byte[]) -> verifySignedCertificateTimestamps
    58:59:org.conscrypt.ct.CTVerificationResult verifySignedCertificateTimestamps(org.conscrypt.OpenSSLX509Certificate[],byte[],byte[]) -> verifySignedCertificateTimestamps
    143:148:org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry) -> verifySingleSCT
org.conscrypt.ct.CertificateEntry -> org.conscrypt.ct.CertificateEntry:
    60:74:void <init>(org.conscrypt.ct.CertificateEntry$LogEntryType,byte[],byte[]) -> <init>
    80:80:org.conscrypt.ct.CertificateEntry createForPrecertificate(byte[],byte[]) -> createForPrecertificate
    86:101:org.conscrypt.ct.CertificateEntry createForPrecertificate(org.conscrypt.OpenSSLX509Certificate,org.conscrypt.OpenSSLX509Certificate) -> createForPrecertificate
    106:106:org.conscrypt.ct.CertificateEntry createForX509Certificate(byte[]) -> createForX509Certificate
    111:111:org.conscrypt.ct.CertificateEntry createForX509Certificate(java.security.cert.X509Certificate) -> createForX509Certificate
    128:133:void encode(java.io.OutputStream) -> encode
    118:118:byte[] getCertificate() -> getCertificate
    115:115:org.conscrypt.ct.CertificateEntry$LogEntryType getEntryType() -> getEntryType
    121:121:byte[] getIssuerKeyHash() -> getIssuerKeyHash
org.conscrypt.ct.CertificateEntry$LogEntryType -> org.conscrypt.ct.CertificateEntry$LogEntryType:
    47:46:void <clinit>() -> <clinit>
    46:46:void <init>(java.lang.String,int) -> <init>
    46:46:org.conscrypt.ct.CertificateEntry$LogEntryType valueOf(java.lang.String) -> valueOf
    46:46:org.conscrypt.ct.CertificateEntry$LogEntryType[] values() -> values
org.conscrypt.ct.DigitallySigned -> org.conscrypt.ct.DigitallySigned:
    71:75:void <init>(org.conscrypt.ct.DigitallySigned$HashAlgorithm,org.conscrypt.ct.DigitallySigned$SignatureAlgorithm,byte[]) -> <init>
    80:85:void <init>(int,int,byte[]) -> <init>
    111:117:org.conscrypt.ct.DigitallySigned decode(java.io.InputStream) -> decode
    126:126:org.conscrypt.ct.DigitallySigned decode(byte[]) -> decode
    102:102:java.lang.String getAlgorithm() -> getAlgorithm
    88:88:org.conscrypt.ct.DigitallySigned$HashAlgorithm getHashAlgorithm() -> getHashAlgorithm
    94:94:byte[] getSignature() -> getSignature
    91:91:org.conscrypt.ct.DigitallySigned$SignatureAlgorithm getSignatureAlgorithm() -> getSignatureAlgorithm
org.conscrypt.ct.DigitallySigned$HashAlgorithm -> org.conscrypt.ct.DigitallySigned$HashAlgorithm:
    31:39:void <clinit>() -> <clinit>
    30:30:void <init>(java.lang.String,int) -> <init>
    30:30:org.conscrypt.ct.DigitallySigned$HashAlgorithm valueOf(java.lang.String) -> valueOf
    42:44:org.conscrypt.ct.DigitallySigned$HashAlgorithm valueOf(int) -> valueOf
    30:30:org.conscrypt.ct.DigitallySigned$HashAlgorithm[] values() -> values
org.conscrypt.ct.DigitallySigned$SignatureAlgorithm -> org.conscrypt.ct.DigitallySigned$SignatureAlgorithm:
    50:55:void <clinit>() -> <clinit>
    49:49:void <init>(java.lang.String,int) -> <init>
    49:49:org.conscrypt.ct.DigitallySigned$SignatureAlgorithm valueOf(java.lang.String) -> valueOf
    58:60:org.conscrypt.ct.DigitallySigned$SignatureAlgorithm valueOf(int) -> valueOf
    49:49:org.conscrypt.ct.DigitallySigned$SignatureAlgorithm[] values() -> values
org.conscrypt.ct.Serialization -> org.conscrypt.ct.Serialization:
    31:31:void <init>() -> <init>
    170:176:byte readByte(java.io.InputStream) -> readByte
    39:39:byte[] readDEROctetString(byte[]) -> readDEROctetString
    44:46:byte[] readDEROctetString(java.io.InputStream) -> readDEROctetString
    108:120:byte[] readFixedBytes(java.io.InputStream,int) -> readFixedBytes
    61:61:byte[][] readList(byte[],int,int) -> readList
    74:82:byte[][] readList(java.io.InputStream,int,int) -> readList
    152:153:long readLong(java.io.InputStream,int) -> readLong
    132:133:int readNumber(java.io.InputStream,int) -> readNumber
    96:97:byte[] readVariableBytes(java.io.InputStream,int) -> readVariableBytes
    201:203:void writeFixedBytes(java.io.OutputStream,byte[]) -> writeFixedBytes
    217:218:void writeNumber(java.io.OutputStream,long,int) -> writeNumber
    190:192:void writeVariableBytes(java.io.OutputStream,byte[],int) -> writeVariableBytes
org.conscrypt.ct.SerializationException -> org.conscrypt.ct.SerializationException:
    26:27:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
org.conscrypt.ct.SignedCertificateTimestamp -> org.conscrypt.ct.SignedCertificateTimestamp:
    59:66:void <init>(org.conscrypt.ct.SignedCertificateTimestamp$Version,byte[],long,byte[],org.conscrypt.ct.DigitallySigned,org.conscrypt.ct.SignedCertificateTimestamp$Origin) -> <init>
    92:94:org.conscrypt.ct.SignedCertificateTimestamp decode(java.io.InputStream,org.conscrypt.ct.SignedCertificateTimestamp$Origin) -> decode
    112:112:org.conscrypt.ct.SignedCertificateTimestamp decode(byte[],org.conscrypt.ct.SignedCertificateTimestamp$Origin) -> decode
    120:126:void encodeTBS(java.io.OutputStream,org.conscrypt.ct.CertificateEntry) -> encodeTBS
    133:135:byte[] encodeTBS(org.conscrypt.ct.CertificateEntry) -> encodeTBS
    78:78:byte[] getExtensions() -> getExtensions
    72:72:byte[] getLogID() -> getLogID
    84:84:org.conscrypt.ct.SignedCertificateTimestamp$Origin getOrigin() -> getOrigin
    81:81:org.conscrypt.ct.DigitallySigned getSignature() -> getSignature
    75:75:long getTimestamp() -> getTimestamp
    69:69:org.conscrypt.ct.SignedCertificateTimestamp$Version getVersion() -> getVersion
org.conscrypt.ct.SignedCertificateTimestamp$Origin -> org.conscrypt.ct.SignedCertificateTimestamp$Origin:
    42:41:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String,int) -> <init>
    41:41:org.conscrypt.ct.SignedCertificateTimestamp$Origin valueOf(java.lang.String) -> valueOf
    41:41:org.conscrypt.ct.SignedCertificateTimestamp$Origin[] values() -> values
org.conscrypt.ct.SignedCertificateTimestamp$SignatureType -> org.conscrypt.ct.SignedCertificateTimestamp$SignatureType:
    37:36:void <clinit>() -> <clinit>
    36:36:void <init>(java.lang.String,int) -> <init>
    36:36:org.conscrypt.ct.SignedCertificateTimestamp$SignatureType valueOf(java.lang.String) -> valueOf
    36:36:org.conscrypt.ct.SignedCertificateTimestamp$SignatureType[] values() -> values
org.conscrypt.ct.SignedCertificateTimestamp$Version -> org.conscrypt.ct.SignedCertificateTimestamp$Version:
    33:32:void <clinit>() -> <clinit>
    32:32:void <init>(java.lang.String,int) -> <init>
    32:32:org.conscrypt.ct.SignedCertificateTimestamp$Version valueOf(java.lang.String) -> valueOf
    32:32:org.conscrypt.ct.SignedCertificateTimestamp$Version[] values() -> values
org.conscrypt.ct.VerifiedSCT -> org.conscrypt.ct.VerifiedSCT:
    38:41:void <init>(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.VerifiedSCT$Status) -> <init>
org.conscrypt.ct.VerifiedSCT$Status -> org.conscrypt.ct.VerifiedSCT$Status:
    29:28:void <clinit>() -> <clinit>
    28:28:void <init>(java.lang.String,int) -> <init>
    28:28:org.conscrypt.ct.VerifiedSCT$Status valueOf(java.lang.String) -> valueOf
    28:28:org.conscrypt.ct.VerifiedSCT$Status[] values() -> values
org.hsluv.HUSLColorConverter -> org.hsluv.HUSLColorConverter:
    7:27:void <clinit>() -> <clinit>
    112:118:double dotProduct(double[],double[]) -> dotProduct
    128:131:double fromLinear(double) -> fromLinear
    30:49:java.util.List getBounds(double) -> getBounds
    278:293:double[] hsluvToLch(double[]) -> hsluvToLch
    382:382:double[] hsluvToRgb(double[]) -> hsluvToRgb
    195:198:double lToY(double) -> lToY
    266:274:double[] lchToLuv(double[]) -> lchToLuv
    372:372:double[] lchToRgb(double[]) -> lchToRgb
    61:63:org.hsluv.HUSLColorConverter$Length lengthOfRayUntilIntersect(double,double[]) -> lengthOfRayUntilIntersect
    223:238:double[] luvToXyz(double[]) -> luvToXyz
    96:108:double maxChromaForLH(double,double) -> maxChromaForLH
    162:162:double[] xyzToRgb(double[]) -> xyzToRgb
org.hsluv.HUSLColorConverter$Length -> org.hsluv.HUSLColorConverter$Length:
    66:66:void <init>(double,org.hsluv.HUSLColorConverter$1) -> <init>
    71:74:void <init>(double) -> <init>
org.metalev.multitouch.controller.MultiTouchController -> org.metalev.multitouch.controller.MultiTouchController:
    211:247:void <clinit>() -> <clinit>
    177:182:void <init>(org.metalev.multitouch.controller.MultiTouchController$MultiTouchObjectCanvas,boolean) -> <init>
    332:351:void anchorAtThisPositionAndScale() -> anchorAtThisPositionAndScale
    318:324:void decodeTouchEvent(int,float[],float[],float[],int[],int,boolean,long) -> decodeTouchEvent
    124:130:void extractCurrPtInfo() -> extractCurrPtInfo
    379:379:boolean isPinching() -> isPinching
    391:486:void multiTouchController() -> multiTouchController
    253:309:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    356:375:void performDragOrPinch() -> performDragOrPinch
org.metalev.multitouch.controller.MultiTouchController$PointInfo -> org.metalev.multitouch.controller.MultiTouchController$PointInfo:
    493:499:void <init>() -> <init>
    493:493:long access$1000(org.metalev.multitouch.controller.MultiTouchController$PointInfo) -> access$1000
    493:493:void access$300(org.metalev.multitouch.controller.MultiTouchController$PointInfo,int,float[],float[],float[],int[],int,boolean,long) -> access$300
    716:716:long getEventTime() -> getEventTime
    648:655:float getMultiTouchAngle() -> getMultiTouchAngle
    623:640:float getMultiTouchDiameter() -> getMultiTouchDiameter
    614:618:float getMultiTouchDiameterSq() -> getMultiTouchDiameterSq
    597:597:float getMultiTouchHeight() -> getMultiTouchHeight
    592:592:float getMultiTouchWidth() -> getMultiTouchWidth
    667:667:float getX() -> getX
    677:677:float getY() -> getY
    708:708:boolean isDown() -> isDown
    587:587:boolean isMultiTouch() -> isMultiTouch
    602:608:int julery_isqrt(int) -> julery_isqrt
    524:552:void set(int,float[],float[],float[],int[],int,boolean,long) -> set
org.metalev.multitouch.controller.MultiTouchController$PositionAndScale -> org.metalev.multitouch.controller.MultiTouchController$PositionAndScale:
    725:725:void <init>() -> <init>
    725:725:boolean access$000(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$000
    725:725:boolean access$100(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$100
    725:725:boolean access$200(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$200
    725:725:float access$400(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$400
    725:725:float access$500(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$500
    725:725:float access$600(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$600
    725:725:float access$700(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$700
    725:725:float access$800(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$800
    725:725:float access$900(org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> access$900
    768:768:float getScale() -> getScale
    760:760:float getXOff() -> getXOff
    764:764:float getYOff() -> getYOff
    738:747:void set(float,float,boolean,float,boolean,float,float,boolean,float) -> set
    751:757:void set(float,float,float,float,float,float) -> set
org.openintents.openpgp.BuildConfig -> org.openintents.openpgp.BuildConfig:
    6:6:void <init>() -> <init>
org.openintents.openpgp.IOpenPgpService$Stub -> org.openintents.openpgp.IOpenPgpService$Stub:
    14:16:void <init>() -> <init>
    34:34:android.os.IBinder asBinder() -> asBinder
    38:78:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.openintents.openpgp.IOpenPgpService$Stub$Proxy -> org.openintents.openpgp.IOpenPgpService$Stub$Proxy:
    92:92:android.os.IBinder asBinder() -> asBinder
org.openintents.openpgp.IOpenPgpService2$Stub -> org.openintents.openpgp.IOpenPgpService2$Stub:
    14:16:void <init>() -> <init>
    34:34:android.os.IBinder asBinder() -> asBinder
    23:30:org.openintents.openpgp.IOpenPgpService2 asInterface(android.os.IBinder) -> asInterface
    38:59:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.openintents.openpgp.IOpenPgpService2$Stub$Proxy -> org.openintents.openpgp.IOpenPgpService2$Stub$Proxy:
    98:100:void <init>(android.os.IBinder) -> <init>
    103:103:android.os.IBinder asBinder() -> asBinder
    114:131:android.os.ParcelFileDescriptor createOutputPipe(int) -> createOutputPipe
    140:171:android.content.Intent execute(android.content.Intent,android.os.ParcelFileDescriptor,int) -> execute
org.openintents.openpgp.OpenPgpDecryptionResult -> org.openintents.openpgp.OpenPgpDecryptionResult:
    83:83:void <clinit>() -> <clinit>
    47:49:void <init>() -> <init>
    60:60:int describeContents() -> describeContents
    105:105:java.lang.String toString() -> toString
    68:81:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.openintents.openpgp.OpenPgpDecryptionResult$1 -> org.openintents.openpgp.OpenPgpDecryptionResult$1:
    83:83:void <init>() -> <init>
    83:83:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    85:95:org.openintents.openpgp.OpenPgpDecryptionResult createFromParcel(android.os.Parcel) -> createFromParcel
    83:83:java.lang.Object[] newArray(int) -> newArray
    99:99:org.openintents.openpgp.OpenPgpDecryptionResult[] newArray(int) -> newArray
org.openintents.openpgp.OpenPgpError -> org.openintents.openpgp.OpenPgpError:
    94:94:void <clinit>() -> <clinit>
    40:41:void <init>() -> <init>
    43:46:void <init>(int,java.lang.String) -> <init>
    70:70:int describeContents() -> describeContents
    54:54:int getErrorId() -> getErrorId
    62:62:java.lang.String getMessage() -> getMessage
    78:92:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.openintents.openpgp.OpenPgpError$1 -> org.openintents.openpgp.OpenPgpError$1:
    94:94:void <init>() -> <init>
    94:94:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    96:107:org.openintents.openpgp.OpenPgpError createFromParcel(android.os.Parcel) -> createFromParcel
    94:94:java.lang.Object[] newArray(int) -> newArray
    111:111:org.openintents.openpgp.OpenPgpError[] newArray(int) -> newArray
org.openintents.openpgp.OpenPgpMetadata -> org.openintents.openpgp.OpenPgpMetadata:
    112:112:void <clinit>() -> <clinit>
    56:57:void <init>() -> <init>
    84:84:int describeContents() -> describeContents
    37:37:java.lang.String getFilename() -> getFilename
    140:145:java.lang.String toString() -> toString
    92:110:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.openintents.openpgp.OpenPgpMetadata$1 -> org.openintents.openpgp.OpenPgpMetadata$1:
    112:112:void <init>() -> <init>
    112:112:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    114:130:org.openintents.openpgp.OpenPgpMetadata createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:java.lang.Object[] newArray(int) -> newArray
    134:134:org.openintents.openpgp.OpenPgpMetadata[] newArray(int) -> newArray
org.openintents.openpgp.OpenPgpSignatureResult -> org.openintents.openpgp.OpenPgpSignatureResult:
    153:153:void <clinit>() -> <clinit>
    103:105:void <init>() -> <init>
    125:125:int describeContents() -> describeContents
    96:96:long getKeyId() -> getKeyId
    180:185:java.lang.String toString() -> toString
    133:151:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.openintents.openpgp.OpenPgpSignatureResult$1 -> org.openintents.openpgp.OpenPgpSignatureResult$1:
    153:153:void <init>() -> <init>
    153:153:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    155:170:org.openintents.openpgp.OpenPgpSignatureResult createFromParcel(android.os.Parcel) -> createFromParcel
    153:153:java.lang.Object[] newArray(int) -> newArray
    174:174:org.openintents.openpgp.OpenPgpSignatureResult[] newArray(int) -> newArray
org.openintents.openpgp.R -> org.openintents.openpgp.R:
    10:10:void <init>() -> <init>
org.openintents.openpgp.R$drawable -> org.openintents.openpgp.R$drawable:
    13:13:void <init>() -> <init>
org.openintents.openpgp.R$string -> org.openintents.openpgp.R$string:
    19:19:void <init>() -> <init>
org.openintents.openpgp.util.OpenPgpApi -> org.openintents.openpgp.util.OpenPgpApi:
    266:269:void <init>(android.content.Context,org.openintents.openpgp.IOpenPgpService2) -> <init>
    316:372:android.content.Intent executeApi(android.content.Intent,java.io.InputStream,java.io.OutputStream) -> executeApi
    301:310:void executeApiAsync(android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback) -> executeApiAsync
org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask -> org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask:
    275:275:void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback,org.openintents.openpgp.util.OpenPgpApi$1) -> <init>
    281:286:void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback) -> <init>
    275:275:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    290:290:android.content.Intent doInBackground(java.lang.Void[]) -> doInBackground
    275:275:void onPostExecute(java.lang.Object) -> onPostExecute
    294:295:void onPostExecute(android.content.Intent) -> onPostExecute
org.openintents.openpgp.util.OpenPgpServiceConnection -> org.openintents.openpgp.util.OpenPgpServiceConnection:
    50:53:void <init>(android.content.Context,java.lang.String) -> <init>
    65:67:void <init>(android.content.Context,java.lang.String,org.openintents.openpgp.util.OpenPgpServiceConnection$OnBound) -> <init>
    27:27:org.openintents.openpgp.IOpenPgpService2 access$000(org.openintents.openpgp.util.OpenPgpServiceConnection) -> access$000
    27:27:org.openintents.openpgp.IOpenPgpService2 access$002(org.openintents.openpgp.util.OpenPgpServiceConnection,org.openintents.openpgp.IOpenPgpService2) -> access$002
    27:27:org.openintents.openpgp.util.OpenPgpServiceConnection$OnBound access$100(org.openintents.openpgp.util.OpenPgpServiceConnection) -> access$100
    97:118:void bindToService() -> bindToService
    70:70:org.openintents.openpgp.IOpenPgpService2 getService() -> getService
    74:74:boolean isBound() -> isBound
org.openintents.openpgp.util.OpenPgpServiceConnection$1 -> org.openintents.openpgp.util.OpenPgpServiceConnection$1:
    77:77:void <init>(org.openintents.openpgp.util.OpenPgpServiceConnection) -> <init>
    79:83:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    86:87:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.openintents.openpgp.util.OpenPgpUtils -> org.openintents.openpgp.util.OpenPgpUtils:
    31:75:void <clinit>() -> <clinit>
    63:63:java.lang.String convertKeyIdToHex(long) -> convertKeyIdToHex
    67:71:java.lang.String convertKeyIdToHex32bit(long) -> convertKeyIdToHex32bit
org.openintents.openpgp.util.ParcelFileDescriptorUtil -> org.openintents.openpgp.util.ParcelFileDescriptorUtil:
    31:38:android.os.ParcelFileDescriptor pipeFrom(java.io.InputStream) -> pipeFrom
    45:48:org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread pipeTo(java.io.OutputStream,android.os.ParcelFileDescriptor) -> pipeTo
org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread -> org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread:
    57:61:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    65:82:void run() -> run
org.osmdroid.config.Configuration -> org.osmdroid.config.Configuration:
    23:22:org.osmdroid.config.IConfigurationProvider getInstance() -> getInstance
org.osmdroid.config.DefaultConfigurationProvider -> org.osmdroid.config.DefaultConfigurationProvider:
    64:67:void <init>() -> <init>
    442:447:void commit(android.content.SharedPreferences$Editor) -> commit
    144:144:java.util.Map getAdditionalHttpRequestProperties() -> getAdditionalHttpRequestProperties
    479:479:int getAnimationSpeedDefault() -> getAnimationSpeedDefault
    489:489:int getAnimationSpeedShort() -> getAnimationSpeedShort
    149:149:short getCacheMapTileCount() -> getCacheMapTileCount
    509:509:short getCacheMapTileOvershoot() -> getCacheMapTileOvershoot
    451:451:long getExpirationExtendedDuration() -> getExpirationExtendedDuration
    469:469:java.lang.Long getExpirationOverrideDuration() -> getExpirationOverrideDuration
    219:219:java.text.SimpleDateFormat getHttpHeaderDateTimeFormat() -> getHttpHeaderDateTimeFormat
    229:229:java.net.Proxy getHttpProxy() -> getHttpProxy
    239:249:java.io.File getOsmdroidBasePath() -> getOsmdroidBasePath
    259:269:java.io.File getOsmdroidTileCache() -> getOsmdroidTileCache
    179:179:short getTileDownloadMaxQueueSize() -> getTileDownloadMaxQueueSize
    159:159:short getTileDownloadThreads() -> getTileDownloadThreads
    199:199:long getTileFileSystemCacheMaxBytes() -> getTileFileSystemCacheMaxBytes
    209:209:long getTileFileSystemCacheTrimBytes() -> getTileFileSystemCacheTrimBytes
    189:189:short getTileFileSystemMaxQueueSize() -> getTileFileSystemMaxQueueSize
    169:169:short getTileFileSystemThreads() -> getTileFileSystemThreads
    534:534:long getTileGCBulkPauseInMillis() -> getTileGCBulkPauseInMillis
    524:524:int getTileGCBulkSize() -> getTileGCBulkSize
    514:514:long getTileGCFrequencyInMillis() -> getTileGCFrequencyInMillis
    279:279:java.lang.String getUserAgentHttpHeader() -> getUserAgentHttpHeader
    134:134:java.lang.String getUserAgentValue() -> getUserAgentValue
    114:114:boolean isDebugMapTileDownloader() -> isDebugMapTileDownloader
    94:94:boolean isDebugMapView() -> isDebugMapView
    84:84:boolean isDebugMode() -> isDebugMode
    104:104:boolean isDebugTileProviders() -> isDebugTileProviders
    549:549:boolean isMapTileDownloaderFollowRedirects() -> isMapTileDownloaderFollowRedirects
    124:124:boolean isMapViewHardwareAccelerated() -> isMapViewHardwareAccelerated
    494:494:boolean isMapViewRecyclerFriendly() -> isMapViewRecyclerFriendly
    293:366:void load(android.content.Context,android.content.SharedPreferences) -> load
    409:409:void load(android.content.SharedPreferences,java.util.Map,java.lang.String) -> load
    370:396:void save(android.content.Context,android.content.SharedPreferences) -> save
    430:439:void save(android.content.SharedPreferences,android.content.SharedPreferences$Editor,java.util.Map,java.lang.String) -> save
    474:475:void setAnimationSpeedDefault(int) -> setAnimationSpeedDefault
    484:485:void setAnimationSpeedShort(int) -> setAnimationSpeedShort
    504:505:void setCacheMapTileOvershoot(short) -> setCacheMapTileOvershoot
    119:120:void setDebugMapTileDownloader(boolean) -> setDebugMapTileDownloader
    99:100:void setDebugMapView(boolean) -> setDebugMapView
    89:90:void setDebugMode(boolean) -> setDebugMode
    109:110:void setDebugTileProviders(boolean) -> setDebugTileProviders
    456:460:void setExpirationExtendedDuration(long) -> setExpirationExtendedDuration
    79:80:void setGpsWaitTime(long) -> setGpsWaitTime
    234:235:void setHttpProxy(java.net.Proxy) -> setHttpProxy
    544:545:void setMapTileDownloaderFollowRedirects(boolean) -> setMapTileDownloaderFollowRedirects
    129:130:void setMapViewHardwareAccelerated(boolean) -> setMapViewHardwareAccelerated
    499:500:void setMapViewRecyclerFriendly(boolean) -> setMapViewRecyclerFriendly
    254:255:void setOsmdroidBasePath(java.io.File) -> setOsmdroidBasePath
    274:275:void setOsmdroidTileCache(java.io.File) -> setOsmdroidTileCache
    184:185:void setTileDownloadMaxQueueSize(short) -> setTileDownloadMaxQueueSize
    164:165:void setTileDownloadThreads(short) -> setTileDownloadThreads
    204:205:void setTileFileSystemCacheMaxBytes(long) -> setTileFileSystemCacheMaxBytes
    214:215:void setTileFileSystemCacheTrimBytes(long) -> setTileFileSystemCacheTrimBytes
    194:195:void setTileFileSystemMaxQueueSize(short) -> setTileFileSystemMaxQueueSize
    174:175:void setTileFileSystemThreads(short) -> setTileFileSystemThreads
    139:140:void setUserAgentValue(java.lang.String) -> setUserAgentValue
org.osmdroid.events.ScrollEvent -> org.osmdroid.events.ScrollEvent:
    31:35:void <init>(org.osmdroid.views.MapView,int,int) -> <init>
    69:69:java.lang.String toString() -> toString
org.osmdroid.events.ZoomEvent -> org.osmdroid.events.ZoomEvent:
    14:17:void <init>(org.osmdroid.views.MapView,double) -> <init>
    36:36:java.lang.String toString() -> toString
org.osmdroid.tileprovider.BitmapPool -> org.osmdroid.tileprovider.BitmapPool:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    17:17:void access$000(org.osmdroid.tileprovider.BitmapPool,android.graphics.drawable.Drawable) -> access$000
    60:68:void applyReusableOptions(android.graphics.BitmapFactory$Options,int,int) -> applyReusableOptions
    124:133:void asyncRecycle(android.graphics.drawable.Drawable) -> asyncRecycle
    29:29:org.osmdroid.tileprovider.BitmapPool getInstance() -> getInstance
    91:105:android.graphics.Bitmap obtainSizedBitmapFromPool(int,int) -> obtainSizedBitmapFromPool
    34:42:void returnDrawableToPool(org.osmdroid.tileprovider.ReusableBitmapDrawable) -> returnDrawableToPool
    139:153:void syncRecycle(android.graphics.drawable.Drawable) -> syncRecycle
org.osmdroid.tileprovider.BitmapPool$1 -> org.osmdroid.tileprovider.BitmapPool$1:
    127:127:void <init>(org.osmdroid.tileprovider.BitmapPool,android.graphics.drawable.Drawable) -> <init>
    130:131:void run() -> run
org.osmdroid.tileprovider.ExpirableBitmapDrawable -> org.osmdroid.tileprovider.ExpirableBitmapDrawable:
    19:19:void <clinit>() -> <clinit>
    24:26:void <init>(android.graphics.Bitmap) -> <init>
    30:30:int[] getState() -> getState
    50:57:int getState(android.graphics.drawable.Drawable) -> getState
    35:35:boolean isStateful() -> isStateful
    40:41:boolean setState(int[]) -> setState
    69:70:void setState(android.graphics.drawable.Drawable,int) -> setState
org.osmdroid.tileprovider.MapTileCache -> org.osmdroid.tileprovider.MapTileCache:
    77:78:void <init>() -> <init>
    84:87:void <init>(int) -> <init>
    245:254:void clear() -> clear
    115:120:boolean ensureCapacity(int) -> ensureCapacity
    142:170:void garbageCollection() -> garbageCollection
    222:222:org.osmdroid.util.MapTileAreaList getAdditionalMapTileList() -> getAdditionalMapTileList
    124:126:android.graphics.drawable.Drawable getMapTile(long) -> getMapTile
    215:215:org.osmdroid.util.MapTileArea getMapTileArea() -> getMapTileArea
    320:320:org.osmdroid.tileprovider.MapTilePreCache getPreCache() -> getPreCache
    93:93:java.util.List getProtectedTileComputers() -> getProtectedTileComputers
    100:100:java.util.List getProtectedTileContainers() -> getProtectedTileContainers
    275:275:org.osmdroid.tileprovider.MapTileCache$TileRemovedListener getTileRemovedListener() -> getTileRemovedListener
    312:314:void maintenance() -> maintenance
    291:297:void populateSyncCachedTiles(org.osmdroid.util.MapTileList) -> populateSyncCachedTiles
    130:135:void putTile(long,android.graphics.drawable.Drawable) -> putTile
    176:191:void refreshAdditionalLists() -> refreshAdditionalLists
    262:264:void remove(long) -> remove
    111:112:void setAutoEnsureCapacity(boolean) -> setAutoEnsureCapacity
    197:208:boolean shouldKeepTile(long) -> shouldKeepTile
org.osmdroid.tileprovider.MapTilePreCache -> org.osmdroid.tileprovider.MapTilePreCache:
    43:45:void <init>(org.osmdroid.tileprovider.MapTileCache) -> <init>
    27:27:long access$000(org.osmdroid.tileprovider.MapTilePreCache) -> access$000
    27:27:void access$100(org.osmdroid.tileprovider.MapTilePreCache,long) -> access$100
    48:49:void addProvider(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) -> addProvider
    55:60:void fill() -> fill
    95:100:long next() -> next
    68:85:void refresh() -> refresh
    112:124:void search(long) -> search
org.osmdroid.tileprovider.MapTilePreCache$1 -> org.osmdroid.tileprovider.MapTilePreCache$1:
    33:33:void <init>(org.osmdroid.tileprovider.MapTilePreCache) -> <init>
    37:40:void run() -> run
org.osmdroid.tileprovider.MapTileProviderArray -> org.osmdroid.tileprovider.MapTileProviderArray:
    55:56:void <init>(org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.IRegisterReceiver) -> <init>
    69:74:void <init>(org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.MapTileModuleProviderBase[]) -> <init>
    99:101:boolean contains(long) -> contains
    78:83:void detach() -> detach
    200:218:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase findNextAppropriateProvider(org.osmdroid.tileprovider.MapTileRequestState) -> findNextAppropriateProvider
    122:137:android.graphics.drawable.Drawable getMapTile(long) -> getMapTile
    259:266:int getMaximumZoomLevel() -> getMaximumZoomLevel
    246:253:int getMinimumZoomLevel() -> getMinimumZoomLevel
    241:241:boolean getProviderExists(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) -> getProviderExists
    117:117:boolean isDowngradedMode(long) -> isDowngradedMode
    156:158:void mapTileRequestCompleted(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> mapTileRequestCompleted
    173:176:void mapTileRequestExpiredTile(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> mapTileRequestExpiredTile
    162:163:void mapTileRequestFailed(org.osmdroid.tileprovider.MapTileRequestState) -> mapTileRequestFailed
    167:169:void mapTileRequestFailedExceedsMaxQueueSize(org.osmdroid.tileprovider.MapTileRequestState) -> mapTileRequestFailedExceedsMaxQueueSize
    149:151:void remove(long) -> remove
    225:233:void runAsyncNextProvider(org.osmdroid.tileprovider.MapTileRequestState) -> runAsyncNextProvider
    272:279:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
org.osmdroid.tileprovider.MapTileProviderBase -> org.osmdroid.tileprovider.MapTileProviderBase:
    116:117:void <init>(org.osmdroid.tileprovider.tilesource.ITileSource) -> <init>
    120:124:void <init>(org.osmdroid.tileprovider.tilesource.ITileSource,android.os.Handler) -> <init>
    269:270:void clearTileCache() -> clearTileCache
    112:112:org.osmdroid.tileprovider.MapTileCache createTileCache() -> createTileCache
    69:72:void detach() -> detach
    255:256:void ensureCapacity(int) -> ensureCapacity
    262:262:org.osmdroid.tileprovider.MapTileCache getTileCache() -> getTileCache
    105:105:org.osmdroid.tileprovider.tilesource.ITileSource getTileSource() -> getTileSource
    150:160:void mapTileRequestCompleted(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> mapTileRequestCompleted
    211:221:void mapTileRequestExpiredTile(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> mapTileRequestExpiredTile
    172:185:void mapTileRequestFailed(org.osmdroid.tileprovider.MapTileRequestState) -> mapTileRequestFailed
    228:240:void putTileIntoCache(long,android.graphics.drawable.Drawable,int) -> putTileIntoCache
    300:322:void rescaleCache(org.osmdroid.views.Projection,double,double,android.graphics.Rect) -> rescaleCache
    251:252:void setTileRequestCompleteHandler(android.os.Handler) -> setTileRequestCompleteHandler
    95:97:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
    288:289:void setUseDataConnection(boolean) -> setUseDataConnection
    277:277:boolean useDataConnection() -> useDataConnection
org.osmdroid.tileprovider.MapTileProviderBase$ScaleTileLooper -> org.osmdroid.tileprovider.MapTileProviderBase$ScaleTileLooper:
    324:329:void <init>(org.osmdroid.tileprovider.MapTileProviderBase) -> <init>
    324:324:void <init>(org.osmdroid.tileprovider.MapTileProviderBase,org.osmdroid.tileprovider.MapTileProviderBase$1) -> <init>
    380:385:void finaliseLoop() -> finaliseLoop
    359:375:void handleTile(long,int,int) -> handleTile
    351:355:void initialiseLoop() -> initialiseLoop
    341:347:void loop(double,org.osmdroid.util.RectL,double,int) -> loop
    394:402:void putScaledTileIntoCache(long,android.graphics.Bitmap) -> putScaledTileIntoCache
org.osmdroid.tileprovider.MapTileProviderBase$ZoomInTileLooper -> org.osmdroid.tileprovider.MapTileProviderBase$ZoomInTileLooper:
    405:405:void <init>(org.osmdroid.tileprovider.MapTileProviderBase) -> <init>
    405:405:void <init>(org.osmdroid.tileprovider.MapTileProviderBase,org.osmdroid.tileprovider.MapTileProviderBase$1) -> <init>
    411:422:void computeTile(long,int,int) -> computeTile
org.osmdroid.tileprovider.MapTileProviderBase$ZoomOutTileLooper -> org.osmdroid.tileprovider.MapTileProviderBase$ZoomOutTileLooper:
    425:425:void <init>(org.osmdroid.tileprovider.MapTileProviderBase) -> <init>
    425:425:void <init>(org.osmdroid.tileprovider.MapTileProviderBase,org.osmdroid.tileprovider.MapTileProviderBase$1) -> <init>
    431:466:void computeTile(long,int,int) -> computeTile
org.osmdroid.tileprovider.MapTileProviderBasic -> org.osmdroid.tileprovider.MapTileProviderBasic:
    57:58:void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource) -> <init>
    64:66:void <init>(android.content.Context,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache) -> <init>
    74:121:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,org.osmdroid.tileprovider.tilesource.ITileSource,android.content.Context,org.osmdroid.tileprovider.modules.IFilesystemCache) -> <init>
    132:136:void detach() -> detach
    178:181:org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase getMapTileFileStorageProviderBase(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache) -> getMapTileFileStorageProviderBase
    143:163:boolean isDowngradedMode(long) -> isDowngradedMode
org.osmdroid.tileprovider.MapTileRequestState -> org.osmdroid.tileprovider.MapTileRequestState:
    36:40:void <init>(long,java.util.List,org.osmdroid.tileprovider.IMapTileProviderCallback) -> <init>
    50:50:org.osmdroid.tileprovider.IMapTileProviderCallback getCallback() -> getCallback
    46:46:long getMapTile() -> getMapTile
    58:59:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase getNextProvider() -> getNextProvider
    54:54:boolean isEmpty() -> isEmpty
org.osmdroid.tileprovider.ReusableBitmapDrawable -> org.osmdroid.tileprovider.ReusableBitmapDrawable:
    21:22:void <init>(android.graphics.Bitmap) -> <init>
    25:27:void beginUsingDrawable() -> beginUsingDrawable
    31:35:void finishUsingDrawable() -> finishUsingDrawable
    49:51:boolean isBitmapValid() -> isBitmapValid
    39:44:android.graphics.Bitmap tryRecycle() -> tryRecycle
org.osmdroid.tileprovider.modules.ArchiveFileFactory -> org.osmdroid.tileprovider.modules.ArchiveFileFactory:
    15:24:void <clinit>() -> <clinit>
    53:77:org.osmdroid.tileprovider.modules.IArchiveFile getArchiveFile(java.io.File) -> getArchiveFile
org.osmdroid.tileprovider.modules.CantContinueException -> org.osmdroid.tileprovider.modules.CantContinueException:
    19:20:void <init>(java.lang.Throwable) -> <init>
org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory -> org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory:
    15:18:void <init>(int,java.lang.String) -> <init>
    22:27:java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.osmdroid.tileprovider.modules.DatabaseFileArchive -> org.osmdroid.tileprovider.modules.DatabaseFileArchive:
    32:32:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    130:131:void close() -> close
    76:79:byte[] getImage(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> getImage
    115:125:java.io.InputStream getInputStream(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> getInputStream
    71:72:void init(java.io.File) -> init
    52:53:void setIgnoreTileSource(boolean) -> setIgnoreTileSource
    135:135:java.lang.String toString() -> toString
org.osmdroid.tileprovider.modules.GEMFFileArchive -> org.osmdroid.tileprovider.modules.GEMFFileArchive:
    21:21:void <init>() -> <init>
    60:62:void close() -> close
    38:38:java.io.InputStream getInputStream(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> getInputStream
    33:34:void init(java.io.File) -> init
    55:55:void setIgnoreTileSource(boolean) -> setIgnoreTileSource
    66:66:java.lang.String toString() -> toString
org.osmdroid.tileprovider.modules.MBTilesFileArchive -> org.osmdroid.tileprovider.modules.MBTilesFileArchive:
    28:28:void <init>() -> <init>
    97:98:void close() -> close
    60:82:java.io.InputStream getInputStream(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> getInputStream
    51:55:void init(java.io.File) -> init
    93:93:void setIgnoreTileSource(boolean) -> setIgnoreTileSource
    102:102:java.lang.String toString() -> toString
org.osmdroid.tileprovider.modules.MapTileApproximater -> org.osmdroid.tileprovider.modules.MapTileApproximater:
    38:41:void <init>() -> <init>
    47:48:void <init>(int,int) -> <init>
    54:56:void addProvider(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) -> addProvider
    130:136:android.graphics.Bitmap approximateTileFromLowerZoom(long) -> approximateTileFromLowerZoom
    148:154:android.graphics.Bitmap approximateTileFromLowerZoom(long,int) -> approximateTileFromLowerZoom
    169:189:android.graphics.Bitmap approximateTileFromLowerZoom(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase,long,int) -> approximateTileFromLowerZoom
    205:234:android.graphics.Bitmap approximateTileFromLowerZoom(android.graphics.drawable.BitmapDrawable,long,int) -> approximateTileFromLowerZoom
    59:70:void computeZoomLevels() -> computeZoomLevels
    261:263:void detach() -> detach
    99:99:int getMaximumZoomLevel() -> getMaximumZoomLevel
    94:94:int getMinimumZoomLevel() -> getMinimumZoomLevel
    79:79:java.lang.String getName() -> getName
    84:84:java.lang.String getThreadGroupName() -> getThreadGroupName
    249:253:android.graphics.Bitmap getTileBitmap(int) -> getTileBitmap
    29:29:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader getTileLoader() -> getTileLoader
    89:89:org.osmdroid.tileprovider.modules.MapTileApproximater$TileLoader getTileLoader() -> getTileLoader
    74:74:boolean getUsesDataConnection() -> getUsesDataConnection
    106:106:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
org.osmdroid.tileprovider.modules.MapTileApproximater$TileLoader -> org.osmdroid.tileprovider.modules.MapTileApproximater$TileLoader:
    108:108:void <init>(org.osmdroid.tileprovider.modules.MapTileApproximater) -> <init>
    112:118:android.graphics.drawable.Drawable loadTile(long) -> loadTile
org.osmdroid.tileprovider.modules.MapTileAssetsProvider -> org.osmdroid.tileprovider.modules.MapTileAssetsProvider:
    56:60:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,android.content.res.AssetManager,org.osmdroid.tileprovider.tilesource.ITileSource) -> <init>
    66:70:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,android.content.res.AssetManager,org.osmdroid.tileprovider.tilesource.ITileSource,int,int) -> <init>
    31:31:java.util.concurrent.atomic.AtomicReference access$000(org.osmdroid.tileprovider.modules.MapTileAssetsProvider) -> access$000
    107:108:int getMaximumZoomLevel() -> getMaximumZoomLevel
    101:102:int getMinimumZoomLevel() -> getMinimumZoomLevel
    86:86:java.lang.String getName() -> getName
    91:91:java.lang.String getThreadGroupName() -> getThreadGroupName
    31:31:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader getTileLoader() -> getTileLoader
    96:96:org.osmdroid.tileprovider.modules.MapTileAssetsProvider$TileLoader getTileLoader() -> getTileLoader
    81:81:boolean getUsesDataConnection() -> getUsesDataConnection
    114:115:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
org.osmdroid.tileprovider.modules.MapTileAssetsProvider$TileLoader -> org.osmdroid.tileprovider.modules.MapTileAssetsProvider$TileLoader:
    124:126:void <init>(org.osmdroid.tileprovider.modules.MapTileAssetsProvider,android.content.res.AssetManager) -> <init>
    130:149:android.graphics.drawable.Drawable loadTile(long) -> loadTile
org.osmdroid.tileprovider.modules.MapTileDownloader -> org.osmdroid.tileprovider.modules.MapTileDownloader:
    83:86:void <init>(org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck) -> <init>
    92:97:void <init>(org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.modules.INetworkAvailablityCheck,int,int) -> <init>
    43:43:org.osmdroid.tileprovider.modules.IFilesystemCache access$000(org.osmdroid.tileprovider.modules.MapTileDownloader) -> access$000
    43:43:java.util.concurrent.atomic.AtomicReference access$100(org.osmdroid.tileprovider.modules.MapTileDownloader) -> access$100
    43:43:org.osmdroid.tileprovider.modules.TileDownloader access$200(org.osmdroid.tileprovider.modules.MapTileDownloader) -> access$200
    43:43:org.osmdroid.tileprovider.modules.INetworkAvailablityCheck access$300(org.osmdroid.tileprovider.modules.MapTileDownloader) -> access$300
    43:43:org.osmdroid.util.UrlBackoff access$400(org.osmdroid.tileprovider.modules.MapTileDownloader) -> access$400
    133:136:void detach() -> detach
    146:147:int getMaximumZoomLevel() -> getMaximumZoomLevel
    140:141:int getMinimumZoomLevel() -> getMinimumZoomLevel
    118:118:java.lang.String getName() -> getName
    123:123:java.lang.String getThreadGroupName() -> getThreadGroupName
    43:43:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader getTileLoader() -> getTileLoader
    128:128:org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader getTileLoader() -> getTileLoader
    113:113:boolean getUsesDataConnection() -> getUsesDataConnection
    154:160:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader -> org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader:
    199:199:void <init>(org.osmdroid.tileprovider.modules.MapTileDownloader) -> <init>
    210:210:android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String) -> downloadTile
    216:245:android.graphics.drawable.Drawable loadTile(long) -> loadTile
    251:258:void tileLoaded(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> tileLoaded
org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider -> org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider:
    58:59:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[]) -> <init>
    71:88:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,org.osmdroid.tileprovider.modules.IArchiveFile[],boolean) -> <init>
    92:93:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource) -> <init>
    29:29:java.util.concurrent.atomic.AtomicReference access$000(org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider) -> access$000
    29:29:java.io.InputStream access$100(org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider,long,org.osmdroid.tileprovider.tilesource.ITileSource) -> access$100
    162:168:void clearArcives() -> clearArcives
    157:159:void detach() -> detach
    175:189:void findArchiveFiles() -> findArchiveFiles
    193:192:java.io.InputStream getInputStream(long,org.osmdroid.tileprovider.tilesource.ITileSource) -> getInputStream
    131:132:int getMaximumZoomLevel() -> getMaximumZoomLevel
    125:126:int getMinimumZoomLevel() -> getMinimumZoomLevel
    110:110:java.lang.String getName() -> getName
    115:115:java.lang.String getThreadGroupName() -> getThreadGroupName
    29:29:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader getTileLoader() -> getTileLoader
    120:120:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider$TileLoader getTileLoader() -> getTileLoader
    105:105:boolean getUsesDataConnection() -> getUsesDataConnection
    138:141:void onMediaMounted() -> onMediaMounted
    145:148:void onMediaUnmounted() -> onMediaUnmounted
    152:153:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider$TileLoader -> org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider$TileLoader:
    212:212:void <init>(org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider) -> <init>
    217:241:android.graphics.drawable.Drawable loadTile(long) -> loadTile
org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase -> org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase:
    17:27:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,int,int) -> <init>
    31:36:void detach() -> detach
    40:40:void onMediaMounted() -> onMediaMounted
    44:44:void onMediaUnmounted() -> onMediaUnmounted
org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase$MyBroadcastReceiver -> org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase$MyBroadcastReceiver:
    50:50:void <init>(org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase) -> <init>
    50:50:void <init>(org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase,org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase$1) -> <init>
    55:62:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.osmdroid.tileprovider.modules.MapTileFilesystemProvider -> org.osmdroid.tileprovider.modules.MapTileFilesystemProvider:
    49:50:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource) -> <init>
    54:57:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long) -> <init>
    68:72:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource,long,int,int) -> <init>
    26:26:java.util.concurrent.atomic.AtomicReference access$000(org.osmdroid.tileprovider.modules.MapTileFilesystemProvider) -> access$000
    26:26:org.osmdroid.tileprovider.modules.TileWriter access$100(org.osmdroid.tileprovider.modules.MapTileFilesystemProvider) -> access$100
    109:110:int getMaximumZoomLevel() -> getMaximumZoomLevel
    103:104:int getMinimumZoomLevel() -> getMinimumZoomLevel
    88:88:java.lang.String getName() -> getName
    93:93:java.lang.String getThreadGroupName() -> getThreadGroupName
    26:26:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader getTileLoader() -> getTileLoader
    98:98:org.osmdroid.tileprovider.modules.MapTileFilesystemProvider$TileLoader getTileLoader() -> getTileLoader
    83:83:boolean getUsesDataConnection() -> getUsesDataConnection
    116:117:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
org.osmdroid.tileprovider.modules.MapTileFilesystemProvider$TileLoader -> org.osmdroid.tileprovider.modules.MapTileFilesystemProvider$TileLoader:
    123:123:void <init>(org.osmdroid.tileprovider.modules.MapTileFilesystemProvider) -> <init>
    128:145:android.graphics.drawable.Drawable loadTile(long) -> loadTile
org.osmdroid.tileprovider.modules.MapTileModuleProviderBase -> org.osmdroid.tileprovider.modules.MapTileModuleProviderBase:
    88:124:void <init>(int,int) -> <init>
    27:27:void access$000(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) -> access$000
    153:156:void clearQueue() -> clearQueue
    163:166:void detach() -> detach
    128:144:void loadMapTileAsync(org.osmdroid.tileprovider.MapTileRequestState) -> loadMapTileAsync
    169:176:void removeTileFromQueues(long) -> removeTileFromQueues
org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1 -> org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1:
    98:98:void <init>(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase,int,float,boolean,int) -> <init>
    105:121:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader -> org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader:
    184:184:void <init>(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) -> <init>
    213:242:org.osmdroid.tileprovider.MapTileRequestState nextTile() -> nextTile
    205:205:void onTileLoaderInit() -> onTileLoaderInit
    209:209:void onTileLoaderShutdown() -> onTileLoaderShutdown
    298:332:void run() -> run
    249:256:void tileLoaded(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> tileLoaded
    263:270:void tileLoadedExpired(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> tileLoadedExpired
    284:290:void tileLoadedFailed(org.osmdroid.tileprovider.MapTileRequestState) -> tileLoadedFailed
    273:280:void tileLoadedScaled(org.osmdroid.tileprovider.MapTileRequestState,android.graphics.drawable.Drawable) -> tileLoadedScaled
org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider -> org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider:
    37:37:void <clinit>() -> <clinit>
    55:61:void <init>(org.osmdroid.tileprovider.IRegisterReceiver,org.osmdroid.tileprovider.tilesource.ITileSource) -> <init>
    25:25:java.util.concurrent.atomic.AtomicReference access$000(org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider) -> access$000
    25:25:org.osmdroid.tileprovider.modules.SqlTileWriter access$100(org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider) -> access$100
    124:128:void detach() -> detach
    99:100:int getMaximumZoomLevel() -> getMaximumZoomLevel
    93:94:int getMinimumZoomLevel() -> getMinimumZoomLevel
    78:78:java.lang.String getName() -> getName
    83:83:java.lang.String getThreadGroupName() -> getThreadGroupName
    25:25:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader getTileLoader() -> getTileLoader
    88:88:org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider$TileLoader getTileLoader() -> getTileLoader
    73:73:boolean getUsesDataConnection() -> getUsesDataConnection
    107:107:void onMediaMounted() -> onMediaMounted
    111:114:void onMediaUnmounted() -> onMediaUnmounted
    118:119:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider$TileLoader -> org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider$TileLoader:
    151:151:void <init>(org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider) -> <init>
    156:182:android.graphics.drawable.Drawable loadTile(long) -> loadTile
org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck -> org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck:
    22:30:void <init>(android.content.Context) -> <init>
    34:47:boolean getNetworkAvailable() -> getNetworkAvailable
org.osmdroid.tileprovider.modules.SqlTileWriter -> org.osmdroid.tileprovider.modules.SqlTileWriter:
    55:603:void <clinit>() -> <clinit>
    80:91:void <init>() -> <init>
    759:764:void catchException(java.lang.Exception) -> catchException
    800:801:void createIndex(android.database.sqlite.SQLiteDatabase) -> createIndex
    723:739:android.database.sqlite.SQLiteDatabase getDb() -> getDb
    500:500:long getIndex(long,long,long) -> getIndex
    528:528:long getIndex(long) -> getIndex
    567:567:java.lang.String[] getPrimaryKeyParameters(long,org.osmdroid.tileprovider.tilesource.ITileSource) -> getPrimaryKeyParameters
    578:578:java.lang.String[] getPrimaryKeyParameters(long,java.lang.String) -> getPrimaryKeyParameters
    589:590:android.database.Cursor getTileCursor(java.lang.String[],java.lang.String[]) -> getTileCursor
    772:780:boolean isFunctionalException(android.database.sqlite.SQLiteException) -> isFunctionalException
    607:640:android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> loadTile
    201:201:void onDetach() -> onDetach
    747:752:void refreshDb() -> refreshDb
    100:105:void runCleanupOperation() -> runCleanupOperation
    654:717:void runCleanupOperation(long,int,long,boolean) -> runCleanupOperation
    126:130:boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long) -> saveFile
org.osmdroid.tileprovider.modules.SqlTileWriter$1 -> org.osmdroid.tileprovider.modules.SqlTileWriter$1:
    71:71:void <init>(org.osmdroid.tileprovider.modules.SqlTileWriter) -> <init>
    74:75:void run() -> run
org.osmdroid.tileprovider.modules.TileDownloader -> org.osmdroid.tileprovider.modules.TileDownloader:
    33:33:void <init>() -> <init>
    235:251:long computeExpirationTime(java.lang.String,java.lang.String,long) -> computeExpirationTime
    48:182:android.graphics.drawable.Drawable downloadTile(long,int,java.lang.String,org.osmdroid.tileprovider.modules.IFilesystemCache,org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) -> downloadTile
    210:227:java.lang.Long getHttpCacheControlDuration(java.lang.String) -> getHttpCacheControlDuration
    193:202:java.lang.Long getHttpExpiresTime(java.lang.String) -> getHttpExpiresTime
org.osmdroid.tileprovider.modules.TileWriter -> org.osmdroid.tileprovider.modules.TileWriter:
    47:47:void <clinit>() -> <clinit>
    55:78:void <init>() -> <init>
    34:34:long access$000() -> access$000
    34:34:long access$002(long) -> access$002
    34:34:void access$100(org.osmdroid.tileprovider.modules.TileWriter,java.io.File) -> access$100
    34:34:void access$200(org.osmdroid.tileprovider.modules.TileWriter) -> access$200
    208:219:void calculateDirectorySize(java.io.File) -> calculateDirectorySize
    181:203:boolean createFolderAndCheckIfExists(java.io.File) -> createFolderAndCheckIfExists
    268:303:void cutCurrentCache() -> cutCurrentCache
    245:259:java.util.List getDirectoryFileList(java.io.File) -> getDirectoryFileList
    167:167:java.io.File getFile(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> getFile
    231:235:boolean isSymbolicDirectoryLink(java.io.File,java.io.File) -> isSymbolicDirectoryLink
    315:334:android.graphics.drawable.Drawable loadTile(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> loadTile
    140:145:void onDetach() -> onDetach
    106:131:boolean saveFile(org.osmdroid.tileprovider.tilesource.ITileSource,long,java.io.InputStream,java.lang.Long) -> saveFile
    95:96:void setMaximumCachedFileAge(long) -> setMaximumCachedFileAge
org.osmdroid.tileprovider.modules.TileWriter$1 -> org.osmdroid.tileprovider.modules.TileWriter$1:
    60:60:void <init>(org.osmdroid.tileprovider.modules.TileWriter) -> <init>
    63:73:void run() -> run
org.osmdroid.tileprovider.modules.TileWriter$2 -> org.osmdroid.tileprovider.modules.TileWriter$2:
    280:280:void <init>(org.osmdroid.tileprovider.modules.TileWriter) -> <init>
    280:280:int compare(java.lang.Object,java.lang.Object) -> compare
    283:283:int compare(java.io.File,java.io.File) -> compare
org.osmdroid.tileprovider.modules.ZipFileArchive -> org.osmdroid.tileprovider.modules.ZipFileArchive:
    23:23:void <init>() -> <init>
    112:114:void close() -> close
    49:73:java.io.InputStream getInputStream(org.osmdroid.tileprovider.tilesource.ITileSource,long) -> getInputStream
    81:90:java.lang.String getTileRelativeFilenameString(long,java.lang.String) -> getTileRelativeFilenameString
    43:44:void init(java.io.File) -> init
    38:39:void setIgnoreTileSource(boolean) -> setIgnoreTileSource
    118:118:java.lang.String toString() -> toString
org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase -> org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase:
    21:21:void <clinit>() -> <clinit>
    60:68:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String) -> <init>
    114:141:android.graphics.drawable.Drawable getDrawable(java.lang.String) -> getDrawable
    169:179:android.graphics.drawable.Drawable getDrawable(java.io.InputStream) -> getDrawable
    96:96:int getMaximumZoomLevel() -> getMaximumZoomLevel
    91:91:int getMinimumZoomLevel() -> getMinimumZoomLevel
    152:161:java.lang.String getTileRelativeFilenameString(long) -> getTileRelativeFilenameString
    101:101:int getTileSizePixels() -> getTileSizePixels
    86:86:java.lang.String imageFilenameEnding() -> imageFilenameEnding
    78:78:java.lang.String name() -> name
    82:82:java.lang.String pathBase() -> pathBase
    105:105:java.lang.String toString() -> toString
org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException -> org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException:
    194:195:void <init>(java.lang.Throwable) -> <init>
org.osmdroid.tileprovider.tilesource.CloudmadeTileSource -> org.osmdroid.tileprovider.tilesource.CloudmadeTileSource:
    15:17:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String[]) -> <init>
    30:35:java.lang.String getTileURLString(long) -> getTileURLString
    21:22:java.lang.String pathBase() -> pathBase
    47:51:void setStyle(java.lang.String) -> setStyle
org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase -> org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase:
    21:24:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String[]) -> <init>
    39:42:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String[],java.lang.String) -> <init>
    50:50:java.lang.String getBaseUrl() -> getBaseUrl
org.osmdroid.tileprovider.tilesource.TileSourceFactory -> org.osmdroid.tileprovider.tilesource.TileSourceFactory:
    99:215:void <clinit>() -> <clinit>
    31:36:org.osmdroid.tileprovider.tilesource.ITileSource getTileSource(java.lang.String) -> getTileSource
    72:72:java.util.List getTileSources() -> getTileSources
org.osmdroid.tileprovider.tilesource.TileSourceFactory$1 -> org.osmdroid.tileprovider.tilesource.TileSourceFactory$1:
    159:159:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String[],java.lang.String) -> <init>
    162:162:java.lang.String getTileURLString(long) -> getTileURLString
org.osmdroid.tileprovider.tilesource.TileSourceFactory$2 -> org.osmdroid.tileprovider.tilesource.TileSourceFactory$2:
    166:166:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String[],java.lang.String) -> <init>
    169:169:java.lang.String getTileURLString(long) -> getTileURLString
org.osmdroid.tileprovider.tilesource.XYTileSource -> org.osmdroid.tileprovider.tilesource.XYTileSource:
    22:24:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String[]) -> <init>
    29:31:void <init>(java.lang.String,int,int,int,java.lang.String,java.lang.String[],java.lang.String) -> <init>
    39:39:java.lang.String getTileURLString(long) -> getTileURLString
    35:35:java.lang.String toString() -> toString
org.osmdroid.tileprovider.util.CloudmadeUtil -> org.osmdroid.tileprovider.util.CloudmadeUtil:
    31:47:void <clinit>() -> <clinit>
    84:84:java.lang.String getCloudmadeKey() -> getCloudmadeKey
    103:164:java.lang.String getCloudmadeToken() -> getCloudmadeToken
org.osmdroid.tileprovider.util.Counters -> org.osmdroid.tileprovider.util.Counters:
    15:24:void <clinit>() -> <clinit>
org.osmdroid.tileprovider.util.SimpleInvalidationHandler -> org.osmdroid.tileprovider.util.SimpleInvalidationHandler:
    13:15:void <init>(android.view.View) -> <init>
    32:33:void destroy() -> destroy
    19:25:void handleMessage(android.os.Message) -> handleMessage
org.osmdroid.tileprovider.util.SimpleRegisterReceiver -> org.osmdroid.tileprovider.util.SimpleRegisterReceiver:
    15:17:void <init>(android.content.Context) -> <init>
    31:32:void destroy() -> destroy
    21:21:android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    26:27:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
org.osmdroid.tileprovider.util.StorageUtils -> org.osmdroid.tileprovider.util.StorageUtils:
    485:545:java.util.Set getAllStorageLocationsRevised() -> getAllStorageLocationsRevised
    232:256:java.io.File getStorage() -> getStorage
    102:196:java.util.List getStorageList() -> getStorageList
    330:339:boolean isWritable(java.io.File) -> isWritable
org.osmdroid.tileprovider.util.StorageUtils$StorageInfo -> org.osmdroid.tileprovider.util.StorageUtils$StorageInfo:
    50:83:void <init>(java.lang.String,boolean,boolean,int) -> <init>
org.osmdroid.tileprovider.util.StreamUtils -> org.osmdroid.tileprovider.util.StreamUtils:
    77:85:void closeStream(java.io.Closeable) -> closeStream
    60:67:long copy(java.io.InputStream,java.io.OutputStream) -> copy
org.osmdroid.util.BoundingBox -> org.osmdroid.util.BoundingBox:
    318:318:void <clinit>() -> <clinit>
    42:44:void <init>(double,double,double,double) -> <init>
    51:51:void <init>() -> <init>
    21:21:org.osmdroid.util.BoundingBox access$000(android.os.Parcel) -> access$000
    21:21:java.lang.Object clone() -> clone
    77:77:org.osmdroid.util.BoundingBox clone() -> clone
    332:332:int describeContents() -> describeContents
    155:155:double getActualNorth() -> getActualNorth
    162:162:double getActualSouth() -> getActualSouth
    174:174:double getLatitudeSpan() -> getLatitudeSpan
    166:166:double getLonEast() -> getLonEast
    170:170:double getLonWest() -> getLonWest
    178:178:double getLongitudeSpan() -> getLongitudeSpan
    344:348:org.osmdroid.util.BoundingBox readFromParcel(android.os.Parcel) -> readFromParcel
    57:67:void set(double,double,double,double) -> set
    269:269:java.lang.String toString() -> toString
    337:341:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.osmdroid.util.BoundingBox$1 -> org.osmdroid.util.BoundingBox$1:
    318:318:void <init>() -> <init>
    318:318:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    321:321:org.osmdroid.util.BoundingBox createFromParcel(android.os.Parcel) -> createFromParcel
    318:318:java.lang.Object[] newArray(int) -> newArray
    326:326:org.osmdroid.util.BoundingBox[] newArray(int) -> newArray
org.osmdroid.util.Delay -> org.osmdroid.util.Delay:
    20:22:void <init>(long[]) -> <init>
    30:39:long next() -> next
    47:47:long now() -> now
    43:43:boolean shouldWait() -> shouldWait
org.osmdroid.util.GEMFFile -> org.osmdroid.util.GEMFFile:
    83:84:void <init>(java.io.File) -> <init>
    93:97:void <init>(java.lang.String) -> <init>
    421:424:void close() -> close
    560:655:java.io.InputStream getInputStream(int,int,int) -> getInputStream
    513:513:java.lang.String getName() -> getName
    434:449:void openFiles() -> openFiles
    456:466:void readHeader() -> readHeader
org.osmdroid.util.GEMFFile$GEMFInputStream -> org.osmdroid.util.GEMFFile$GEMFInputStream:
    692:697:void <init>(org.osmdroid.util.GEMFFile,java.lang.String,long,int) -> <init>
    701:701:int available() -> available
    706:707:void close() -> close
    711:711:boolean markSupported() -> markSupported
    716:719:int read(byte[],int,int) -> read
    724:728:int read() -> read
    734:734:long skip(long) -> skip
org.osmdroid.util.GEMFFile$GEMFRange -> org.osmdroid.util.GEMFFile$GEMFRange:
    667:667:void <init>(org.osmdroid.util.GEMFFile) -> <init>
    667:667:void <init>(org.osmdroid.util.GEMFFile,org.osmdroid.util.GEMFFile$1) -> <init>
    678:678:java.lang.String toString() -> toString
org.osmdroid.util.GarbageCollector -> org.osmdroid.util.GarbageCollector:
    19:21:void <init>(java.lang.Runnable) -> <init>
    14:14:java.lang.Runnable access$000(org.osmdroid.util.GarbageCollector) -> access$000
    14:14:java.util.concurrent.atomic.AtomicBoolean access$100(org.osmdroid.util.GarbageCollector) -> access$100
    24:39:boolean gc() -> gc
    43:43:boolean isRunning() -> isRunning
org.osmdroid.util.GarbageCollector$1 -> org.osmdroid.util.GarbageCollector$1:
    27:27:void <init>(org.osmdroid.util.GarbageCollector) -> <init>
    31:33:void run() -> run
org.osmdroid.util.GeoPoint -> org.osmdroid.util.GeoPoint:
    230:230:void <clinit>() -> <clinit>
    20:20:void <init>(android.os.Parcel,org.osmdroid.util.GeoPoint$1) -> <init>
    53:56:void <init>(double,double) -> <init>
    58:62:void <init>(double,double,double) -> <init>
    65:66:void <init>(android.location.Location) -> <init>
    68:72:void <init>(org.osmdroid.util.GeoPoint) -> <init>
    212:216:void <init>(android.os.Parcel) -> <init>
    20:20:java.lang.Object clone() -> clone
    170:170:org.osmdroid.util.GeoPoint clone() -> clone
    220:220:int describeContents() -> describeContents
    191:201:boolean equals(java.lang.Object) -> equals
    144:144:double getLatitude() -> getLatitude
    139:139:double getLongitude() -> getLongitude
    206:206:int hashCode() -> hashCode
    160:162:void setCoords(double,double) -> setCoords
    151:151:void setLatitude(double) -> setLatitude
    153:153:void setLongitude(double) -> setLongitude
    185:185:java.lang.String toString() -> toString
    225:228:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.osmdroid.util.GeoPoint$1 -> org.osmdroid.util.GeoPoint$1:
    230:230:void <init>() -> <init>
    230:230:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    233:233:org.osmdroid.util.GeoPoint createFromParcel(android.os.Parcel) -> createFromParcel
    230:230:java.lang.Object[] newArray(int) -> newArray
    238:238:org.osmdroid.util.GeoPoint[] newArray(int) -> newArray
org.osmdroid.util.GeometryMath -> org.osmdroid.util.GeometryMath:
    66:66:double Max4(double,double,double,double) -> Max4
    62:62:double Min4(double,double,double,double) -> Min4
    31:58:android.graphics.Rect getBoundingBoxForRotatatedRectangle(android.graphics.Rect,int,int,float,android.graphics.Rect) -> getBoundingBoxForRotatatedRectangle
org.osmdroid.util.MapTileArea -> org.osmdroid.util.MapTileArea:
    13:13:void <init>() -> <init>
    13:13:int access$000(org.osmdroid.util.MapTileArea) -> access$000
    13:13:int access$100(org.osmdroid.util.MapTileArea) -> access$100
    13:13:int access$200(org.osmdroid.util.MapTileArea) -> access$200
    13:13:int access$300(org.osmdroid.util.MapTileArea) -> access$300
    13:13:int access$400(org.osmdroid.util.MapTileArea) -> access$400
    139:145:int cleanValue(int) -> cleanValue
    149:152:int computeSize(int,int) -> computeSize
    122:128:boolean contains(long) -> contains
    132:135:boolean contains(int,int,int) -> contains
    77:77:int getBottom() -> getBottom
    69:69:int getHeight() -> getHeight
    57:57:int getLeft() -> getLeft
    73:73:int getRight() -> getRight
    61:61:int getTop() -> getTop
    65:65:int getWidth() -> getWidth
    53:53:int getZoom() -> getZoom
    87:87:java.util.Iterator iterator() -> iterator
    48:49:org.osmdroid.util.MapTileArea reset() -> reset
    23:29:org.osmdroid.util.MapTileArea set(int,int,int,int,int) -> set
    33:33:org.osmdroid.util.MapTileArea set(int,android.graphics.Rect) -> set
    37:40:org.osmdroid.util.MapTileArea set(org.osmdroid.util.MapTileArea) -> set
    82:82:int size() -> size
org.osmdroid.util.MapTileArea$1 -> org.osmdroid.util.MapTileArea$1:
    87:87:void <init>(org.osmdroid.util.MapTileArea) -> <init>
    93:93:boolean hasNext() -> hasNext
    87:87:java.lang.Object next() -> next
    98:110:java.lang.Long next() -> next
    115:115:void remove() -> remove
org.osmdroid.util.MapTileAreaBorderComputer -> org.osmdroid.util.MapTileAreaBorderComputer:
    13:15:void <init>(int) -> <init>
    23:34:org.osmdroid.util.MapTileArea computeFromSource(org.osmdroid.util.MapTileArea,org.osmdroid.util.MapTileArea) -> computeFromSource
org.osmdroid.util.MapTileAreaList -> org.osmdroid.util.MapTileAreaList:
    13:15:void <init>() -> <init>
    13:13:java.util.List access$000(org.osmdroid.util.MapTileAreaList) -> access$000
    71:76:boolean contains(long) -> contains
    18:18:java.util.List getList() -> getList
    32:32:java.util.Iterator iterator() -> iterator
    23:27:int size() -> size
org.osmdroid.util.MapTileAreaList$1 -> org.osmdroid.util.MapTileAreaList$1:
    32:32:void <init>(org.osmdroid.util.MapTileAreaList) -> <init>
    58:64:java.util.Iterator getCurrent() -> getCurrent
    39:40:boolean hasNext() -> hasNext
    32:32:java.lang.Object next() -> next
    45:49:java.lang.Long next() -> next
    54:54:void remove() -> remove
org.osmdroid.util.MapTileAreaZoomComputer -> org.osmdroid.util.MapTileAreaZoomComputer:
    13:15:void <init>(int) -> <init>
    19:28:org.osmdroid.util.MapTileArea computeFromSource(org.osmdroid.util.MapTileArea,org.osmdroid.util.MapTileArea) -> computeFromSource
org.osmdroid.util.MapTileIndex -> org.osmdroid.util.MapTileIndex:
    14:15:void <clinit>() -> <clinit>
    54:55:void checkValues(int,int,int) -> checkValues
    18:19:long getTileIndex(int,int,int) -> getTileIndex
    29:29:int getX(long) -> getX
    33:33:int getY(long) -> getY
    25:25:int getZoom(long) -> getZoom
    70:70:void throwIllegalValue(int,int,java.lang.String) -> throwIllegalValue
    40:40:java.lang.String toString(int,int,int) -> toString
    47:47:java.lang.String toString(long) -> toString
org.osmdroid.util.MapTileList -> org.osmdroid.util.MapTileList:
    9:9:void <init>() -> <init>
    15:16:void clear() -> clear
    74:82:boolean contains(long) -> contains
    57:69:void ensureCapacity(int) -> ensureCapacity
    23:23:long get(int) -> get
    19:19:int getSize() -> getSize
    27:29:void put(long) -> put
org.osmdroid.util.MyMath -> org.osmdroid.util.MyMath:
    78:82:int floorToInt(double) -> floorToInt
    67:71:long floorToLong(double) -> floorToLong
    51:57:int mod(int,int) -> mod
org.osmdroid.util.PointL -> org.osmdroid.util.PointL:
    14:14:void <init>() -> <init>
    62:69:boolean equals(java.lang.Object) -> equals
    54:54:java.lang.String toString() -> toString
org.osmdroid.util.RectL -> org.osmdroid.util.RectL:
    19:19:void <init>() -> <init>
    21:23:void <init>(long,long,long,long) -> <init>
    95:96:boolean equals(java.lang.Object) -> equals
    104:108:int hashCode() -> hashCode
    30:34:void set(long,long,long,long) -> set
    90:90:java.lang.String toString() -> toString
org.osmdroid.util.TileLooper -> org.osmdroid.util.TileLooper:
    16:17:void <init>() -> <init>
    19:22:void <init>(boolean,boolean) -> <init>
    48:48:void initialiseLoop() -> initialiseLoop
    25:46:void loop(double,org.osmdroid.util.RectL) -> loop
    59:60:void setHorizontalWrapEnabled(boolean) -> setHorizontalWrapEnabled
    67:68:void setVerticalWrapEnabled(boolean) -> setVerticalWrapEnabled
org.osmdroid.util.TileSystem -> org.osmdroid.util.TileSystem:
    47:70:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    281:281:double Clip(double,double,double) -> Clip
    536:544:long ClipToLong(double,double,boolean) -> ClipToLong
    125:125:double GroundResolution(double,int) -> GroundResolution
    132:132:double GroundResolution(double,double) -> GroundResolution
    140:141:double GroundResolutionMapSize(double,double) -> GroundResolutionMapSize
    114:114:double MapSize(double) -> MapSize
    684:684:double cleanLatitude(double) -> cleanLatitude
    669:677:double cleanLongitude(double) -> cleanLongitude
    529:529:long getCleanMercator(long,double,boolean) -> getCleanMercator
    121:121:double getFactor(double) -> getFactor
    582:585:org.osmdroid.util.GeoPoint getGeoFromMercator(long,long,double,org.osmdroid.util.GeoPoint,boolean,boolean) -> getGeoFromMercator
    102:102:int getInputTileZoomLevel(double) -> getInputTileZoomLevel
    506:507:double getLatitudeFromY01(double,boolean) -> getLatitudeFromY01
    519:520:double getLongitudeFromX01(double,boolean) -> getLongitudeFromX01
    88:88:int getMaximumZoomLevel() -> getMaximumZoomLevel
    642:642:long getMercatorFromTile(int,double) -> getMercatorFromTile
    496:496:long getMercatorFromXY01(double,double,boolean) -> getMercatorFromXY01
    489:489:long getMercatorXFromLongitude(double,double,boolean) -> getMercatorXFromLongitude
    482:482:long getMercatorYFromLatitude(double,double,boolean) -> getMercatorYFromLatitude
    623:623:int getTileFromMercator(long,double) -> getTileFromMercator
    630:635:android.graphics.Rect getTileFromMercator(org.osmdroid.util.RectL,double,android.graphics.Rect) -> getTileFromMercator
    80:80:int getTileSize() -> getTileSize
    95:95:double getTileSize(double) -> getTileSize
    220:222:double getX01FromLongitude(double,boolean) -> getX01FromLongitude
    592:592:double getXY01FromMercator(long,double,boolean) -> getXY01FromMercator
    231:233:double getY01FromLatitude(double,boolean) -> getY01FromLatitude
    698:698:boolean isValidLatitude(double) -> isValidLatitude
    691:691:boolean isValidLongitude(double) -> isValidLongitude
    73:77:void setTileSize(int) -> setTileSize
    712:712:java.lang.String toStringLatitudeSpan() -> toStringLatitudeSpan
    705:705:java.lang.String toStringLongitudeSpan() -> toStringLongitudeSpan
    565:565:int truncateToInt(long) -> truncateToInt
    460:461:double wrap(double,double,double,double) -> wrap
org.osmdroid.util.TileSystemWebMercator -> org.osmdroid.util.TileSystemWebMercator:
    7:7:void <init>() -> <init>
    32:32:double getLatitudeFromY01(double) -> getLatitudeFromY01
    27:27:double getLongitudeFromX01(double) -> getLongitudeFromX01
    42:42:double getMaxLatitude() -> getMaxLatitude
    52:52:double getMaxLongitude() -> getMaxLongitude
    37:37:double getMinLatitude() -> getMinLatitude
    47:47:double getMinLongitude() -> getMinLongitude
    16:16:double getX01FromLongitude(double) -> getX01FromLongitude
    21:22:double getY01FromLatitude(double) -> getY01FromLatitude
org.osmdroid.util.UrlBackoff -> org.osmdroid.util.UrlBackoff:
    12:12:void <clinit>() -> <clinit>
    10:17:void <init>() -> <init>
    21:23:void next(java.lang.String) -> next
    35:37:org.osmdroid.util.Delay remove(java.lang.String) -> remove
    42:44:boolean shouldWait(java.lang.String) -> shouldWait
org.osmdroid.views.CustomZoomButtonsController -> org.osmdroid.views.CustomZoomButtonsController:
    34:74:void <init>(org.osmdroid.views.MapView) -> <init>
    13:13:boolean access$000(org.osmdroid.views.CustomZoomButtonsController) -> access$000
    13:13:android.animation.ValueAnimator access$100(org.osmdroid.views.CustomZoomButtonsController) -> access$100
    13:13:float access$202(org.osmdroid.views.CustomZoomButtonsController,float) -> access$202
    13:13:void access$300(org.osmdroid.views.CustomZoomButtonsController) -> access$300
    13:13:long access$400(org.osmdroid.views.CustomZoomButtonsController) -> access$400
    13:13:int access$500(org.osmdroid.views.CustomZoomButtonsController) -> access$500
    13:13:long access$600(org.osmdroid.views.CustomZoomButtonsController) -> access$600
    13:13:void access$700(org.osmdroid.views.CustomZoomButtonsController) -> access$700
    150:172:void activate() -> activate
    177:181:boolean checkJustActivated() -> checkJustActivated
    221:222:void draw(android.graphics.Canvas) -> draw
    143:147:void invalidate() -> invalidate
    185:203:boolean isTouched(android.view.MotionEvent) -> isTouched
    115:115:long nowInMillis() -> nowInMillis
    110:112:void onDetach() -> onDetach
    217:217:boolean onLongPress(android.view.MotionEvent) -> onLongPress
    213:213:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    89:90:void setOnZoomListener(org.osmdroid.views.CustomZoomButtonsController$OnZoomListener) -> setOnZoomListener
    93:101:void setVisibility(org.osmdroid.views.CustomZoomButtonsController$Visibility) -> setVisibility
    77:78:void setZoomInEnabled(boolean) -> setZoomInEnabled
    81:82:void setZoomOutEnabled(boolean) -> setZoomOutEnabled
    119:134:void startFadeOut() -> startFadeOut
    137:140:void stopFadeOut() -> stopFadeOut
org.osmdroid.views.CustomZoomButtonsController$1 -> org.osmdroid.views.CustomZoomButtonsController$1:
    42:42:void <init>(org.osmdroid.views.CustomZoomButtonsController) -> <init>
    45:51:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
org.osmdroid.views.CustomZoomButtonsController$2 -> org.osmdroid.views.CustomZoomButtonsController$2:
    57:57:void <init>(org.osmdroid.views.CustomZoomButtonsController) -> <init>
    61:70:void run() -> run
org.osmdroid.views.CustomZoomButtonsController$3 -> org.osmdroid.views.CustomZoomButtonsController$3:
    124:124:void <init>(org.osmdroid.views.CustomZoomButtonsController) -> <init>
    127:128:void run() -> run
org.osmdroid.views.CustomZoomButtonsController$4 -> org.osmdroid.views.CustomZoomButtonsController$4:
    94:94:void <clinit>() -> <clinit>
org.osmdroid.views.CustomZoomButtonsController$Visibility -> org.osmdroid.views.CustomZoomButtonsController$Visibility:
    15:15:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    15:15:org.osmdroid.views.CustomZoomButtonsController$Visibility valueOf(java.lang.String) -> valueOf
    15:15:org.osmdroid.views.CustomZoomButtonsController$Visibility[] values() -> values
org.osmdroid.views.CustomZoomButtonsDisplay -> org.osmdroid.views.CustomZoomButtonsDisplay:
    36:41:void <init>(org.osmdroid.views.MapView) -> <init>
    85:108:void draw(android.graphics.Canvas,float,boolean,boolean) -> draw
    161:172:android.graphics.Bitmap getBitmap(boolean,boolean) -> getBitmap
    133:135:float getFirstLeft(int) -> getFirstLeft
    147:149:float getFirstTop(int) -> getFirstTop
    79:80:android.graphics.Bitmap getIcon(boolean) -> getIcon
    112:129:float getTopLeft(boolean,boolean) -> getTopLeft
    66:75:android.graphics.Bitmap getZoomBitmap(boolean,boolean) -> getZoomBitmap
    186:186:boolean isTouched(int,int,boolean) -> isTouched
    191:192:boolean isTouched(boolean,boolean,float) -> isTouched
    176:182:boolean isTouchedRotated(android.view.MotionEvent,boolean) -> isTouchedRotated
    58:63:void setBitmaps(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap) -> setBitmaps
    52:54:void setMarginPadding(float,float) -> setMarginPadding
    46:49:void setPositions(boolean,org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition,org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition) -> setPositions
org.osmdroid.views.CustomZoomButtonsDisplay$1 -> org.osmdroid.views.CustomZoomButtonsDisplay$1:
    147:133:void <clinit>() -> <clinit>
org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition -> org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition:
    19:19:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    19:19:org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition valueOf(java.lang.String) -> valueOf
    19:19:org.osmdroid.views.CustomZoomButtonsDisplay$HorizontalPosition[] values() -> values
org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition -> org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition:
    20:20:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    20:20:org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition valueOf(java.lang.String) -> valueOf
    20:20:org.osmdroid.views.CustomZoomButtonsDisplay$VerticalPosition[] values() -> values
org.osmdroid.views.MapController -> org.osmdroid.views.MapController:
    59:80:void <init>(org.osmdroid.views.MapView) -> <init>
    129:130:void animateTo(org.osmdroid.api.IGeoPoint) -> animateTo
    138:165:void animateTo(org.osmdroid.api.IGeoPoint,java.lang.Double,java.lang.Long,java.lang.Float) -> animateTo
    172:173:void animateTo(org.osmdroid.api.IGeoPoint,java.lang.Double,java.lang.Long) -> animateTo
    181:199:void animateTo(int,int) -> animateTo
    436:447:void onAnimationEnd() -> onAnimationEnd
    432:433:void onAnimationStart() -> onAnimationStart
    84:85:void onFirstLayout(android.view.View,int,int,int,int) -> onFirstLayout
    212:217:void setCenter(org.osmdroid.api.IGeoPoint) -> setCenter
    266:266:double setZoom(double) -> setZoom
    274:274:boolean zoomIn() -> zoomIn
    279:279:boolean zoomIn(java.lang.Long) -> zoomIn
    290:290:boolean zoomInFixing(int,int,java.lang.Long) -> zoomInFixing
    295:295:boolean zoomInFixing(int,int) -> zoomInFixing
    300:300:boolean zoomOut(java.lang.Long) -> zoomOut
    308:308:boolean zoomOut() -> zoomOut
    345:345:boolean zoomTo(double,java.lang.Long) -> zoomTo
    356:414:boolean zoomToFixing(double,int,int,java.lang.Long) -> zoomToFixing
    89:90:void zoomToSpan(double,double) -> zoomToSpan
    121:122:void zoomToSpan(int,int) -> zoomToSpan
org.osmdroid.views.MapController$1 -> org.osmdroid.views.MapController$1:
    579:579:void <clinit>() -> <clinit>
org.osmdroid.views.MapController$MapAnimatorListener -> org.osmdroid.views.MapController$MapAnimatorListener:
    465:473:void <init>(org.osmdroid.views.MapController,java.lang.Double,java.lang.Double,org.osmdroid.api.IGeoPoint,org.osmdroid.api.IGeoPoint,java.lang.Float,java.lang.Float) -> <init>
    488:488:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    482:483:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    493:493:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    477:478:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    497:520:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
org.osmdroid.views.MapController$ReplayController -> org.osmdroid.views.MapController$ReplayController:
    553:554:void <init>(org.osmdroid.views.MapController) -> <init>
    553:553:void <init>(org.osmdroid.views.MapController,org.osmdroid.views.MapController$1) -> <init>
    557:558:void animateTo(org.osmdroid.api.IGeoPoint,java.lang.Double,java.lang.Long) -> animateTo
    561:562:void animateTo(int,int) -> animateTo
    578:599:void replayCalls() -> replayCalls
    565:566:void setCenter(org.osmdroid.api.IGeoPoint) -> setCenter
    573:574:void zoomToSpan(double,double) -> zoomToSpan
org.osmdroid.views.MapController$ReplayController$ReplayClass -> org.osmdroid.views.MapController$ReplayController$ReplayClass:
    609:610:void <init>(org.osmdroid.views.MapController$ReplayController,org.osmdroid.views.MapController$ReplayType,android.graphics.Point,org.osmdroid.api.IGeoPoint) -> <init>
    615:621:void <init>(org.osmdroid.views.MapController$ReplayController,org.osmdroid.views.MapController$ReplayType,android.graphics.Point,org.osmdroid.api.IGeoPoint,java.lang.Double,java.lang.Long) -> <init>
    601:601:org.osmdroid.views.MapController$ReplayType access$100(org.osmdroid.views.MapController$ReplayController$ReplayClass) -> access$100
    601:601:org.osmdroid.api.IGeoPoint access$200(org.osmdroid.views.MapController$ReplayController$ReplayClass) -> access$200
    601:601:java.lang.Double access$300(org.osmdroid.views.MapController$ReplayController$ReplayClass) -> access$300
    601:601:java.lang.Long access$400(org.osmdroid.views.MapController$ReplayController$ReplayClass) -> access$400
    601:601:android.graphics.Point access$500(org.osmdroid.views.MapController$ReplayController$ReplayClass) -> access$500
org.osmdroid.views.MapController$ReplayType -> org.osmdroid.views.MapController$ReplayType:
    548:547:void <clinit>() -> <clinit>
    547:547:void <init>(java.lang.String,int) -> <init>
    547:547:org.osmdroid.views.MapController$ReplayType valueOf(java.lang.String) -> valueOf
    547:547:org.osmdroid.views.MapController$ReplayType[] values() -> values
org.osmdroid.views.MapController$ZoomAnimationListener -> org.osmdroid.views.MapController$ZoomAnimationListener:
    527:529:void <init>(org.osmdroid.views.MapController) -> <init>
    538:539:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    544:544:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    533:534:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
org.osmdroid.views.MapView -> org.osmdroid.views.MapView:
    173:173:void <clinit>() -> <clinit>
    182:184:void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet) -> <init>
    189:237:void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler,android.util.AttributeSet,boolean) -> <init>
    243:244:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    247:248:void <init>(android.content.Context) -> <init>
    255:256:void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase) -> <init>
    261:263:void <init>(android.content.Context,org.osmdroid.tileprovider.MapTileProviderBase,android.os.Handler) -> <init>
    63:63:android.widget.Scroller access$300(org.osmdroid.views.MapView) -> access$300
    63:63:org.osmdroid.views.CustomZoomButtonsController access$400(org.osmdroid.views.MapView) -> access$400
    63:63:boolean access$500(org.osmdroid.views.MapView) -> access$500
    63:63:boolean access$600(org.osmdroid.views.MapView) -> access$600
    63:63:boolean access$602(org.osmdroid.views.MapView,boolean) -> access$602
    63:63:boolean access$700(org.osmdroid.views.MapView) -> access$700
    63:63:boolean access$702(org.osmdroid.views.MapView,boolean) -> access$702
    63:63:org.metalev.multitouch.controller.MultiTouchController access$800(org.osmdroid.views.MapView) -> access$800
    975:977:void addOnFirstLayoutListener(org.osmdroid.views.MapView$OnFirstLayoutListener) -> addOnFirstLayoutListener
    609:609:boolean canZoomIn() -> canZoomIn
    613:613:boolean canZoomOut() -> canZoomOut
    864:864:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1343:1345:void checkZoomButtons() -> checkZoomButtons
    1128:1144:void computeScroll() -> computeScroll
    1058:1096:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    852:852:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    858:858:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    869:869:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    313:313:org.osmdroid.util.BoundingBox getBoundingBox() -> getBoundingBox
    271:271:org.osmdroid.api.IMapController getController() -> getController
    1237:1243:java.lang.Object getDraggableObjectAtPoint(org.metalev.multitouch.controller.MultiTouchController$PointInfo) -> getDraggableObjectAtPoint
    1763:1763:org.osmdroid.util.GeoPoint getExpectedCenter() -> getExpectedCenter
    330:332:android.graphics.Rect getIntrinsicScreenRect(android.graphics.Rect) -> getIntrinsicScreenRect
    304:304:double getLatitudeSpanDouble() -> getLatitudeSpanDouble
    309:309:double getLongitudeSpanDouble() -> getLongitudeSpanDouble
    669:669:org.osmdroid.api.IGeoPoint getMapCenter() -> getMapCenter
    676:676:org.osmdroid.api.IGeoPoint getMapCenter(org.osmdroid.util.GeoPoint) -> getMapCenter
    700:700:float getMapOrientation() -> getMapOrientation
    708:708:float getMapScale() -> getMapScale
    1739:1739:long getMapScrollX() -> getMapScrollX
    1743:1743:long getMapScrollY() -> getMapScrollY
    589:589:double getMaxZoomLevel() -> getMaxZoomLevel
    581:581:double getMinZoomLevel() -> getMinZoomLevel
    283:283:org.osmdroid.views.overlay.OverlayManager getOverlayManager() -> getOverlayManager
    279:279:java.util.List getOverlays() -> getOverlays
    1249:1251:void getPositionAndScale(java.lang.Object,org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) -> getPositionAndScale
    63:63:org.osmdroid.api.IProjection getProjection() -> getProjection
    345:360:org.osmdroid.views.Projection getProjection() -> getProjection
    1819:1819:org.osmdroid.views.MapViewRepository getRepository() -> getRepository
    321:326:android.graphics.Rect getScreenRect(android.graphics.Rect) -> getScreenRect
    295:295:android.widget.Scroller getScroller() -> getScroller
    291:291:org.osmdroid.tileprovider.MapTileProviderBase getTileProvider() -> getTileProvider
    299:299:android.os.Handler getTileRequestCompleteHandler() -> getTileRequestCompleteHandler
    1405:1431:org.osmdroid.tileprovider.tilesource.ITileSource getTileSourceFromAttributes(android.util.AttributeSet) -> getTileSourceFromAttributes
    1805:1805:org.osmdroid.util.TileSystem getTileSystem() -> getTileSystem
    413:413:float getTilesScaleFactor() -> getTilesScaleFactor
    1826:1826:org.osmdroid.views.CustomZoomButtonsController getZoomController() -> getZoomController
    552:552:int getZoomLevel() -> getZoomLevel
    560:560:double getZoomLevelDouble() -> getZoomLevelDouble
    1228:1228:boolean isAnimating() -> isAnimating
    1366:1366:boolean isHorizontalMapRepetitionEnabled() -> isHorizontalMapRepetitionEnabled
    984:984:boolean isLayoutOccurred() -> isLayoutOccurred
    397:397:boolean isTilesScaledToDpi() -> isTilesScaledToDpi
    1387:1387:boolean isVerticalMapRepetitionEnabled() -> isVerticalMapRepetitionEnabled
    893:967:void myOnLayout(boolean,int,int,int,int) -> myOnLayout
    989:990:void onAttachedToWindow() -> onAttachedToWindow
    1012:1027:void onDetach() -> onDetach
    1209:1215:void onDetachedFromWindow() -> onDetachedFromWindow
    1179:1205:void onDraw(android.graphics.Canvas) -> onDraw
    1031:1033:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1038:1040:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    883:884:void onLayout(boolean,int,int,int,int) -> onLayout
    875:878:void onMeasure(int,int) -> onMeasure
    997:998:void onPause() -> onPause
    1005:1006:void onResume() -> onResume
    1107:1107:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1046:1052:boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    1276:1277:void resetMultiTouchScale() -> resetMultiTouchScale
    373:374:void resetProjection() -> resetProjection
    752:753:void resetScrollableAreaLimitLatitude() -> resetScrollableAreaLimitLatitude
    759:760:void resetScrollableAreaLimitLongitude() -> resetScrollableAreaLimitLongitude
    1111:1123:android.view.MotionEvent rotateTouchEvent(android.view.MotionEvent) -> rotateTouchEvent
    1168:1169:void scrollBy(int,int) -> scrollBy
    1148:1161:void scrollTo(int,int) -> scrollTo
    1255:1260:void selectObject(java.lang.Object,org.metalev.multitouch.controller.MultiTouchController$PointInfo) -> selectObject
    1173:1175:void setBackgroundColor(int) -> setBackgroundColor
    1352:1355:void setBuiltInZoomControls(boolean) -> setBuiltInZoomControls
    1773:1785:void setExpectedCenter(org.osmdroid.api.IGeoPoint,long,long) -> setExpectedCenter
    1791:1792:void setExpectedCenter(org.osmdroid.api.IGeoPoint) -> setExpectedCenter
    1438:1439:void setFlingEnabled(boolean) -> setFlingEnabled
    1376:1380:void setHorizontalMapRepetitionEnabled(boolean) -> setHorizontalMapRepetitionEnabled
    1735:1736:void setInitCenter(org.osmdroid.api.IGeoPoint) -> setInitCenter
    381:382:void setMapCenter(org.osmdroid.api.IGeoPoint) -> setMapCenter
    1316:1317:void setMapListener(org.osmdroid.events.MapListener) -> setMapListener
    684:685:void setMapOrientation(float) -> setMapOrientation
    692:697:void setMapOrientation(float,boolean) -> setMapOrientation
    1747:1750:void setMapScroll(long,long) -> setMapScroll
    605:606:void setMaxZoomLevel(java.lang.Double) -> setMaxZoomLevel
    597:598:void setMinZoomLevel(java.lang.Double) -> setMinZoomLevel
    1358:1359:void setMultiTouchControls(boolean) -> setMultiTouchControls
    1300:1301:void setMultiTouchScale(float) -> setMultiTouchScale
    1293:1294:void setMultiTouchScaleCurrentPoint(float,float) -> setMultiTouchScaleCurrentPoint
    1283:1287:void setMultiTouchScaleInitPoint(float,float) -> setMultiTouchScaleInitPoint
    287:288:void setOverlayManager(org.osmdroid.views.overlay.OverlayManager) -> setOverlayManager
    1265:1269:boolean setPositionAndScale(java.lang.Object,org.metalev.multitouch.controller.MultiTouchController$PositionAndScale,org.metalev.multitouch.controller.MultiTouchController$PointInfo) -> setPositionAndScale
    369:370:void setProjection(org.osmdroid.views.Projection) -> setProjection
    739:746:void setScrollableAreaLimitDouble(org.osmdroid.util.BoundingBox) -> setScrollableAreaLimitDouble
    779:783:void setScrollableAreaLimitLatitude(double,double,int) -> setScrollableAreaLimitLatitude
    794:798:void setScrollableAreaLimitLongitude(double,double,int) -> setScrollableAreaLimitLongitude
    1716:1726:void setTileProvider(org.osmdroid.tileprovider.MapTileProviderBase) -> setTileProvider
    441:446:void setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource) -> setTileSource
    1812:1813:void setTileSystem(org.osmdroid.util.TileSystem) -> setTileSystem
    422:424:void setTilesScaleFactor(float) -> setTilesScaleFactor
    408:410:void setTilesScaledToDpi(boolean) -> setTilesScaledToDpi
    726:727:void setUseDataConnection(boolean) -> setUseDataConnection
    1397:1401:void setVerticalMapRepetitionEnabled(boolean) -> setVerticalMapRepetitionEnabled
    454:496:double setZoomLevel(double) -> setZoomLevel
    1798:1799:void setZoomRounding(boolean) -> setZoomRounding
    1307:1308:void startAnimation() -> startAnimation
    432:438:void updateTileSizeForDensity(org.osmdroid.tileprovider.tilesource.ITileSource) -> updateTileSizeForDensity
org.osmdroid.views.MapView$LayoutParams -> org.osmdroid.views.MapView$LayoutParams:
    1676:1685:void <init>(int,int,org.osmdroid.api.IGeoPoint,int,int,int) -> <init>
    1698:1701:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1704:1705:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
org.osmdroid.views.MapView$MapViewDoubleClickListener -> org.osmdroid.views.MapView$MapViewDoubleClickListener:
    1535:1535:void <init>(org.osmdroid.views.MapView) -> <init>
    1535:1535:void <init>(org.osmdroid.views.MapView,org.osmdroid.views.MapView$1) -> <init>
    1538:1545:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    1550:1554:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    1559:1566:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
org.osmdroid.views.MapView$MapViewGestureDetectorListener -> org.osmdroid.views.MapView$MapViewGestureDetectorListener:
    1447:1447:void <init>(org.osmdroid.views.MapView) -> <init>
    1447:1447:void <init>(org.osmdroid.views.MapView,org.osmdroid.views.MapView$1) -> <init>
    1453:1466:boolean onDown(android.view.MotionEvent) -> onDown
    1473:1476:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    1498:1505:void onLongPress(android.view.MotionEvent) -> onLongPress
    1510:1516:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    1521:1522:void onShowPress(android.view.MotionEvent) -> onShowPress
    1526:1530:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
org.osmdroid.views.MapView$MapViewZoomListener -> org.osmdroid.views.MapView$MapViewZoomListener:
    1570:1570:void <init>(org.osmdroid.views.MapView) -> <init>
    1570:1570:void <init>(org.osmdroid.views.MapView,org.osmdroid.views.MapView$1) -> <init>
    1573:1578:void onZoom(boolean) -> onZoom
org.osmdroid.views.MapViewRepository -> org.osmdroid.views.MapViewRepository:
    28:30:void <init>(org.osmdroid.views.MapView) -> <init>
    37:46:void onDetach() -> onDetach
org.osmdroid.views.Projection -> org.osmdroid.views.Projection:
    65:72:void <init>(org.osmdroid.views.MapView) -> <init>
    83:100:void <init>(double,android.graphics.Rect,org.osmdroid.util.GeoPoint,long,long,float,boolean,boolean,org.osmdroid.util.TileSystem) -> <init>
    671:679:void adjustOffsets(org.osmdroid.api.IGeoPoint,android.graphics.PointF) -> adjustOffsets
    709:721:void adjustOffsets(double,double,boolean,int) -> adjustOffsets
    727:735:void adjustOffsets(long,long) -> adjustOffsets
    365:376:android.graphics.Point applyMatrixToPoint(int,int,android.graphics.Point,android.graphics.Matrix,boolean) -> applyMatrixToPoint
    383:383:void detach() -> detach
    147:147:org.osmdroid.api.IGeoPoint fromPixels(int,int,org.osmdroid.util.GeoPoint) -> fromPixels
    166:166:org.osmdroid.api.IGeoPoint fromPixels(int,int,org.osmdroid.util.GeoPoint,boolean) -> fromPixels
    119:119:org.osmdroid.util.BoundingBox getBoundingBox() -> getBoundingBox
    598:598:long getCleanMercator(long,boolean) -> getCleanMercator
    457:483:long getCloserPixel(long,int,int,double) -> getCloserPixel
    605:605:org.osmdroid.util.GeoPoint getCurrentCenter() -> getCurrentCenter
    342:342:android.graphics.Matrix getInvertedScaleRotateCanvasMatrix() -> getInvertedScaleRotateCanvasMatrix
    504:508:long getLongPixelFromMercator(long,boolean,long,int,int) -> getLongPixelFromMercator
    188:188:long getLongPixelXFromLongitude(double,boolean) -> getLongPixelXFromLongitude
    196:196:long getLongPixelXFromLongitude(double) -> getLongPixelXFromLongitude
    490:490:long getLongPixelXFromMercator(long,boolean) -> getLongPixelXFromMercator
    204:204:long getLongPixelYFromLatitude(double,boolean) -> getLongPixelYFromLatitude
    212:212:long getLongPixelYFromLatitude(double) -> getLongPixelYFromLatitude
    497:497:long getLongPixelYFromMercator(long,boolean) -> getLongPixelYFromMercator
    401:401:long getMercatorFromTile(int) -> getMercatorFromTile
    522:563:org.osmdroid.util.RectL getMercatorViewPort(org.osmdroid.util.RectL) -> getMercatorViewPort
    584:584:long getMercatorXFromPixel(int) -> getMercatorXFromPixel
    591:591:long getMercatorYFromPixel(int) -> getMercatorYFromPixel
    389:394:android.graphics.Rect getPixelFromTile(int,int,android.graphics.Rect) -> getPixelFromTile
    570:570:int getScreenCenterX() -> getScreenCenterX
    577:577:int getScreenCenterY() -> getScreenCenterY
    749:770:long getScrollableOffset(long,long,double,int,int) -> getScrollableOffset
    115:115:double getZoomLevel() -> getZoomLevel
    641:664:void refresh() -> refresh
    630:633:void restore(android.graphics.Canvas,boolean) -> restore
    358:358:android.graphics.Point rotateAndScalePoint(int,int,android.graphics.Point) -> rotateAndScalePoint
    620:624:void save(android.graphics.Canvas,boolean,boolean) -> save
    777:781:boolean setMapScroll(org.osmdroid.views.MapView) -> setMapScroll
    297:300:org.osmdroid.util.PointL toMercatorPixels(int,int,org.osmdroid.util.PointL) -> toMercatorPixels
    173:173:android.graphics.Point toPixels(org.osmdroid.api.IGeoPoint,android.graphics.Point) -> toPixels
    177:180:android.graphics.Point toPixels(org.osmdroid.api.IGeoPoint,android.graphics.Point,boolean) -> toPixels
    350:350:android.graphics.Point unrotateAndScalePoint(int,int,android.graphics.Point) -> unrotateAndScalePoint
org.osmdroid.views.overlay.DefaultOverlayManager -> org.osmdroid.views.overlay.DefaultOverlayManager:
    32:35:void <init>(org.osmdroid.views.overlay.TilesOverlay) -> <init>
    26:26:java.util.concurrent.CopyOnWriteArrayList access$000(org.osmdroid.views.overlay.DefaultOverlayManager) -> access$000
    26:26:void add(int,java.lang.Object) -> add
    49:56:void add(int,org.osmdroid.views.overlay.Overlay) -> add
    26:26:java.lang.Object get(int) -> get
    39:39:org.osmdroid.views.overlay.Overlay get(int) -> get
    149:157:void onDetach(org.osmdroid.views.MapView) -> onDetach
    242:248:boolean onDoubleTap(android.view.MotionEvent,org.osmdroid.views.MapView) -> onDoubleTap
    253:259:boolean onDoubleTapEvent(android.view.MotionEvent,org.osmdroid.views.MapView) -> onDoubleTapEvent
    277:283:boolean onDown(android.view.MotionEvent,org.osmdroid.views.MapView) -> onDown
    123:145:void onDraw(android.graphics.Canvas,org.osmdroid.views.MapView) -> onDraw
    289:295:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float,org.osmdroid.views.MapView) -> onFling
    183:189:boolean onKeyDown(int,android.view.KeyEvent,org.osmdroid.views.MapView) -> onKeyDown
    194:200:boolean onKeyUp(int,android.view.KeyEvent,org.osmdroid.views.MapView) -> onKeyUp
    300:306:boolean onLongPress(android.view.MotionEvent,org.osmdroid.views.MapView) -> onLongPress
    161:168:void onPause() -> onPause
    172:179:void onResume() -> onResume
    312:318:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float,org.osmdroid.views.MapView) -> onScroll
    323:326:void onShowPress(android.view.MotionEvent,org.osmdroid.views.MapView) -> onShowPress
    264:270:boolean onSingleTapConfirmed(android.view.MotionEvent,org.osmdroid.views.MapView) -> onSingleTapConfirmed
    330:336:boolean onSingleTapUp(android.view.MotionEvent,org.osmdroid.views.MapView) -> onSingleTapUp
    227:235:boolean onSnapToItem(int,int,android.graphics.Point,org.osmdroid.api.IMapView) -> onSnapToItem
    205:211:boolean onTouchEvent(android.view.MotionEvent,org.osmdroid.views.MapView) -> onTouchEvent
    216:222:boolean onTrackballEvent(android.view.MotionEvent,org.osmdroid.views.MapView) -> onTrackballEvent
    116:116:java.util.List overlays() -> overlays
    89:89:java.lang.Iterable overlaysReversed() -> overlaysReversed
    26:26:java.lang.Object remove(int) -> remove
    60:60:org.osmdroid.views.overlay.Overlay remove(int) -> remove
    26:26:java.lang.Object set(int,java.lang.Object) -> set
    66:72:org.osmdroid.views.overlay.Overlay set(int,org.osmdroid.views.overlay.Overlay) -> set
    84:85:void setTilesOverlay(org.osmdroid.views.overlay.TilesOverlay) -> setTilesOverlay
    44:44:int size() -> size
org.osmdroid.views.overlay.DefaultOverlayManager$1 -> org.osmdroid.views.overlay.DefaultOverlayManager$1:
    89:89:void <init>(org.osmdroid.views.overlay.DefaultOverlayManager) -> <init>
    92:94:java.util.Iterator iterator() -> iterator
org.osmdroid.views.overlay.DefaultOverlayManager$1$1 -> org.osmdroid.views.overlay.DefaultOverlayManager$1$1:
    94:94:void <init>(org.osmdroid.views.overlay.DefaultOverlayManager$1,java.util.ListIterator) -> <init>
    97:97:boolean hasNext() -> hasNext
    94:94:java.lang.Object next() -> next
    102:102:org.osmdroid.views.overlay.Overlay next() -> next
    107:108:void remove() -> remove
org.osmdroid.views.overlay.Overlay -> org.osmdroid.views.overlay.Overlay:
    43:53:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    110:110:int getSafeMenuId() -> getSafeMenuId
    121:121:int getSafeMenuIdSequence(int) -> getSafeMenuIdSequence
    99:99:boolean isEnabled() -> isEnabled
    145:145:void onDetach(org.osmdroid.views.MapView) -> onDetach
    192:192:boolean onDoubleTap(android.view.MotionEvent,org.osmdroid.views.MapView) -> onDoubleTap
    201:201:boolean onDoubleTapEvent(android.view.MotionEvent,org.osmdroid.views.MapView) -> onDoubleTapEvent
    221:221:boolean onDown(android.view.MotionEvent,org.osmdroid.views.MapView) -> onDown
    231:231:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float,org.osmdroid.views.MapView) -> onFling
    153:153:boolean onKeyDown(int,android.view.KeyEvent,org.osmdroid.views.MapView) -> onKeyDown
    162:162:boolean onKeyUp(int,android.view.KeyEvent,org.osmdroid.views.MapView) -> onKeyUp
    240:240:boolean onLongPress(android.view.MotionEvent,org.osmdroid.views.MapView) -> onLongPress
    295:295:void onPause() -> onPause
    305:305:void onResume() -> onResume
    250:250:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float,org.osmdroid.views.MapView) -> onScroll
    254:254:void onShowPress(android.view.MotionEvent,org.osmdroid.views.MapView) -> onShowPress
    210:210:boolean onSingleTapConfirmed(android.view.MotionEvent,org.osmdroid.views.MapView) -> onSingleTapConfirmed
    263:263:boolean onSingleTapUp(android.view.MotionEvent,org.osmdroid.views.MapView) -> onSingleTapUp
    172:172:boolean onTouchEvent(android.view.MotionEvent,org.osmdroid.views.MapView) -> onTouchEvent
    181:181:boolean onTrackballEvent(android.view.MotionEvent,org.osmdroid.views.MapView) -> onTrackballEvent
org.osmdroid.views.overlay.TilesOverlay -> org.osmdroid.views.overlay.TilesOverlay:
    45:82:void <clinit>() -> <clinit>
    89:92:void <init>(org.osmdroid.tileprovider.MapTileProviderBase,android.content.Context,boolean,boolean) -> <init>
    42:42:android.graphics.drawable.Drawable access$000(org.osmdroid.views.overlay.TilesOverlay) -> access$000
    42:42:android.graphics.Rect access$100(org.osmdroid.views.overlay.TilesOverlay) -> access$100
    476:479:void clearLoadingTile() -> clearLoadingTile
    172:186:void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean) -> draw
    195:197:void drawTiles(android.graphics.Canvas,org.osmdroid.views.Projection,double,org.osmdroid.util.RectL) -> drawTiles
    315:315:android.graphics.Rect getCanvasRect() -> getCanvasRect
    445:472:android.graphics.drawable.Drawable getLoadingTile() -> getLoadingTile
    125:125:int getMaximumZoomLevel() -> getMaximumZoomLevel
    121:121:int getMinimumZoomLevel() -> getMinimumZoomLevel
    321:321:org.osmdroid.views.Projection getProjection() -> getProjection
    112:118:void onDetach(org.osmdroid.views.MapView) -> onDetach
    326:344:void onTileReadyToDraw(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect) -> onTileReadyToDraw
    151:156:void protectDisplayedTilesForCache(android.graphics.Canvas,org.osmdroid.views.MapView) -> protectDisplayedTilesForCache
    500:503:void setHorizontalWrapEnabled(boolean) -> setHorizontalWrapEnabled
    427:431:void setLoadingBackgroundColor(int) -> setLoadingBackgroundColor
    318:319:void setProjection(org.osmdroid.views.Projection) -> setProjection
    143:144:void setUseDataConnection(boolean) -> setUseDataConnection
    510:513:void setVerticalWrapEnabled(boolean) -> setVerticalWrapEnabled
    164:166:boolean setViewPort(android.graphics.Canvas,org.osmdroid.views.MapView) -> setViewPort
org.osmdroid.views.overlay.TilesOverlay$CacheTileLooper -> org.osmdroid.views.overlay.TilesOverlay$CacheTileLooper:
    274:274:void <init>(org.osmdroid.views.overlay.TilesOverlay) -> <init>
    296:298:void finaliseLoop() -> finaliseLoop
    301:301:org.osmdroid.tileprovider.MapTileCache getTileCache() -> getTileCache
    292:292:void handleTile(long,int,int) -> handleTile
    287:287:void initialiseLoop() -> initialiseLoop
    281:282:void loop(double,org.osmdroid.util.RectL) -> loop
org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper -> org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper:
    206:208:void <init>(org.osmdroid.views.overlay.TilesOverlay) -> <init>
    267:267:void finaliseLoop() -> finaliseLoop
    230:264:void handleTile(long,int,int) -> handleTile
    222:227:void initialiseLoop() -> initialiseLoop
    215:217:void loop(double,org.osmdroid.util.RectL,android.graphics.Canvas) -> loop
org.osmdroid.views.overlay.infowindow.BasicInfoWindow -> org.osmdroid.views.overlay.infowindow.BasicInfoWindow:
    36:39:void <clinit>() -> <clinit>
org.osmdroid.views.overlay.infowindow.InfoWindow -> org.osmdroid.views.overlay.infowindow.InfoWindow:
    145:150:void close() -> close
    156:163:void onDetach() -> onDetach
org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay -> org.osmdroid.views.overlay.mylocation.SimpleLocationOverlay:
    51:53:void <init>(android.graphics.Bitmap) -> <init>
    79:86:void draw(android.graphics.Canvas,org.osmdroid.views.MapView,boolean) -> draw
    76:76:void onDetach(org.osmdroid.views.MapView) -> onDetach
org.osmdroid.views.util.MyMath -> org.osmdroid.views.util.MyMath:
    57:66:int getNextSquareNumberAbove(float) -> getNextSquareNumberAbove
org.whispersystems.curve25519.BaseJavaCurve25519Provider -> org.whispersystems.curve25519.BaseJavaCurve25519Provider:
    20:23:void <init>(org.whispersystems.curve25519.java.Sha512,org.whispersystems.curve25519.SecureRandomProvider) -> <init>
    32:35:byte[] calculateAgreement(byte[],byte[]) -> calculateAgreement
    63:66:byte[] calculateSignature(byte[],byte[],byte[]) -> calculateSignature
    46:47:byte[] generatePrivateKey() -> generatePrivateKey
    51:59:byte[] generatePrivateKey(byte[]) -> generatePrivateKey
    39:42:byte[] generatePublicKey(byte[]) -> generatePublicKey
    87:89:byte[] getRandom(int) -> getRandom
    28:29:void setRandomProvider(org.whispersystems.curve25519.SecureRandomProvider) -> setRandomProvider
    73:73:boolean verifySignature(byte[],byte[],byte[]) -> verifySignature
org.whispersystems.curve25519.Curve25519 -> org.whispersystems.curve25519.Curve25519:
    38:40:void <init>(org.whispersystems.curve25519.Curve25519Provider) -> <init>
    73:74:byte[] calculateAgreement(byte[],byte[]) -> calculateAgreement
    92:93:byte[] calculateSignature(byte[],byte[]) -> calculateSignature
    177:185:org.whispersystems.curve25519.Curve25519Provider constructClass(java.lang.String,org.whispersystems.curve25519.SecureRandomProvider) -> constructClass
    168:168:org.whispersystems.curve25519.Curve25519Provider constructJ2meProvider(org.whispersystems.curve25519.SecureRandomProvider) -> constructJ2meProvider
    164:164:org.whispersystems.curve25519.Curve25519Provider constructJavaProvider(org.whispersystems.curve25519.SecureRandomProvider) -> constructJavaProvider
    160:160:org.whispersystems.curve25519.Curve25519Provider constructNativeProvider(org.whispersystems.curve25519.SecureRandomProvider) -> constructNativeProvider
    172:172:org.whispersystems.curve25519.Curve25519Provider constructOpportunisticProvider(org.whispersystems.curve25519.SecureRandomProvider) -> constructOpportunisticProvider
    59:62:org.whispersystems.curve25519.Curve25519KeyPair generateKeyPair() -> generateKeyPair
    23:23:org.whispersystems.curve25519.Curve25519 getInstance(java.lang.String) -> getInstance
    29:33:org.whispersystems.curve25519.Curve25519 getInstance(java.lang.String,org.whispersystems.curve25519.SecureRandomProvider) -> getInstance
    109:110:boolean verifySignature(byte[],byte[],byte[]) -> verifySignature
org.whispersystems.curve25519.Curve25519KeyPair -> org.whispersystems.curve25519.Curve25519KeyPair:
    19:22:void <init>(byte[],byte[]) -> <init>
    35:35:byte[] getPrivateKey() -> getPrivateKey
    28:28:byte[] getPublicKey() -> getPublicKey
org.whispersystems.curve25519.JCESecureRandomProvider -> org.whispersystems.curve25519.JCESecureRandomProvider:
    12:12:void <init>() -> <init>
    17:20:void nextBytes(byte[]) -> nextBytes
org.whispersystems.curve25519.JCESha512Provider -> org.whispersystems.curve25519.JCESha512Provider:
    14:14:void <init>() -> <init>
    18:23:void calculateDigest(byte[],byte[],long) -> calculateDigest
org.whispersystems.curve25519.JavaCurve25519Provider -> org.whispersystems.curve25519.JavaCurve25519Provider:
    16:17:void <init>() -> <init>
    13:13:byte[] calculateAgreement(byte[],byte[]) -> calculateAgreement
    13:13:byte[] calculateSignature(byte[],byte[],byte[]) -> calculateSignature
    13:13:byte[] generatePrivateKey() -> generatePrivateKey
    13:13:byte[] generatePrivateKey(byte[]) -> generatePrivateKey
    13:13:byte[] generatePublicKey(byte[]) -> generatePublicKey
    13:13:byte[] getRandom(int) -> getRandom
    13:13:void setRandomProvider(org.whispersystems.curve25519.SecureRandomProvider) -> setRandomProvider
    13:13:boolean verifySignature(byte[],byte[],byte[]) -> verifySignature
org.whispersystems.curve25519.NativeCurve25519Provider -> org.whispersystems.curve25519.NativeCurve25519Provider:
    11:22:void <clinit>() -> <clinit>
    26:27:void <init>() -> <init>
    43:44:byte[] generatePrivateKey() -> generatePrivateKey
    49:52:byte[] getRandom(int) -> getRandom
    57:58:void setRandomProvider(org.whispersystems.curve25519.SecureRandomProvider) -> setRandomProvider
org.whispersystems.curve25519.NoSuchProviderException -> org.whispersystems.curve25519.NoSuchProviderException:
    13:15:void <init>(java.lang.Throwable) -> <init>
    18:20:void <init>(java.lang.String) -> <init>
org.whispersystems.curve25519.OpportunisticCurve25519Provider -> org.whispersystems.curve25519.OpportunisticCurve25519Provider:
    13:19:void <init>() -> <init>
    28:28:byte[] calculateAgreement(byte[],byte[]) -> calculateAgreement
    58:58:byte[] calculateSignature(byte[],byte[],byte[]) -> calculateSignature
    38:38:byte[] generatePrivateKey() -> generatePrivateKey
    33:33:byte[] generatePublicKey(byte[]) -> generatePublicKey
    48:48:byte[] getRandom(int) -> getRandom
    53:54:void setRandomProvider(org.whispersystems.curve25519.SecureRandomProvider) -> setRandomProvider
    63:63:boolean verifySignature(byte[],byte[],byte[]) -> verifySignature
org.whispersystems.curve25519.VrfSignatureVerificationFailedException -> org.whispersystems.curve25519.VrfSignatureVerificationFailedException:
    6:7:void <init>() -> <init>
org.whispersystems.curve25519.java.Arrays -> org.whispersystems.curve25519.java.Arrays:
    3:3:void <init>() -> <init>
org.whispersystems.curve25519.java.crypto_verify_32 -> org.whispersystems.curve25519.java.crypto_verify_32:
    3:3:void <init>() -> <init>
    6:10:int crypto_verify_32(byte[],byte[]) -> crypto_verify_32
org.whispersystems.curve25519.java.curve_sigs -> org.whispersystems.curve25519.java.curve_sigs:
    3:3:void <init>() -> <init>
    8:35:void curve25519_keygen(byte[],byte[]) -> curve25519_keygen
    42:60:int curve25519_sign(org.whispersystems.curve25519.java.Sha512,byte[],byte[],byte[],int,byte[]) -> curve25519_sign
    67:110:int curve25519_verify(org.whispersystems.curve25519.java.Sha512,byte[],byte[],byte[],int) -> curve25519_verify
org.whispersystems.curve25519.java.fe_0 -> org.whispersystems.curve25519.java.fe_0:
    3:3:void <init>() -> <init>
    13:23:void fe_0(int[]) -> fe_0
org.whispersystems.curve25519.java.fe_1 -> org.whispersystems.curve25519.java.fe_1:
    3:3:void <init>() -> <init>
    13:23:void fe_1(int[]) -> fe_1
org.whispersystems.curve25519.java.fe_add -> org.whispersystems.curve25519.java.fe_add:
    3:3:void <init>() -> <init>
    21:61:void fe_add(int[],int[],int[]) -> fe_add
org.whispersystems.curve25519.java.fe_cmov -> org.whispersystems.curve25519.java.fe_cmov:
    3:3:void <init>() -> <init>
    16:67:void fe_cmov(int[],int[],int) -> fe_cmov
org.whispersystems.curve25519.java.fe_copy -> org.whispersystems.curve25519.java.fe_copy:
    3:3:void <init>() -> <init>
    13:33:void fe_copy(int[],int[]) -> fe_copy
org.whispersystems.curve25519.java.fe_cswap -> org.whispersystems.curve25519.java.fe_cswap:
    3:3:void <init>() -> <init>
    17:78:void fe_cswap(int[],int[],int) -> fe_cswap
org.whispersystems.curve25519.java.fe_frombytes -> org.whispersystems.curve25519.java.fe_frombytes:
    3:3:void <init>() -> <init>
    34:77:void fe_frombytes(int[],byte[]) -> fe_frombytes
    12:15:long load_3(byte[],int) -> load_3
    21:25:long load_4(byte[],int) -> load_4
org.whispersystems.curve25519.java.fe_invert -> org.whispersystems.curve25519.java.fe_invert:
    3:3:void <init>() -> <init>
    9:177:void fe_invert(int[],int[]) -> fe_invert
org.whispersystems.curve25519.java.fe_isnegative -> org.whispersystems.curve25519.java.fe_isnegative:
    3:3:void <init>() -> <init>
    17:19:int fe_isnegative(int[]) -> fe_isnegative
org.whispersystems.curve25519.java.fe_isnonzero -> org.whispersystems.curve25519.java.fe_isnonzero:
    16:16:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    20:22:int fe_isnonzero(int[]) -> fe_isnonzero
org.whispersystems.curve25519.java.fe_mul -> org.whispersystems.curve25519.java.fe_mul:
    3:3:void <init>() -> <init>
    194:277:void fe_mul(int[],int[],int[]) -> fe_mul
    42:189:long[] fe_mul1(int[],int[]) -> fe_mul1
org.whispersystems.curve25519.java.fe_mul121666 -> org.whispersystems.curve25519.java.fe_mul121666:
    3:3:void <init>() -> <init>
    21:74:void fe_mul121666(int[],int[]) -> fe_mul121666
org.whispersystems.curve25519.java.fe_neg -> org.whispersystems.curve25519.java.fe_neg:
    3:3:void <init>() -> <init>
    19:49:void fe_neg(int[],int[]) -> fe_neg
org.whispersystems.curve25519.java.fe_pow22523 -> org.whispersystems.curve25519.java.fe_pow22523:
    3:3:void <init>() -> <init>
    9:176:void fe_pow22523(int[],int[]) -> fe_pow22523
org.whispersystems.curve25519.java.fe_sq -> org.whispersystems.curve25519.java.fe_sq:
    3:3:void <init>() -> <init>
    25:153:void fe_sq(int[],int[]) -> fe_sq
org.whispersystems.curve25519.java.fe_sq2 -> org.whispersystems.curve25519.java.fe_sq2:
    3:3:void <init>() -> <init>
    25:164:void fe_sq2(int[],int[]) -> fe_sq2
org.whispersystems.curve25519.java.fe_sub -> org.whispersystems.curve25519.java.fe_sub:
    3:3:void <init>() -> <init>
    21:61:void fe_sub(int[],int[],int[]) -> fe_sub
org.whispersystems.curve25519.java.fe_tobytes -> org.whispersystems.curve25519.java.fe_tobytes:
    3:3:void <init>() -> <init>
    34:123:void fe_tobytes(byte[],int[]) -> fe_tobytes
org.whispersystems.curve25519.java.ge_add -> org.whispersystems.curve25519.java.ge_add:
    3:3:void <init>() -> <init>
    13:112:void ge_add(org.whispersystems.curve25519.java.ge_p1p1,org.whispersystems.curve25519.java.ge_p3,org.whispersystems.curve25519.java.ge_cached) -> ge_add
org.whispersystems.curve25519.java.ge_cached -> org.whispersystems.curve25519.java.ge_cached:
    11:16:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_double_scalarmult -> org.whispersystems.curve25519.java.ge_double_scalarmult:
    44:85:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    96:146:void ge_double_scalarmult_vartime(org.whispersystems.curve25519.java.ge_p2,byte[],org.whispersystems.curve25519.java.ge_p3,byte[]) -> ge_double_scalarmult_vartime
    13:39:void slide(byte[],byte[]) -> slide
org.whispersystems.curve25519.java.ge_frombytes -> org.whispersystems.curve25519.java.ge_frombytes:
    7:12:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    19:56:int ge_frombytes_negate_vartime(org.whispersystems.curve25519.java.ge_p3,byte[]) -> ge_frombytes_negate_vartime
org.whispersystems.curve25519.java.ge_madd -> org.whispersystems.curve25519.java.ge_madd:
    3:3:void <init>() -> <init>
    13:103:void ge_madd(org.whispersystems.curve25519.java.ge_p1p1,org.whispersystems.curve25519.java.ge_p3,org.whispersystems.curve25519.java.ge_precomp) -> ge_madd
org.whispersystems.curve25519.java.ge_msub -> org.whispersystems.curve25519.java.ge_msub:
    3:3:void <init>() -> <init>
    13:103:void ge_msub(org.whispersystems.curve25519.java.ge_p1p1,org.whispersystems.curve25519.java.ge_p3,org.whispersystems.curve25519.java.ge_precomp) -> ge_msub
org.whispersystems.curve25519.java.ge_p1p1 -> org.whispersystems.curve25519.java.ge_p1p1:
    11:16:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_p1p1_to_p2 -> org.whispersystems.curve25519.java.ge_p1p1_to_p2:
    3:3:void <init>() -> <init>
    13:16:void ge_p1p1_to_p2(org.whispersystems.curve25519.java.ge_p2,org.whispersystems.curve25519.java.ge_p1p1) -> ge_p1p1_to_p2
org.whispersystems.curve25519.java.ge_p1p1_to_p3 -> org.whispersystems.curve25519.java.ge_p1p1_to_p3:
    3:3:void <init>() -> <init>
    13:17:void ge_p1p1_to_p3(org.whispersystems.curve25519.java.ge_p3,org.whispersystems.curve25519.java.ge_p1p1) -> ge_p1p1_to_p3
org.whispersystems.curve25519.java.ge_p2 -> org.whispersystems.curve25519.java.ge_p2:
    10:14:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_p2_0 -> org.whispersystems.curve25519.java.ge_p2_0:
    3:3:void <init>() -> <init>
    9:12:void ge_p2_0(org.whispersystems.curve25519.java.ge_p2) -> ge_p2_0
org.whispersystems.curve25519.java.ge_p2_dbl -> org.whispersystems.curve25519.java.ge_p2_dbl:
    3:3:void <init>() -> <init>
    13:88:void ge_p2_dbl(org.whispersystems.curve25519.java.ge_p1p1,org.whispersystems.curve25519.java.ge_p2) -> ge_p2_dbl
org.whispersystems.curve25519.java.ge_p3 -> org.whispersystems.curve25519.java.ge_p3:
    11:16:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_p3_0 -> org.whispersystems.curve25519.java.ge_p3_0:
    3:3:void <init>() -> <init>
    9:13:void ge_p3_0(org.whispersystems.curve25519.java.ge_p3) -> ge_p3_0
org.whispersystems.curve25519.java.ge_p3_dbl -> org.whispersystems.curve25519.java.ge_p3_dbl:
    3:3:void <init>() -> <init>
    13:16:void ge_p3_dbl(org.whispersystems.curve25519.java.ge_p1p1,org.whispersystems.curve25519.java.ge_p3) -> ge_p3_dbl
org.whispersystems.curve25519.java.ge_p3_to_cached -> org.whispersystems.curve25519.java.ge_p3_to_cached:
    11:11:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    18:22:void ge_p3_to_cached(org.whispersystems.curve25519.java.ge_cached,org.whispersystems.curve25519.java.ge_p3) -> ge_p3_to_cached
org.whispersystems.curve25519.java.ge_p3_to_p2 -> org.whispersystems.curve25519.java.ge_p3_to_p2:
    3:3:void <init>() -> <init>
    13:16:void ge_p3_to_p2(org.whispersystems.curve25519.java.ge_p2,org.whispersystems.curve25519.java.ge_p3) -> ge_p3_to_p2
org.whispersystems.curve25519.java.ge_p3_tobytes -> org.whispersystems.curve25519.java.ge_p3_tobytes:
    3:3:void <init>() -> <init>
    9:18:void ge_p3_tobytes(byte[],org.whispersystems.curve25519.java.ge_p3) -> ge_p3_tobytes
org.whispersystems.curve25519.java.ge_precomp -> org.whispersystems.curve25519.java.ge_precomp:
    10:14:void <init>() -> <init>
    17:21:void <init>(int[],int[],int[]) -> <init>
org.whispersystems.curve25519.java.ge_precomp_0 -> org.whispersystems.curve25519.java.ge_precomp_0:
    3:3:void <init>() -> <init>
    9:12:void ge_precomp_0(org.whispersystems.curve25519.java.ge_precomp) -> ge_precomp_0
org.whispersystems.curve25519.java.ge_precomp_base_0_7 -> org.whispersystems.curve25519.java.ge_precomp_base_0_7:
    9:331:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_precomp_base_16_23 -> org.whispersystems.curve25519.java.ge_precomp_base_16_23:
    9:331:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_precomp_base_24_31 -> org.whispersystems.curve25519.java.ge_precomp_base_24_31:
    9:331:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_precomp_base_8_15 -> org.whispersystems.curve25519.java.ge_precomp_base_8_15:
    10:332:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
org.whispersystems.curve25519.java.ge_scalarmult_base -> org.whispersystems.curve25519.java.ge_scalarmult_base:
    3:3:void <init>() -> <init>
    28:31:void cmov(org.whispersystems.curve25519.java.ge_precomp,org.whispersystems.curve25519.java.ge_precomp,int) -> cmov
    10:16:int equal(byte,byte) -> equal
    69:108:void ge_scalarmult_base(org.whispersystems.curve25519.java.ge_p3,byte[]) -> ge_scalarmult_base
    21:23:int negative(byte) -> negative
    35:56:void select(org.whispersystems.curve25519.java.ge_precomp,int,byte) -> select
org.whispersystems.curve25519.java.ge_sub -> org.whispersystems.curve25519.java.ge_sub:
    3:3:void <init>() -> <init>
    13:112:void ge_sub(org.whispersystems.curve25519.java.ge_p1p1,org.whispersystems.curve25519.java.ge_p3,org.whispersystems.curve25519.java.ge_cached) -> ge_sub
org.whispersystems.curve25519.java.ge_tobytes -> org.whispersystems.curve25519.java.ge_tobytes:
    3:3:void <init>() -> <init>
    9:18:void ge_tobytes(byte[],org.whispersystems.curve25519.java.ge_p2) -> ge_tobytes
org.whispersystems.curve25519.java.open -> org.whispersystems.curve25519.java.open:
    3:3:void <init>() -> <init>
    19:53:int crypto_sign_open(org.whispersystems.curve25519.java.Sha512,byte[],long,byte[],long,byte[]) -> crypto_sign_open
org.whispersystems.curve25519.java.sc_muladd -> org.whispersystems.curve25519.java.sc_muladd:
    3:3:void <init>() -> <init>
    13:16:long load_3(byte[],int) -> load_3
    22:26:long load_4(byte[],int) -> load_4
    42:372:void sc_muladd(byte[],byte[],byte[],byte[]) -> sc_muladd
org.whispersystems.curve25519.java.sc_reduce -> org.whispersystems.curve25519.java.sc_reduce:
    3:3:void <init>() -> <init>
    13:16:long load_3(byte[],int) -> load_3
    22:26:long load_4(byte[],int) -> load_4
    41:279:void sc_reduce(byte[]) -> sc_reduce
org.whispersystems.curve25519.java.scalarmult -> org.whispersystems.curve25519.java.scalarmult:
    3:3:void <init>() -> <init>
    12:191:int crypto_scalarmult(byte[],byte[],byte[]) -> crypto_scalarmult
org.whispersystems.curve25519.java.sign_modified -> org.whispersystems.curve25519.java.sign_modified:
    3:3:void <init>() -> <init>
    24:53:int crypto_sign_modified(org.whispersystems.curve25519.java.Sha512,byte[],byte[],long,byte[],byte[],byte[]) -> crypto_sign_modified
org.whispersystems.libsignal.DuplicateMessageException -> org.whispersystems.libsignal.DuplicateMessageException:
    10:11:void <init>(java.lang.String) -> <init>
org.whispersystems.libsignal.IdentityKey -> org.whispersystems.libsignal.IdentityKey:
    23:25:void <init>(org.whispersystems.libsignal.ecc.ECPublicKey) -> <init>
    27:29:void <init>(byte[],int) -> <init>
    45:48:boolean equals(java.lang.Object) -> equals
    32:32:org.whispersystems.libsignal.ecc.ECPublicKey getPublicKey() -> getPublicKey
    53:53:int hashCode() -> hashCode
    36:36:byte[] serialize() -> serialize
org.whispersystems.libsignal.IdentityKeyPair -> org.whispersystems.libsignal.IdentityKeyPair:
    26:29:void <init>(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.ecc.ECPrivateKey) -> <init>
    31:37:void <init>(byte[]) -> <init>
    46:46:org.whispersystems.libsignal.ecc.ECPrivateKey getPrivateKey() -> getPrivateKey
    42:42:org.whispersystems.libsignal.IdentityKey getPublicKey() -> getPublicKey
    50:50:byte[] serialize() -> serialize
org.whispersystems.libsignal.InvalidKeyException -> org.whispersystems.libsignal.InvalidKeyException:
    10:10:void <init>() -> <init>
    13:14:void <init>(java.lang.String) -> <init>
    17:18:void <init>(java.lang.Throwable) -> <init>
org.whispersystems.libsignal.InvalidKeyIdException -> org.whispersystems.libsignal.InvalidKeyIdException:
    10:11:void <init>(java.lang.String) -> <init>
org.whispersystems.libsignal.InvalidMessageException -> org.whispersystems.libsignal.InvalidMessageException:
    12:12:void <init>() -> <init>
    15:16:void <init>(java.lang.String) -> <init>
    19:20:void <init>(java.lang.Throwable) -> <init>
    27:28:void <init>(java.lang.String,java.util.List) -> <init>
org.whispersystems.libsignal.InvalidVersionException -> org.whispersystems.libsignal.InvalidVersionException:
    10:11:void <init>(java.lang.String) -> <init>
org.whispersystems.libsignal.LegacyMessageException -> org.whispersystems.libsignal.LegacyMessageException:
    10:11:void <init>(java.lang.String) -> <init>
org.whispersystems.libsignal.NoSessionException -> org.whispersystems.libsignal.NoSessionException:
    10:11:void <init>(java.lang.String) -> <init>
org.whispersystems.libsignal.SessionBuilder -> org.whispersystems.libsignal.SessionBuilder:
    46:46:void <clinit>() -> <clinit>
    67:73:void <init>(org.whispersystems.libsignal.state.SessionStore,org.whispersystems.libsignal.state.PreKeyStore,org.whispersystems.libsignal.state.SignedPreKeyStore,org.whispersystems.libsignal.state.IdentityKeyStore,org.whispersystems.libsignal.SignalProtocolAddress) -> <init>
    81:82:void <init>(org.whispersystems.libsignal.state.SignalProtocolStore,org.whispersystems.libsignal.SignalProtocolAddress) -> <init>
    101:104:org.whispersystems.libsignal.util.guava.Optional process(org.whispersystems.libsignal.state.SessionRecord,org.whispersystems.libsignal.protocol.PreKeySignalMessage) -> process
    166:210:void process(org.whispersystems.libsignal.state.PreKeyBundle) -> process
    118:150:org.whispersystems.libsignal.util.guava.Optional processV3(org.whispersystems.libsignal.state.SessionRecord,org.whispersystems.libsignal.protocol.PreKeySignalMessage) -> processV3
org.whispersystems.libsignal.SessionCipher -> org.whispersystems.libsignal.SessionCipher:
    54:54:void <clinit>() -> <clinit>
    73:80:void <init>(org.whispersystems.libsignal.state.SessionStore,org.whispersystems.libsignal.state.PreKeyStore,org.whispersystems.libsignal.state.SignedPreKeyStore,org.whispersystems.libsignal.state.IdentityKeyStore,org.whispersystems.libsignal.SignalProtocolAddress) -> <init>
    83:84:void <init>(org.whispersystems.libsignal.state.SignalProtocolStore,org.whispersystems.libsignal.SignalProtocolAddress) -> <init>
    150:150:byte[] decrypt(org.whispersystems.libsignal.protocol.PreKeySignalMessage) -> decrypt
    178:192:byte[] decrypt(org.whispersystems.libsignal.protocol.PreKeySignalMessage,org.whispersystems.libsignal.DecryptionCallback) -> decrypt
    211:211:byte[] decrypt(org.whispersystems.libsignal.protocol.SignalMessage) -> decrypt
    236:256:byte[] decrypt(org.whispersystems.libsignal.protocol.SignalMessage,org.whispersystems.libsignal.DecryptionCallback) -> decrypt
    262:291:byte[] decrypt(org.whispersystems.libsignal.state.SessionRecord,org.whispersystems.libsignal.protocol.SignalMessage) -> decrypt
    297:298:byte[] decrypt(org.whispersystems.libsignal.state.SessionState,org.whispersystems.libsignal.protocol.SignalMessage) -> decrypt
    93:128:org.whispersystems.libsignal.protocol.CiphertextMessage encrypt(byte[]) -> encrypt
    417:423:javax.crypto.Cipher getCipher(int,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec) -> getCipher
    397:400:byte[] getCiphertext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[]) -> getCiphertext
    346:363:org.whispersystems.libsignal.ratchet.ChainKey getOrCreateChainKey(org.whispersystems.libsignal.state.SessionState,org.whispersystems.libsignal.ecc.ECPublicKey) -> getOrCreateChainKey
    372:382:org.whispersystems.libsignal.ratchet.MessageKeys getOrCreateMessageKeys(org.whispersystems.libsignal.state.SessionState,org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ratchet.ChainKey,int) -> getOrCreateMessageKeys
    408:411:byte[] getPlaintext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[]) -> getPlaintext
org.whispersystems.libsignal.SessionCipher$NullDecryptionCallback -> org.whispersystems.libsignal.SessionCipher$NullDecryptionCallback:
    427:427:void <init>() -> <init>
    427:427:void <init>(org.whispersystems.libsignal.SessionCipher$1) -> <init>
    429:429:void handlePlaintext(byte[]) -> handlePlaintext
org.whispersystems.libsignal.SignalProtocolAddress -> org.whispersystems.libsignal.SignalProtocolAddress:
    13:16:void <init>(java.lang.String,int) -> <init>
    33:37:boolean equals(java.lang.Object) -> equals
    23:23:int getDeviceId() -> getDeviceId
    19:19:java.lang.String getName() -> getName
    42:42:int hashCode() -> hashCode
    28:28:java.lang.String toString() -> toString
org.whispersystems.libsignal.StaleKeyExchangeException -> org.whispersystems.libsignal.StaleKeyExchangeException:
    8:8:void <init>() -> <init>
org.whispersystems.libsignal.UntrustedIdentityException -> org.whispersystems.libsignal.UntrustedIdentityException:
    13:16:void <init>(java.lang.String,org.whispersystems.libsignal.IdentityKey) -> <init>
org.whispersystems.libsignal.devices.DeviceConsistencyCodeGenerator -> org.whispersystems.libsignal.devices.DeviceConsistencyCodeGenerator:
    13:13:void <init>() -> <init>
org.whispersystems.libsignal.devices.DeviceConsistencyCodeGenerator$SignatureComparator -> org.whispersystems.libsignal.devices.DeviceConsistencyCodeGenerator$SignatureComparator:
    48:48:void <init>() -> <init>
    48:48:int compare(java.lang.Object,java.lang.Object) -> compare
    51:51:int compare(org.whispersystems.libsignal.devices.DeviceConsistencySignature,org.whispersystems.libsignal.devices.DeviceConsistencySignature) -> compare
org.whispersystems.libsignal.devices.DeviceConsistencySignature -> org.whispersystems.libsignal.devices.DeviceConsistencySignature:
    14:14:byte[] getVrfOutput() -> getVrfOutput
org.whispersystems.libsignal.ecc.Curve -> org.whispersystems.libsignal.ecc.Curve:
    15:15:void <init>() -> <init>
    60:61:byte[] calculateAgreement(org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ecc.ECPrivateKey) -> calculateAgreement
    87:91:byte[] calculateSignature(org.whispersystems.libsignal.ecc.ECPrivateKey,byte[]) -> calculateSignature
    33:34:org.whispersystems.libsignal.ecc.ECPublicKey decodePoint(byte[],int) -> decodePoint
    54:54:org.whispersystems.libsignal.ecc.ECPrivateKey decodePrivatePoint(byte[]) -> decodePrivatePoint
    24:26:org.whispersystems.libsignal.ecc.ECKeyPair generateKeyPair() -> generateKeyPair
    76:80:boolean verifySignature(org.whispersystems.libsignal.ecc.ECPublicKey,byte[],byte[]) -> verifySignature
org.whispersystems.libsignal.ecc.DjbECPrivateKey -> org.whispersystems.libsignal.ecc.DjbECPrivateKey:
    13:15:void <init>(byte[]) -> <init>
    28:28:byte[] getPrivateKey() -> getPrivateKey
    24:24:int getType() -> getType
    19:19:byte[] serialize() -> serialize
org.whispersystems.libsignal.ecc.DjbECPublicKey -> org.whispersystems.libsignal.ecc.DjbECPublicKey:
    18:20:void <init>(byte[]) -> <init>
    14:14:int compareTo(java.lang.Object) -> compareTo
    49:49:int compareTo(org.whispersystems.libsignal.ecc.ECPublicKey) -> compareTo
    35:39:boolean equals(java.lang.Object) -> equals
    53:53:byte[] getPublicKey() -> getPublicKey
    30:30:int getType() -> getType
    44:44:int hashCode() -> hashCode
    24:25:byte[] serialize() -> serialize
org.whispersystems.libsignal.ecc.ECKeyPair -> org.whispersystems.libsignal.ecc.ECKeyPair:
    13:16:void <init>(org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ecc.ECPrivateKey) -> <init>
    23:23:org.whispersystems.libsignal.ecc.ECPrivateKey getPrivateKey() -> getPrivateKey
    19:19:org.whispersystems.libsignal.ecc.ECPublicKey getPublicKey() -> getPublicKey
org.whispersystems.libsignal.fingerprint.FingerprintProtos -> org.whispersystems.libsignal.fingerprint.FingerprintProtos:
    1240:1274:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    6:6:com.google.protobuf.Descriptors$Descriptor access$000() -> access$000
    6:6:com.google.protobuf.Descriptors$Descriptor access$002(com.google.protobuf.Descriptors$Descriptor) -> access$002
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100() -> access$100
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1000() -> access$1000
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1002(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$1002
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$102(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$102
    6:6:com.google.protobuf.Descriptors$FileDescriptor access$2002(com.google.protobuf.Descriptors$FileDescriptor) -> access$2002
    6:6:com.google.protobuf.Descriptors$Descriptor access$900() -> access$900
    6:6:com.google.protobuf.Descriptors$Descriptor access$902(com.google.protobuf.Descriptors$Descriptor) -> access$902
    1235:1235:com.google.protobuf.Descriptors$FileDescriptor getDescriptor() -> getDescriptor
org.whispersystems.libsignal.fingerprint.FingerprintProtos$1 -> org.whispersystems.libsignal.fingerprint.FingerprintProtos$1:
    1251:1251:void <init>() -> <init>
    1254:1267:com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor) -> assignDescriptors
org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints -> org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints:
    589:1217:void <clinit>() -> <clinit>
    486:486:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.fingerprint.FingerprintProtos$1) -> <init>
    486:486:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.fingerprint.FingerprintProtos$1) -> <init>
    491:493:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    494:494:void <init>(boolean) -> <init>
    514:576:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    486:486:boolean access$1400() -> access$1400
    486:486:int access$1602(org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints,int) -> access$1602
    486:486:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint access$1702(org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints,org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint) -> access$1702
    486:486:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint access$1802(org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints,org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint) -> access$1802
    486:486:int access$1902(org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints,int) -> access$1902
    498:498:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints getDefaultInstance() -> getDefaultInstance
    486:486:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    502:502:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints getDefaultInstanceForType() -> getDefaultInstanceForType
    634:634:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint getLocalFingerprint() -> getLocalFingerprint
    601:601:com.google.protobuf.Parser getParserForType() -> getParserForType
    656:656:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint getRemoteFingerprint() -> getRemoteFingerprint
    696:714:int getSerializedSize() -> getSerializedSize
    509:509:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    618:618:int getVersion() -> getVersion
    628:628:boolean hasLocalFingerprint() -> hasLocalFingerprint
    650:650:boolean hasRemoteFingerprint() -> hasRemoteFingerprint
    612:612:boolean hasVersion() -> hasVersion
    666:669:void initFields() -> initFields
    584:584:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    672:676:boolean isInitialized() -> isInitialized
    777:777:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder newBuilder() -> newBuilder
    780:780:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder newBuilder(org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints) -> newBuilder
    486:486:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    486:486:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    778:778:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder newBuilderForType() -> newBuilderForType
    787:788:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    486:486:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    486:486:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    782:782:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder toBuilder() -> toBuilder
    681:692:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$1 -> org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$1:
    590:590:void <init>() -> <init>
    590:590:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    595:595:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder -> org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder:
    793:793:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.fingerprint.FingerprintProtos$1) -> <init>
    809:811:void <init>() -> <init>
    815:817:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    793:793:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder access$1200() -> access$1200
    793:793:com.google.protobuf.Message build() -> build
    793:793:com.google.protobuf.MessageLite build() -> build
    861:863:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints build() -> build
    793:793:com.google.protobuf.Message buildPartial() -> buildPartial
    869:894:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints buildPartial() -> buildPartial
    793:793:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    793:793:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    793:793:java.lang.Object clone() -> clone
    848:848:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder clone() -> clone
    825:825:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder create() -> create
    793:793:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    857:857:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints getDefaultInstanceForType() -> getDefaultInstanceForType
    853:853:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    1083:1091:com.google.protobuf.SingleFieldBuilder getLocalFingerprintFieldBuilder() -> getLocalFingerprintFieldBuilder
    1200:1208:com.google.protobuf.SingleFieldBuilder getRemoteFingerprintFieldBuilder() -> getRemoteFingerprintFieldBuilder
    803:803:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    819:823:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    793:793:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    793:793:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    793:793:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    793:793:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    793:793:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    898:902:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    907:918:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints) -> mergeFrom
    929:937:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1031:1044:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder mergeLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint) -> mergeLocalFingerprint
    1148:1161:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder mergeRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint) -> mergeRemoteFingerprint
    962:965:org.whispersystems.libsignal.fingerprint.FingerprintProtos$CombinedFingerprints$Builder setVersion(int) -> setVersion
org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint -> org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint:
    112:437:void <clinit>() -> <clinit>
    35:35:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.fingerprint.FingerprintProtos$1) -> <init>
    35:35:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.fingerprint.FingerprintProtos$1) -> <init>
    40:42:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    43:43:void <init>(boolean) -> <init>
    63:99:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    35:35:boolean access$500() -> access$500
    35:35:com.google.protobuf.ByteString access$702(org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint,com.google.protobuf.ByteString) -> access$702
    35:35:int access$802(org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint,int) -> access$802
    149:149:com.google.protobuf.ByteString getContent() -> getContent
    47:47:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint getDefaultInstance() -> getDefaultInstance
    35:35:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    51:51:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint getDefaultInstanceForType() -> getDefaultInstanceForType
    124:124:com.google.protobuf.Parser getParserForType() -> getParserForType
    175:185:int getSerializedSize() -> getSerializedSize
    58:58:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    139:139:boolean hasContent() -> hasContent
    153:154:void initFields() -> initFields
    107:107:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    157:161:boolean isInitialized() -> isInitialized
    248:248:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder newBuilder() -> newBuilder
    251:251:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder newBuilder(org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint) -> newBuilder
    35:35:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    35:35:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    249:249:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder newBuilderForType() -> newBuilderForType
    258:259:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    35:35:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    35:35:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    253:253:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder toBuilder() -> toBuilder
    166:171:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$1 -> org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$1:
    113:113:void <init>() -> <init>
    113:113:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    118:118:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder -> org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder:
    264:264:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.fingerprint.FingerprintProtos$1) -> <init>
    280:282:void <init>() -> <init>
    286:288:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    264:264:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder access$300() -> access$300
    264:264:com.google.protobuf.Message build() -> build
    264:264:com.google.protobuf.MessageLite build() -> build
    318:320:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint build() -> build
    264:264:com.google.protobuf.Message buildPartial() -> buildPartial
    326:335:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint buildPartial() -> buildPartial
    264:264:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    264:264:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    264:264:java.lang.Object clone() -> clone
    305:305:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder clone() -> clone
    294:294:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder create() -> create
    264:264:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    314:314:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint getDefaultInstanceForType() -> getDefaultInstanceForType
    310:310:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    274:274:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    290:292:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    264:264:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    264:264:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    264:264:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    264:264:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    264:264:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    339:343:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    348:353:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint) -> mergeFrom
    364:372:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    409:410:org.whispersystems.libsignal.fingerprint.FingerprintProtos$LogicalFingerprint$Builder setContent(com.google.protobuf.ByteString) -> setContent
org.whispersystems.libsignal.groups.GroupCipher -> org.whispersystems.libsignal.groups.GroupCipher:
    43:43:void <clinit>() -> <clinit>
org.whispersystems.libsignal.groups.GroupCipher$NullDecryptionCallback -> org.whispersystems.libsignal.groups.GroupCipher$NullDecryptionCallback:
    207:207:void <init>() -> <init>
    209:209:void handlePlaintext(byte[]) -> handlePlaintext
org.whispersystems.libsignal.groups.SenderKeyName -> org.whispersystems.libsignal.groups.SenderKeyName:
    37:42:boolean equals(java.lang.Object) -> equals
    49:49:int hashCode() -> hashCode
org.whispersystems.libsignal.groups.ratchet.SenderChainKey -> org.whispersystems.libsignal.groups.ratchet.SenderChainKey:
    26:27:void <clinit>() -> <clinit>
org.whispersystems.libsignal.groups.state.SenderKeyRecord -> org.whispersystems.libsignal.groups.state.SenderKeyRecord:
    31:31:void <init>() -> <init>
org.whispersystems.libsignal.kdf.DerivedMessageSecrets -> org.whispersystems.libsignal.kdf.DerivedMessageSecrets:
    27:35:void <init>(byte[]) -> <init>
    40:40:javax.crypto.spec.SecretKeySpec getCipherKey() -> getCipherKey
    48:48:javax.crypto.spec.IvParameterSpec getIv() -> getIv
    44:44:javax.crypto.spec.SecretKeySpec getMacKey() -> getMacKey
org.whispersystems.libsignal.kdf.DerivedRootSecrets -> org.whispersystems.libsignal.kdf.DerivedRootSecrets:
    17:21:void <init>(byte[]) -> <init>
    28:28:byte[] getChainKey() -> getChainKey
    24:24:byte[] getRootKey() -> getRootKey
org.whispersystems.libsignal.kdf.HKDF -> org.whispersystems.libsignal.kdf.HKDF:
    16:16:void <init>() -> <init>
    21:22:org.whispersystems.libsignal.kdf.HKDF createFor(int) -> createFor
    29:30:byte[] deriveSecrets(byte[],byte[],int) -> deriveSecrets
    34:35:byte[] deriveSecrets(byte[],byte[],byte[],int) -> deriveSecrets
    50:76:byte[] expand(byte[],byte[],int) -> expand
    40:44:byte[] extract(byte[],byte[]) -> extract
org.whispersystems.libsignal.kdf.HKDFv2 -> org.whispersystems.libsignal.kdf.HKDFv2:
    8:8:void <init>() -> <init>
    11:11:int getIterationStartOffset() -> getIterationStartOffset
org.whispersystems.libsignal.kdf.HKDFv3 -> org.whispersystems.libsignal.kdf.HKDFv3:
    8:8:void <init>() -> <init>
    11:11:int getIterationStartOffset() -> getIterationStartOffset
org.whispersystems.libsignal.logging.Log -> org.whispersystems.libsignal.logging.Log:
    14:14:void <init>() -> <init>
    61:79:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    83:88:void log(int,java.lang.String,java.lang.String) -> log
    41:42:void w(java.lang.String,java.lang.String) -> w
    49:50:void w(java.lang.String,java.lang.Throwable) -> w
org.whispersystems.libsignal.logging.SignalProtocolLoggerProvider -> org.whispersystems.libsignal.logging.SignalProtocolLoggerProvider:
    8:8:void <init>() -> <init>
    13:13:org.whispersystems.libsignal.logging.SignalProtocolLogger getProvider() -> getProvider
org.whispersystems.libsignal.protocol.PreKeySignalMessage -> org.whispersystems.libsignal.protocol.PreKeySignalMessage:
    35:67:void <init>(byte[]) -> <init>
    74:99:void <init>(int,int,org.whispersystems.libsignal.util.guava.Optional,int,org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.protocol.SignalMessage) -> <init>
    122:122:org.whispersystems.libsignal.ecc.ECPublicKey getBaseKey() -> getBaseKey
    106:106:org.whispersystems.libsignal.IdentityKey getIdentityKey() -> getIdentityKey
    102:102:int getMessageVersion() -> getMessageVersion
    114:114:org.whispersystems.libsignal.util.guava.Optional getPreKeyId() -> getPreKeyId
    110:110:int getRegistrationId() -> getRegistrationId
    118:118:int getSignedPreKeyId() -> getSignedPreKeyId
    136:136:int getType() -> getType
    126:126:org.whispersystems.libsignal.protocol.SignalMessage getWhisperMessage() -> getWhisperMessage
    131:131:byte[] serialize() -> serialize
org.whispersystems.libsignal.protocol.SenderKeyDistributionMessage -> org.whispersystems.libsignal.protocol.SenderKeyDistributionMessage:
    83:83:int getType() -> getType
    78:78:byte[] serialize() -> serialize
org.whispersystems.libsignal.protocol.SenderKeyMessage -> org.whispersystems.libsignal.protocol.SenderKeyMessage:
    124:124:int getType() -> getType
    119:119:byte[] serialize() -> serialize
org.whispersystems.libsignal.protocol.SignalMessage -> org.whispersystems.libsignal.protocol.SignalMessage:
    37:68:void <init>(byte[]) -> <init>
    76:93:void <init>(int,javax.crypto.spec.SecretKeySpec,org.whispersystems.libsignal.ecc.ECPublicKey,int,int,byte[],org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey) -> <init>
    108:108:byte[] getBody() -> getBody
    104:104:int getCounter() -> getCounter
    128:137:byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[]) -> getMac
    100:100:int getMessageVersion() -> getMessageVersion
    96:96:org.whispersystems.libsignal.ecc.ECPublicKey getSenderRatchetKey() -> getSenderRatchetKey
    148:148:int getType() -> getType
    143:143:byte[] serialize() -> serialize
    114:119:void verifyMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec) -> verifyMac
org.whispersystems.libsignal.protocol.SignalProtos -> org.whispersystems.libsignal.protocol.SignalProtos:
    3954:4022:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    6:6:com.google.protobuf.Descriptors$Descriptor access$000() -> access$000
    6:6:com.google.protobuf.Descriptors$Descriptor access$002(com.google.protobuf.Descriptors$Descriptor) -> access$002
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100() -> access$100
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$102(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$102
    6:6:com.google.protobuf.Descriptors$Descriptor access$1200() -> access$1200
    6:6:com.google.protobuf.Descriptors$Descriptor access$1202(com.google.protobuf.Descriptors$Descriptor) -> access$1202
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1300() -> access$1300
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1302(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$1302
    6:6:com.google.protobuf.Descriptors$Descriptor access$2600() -> access$2600
    6:6:com.google.protobuf.Descriptors$Descriptor access$2602(com.google.protobuf.Descriptors$Descriptor) -> access$2602
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2700() -> access$2700
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$2702(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$2702
    6:6:com.google.protobuf.Descriptors$Descriptor access$3900() -> access$3900
    6:6:com.google.protobuf.Descriptors$Descriptor access$3902(com.google.protobuf.Descriptors$Descriptor) -> access$3902
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4000() -> access$4000
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$4002(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$4002
    6:6:com.google.protobuf.Descriptors$Descriptor access$5000() -> access$5000
    6:6:com.google.protobuf.Descriptors$Descriptor access$5002(com.google.protobuf.Descriptors$Descriptor) -> access$5002
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$5100() -> access$5100
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$5102(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$5102
    6:6:com.google.protobuf.Descriptors$Descriptor access$6200() -> access$6200
    6:6:com.google.protobuf.Descriptors$Descriptor access$6202(com.google.protobuf.Descriptors$Descriptor) -> access$6202
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6300() -> access$6300
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$6302(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$6302
    6:6:com.google.protobuf.Descriptors$FileDescriptor access$7202(com.google.protobuf.Descriptors$FileDescriptor) -> access$7202
    3949:3949:com.google.protobuf.Descriptors$FileDescriptor getDescriptor() -> getDescriptor
org.whispersystems.libsignal.protocol.SignalProtos$1 -> org.whispersystems.libsignal.protocol.SignalProtos$1:
    3975:3975:void <init>() -> <init>
    3978:4015:com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor) -> assignDescriptors
org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage -> org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage:
    3544:3911:void <clinit>() -> <clinit>
    3462:3462:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    3462:3462:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    3467:3469:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    3470:3470:void <init>(boolean) -> <init>
    3490:3531:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    3462:3462:boolean access$6700() -> access$6700
    3462:3462:int access$6902(org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage,int) -> access$6902
    3462:3462:com.google.protobuf.ByteString access$7002(org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage,com.google.protobuf.ByteString) -> access$7002
    3462:3462:int access$7102(org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage,int) -> access$7102
    3474:3474:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage getDefaultInstance() -> getDefaultInstance
    3462:3462:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    3478:3478:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    3573:3573:int getGeneration() -> getGeneration
    3556:3556:com.google.protobuf.Parser getParserForType() -> getParserForType
    3619:3633:int getSerializedSize() -> getSerializedSize
    3589:3589:com.google.protobuf.ByteString getSignature() -> getSignature
    3485:3485:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    3567:3567:boolean hasGeneration() -> hasGeneration
    3583:3583:boolean hasSignature() -> hasSignature
    3593:3595:void initFields() -> initFields
    3539:3539:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    3598:3602:boolean isInitialized() -> isInitialized
    3696:3696:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder newBuilder() -> newBuilder
    3699:3699:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage) -> newBuilder
    3462:3462:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    3462:3462:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    3697:3697:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder newBuilderForType() -> newBuilderForType
    3706:3707:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    3462:3462:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    3462:3462:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    3701:3701:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder toBuilder() -> toBuilder
    3607:3615:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$1 -> org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$1:
    3545:3545:void <init>() -> <init>
    3545:3545:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    3550:3550:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder -> org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder:
    3712:3712:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    3728:3730:void <init>() -> <init>
    3734:3736:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    3712:3712:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder access$6500() -> access$6500
    3712:3712:com.google.protobuf.Message build() -> build
    3712:3712:com.google.protobuf.MessageLite build() -> build
    3768:3770:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage build() -> build
    3712:3712:com.google.protobuf.Message buildPartial() -> buildPartial
    3776:3789:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage buildPartial() -> buildPartial
    3712:3712:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    3712:3712:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    3712:3712:java.lang.Object clone() -> clone
    3755:3755:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder clone() -> clone
    3742:3742:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder create() -> create
    3712:3712:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    3764:3764:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    3760:3760:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    3722:3722:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    3738:3740:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    3712:3712:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3712:3712:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3712:3712:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3712:3712:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3712:3712:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3793:3797:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3802:3810:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage) -> mergeFrom
    3821:3829:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3854:3857:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder setGeneration(int) -> setGeneration
    3887:3888:org.whispersystems.libsignal.protocol.SignalProtos$DeviceConsistencyCodeMessage$Builder setSignature(com.google.protobuf.ByteString) -> setSignature
org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage -> org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage:
    1651:2225:void <clinit>() -> <clinit>
    1554:1554:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    1554:1554:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    1559:1561:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    1562:1562:void <init>(boolean) -> <init>
    1582:1638:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    1554:1554:boolean access$3100() -> access$3100
    1554:1554:int access$3302(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage,int) -> access$3302
    1554:1554:com.google.protobuf.ByteString access$3402(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage,com.google.protobuf.ByteString) -> access$3402
    1554:1554:com.google.protobuf.ByteString access$3502(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage,com.google.protobuf.ByteString) -> access$3502
    1554:1554:com.google.protobuf.ByteString access$3602(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage,com.google.protobuf.ByteString) -> access$3602
    1554:1554:com.google.protobuf.ByteString access$3702(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage,com.google.protobuf.ByteString) -> access$3702
    1554:1554:int access$3802(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage,int) -> access$3802
    1696:1696:com.google.protobuf.ByteString getBaseKey() -> getBaseKey
    1744:1744:com.google.protobuf.ByteString getBaseKeySignature() -> getBaseKeySignature
    1566:1566:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage getDefaultInstance() -> getDefaultInstance
    1554:1554:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    1570:1570:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    1680:1680:int getId() -> getId
    1728:1728:com.google.protobuf.ByteString getIdentityKey() -> getIdentityKey
    1663:1663:com.google.protobuf.Parser getParserForType() -> getParserForType
    1712:1712:com.google.protobuf.ByteString getRatchetKey() -> getRatchetKey
    1786:1812:int getSerializedSize() -> getSerializedSize
    1577:1577:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    1690:1690:boolean hasBaseKey() -> hasBaseKey
    1738:1738:boolean hasBaseKeySignature() -> hasBaseKeySignature
    1674:1674:boolean hasId() -> hasId
    1722:1722:boolean hasIdentityKey() -> hasIdentityKey
    1706:1706:boolean hasRatchetKey() -> hasRatchetKey
    1748:1753:void initFields() -> initFields
    1646:1646:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1756:1760:boolean isInitialized() -> isInitialized
    1875:1875:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder newBuilder() -> newBuilder
    1878:1878:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage) -> newBuilder
    1554:1554:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    1554:1554:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1876:1876:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder newBuilderForType() -> newBuilderForType
    1885:1886:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1554:1554:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    1554:1554:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    1880:1880:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder toBuilder() -> toBuilder
    1765:1782:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$1 -> org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$1:
    1652:1652:void <init>() -> <init>
    1652:1652:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    1657:1657:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder -> org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder:
    1891:1891:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    1907:1909:void <init>() -> <init>
    1913:1915:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    1891:1891:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder access$2900() -> access$2900
    1891:1891:com.google.protobuf.Message build() -> build
    1891:1891:com.google.protobuf.MessageLite build() -> build
    1953:1955:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage build() -> build
    1891:1891:com.google.protobuf.Message buildPartial() -> buildPartial
    1961:1986:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage buildPartial() -> buildPartial
    1891:1891:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    1891:1891:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    1891:1891:java.lang.Object clone() -> clone
    1940:1940:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder clone() -> clone
    1921:1921:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder create() -> create
    1891:1891:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    1949:1949:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    1945:1945:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    1901:1901:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1917:1919:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    1891:1891:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1891:1891:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1891:1891:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1891:1891:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1891:1891:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1990:1994:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1999:2016:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage) -> mergeFrom
    2027:2035:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2093:2094:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder setBaseKey(com.google.protobuf.ByteString) -> setBaseKey
    2201:2202:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder setBaseKeySignature(com.google.protobuf.ByteString) -> setBaseKeySignature
    2060:2063:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder setId(int) -> setId
    2165:2166:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder setIdentityKey(com.google.protobuf.ByteString) -> setIdentityKey
    2129:2130:org.whispersystems.libsignal.protocol.SignalProtos$KeyExchangeMessage$Builder setRatchetKey(com.google.protobuf.ByteString) -> setRatchetKey
org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage -> org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage:
    832:1493:void <clinit>() -> <clinit>
    730:730:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    730:730:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    735:737:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    738:738:void <init>(boolean) -> <init>
    758:819:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    730:730:boolean access$1700() -> access$1700
    730:730:int access$1902(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage,int) -> access$1902
    730:730:int access$2002(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage,int) -> access$2002
    730:730:int access$2102(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage,int) -> access$2102
    730:730:com.google.protobuf.ByteString access$2202(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage,com.google.protobuf.ByteString) -> access$2202
    730:730:com.google.protobuf.ByteString access$2302(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage,com.google.protobuf.ByteString) -> access$2302
    730:730:com.google.protobuf.ByteString access$2402(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage,com.google.protobuf.ByteString) -> access$2402
    730:730:int access$2502(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage,int) -> access$2502
    909:909:com.google.protobuf.ByteString getBaseKey() -> getBaseKey
    742:742:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage getDefaultInstance() -> getDefaultInstance
    730:730:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    746:746:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    925:925:com.google.protobuf.ByteString getIdentityKey() -> getIdentityKey
    949:949:com.google.protobuf.ByteString getMessage() -> getMessage
    844:844:com.google.protobuf.Parser getParserForType() -> getParserForType
    877:877:int getPreKeyId() -> getPreKeyId
    861:861:int getRegistrationId() -> getRegistrationId
    995:1025:int getSerializedSize() -> getSerializedSize
    893:893:int getSignedPreKeyId() -> getSignedPreKeyId
    753:753:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    903:903:boolean hasBaseKey() -> hasBaseKey
    919:919:boolean hasIdentityKey() -> hasIdentityKey
    939:939:boolean hasMessage() -> hasMessage
    871:871:boolean hasPreKeyId() -> hasPreKeyId
    855:855:boolean hasRegistrationId() -> hasRegistrationId
    887:887:boolean hasSignedPreKeyId() -> hasSignedPreKeyId
    953:959:void initFields() -> initFields
    827:827:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    962:966:boolean isInitialized() -> isInitialized
    1088:1088:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder newBuilder() -> newBuilder
    1091:1091:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage) -> newBuilder
    730:730:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    730:730:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1089:1089:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder newBuilderForType() -> newBuilderForType
    1098:1099:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1038:1038:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage parseFrom(com.google.protobuf.ByteString) -> parseFrom
    730:730:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    730:730:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    1093:1093:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder toBuilder() -> toBuilder
    971:991:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$1 -> org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$1:
    833:833:void <init>() -> <init>
    833:833:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    838:838:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder -> org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder:
    1104:1104:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    1120:1122:void <init>() -> <init>
    1126:1128:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    1104:1104:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder access$1500() -> access$1500
    1104:1104:com.google.protobuf.Message build() -> build
    1104:1104:com.google.protobuf.MessageLite build() -> build
    1168:1170:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage build() -> build
    1104:1104:com.google.protobuf.Message buildPartial() -> buildPartial
    1176:1205:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage buildPartial() -> buildPartial
    1104:1104:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    1104:1104:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    1104:1104:java.lang.Object clone() -> clone
    1155:1155:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder clone() -> clone
    1134:1134:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder create() -> create
    1104:1104:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    1164:1164:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    1160:1160:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    1114:1114:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1130:1132:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    1104:1104:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1104:1104:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1104:1104:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1104:1104:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1104:1104:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1209:1213:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1218:1238:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage) -> mergeFrom
    1249:1257:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1381:1382:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder setBaseKey(com.google.protobuf.ByteString) -> setBaseKey
    1417:1418:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder setIdentityKey(com.google.protobuf.ByteString) -> setIdentityKey
    1465:1466:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder setMessage(com.google.protobuf.ByteString) -> setMessage
    1315:1318:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder setPreKeyId(int) -> setPreKeyId
    1282:1285:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder setRegistrationId(int) -> setRegistrationId
    1348:1351:org.whispersystems.libsignal.protocol.SignalProtos$PreKeySignalMessage$Builder setSignedPreKeyId(int) -> setSignedPreKeyId
org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage -> org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage:
    2929:3431:void <clinit>() -> <clinit>
    2837:2837:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    2837:2837:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    2842:2844:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    2845:2845:void <init>(boolean) -> <init>
    2865:2916:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    2837:2837:boolean access$5500() -> access$5500
    2837:2837:int access$5702(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage,int) -> access$5702
    2837:2837:int access$5802(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage,int) -> access$5802
    2837:2837:com.google.protobuf.ByteString access$5902(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage,com.google.protobuf.ByteString) -> access$5902
    2837:2837:com.google.protobuf.ByteString access$6002(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage,com.google.protobuf.ByteString) -> access$6002
    2837:2837:int access$6102(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage,int) -> access$6102
    2990:2990:com.google.protobuf.ByteString getChainKey() -> getChainKey
    2849:2849:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage getDefaultInstance() -> getDefaultInstance
    2837:2837:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    2853:2853:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    2958:2958:int getId() -> getId
    2974:2974:int getIteration() -> getIteration
    2941:2941:com.google.protobuf.Parser getParserForType() -> getParserForType
    3044:3066:int getSerializedSize() -> getSerializedSize
    3006:3006:com.google.protobuf.ByteString getSigningKey() -> getSigningKey
    2860:2860:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    2984:2984:boolean hasChainKey() -> hasChainKey
    2952:2952:boolean hasId() -> hasId
    2968:2968:boolean hasIteration() -> hasIteration
    3000:3000:boolean hasSigningKey() -> hasSigningKey
    3010:3014:void initFields() -> initFields
    2924:2924:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    3017:3021:boolean isInitialized() -> isInitialized
    3129:3129:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder newBuilder() -> newBuilder
    3132:3132:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage) -> newBuilder
    2837:2837:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    2837:2837:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    3130:3130:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder newBuilderForType() -> newBuilderForType
    3139:3140:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    2837:2837:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    2837:2837:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    3134:3134:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder toBuilder() -> toBuilder
    3026:3040:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$1 -> org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$1:
    2930:2930:void <init>() -> <init>
    2930:2930:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    2935:2935:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder -> org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder:
    3145:3145:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    3161:3163:void <init>() -> <init>
    3167:3169:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    3145:3145:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder access$5300() -> access$5300
    3145:3145:com.google.protobuf.Message build() -> build
    3145:3145:com.google.protobuf.MessageLite build() -> build
    3205:3207:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage build() -> build
    3145:3145:com.google.protobuf.Message buildPartial() -> buildPartial
    3213:3234:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage buildPartial() -> buildPartial
    3145:3145:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    3145:3145:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    3145:3145:java.lang.Object clone() -> clone
    3192:3192:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder clone() -> clone
    3175:3175:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder create() -> create
    3145:3145:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    3201:3201:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    3197:3197:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    3155:3155:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    3171:3173:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    3145:3145:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3145:3145:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3145:3145:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3145:3145:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3145:3145:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3238:3242:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3247:3261:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage) -> mergeFrom
    3272:3280:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3371:3372:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder setChainKey(com.google.protobuf.ByteString) -> setChainKey
    3305:3308:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder setId(int) -> setId
    3338:3341:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder setIteration(int) -> setIteration
    3407:3408:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyDistributionMessage$Builder setSigningKey(com.google.protobuf.ByteString) -> setSigningKey
org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage -> org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage:
    2353:2786:void <clinit>() -> <clinit>
    2266:2266:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    2266:2266:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    2271:2273:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    2274:2274:void <init>(boolean) -> <init>
    2294:2340:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    2266:2266:boolean access$4400() -> access$4400
    2266:2266:int access$4602(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage,int) -> access$4602
    2266:2266:int access$4702(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage,int) -> access$4702
    2266:2266:com.google.protobuf.ByteString access$4802(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage,com.google.protobuf.ByteString) -> access$4802
    2266:2266:int access$4902(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage,int) -> access$4902
    2414:2414:com.google.protobuf.ByteString getCiphertext() -> getCiphertext
    2278:2278:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage getDefaultInstance() -> getDefaultInstance
    2266:2266:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    2282:2282:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    2382:2382:int getId() -> getId
    2398:2398:int getIteration() -> getIteration
    2365:2365:com.google.protobuf.Parser getParserForType() -> getParserForType
    2448:2466:int getSerializedSize() -> getSerializedSize
    2289:2289:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    2408:2408:boolean hasCiphertext() -> hasCiphertext
    2376:2376:boolean hasId() -> hasId
    2392:2392:boolean hasIteration() -> hasIteration
    2418:2421:void initFields() -> initFields
    2348:2348:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    2424:2428:boolean isInitialized() -> isInitialized
    2529:2529:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder newBuilder() -> newBuilder
    2532:2532:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage) -> newBuilder
    2266:2266:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    2266:2266:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    2530:2530:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder newBuilderForType() -> newBuilderForType
    2539:2540:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    2266:2266:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    2266:2266:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    2534:2534:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder toBuilder() -> toBuilder
    2433:2444:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$1 -> org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$1:
    2354:2354:void <init>() -> <init>
    2354:2354:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    2359:2359:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder -> org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder:
    2545:2545:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    2561:2563:void <init>() -> <init>
    2567:2569:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    2545:2545:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder access$4200() -> access$4200
    2545:2545:com.google.protobuf.Message build() -> build
    2545:2545:com.google.protobuf.MessageLite build() -> build
    2603:2605:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage build() -> build
    2545:2545:com.google.protobuf.Message buildPartial() -> buildPartial
    2611:2628:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage buildPartial() -> buildPartial
    2545:2545:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    2545:2545:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    2545:2545:java.lang.Object clone() -> clone
    2590:2590:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder clone() -> clone
    2575:2575:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder create() -> create
    2545:2545:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    2599:2599:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    2595:2595:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    2555:2555:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    2571:2573:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    2545:2545:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2545:2545:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    2545:2545:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2545:2545:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    2545:2545:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2632:2636:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    2641:2652:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage) -> mergeFrom
    2663:2671:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2762:2763:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder setCiphertext(com.google.protobuf.ByteString) -> setCiphertext
    2696:2699:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder setId(int) -> setId
    2729:2732:org.whispersystems.libsignal.protocol.SignalProtos$SenderKeyMessage$Builder setIteration(int) -> setIteration
org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage -> org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage:
    149:651:void <clinit>() -> <clinit>
    57:57:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    57:57:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    62:64:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    65:65:void <init>(boolean) -> <init>
    85:136:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    57:57:com.google.protobuf.ByteString access$1002(org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage,com.google.protobuf.ByteString) -> access$1002
    57:57:int access$1102(org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage,int) -> access$1102
    57:57:boolean access$500() -> access$500
    57:57:com.google.protobuf.ByteString access$702(org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage,com.google.protobuf.ByteString) -> access$702
    57:57:int access$802(org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage,int) -> access$802
    57:57:int access$902(org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage,int) -> access$902
    226:226:com.google.protobuf.ByteString getCiphertext() -> getCiphertext
    194:194:int getCounter() -> getCounter
    69:69:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage getDefaultInstance() -> getDefaultInstance
    57:57:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    73:73:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    161:161:com.google.protobuf.Parser getParserForType() -> getParserForType
    210:210:int getPreviousCounter() -> getPreviousCounter
    178:178:com.google.protobuf.ByteString getRatchetKey() -> getRatchetKey
    264:286:int getSerializedSize() -> getSerializedSize
    80:80:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    220:220:boolean hasCiphertext() -> hasCiphertext
    188:188:boolean hasCounter() -> hasCounter
    204:204:boolean hasPreviousCounter() -> hasPreviousCounter
    172:172:boolean hasRatchetKey() -> hasRatchetKey
    230:234:void initFields() -> initFields
    144:144:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    237:241:boolean isInitialized() -> isInitialized
    349:349:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder newBuilder() -> newBuilder
    352:352:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage) -> newBuilder
    57:57:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    57:57:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    350:350:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder newBuilderForType() -> newBuilderForType
    359:360:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    309:309:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage parseFrom(byte[]) -> parseFrom
    57:57:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    57:57:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    354:354:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder toBuilder() -> toBuilder
    246:260:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$1 -> org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$1:
    150:150:void <init>() -> <init>
    150:150:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    155:155:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder -> org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder:
    365:365:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.protocol.SignalProtos$1) -> <init>
    381:383:void <init>() -> <init>
    387:389:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    365:365:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder access$300() -> access$300
    365:365:com.google.protobuf.Message build() -> build
    365:365:com.google.protobuf.MessageLite build() -> build
    425:427:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage build() -> build
    365:365:com.google.protobuf.Message buildPartial() -> buildPartial
    433:454:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage buildPartial() -> buildPartial
    365:365:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    365:365:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    365:365:java.lang.Object clone() -> clone
    412:412:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder clone() -> clone
    395:395:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder create() -> create
    365:365:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    421:421:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage getDefaultInstanceForType() -> getDefaultInstanceForType
    417:417:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    375:375:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    391:393:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    365:365:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    365:365:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    365:365:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    365:365:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    365:365:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    458:462:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    467:481:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage) -> mergeFrom
    492:500:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    627:628:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder setCiphertext(com.google.protobuf.ByteString) -> setCiphertext
    561:564:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder setCounter(int) -> setCounter
    594:597:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder setPreviousCounter(int) -> setPreviousCounter
    525:526:org.whispersystems.libsignal.protocol.SignalProtos$SignalMessage$Builder setRatchetKey(com.google.protobuf.ByteString) -> setRatchetKey
org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters -> org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters:
    14:14:void <init>(org.whispersystems.libsignal.IdentityKeyPair,org.whispersystems.libsignal.ecc.ECKeyPair,org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.util.guava.Optional,org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$1) -> <init>
    27:38:void <init>(org.whispersystems.libsignal.IdentityKeyPair,org.whispersystems.libsignal.ecc.ECKeyPair,org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.util.guava.Optional) -> <init>
    47:47:org.whispersystems.libsignal.ecc.ECKeyPair getOurBaseKey() -> getOurBaseKey
    43:43:org.whispersystems.libsignal.IdentityKeyPair getOurIdentityKey() -> getOurIdentityKey
    51:51:org.whispersystems.libsignal.IdentityKey getTheirIdentityKey() -> getTheirIdentityKey
    59:59:org.whispersystems.libsignal.util.guava.Optional getTheirOneTimePreKey() -> getTheirOneTimePreKey
    67:67:org.whispersystems.libsignal.ecc.ECPublicKey getTheirRatchetKey() -> getTheirRatchetKey
    55:55:org.whispersystems.libsignal.ecc.ECPublicKey getTheirSignedPreKey() -> getTheirSignedPreKey
    63:63:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder newBuilder() -> newBuilder
org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder -> org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder:
    70:70:void <init>() -> <init>
    110:110:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters create() -> create
    85:86:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder setOurBaseKey(org.whispersystems.libsignal.ecc.ECKeyPair) -> setOurBaseKey
    80:81:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder setOurIdentityKey(org.whispersystems.libsignal.IdentityKeyPair) -> setOurIdentityKey
    95:96:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder setTheirIdentityKey(org.whispersystems.libsignal.IdentityKey) -> setTheirIdentityKey
    105:106:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder setTheirOneTimePreKey(org.whispersystems.libsignal.util.guava.Optional) -> setTheirOneTimePreKey
    90:91:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder setTheirRatchetKey(org.whispersystems.libsignal.ecc.ECPublicKey) -> setTheirRatchetKey
    100:101:org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters$Builder setTheirSignedPreKey(org.whispersystems.libsignal.ecc.ECPublicKey) -> setTheirSignedPreKey
org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters -> org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters:
    27:38:void <init>(org.whispersystems.libsignal.IdentityKeyPair,org.whispersystems.libsignal.ecc.ECKeyPair,org.whispersystems.libsignal.ecc.ECKeyPair,org.whispersystems.libsignal.util.guava.Optional,org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.ecc.ECPublicKey) -> <init>
    43:43:org.whispersystems.libsignal.IdentityKeyPair getOurIdentityKey() -> getOurIdentityKey
    51:51:org.whispersystems.libsignal.util.guava.Optional getOurOneTimePreKey() -> getOurOneTimePreKey
    67:67:org.whispersystems.libsignal.ecc.ECKeyPair getOurRatchetKey() -> getOurRatchetKey
    47:47:org.whispersystems.libsignal.ecc.ECKeyPair getOurSignedPreKey() -> getOurSignedPreKey
    59:59:org.whispersystems.libsignal.ecc.ECPublicKey getTheirBaseKey() -> getTheirBaseKey
    55:55:org.whispersystems.libsignal.IdentityKey getTheirIdentityKey() -> getTheirIdentityKey
    63:63:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder newBuilder() -> newBuilder
org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder -> org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder:
    70:70:void <init>() -> <init>
    110:110:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters create() -> create
    80:81:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder setOurIdentityKey(org.whispersystems.libsignal.IdentityKeyPair) -> setOurIdentityKey
    90:91:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder setOurOneTimePreKey(org.whispersystems.libsignal.util.guava.Optional) -> setOurOneTimePreKey
    105:106:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder setOurRatchetKey(org.whispersystems.libsignal.ecc.ECKeyPair) -> setOurRatchetKey
    85:86:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder setOurSignedPreKey(org.whispersystems.libsignal.ecc.ECKeyPair) -> setOurSignedPreKey
    100:101:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder setTheirBaseKey(org.whispersystems.libsignal.ecc.ECPublicKey) -> setTheirBaseKey
    95:96:org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters$Builder setTheirIdentityKey(org.whispersystems.libsignal.IdentityKey) -> setTheirIdentityKey
org.whispersystems.libsignal.ratchet.ChainKey -> org.whispersystems.libsignal.ratchet.ChainKey:
    20:21:void <clinit>() -> <clinit>
    27:31:void <init>(org.whispersystems.libsignal.kdf.HKDF,byte[],int) -> <init>
    56:61:byte[] getBaseMaterial(byte[]) -> getBaseMaterial
    38:38:int getIndex() -> getIndex
    34:34:byte[] getKey() -> getKey
    47:51:org.whispersystems.libsignal.ratchet.MessageKeys getMessageKeys() -> getMessageKeys
    42:43:org.whispersystems.libsignal.ratchet.ChainKey getNextChainKey() -> getNextChainKey
org.whispersystems.libsignal.ratchet.MessageKeys -> org.whispersystems.libsignal.ratchet.MessageKeys:
    18:23:void <init>(javax.crypto.spec.SecretKeySpec,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec,int) -> <init>
    26:26:javax.crypto.spec.SecretKeySpec getCipherKey() -> getCipherKey
    38:38:int getCounter() -> getCounter
    34:34:javax.crypto.spec.IvParameterSpec getIv() -> getIv
    30:30:javax.crypto.spec.SecretKeySpec getMacKey() -> getMacKey
org.whispersystems.libsignal.ratchet.RatchetingSession -> org.whispersystems.libsignal.ratchet.RatchetingSession:
    24:24:void <init>() -> <init>
    131:135:org.whispersystems.libsignal.ratchet.RatchetingSession$DerivedKeys calculateDerivedKeys(byte[]) -> calculateDerivedKeys
    125:127:byte[] getDiscontinuityBytes() -> getDiscontinuityBytes
    58:86:void initializeSession(org.whispersystems.libsignal.state.SessionState,org.whispersystems.libsignal.ratchet.AliceSignalProtocolParameters) -> initializeSession
    95:120:void initializeSession(org.whispersystems.libsignal.state.SessionState,org.whispersystems.libsignal.ratchet.BobSignalProtocolParameters) -> initializeSession
org.whispersystems.libsignal.ratchet.RatchetingSession$DerivedKeys -> org.whispersystems.libsignal.ratchet.RatchetingSession$DerivedKeys:
    143:143:void <init>(org.whispersystems.libsignal.ratchet.RootKey,org.whispersystems.libsignal.ratchet.ChainKey,org.whispersystems.libsignal.ratchet.RatchetingSession$1) -> <init>
    147:150:void <init>(org.whispersystems.libsignal.ratchet.RootKey,org.whispersystems.libsignal.ratchet.ChainKey) -> <init>
    157:157:org.whispersystems.libsignal.ratchet.ChainKey getChainKey() -> getChainKey
    153:153:org.whispersystems.libsignal.ratchet.RootKey getRootKey() -> getRootKey
org.whispersystems.libsignal.ratchet.RootKey -> org.whispersystems.libsignal.ratchet.RootKey:
    22:25:void <init>(org.whispersystems.libsignal.kdf.HKDF,byte[]) -> <init>
    34:41:org.whispersystems.libsignal.util.Pair createChain(org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ecc.ECKeyPair) -> createChain
    28:28:byte[] getKeyBytes() -> getKeyBytes
org.whispersystems.libsignal.ratchet.SymmetricSignalProtocolParameters$Builder -> org.whispersystems.libsignal.ratchet.SymmetricSignalProtocolParameters$Builder:
    69:69:void <init>() -> <init>
org.whispersystems.libsignal.state.IdentityKeyStore$Direction -> org.whispersystems.libsignal.state.IdentityKeyStore$Direction:
    20:19:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    19:19:org.whispersystems.libsignal.state.IdentityKeyStore$Direction valueOf(java.lang.String) -> valueOf
    19:19:org.whispersystems.libsignal.state.IdentityKeyStore$Direction[] values() -> values
org.whispersystems.libsignal.state.PreKeyBundle -> org.whispersystems.libsignal.state.PreKeyBundle:
    35:44:void <init>(int,int,int,org.whispersystems.libsignal.ecc.ECPublicKey,int,org.whispersystems.libsignal.ecc.ECPublicKey,byte[],org.whispersystems.libsignal.IdentityKey) -> <init>
    92:92:org.whispersystems.libsignal.IdentityKey getIdentityKey() -> getIdentityKey
    64:64:org.whispersystems.libsignal.ecc.ECPublicKey getPreKey() -> getPreKey
    57:57:int getPreKeyId() -> getPreKeyId
    99:99:int getRegistrationId() -> getRegistrationId
    78:78:org.whispersystems.libsignal.ecc.ECPublicKey getSignedPreKey() -> getSignedPreKey
    71:71:int getSignedPreKeyId() -> getSignedPreKeyId
    85:85:byte[] getSignedPreKeySignature() -> getSignedPreKeySignature
org.whispersystems.libsignal.state.PreKeyRecord -> org.whispersystems.libsignal.state.PreKeyRecord:
    24:32:void <init>(int,org.whispersystems.libsignal.ecc.ECKeyPair) -> <init>
    34:36:void <init>(byte[]) -> <init>
    39:39:int getId() -> getId
    44:49:org.whispersystems.libsignal.ecc.ECKeyPair getKeyPair() -> getKeyPair
    54:54:byte[] serialize() -> serialize
org.whispersystems.libsignal.state.SessionRecord -> org.whispersystems.libsignal.state.SessionRecord:
    29:31:void <init>() -> <init>
    38:46:void <init>(byte[]) -> <init>
    91:92:void archiveCurrentState() -> archiveCurrentState
    74:74:java.util.List getPreviousSessionStates() -> getPreviousSessionStates
    67:67:org.whispersystems.libsignal.state.SessionState getSessionState() -> getSessionState
    49:63:boolean hasSessionState(int,byte[]) -> hasSessionState
    82:82:boolean isFresh() -> isFresh
    95:101:void promoteState(org.whispersystems.libsignal.state.SessionState) -> promoteState
    111:122:byte[] serialize() -> serialize
    104:105:void setState(org.whispersystems.libsignal.state.SessionState) -> setState
org.whispersystems.libsignal.state.SessionState -> org.whispersystems.libsignal.state.SessionState:
    45:47:void <init>() -> <init>
    49:51:void <init>(org.whispersystems.libsignal.state.StorageProtos$SessionStructure) -> <init>
    53:55:void <init>(org.whispersystems.libsignal.state.SessionState) -> <init>
    198:215:void addReceiverChain(org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ratchet.ChainKey) -> addReceiverChain
    447:450:void clearUnacknowledgedPreKeyMessage() -> clearUnacknowledgedPreKeyMessage
    62:62:byte[] getAliceBaseKey() -> getAliceBaseKey
    111:113:org.whispersystems.libsignal.IdentityKey getLocalIdentityKey() -> getLocalIdentityKey
    469:469:int getLocalRegistrationId() -> getLocalRegistrationId
    118:118:int getPreviousCounter() -> getPreviousCounter
    164:181:org.whispersystems.libsignal.util.Pair getReceiverChain(org.whispersystems.libsignal.ecc.ECPublicKey) -> getReceiverChain
    185:191:org.whispersystems.libsignal.ratchet.ChainKey getReceiverChainKey(org.whispersystems.libsignal.ecc.ECPublicKey) -> getReceiverChainKey
    98:105:org.whispersystems.libsignal.IdentityKey getRemoteIdentityKey() -> getRemoteIdentityKey
    128:128:org.whispersystems.libsignal.ratchet.RootKey getRootKey() -> getRootKey
    233:234:org.whispersystems.libsignal.ratchet.ChainKey getSenderChainKey() -> getSenderChainKey
    140:142:org.whispersystems.libsignal.ecc.ECPublicKey getSenderRatchetKey() -> getSenderRatchetKey
    147:152:org.whispersystems.libsignal.ecc.ECKeyPair getSenderRatchetKeyPair() -> getSenderRatchetKeyPair
    78:81:int getSessionVersion() -> getSessionVersion
    58:58:org.whispersystems.libsignal.state.StorageProtos$SessionStructure getStructure() -> getStructure
    429:442:org.whispersystems.libsignal.state.SessionState$UnacknowledgedPreKeyMessageItems getUnacknowledgedPreKeyMessageItems() -> getUnacknowledgedPreKeyMessageItems
    252:267:boolean hasMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int) -> hasMessageKeys
    156:156:boolean hasReceiverChain(org.whispersystems.libsignal.ecc.ECPublicKey) -> hasReceiverChain
    160:160:boolean hasSenderChain() -> hasSenderChain
    422:422:boolean hasUnacknowledgedPreKeyMessage() -> hasUnacknowledgedPreKeyMessage
    271:304:org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int) -> removeMessageKeys
    66:69:void setAliceBaseKey(byte[]) -> setAliceBaseKey
    91:94:void setLocalIdentityKey(org.whispersystems.libsignal.IdentityKey) -> setLocalIdentityKey
    463:466:void setLocalRegistrationId(int) -> setLocalRegistrationId
    308:327:void setMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ratchet.MessageKeys) -> setMessageKeys
    122:125:void setPreviousCounter(int) -> setPreviousCounter
    330:343:void setReceiverChainKey(org.whispersystems.libsignal.ecc.ECPublicKey,org.whispersystems.libsignal.ratchet.ChainKey) -> setReceiverChainKey
    85:88:void setRemoteIdentityKey(org.whispersystems.libsignal.IdentityKey) -> setRemoteIdentityKey
    453:456:void setRemoteRegistrationId(int) -> setRemoteRegistrationId
    133:136:void setRootKey(org.whispersystems.libsignal.ratchet.RootKey) -> setRootKey
    218:230:void setSenderChain(org.whispersystems.libsignal.ecc.ECKeyPair,org.whispersystems.libsignal.ratchet.ChainKey) -> setSenderChain
    240:249:void setSenderChainKey(org.whispersystems.libsignal.ratchet.ChainKey) -> setSenderChainKey
    72:75:void setSessionVersion(int) -> setSessionVersion
    408:419:void setUnacknowledgedPreKeyMessage(org.whispersystems.libsignal.util.guava.Optional,int,org.whispersystems.libsignal.ecc.ECPublicKey) -> setUnacknowledgedPreKeyMessage
org.whispersystems.libsignal.state.SessionState$UnacknowledgedPreKeyMessageItems -> org.whispersystems.libsignal.state.SessionState$UnacknowledgedPreKeyMessageItems:
    484:488:void <init>(org.whispersystems.libsignal.util.guava.Optional,int,org.whispersystems.libsignal.ecc.ECPublicKey) -> <init>
    500:500:org.whispersystems.libsignal.ecc.ECPublicKey getBaseKey() -> getBaseKey
    492:492:org.whispersystems.libsignal.util.guava.Optional getPreKeyId() -> getPreKeyId
    496:496:int getSignedPreKeyId() -> getSignedPreKeyId
org.whispersystems.libsignal.state.SignedPreKeyRecord -> org.whispersystems.libsignal.state.SignedPreKeyRecord:
    24:34:void <init>(int,long,org.whispersystems.libsignal.ecc.ECKeyPair,byte[]) -> <init>
    36:38:void <init>(byte[]) -> <init>
    41:41:int getId() -> getId
    50:55:org.whispersystems.libsignal.ecc.ECKeyPair getKeyPair() -> getKeyPair
    60:60:byte[] getSignature() -> getSignature
    64:64:byte[] serialize() -> serialize
org.whispersystems.libsignal.state.StorageProtos -> org.whispersystems.libsignal.state.StorageProtos:
    11618:11776:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    6:6:com.google.protobuf.Descriptors$Descriptor access$000() -> access$000
    6:6:com.google.protobuf.Descriptors$Descriptor access$002(com.google.protobuf.Descriptors$Descriptor) -> access$002
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$100() -> access$100
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$102(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$102
    6:6:com.google.protobuf.Descriptors$Descriptor access$10500() -> access$10500
    6:6:com.google.protobuf.Descriptors$Descriptor access$10502(com.google.protobuf.Descriptors$Descriptor) -> access$10502
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$10600() -> access$10600
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$10602(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$10602
    6:6:com.google.protobuf.Descriptors$Descriptor access$11800() -> access$11800
    6:6:com.google.protobuf.Descriptors$Descriptor access$11802(com.google.protobuf.Descriptors$Descriptor) -> access$11802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$11900() -> access$11900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$11902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$11902
    6:6:com.google.protobuf.Descriptors$Descriptor access$12800() -> access$12800
    6:6:com.google.protobuf.Descriptors$Descriptor access$12802(com.google.protobuf.Descriptors$Descriptor) -> access$12802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$12900() -> access$12900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$12902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$12902
    6:6:com.google.protobuf.Descriptors$Descriptor access$13100() -> access$13100
    6:6:com.google.protobuf.Descriptors$Descriptor access$13102(com.google.protobuf.Descriptors$Descriptor) -> access$13102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13200() -> access$13200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$13202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$13202
    6:6:com.google.protobuf.Descriptors$Descriptor access$14100() -> access$14100
    6:6:com.google.protobuf.Descriptors$Descriptor access$14102(com.google.protobuf.Descriptors$Descriptor) -> access$14102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$14200() -> access$14200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$14202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$14202
    6:6:com.google.protobuf.Descriptors$Descriptor access$15100() -> access$15100
    6:6:com.google.protobuf.Descriptors$Descriptor access$15102(com.google.protobuf.Descriptors$Descriptor) -> access$15102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15200() -> access$15200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$15202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$15202
    6:6:com.google.protobuf.Descriptors$Descriptor access$1600() -> access$1600
    6:6:com.google.protobuf.Descriptors$Descriptor access$1602(com.google.protobuf.Descriptors$Descriptor) -> access$1602
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1700() -> access$1700
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$1702(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$1702
    6:6:com.google.protobuf.Descriptors$Descriptor access$17100() -> access$17100
    6:6:com.google.protobuf.Descriptors$Descriptor access$17102(com.google.protobuf.Descriptors$Descriptor) -> access$17102
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17200() -> access$17200
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$17202(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$17202
    6:6:com.google.protobuf.Descriptors$FileDescriptor access$18002(com.google.protobuf.Descriptors$FileDescriptor) -> access$18002
    6:6:com.google.protobuf.Descriptors$Descriptor access$300() -> access$300
    6:6:com.google.protobuf.Descriptors$Descriptor access$302(com.google.protobuf.Descriptors$Descriptor) -> access$302
    6:6:com.google.protobuf.Descriptors$Descriptor access$3800() -> access$3800
    6:6:com.google.protobuf.Descriptors$Descriptor access$3802(com.google.protobuf.Descriptors$Descriptor) -> access$3802
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$3900() -> access$3900
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$3902(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$3902
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$400() -> access$400
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$402(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$402
    6:6:com.google.protobuf.Descriptors$Descriptor access$5300() -> access$5300
    6:6:com.google.protobuf.Descriptors$Descriptor access$5302(com.google.protobuf.Descriptors$Descriptor) -> access$5302
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$5400() -> access$5400
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$5402(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$5402
    6:6:com.google.protobuf.Descriptors$Descriptor access$600() -> access$600
    6:6:com.google.protobuf.Descriptors$Descriptor access$602(com.google.protobuf.Descriptors$Descriptor) -> access$602
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$700() -> access$700
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$702(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$702
    6:6:com.google.protobuf.Descriptors$Descriptor access$8300() -> access$8300
    6:6:com.google.protobuf.Descriptors$Descriptor access$8302(com.google.protobuf.Descriptors$Descriptor) -> access$8302
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$8400() -> access$8400
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$8402(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$8402
    6:6:com.google.protobuf.Descriptors$Descriptor access$9400() -> access$9400
    6:6:com.google.protobuf.Descriptors$Descriptor access$9402(com.google.protobuf.Descriptors$Descriptor) -> access$9402
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$9500() -> access$9500
    6:6:com.google.protobuf.GeneratedMessage$FieldAccessorTable access$9502(com.google.protobuf.GeneratedMessage$FieldAccessorTable) -> access$9502
    11613:11613:com.google.protobuf.Descriptors$FileDescriptor getDescriptor() -> getDescriptor
org.whispersystems.libsignal.state.StorageProtos$1 -> org.whispersystems.libsignal.state.StorageProtos$1:
    11675:11675:void <init>() -> <init>
    11678:11769:com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors$FileDescriptor) -> assignDescriptors
org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure -> org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure:
    7901:8271:void <clinit>() -> <clinit>
    7819:7819:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    7819:7819:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    7824:7826:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    7827:7827:void <init>(boolean) -> <init>
    7847:7888:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    7819:7819:boolean access$12300() -> access$12300
    7819:7819:com.google.protobuf.ByteString access$12502(org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure,com.google.protobuf.ByteString) -> access$12502
    7819:7819:com.google.protobuf.ByteString access$12602(org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure,com.google.protobuf.ByteString) -> access$12602
    7819:7819:int access$12702(org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure,int) -> access$12702
    7831:7831:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure getDefaultInstance() -> getDefaultInstance
    7819:7819:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    7835:7835:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    7913:7913:com.google.protobuf.Parser getParserForType() -> getParserForType
    7946:7946:com.google.protobuf.ByteString getPrivateKey() -> getPrivateKey
    7930:7930:com.google.protobuf.ByteString getPublicKey() -> getPublicKey
    7976:7990:int getSerializedSize() -> getSerializedSize
    7842:7842:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    7940:7940:boolean hasPrivateKey() -> hasPrivateKey
    7924:7924:boolean hasPublicKey() -> hasPublicKey
    7950:7952:void initFields() -> initFields
    7896:7896:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    7955:7959:boolean isInitialized() -> isInitialized
    8053:8053:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder newBuilder() -> newBuilder
    8056:8056:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure) -> newBuilder
    7819:7819:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    7819:7819:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    8054:8054:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder newBuilderForType() -> newBuilderForType
    8063:8064:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    8013:8013:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure parseFrom(byte[]) -> parseFrom
    7819:7819:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    7819:7819:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    8058:8058:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder toBuilder() -> toBuilder
    7964:7972:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$1 -> org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$1:
    7902:7902:void <init>() -> <init>
    7902:7902:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    7907:7907:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder -> org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder:
    8069:8069:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8085:8087:void <init>() -> <init>
    8091:8093:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    8069:8069:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder access$12100() -> access$12100
    8069:8069:com.google.protobuf.Message build() -> build
    8069:8069:com.google.protobuf.MessageLite build() -> build
    8125:8127:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure build() -> build
    8069:8069:com.google.protobuf.Message buildPartial() -> buildPartial
    8133:8146:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure buildPartial() -> buildPartial
    8069:8069:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    8069:8069:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    8069:8069:java.lang.Object clone() -> clone
    8112:8112:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder clone() -> clone
    8099:8099:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder create() -> create
    8069:8069:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    8121:8121:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    8117:8117:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    8079:8079:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    8095:8097:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    8069:8069:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8069:8069:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8069:8069:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8069:8069:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8069:8069:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8150:8154:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8159:8167:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure) -> mergeFrom
    8178:8186:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8247:8248:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder setPrivateKey(com.google.protobuf.ByteString) -> setPrivateKey
    8211:8212:org.whispersystems.libsignal.state.StorageProtos$IdentityKeyPairStructure$Builder setPublicKey(com.google.protobuf.ByteString) -> setPublicKey
org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure -> org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure:
    6623:7059:void <clinit>() -> <clinit>
    6536:6536:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    6536:6536:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    6541:6543:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    6544:6544:void <init>(boolean) -> <init>
    6564:6610:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    6536:6536:int access$10102(org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure,int) -> access$10102
    6536:6536:com.google.protobuf.ByteString access$10202(org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure,com.google.protobuf.ByteString) -> access$10202
    6536:6536:com.google.protobuf.ByteString access$10302(org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure,com.google.protobuf.ByteString) -> access$10302
    6536:6536:int access$10402(org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure,int) -> access$10402
    6536:6536:boolean access$9900() -> access$9900
    6548:6548:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure getDefaultInstance() -> getDefaultInstance
    6536:6536:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    6552:6552:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    6652:6652:int getId() -> getId
    6635:6635:com.google.protobuf.Parser getParserForType() -> getParserForType
    6684:6684:com.google.protobuf.ByteString getPrivateKey() -> getPrivateKey
    6668:6668:com.google.protobuf.ByteString getPublicKey() -> getPublicKey
    6718:6736:int getSerializedSize() -> getSerializedSize
    6559:6559:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    6646:6646:boolean hasId() -> hasId
    6678:6678:boolean hasPrivateKey() -> hasPrivateKey
    6662:6662:boolean hasPublicKey() -> hasPublicKey
    6688:6691:void initFields() -> initFields
    6618:6618:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    6694:6698:boolean isInitialized() -> isInitialized
    6799:6799:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder newBuilder() -> newBuilder
    6802:6802:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure) -> newBuilder
    6536:6536:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    6536:6536:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    6800:6800:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder newBuilderForType() -> newBuilderForType
    6809:6810:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    6759:6759:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure parseFrom(byte[]) -> parseFrom
    6536:6536:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    6536:6536:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    6804:6804:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder toBuilder() -> toBuilder
    6703:6714:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$1 -> org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$1:
    6624:6624:void <init>() -> <init>
    6624:6624:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    6629:6629:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder -> org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder:
    6815:6815:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    6831:6833:void <init>() -> <init>
    6837:6839:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    6815:6815:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder access$9700() -> access$9700
    6815:6815:com.google.protobuf.Message build() -> build
    6815:6815:com.google.protobuf.MessageLite build() -> build
    6873:6875:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure build() -> build
    6815:6815:com.google.protobuf.Message buildPartial() -> buildPartial
    6881:6898:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure buildPartial() -> buildPartial
    6815:6815:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    6815:6815:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    6815:6815:java.lang.Object clone() -> clone
    6860:6860:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder clone() -> clone
    6845:6845:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder create() -> create
    6815:6815:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    6869:6869:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    6865:6865:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    6825:6825:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    6841:6843:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    6815:6815:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    6815:6815:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    6815:6815:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    6815:6815:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    6815:6815:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    6902:6906:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    6911:6922:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure) -> mergeFrom
    6933:6941:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    6966:6969:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder setId(int) -> setId
    7035:7036:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder setPrivateKey(com.google.protobuf.ByteString) -> setPrivateKey
    6999:7000:org.whispersystems.libsignal.state.StorageProtos$PreKeyRecordStructure$Builder setPublicKey(com.google.protobuf.ByteString) -> setPublicKey
org.whispersystems.libsignal.state.StorageProtos$RecordStructure -> org.whispersystems.libsignal.state.StorageProtos$RecordStructure:
    5772:6495:void <clinit>() -> <clinit>
    5676:5676:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    5676:5676:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    5681:5683:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    5684:5684:void <init>(boolean) -> <init>
    5704:5759:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    5676:5676:boolean access$8800() -> access$8800
    5676:5676:org.whispersystems.libsignal.state.StorageProtos$SessionStructure access$9002(org.whispersystems.libsignal.state.StorageProtos$RecordStructure,org.whispersystems.libsignal.state.StorageProtos$SessionStructure) -> access$9002
    5676:5676:java.util.List access$9100(org.whispersystems.libsignal.state.StorageProtos$RecordStructure) -> access$9100
    5676:5676:java.util.List access$9102(org.whispersystems.libsignal.state.StorageProtos$RecordStructure,java.util.List) -> access$9102
    5676:5676:int access$9202(org.whispersystems.libsignal.state.StorageProtos$RecordStructure,int) -> access$9202
    5676:5676:boolean access$9300() -> access$9300
    5801:5801:org.whispersystems.libsignal.state.StorageProtos$SessionStructure getCurrentSession() -> getCurrentSession
    5688:5688:org.whispersystems.libsignal.state.StorageProtos$RecordStructure getDefaultInstance() -> getDefaultInstance
    5676:5676:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    5692:5692:org.whispersystems.libsignal.state.StorageProtos$RecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    5784:5784:com.google.protobuf.Parser getParserForType() -> getParserForType
    5817:5817:java.util.List getPreviousSessionsList() -> getPreviousSessionsList
    5873:5887:int getSerializedSize() -> getSerializedSize
    5699:5699:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    5795:5795:boolean hasCurrentSession() -> hasCurrentSession
    5847:5849:void initFields() -> initFields
    5767:5767:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    5852:5856:boolean isInitialized() -> isInitialized
    5950:5950:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder newBuilder() -> newBuilder
    5953:5953:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$RecordStructure) -> newBuilder
    5676:5676:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    5676:5676:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    5951:5951:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder newBuilderForType() -> newBuilderForType
    5960:5961:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    5910:5910:org.whispersystems.libsignal.state.StorageProtos$RecordStructure parseFrom(byte[]) -> parseFrom
    5676:5676:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    5676:5676:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    5955:5955:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder toBuilder() -> toBuilder
    5861:5869:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$RecordStructure$1 -> org.whispersystems.libsignal.state.StorageProtos$RecordStructure$1:
    5773:5773:void <init>() -> <init>
    5773:5773:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    5778:5778:org.whispersystems.libsignal.state.StorageProtos$RecordStructure parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder -> org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder:
    5966:5966:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    5982:5984:void <init>() -> <init>
    5988:5990:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    5966:5966:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder access$8600() -> access$8600
    6389:6396:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder addAllPreviousSessions(java.lang.Iterable) -> addAllPreviousSessions
    5966:5966:com.google.protobuf.Message build() -> build
    5966:5966:com.google.protobuf.MessageLite build() -> build
    6032:6034:org.whispersystems.libsignal.state.StorageProtos$RecordStructure build() -> build
    5966:5966:com.google.protobuf.Message buildPartial() -> buildPartial
    6040:6062:org.whispersystems.libsignal.state.StorageProtos$RecordStructure buildPartial() -> buildPartial
    5966:5966:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    5966:5966:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    5966:5966:java.lang.Object clone() -> clone
    6019:6019:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder clone() -> clone
    5998:5998:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder create() -> create
    6253:6257:void ensurePreviousSessionsIsMutable() -> ensurePreviousSessionsIsMutable
    6238:6246:com.google.protobuf.SingleFieldBuilder getCurrentSessionFieldBuilder() -> getCurrentSessionFieldBuilder
    5966:5966:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    6028:6028:org.whispersystems.libsignal.state.StorageProtos$RecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    6024:6024:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    6477:6486:com.google.protobuf.RepeatedFieldBuilder getPreviousSessionsFieldBuilder() -> getPreviousSessionsFieldBuilder
    5976:5976:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    5992:5996:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    6186:6199:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder mergeCurrentSession(org.whispersystems.libsignal.state.StorageProtos$SessionStructure) -> mergeCurrentSession
    5966:5966:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    5966:5966:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    5966:5966:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    5966:5966:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    5966:5966:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    6066:6070:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    6075:6106:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$RecordStructure) -> mergeFrom
    6117:6125:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    6156:6166:org.whispersystems.libsignal.state.StorageProtos$RecordStructure$Builder setCurrentSession(org.whispersystems.libsignal.state.StorageProtos$SessionStructure) -> setCurrentSession
org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure:
    10975:11530:void <clinit>() -> <clinit>
    10892:10892:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    10892:10892:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    10897:10899:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    10900:10900:void <init>(boolean) -> <init>
    10920:10962:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    10892:10892:boolean access$17600() -> access$17600
    10892:10892:java.util.List access$17800(org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure) -> access$17800
    10892:10892:java.util.List access$17802(org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure,java.util.List) -> access$17802
    10892:10892:boolean access$17900() -> access$17900
    10904:10904:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure getDefaultInstance() -> getDefaultInstance
    10892:10892:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    10908:10908:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    10987:10987:com.google.protobuf.Parser getParserForType() -> getParserForType
    11049:11059:int getSerializedSize() -> getSerializedSize
    10915:10915:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    11027:11028:void initFields() -> initFields
    10970:10970:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    11031:11035:boolean isInitialized() -> isInitialized
    11122:11122:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder newBuilder() -> newBuilder
    11125:11125:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure) -> newBuilder
    10892:10892:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    10892:10892:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    11123:11123:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder newBuilderForType() -> newBuilderForType
    11132:11133:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    10892:10892:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    10892:10892:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    11127:11127:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder toBuilder() -> toBuilder
    11040:11045:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$1 -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$1:
    10976:10976:void <init>() -> <init>
    10976:10976:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    10981:10981:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder:
    11138:11138:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    11154:11156:void <init>() -> <init>
    11160:11162:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    11138:11138:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder access$17400() -> access$17400
    11138:11138:com.google.protobuf.Message build() -> build
    11138:11138:com.google.protobuf.MessageLite build() -> build
    11197:11199:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure build() -> build
    11138:11138:com.google.protobuf.Message buildPartial() -> buildPartial
    11205:11217:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure buildPartial() -> buildPartial
    11138:11138:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    11138:11138:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    11138:11138:java.lang.Object clone() -> clone
    11184:11184:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder clone() -> clone
    11169:11169:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder create() -> create
    11288:11292:void ensureSenderKeyStatesIsMutable() -> ensureSenderKeyStatesIsMutable
    11138:11138:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    11193:11193:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    11189:11189:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    11512:11521:com.google.protobuf.RepeatedFieldBuilder getSenderKeyStatesFieldBuilder() -> getSenderKeyStatesFieldBuilder
    11148:11148:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    11164:11167:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    11138:11138:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    11138:11138:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    11138:11138:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    11138:11138:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    11138:11138:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    11221:11225:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    11230:11258:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure) -> mergeFrom
    11269:11277:org.whispersystems.libsignal.state.StorageProtos$SenderKeyRecordStructure$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure:
    8459:10856:void <clinit>() -> <clinit>
    8345:8345:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8345:8345:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8350:8352:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    8353:8353:void <init>(boolean) -> <init>
    8373:8446:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    8345:8345:boolean access$16300() -> access$16300
    8345:8345:int access$16502(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure,int) -> access$16502
    8345:8345:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey access$16602(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure,org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey) -> access$16602
    8345:8345:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey access$16702(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure,org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey) -> access$16702
    8345:8345:java.util.List access$16800(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure) -> access$16800
    8345:8345:java.util.List access$16802(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure,java.util.List) -> access$16802
    8345:8345:int access$16902(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure,int) -> access$16902
    8345:8345:boolean access$17000() -> access$17000
    8357:8357:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure getDefaultInstance() -> getDefaultInstance
    8345:8345:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    8361:8361:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    8471:8471:com.google.protobuf.Parser getParserForType() -> getParserForType
    9947:9947:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey getSenderChainKey() -> getSenderChainKey
    9931:9931:int getSenderKeyId() -> getSenderKeyId
    9969:9969:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey getSenderSigningKey() -> getSenderSigningKey
    10049:10071:int getSerializedSize() -> getSerializedSize
    8368:8368:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    9941:9941:boolean hasSenderChainKey() -> hasSenderChainKey
    9925:9925:boolean hasSenderKeyId() -> hasSenderKeyId
    9963:9963:boolean hasSenderSigningKey() -> hasSenderSigningKey
    10015:10019:void initFields() -> initFields
    8454:8454:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    10022:10026:boolean isInitialized() -> isInitialized
    10134:10134:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder newBuilder() -> newBuilder
    10137:10137:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure) -> newBuilder
    8345:8345:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    8345:8345:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    10135:10135:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder newBuilderForType() -> newBuilderForType
    10144:10145:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    8345:8345:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    8345:8345:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    10139:10139:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder toBuilder() -> toBuilder
    10031:10045:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$1 -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$1:
    8460:8460:void <init>() -> <init>
    8460:8460:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    8465:8465:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder:
    10150:10150:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    10166:10168:void <init>() -> <init>
    10172:10174:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    10150:10150:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder access$16100() -> access$16100
    10150:10150:com.google.protobuf.Message build() -> build
    10150:10150:com.google.protobuf.MessageLite build() -> build
    10225:10227:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure build() -> build
    10150:10150:com.google.protobuf.Message buildPartial() -> buildPartial
    10233:10267:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure buildPartial() -> buildPartial
    10150:10150:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    10150:10150:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    10150:10150:java.lang.Object clone() -> clone
    10212:10212:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder clone() -> clone
    10183:10183:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder create() -> create
    10614:10618:void ensureSenderMessageKeysIsMutable() -> ensureSenderMessageKeysIsMutable
    10150:10150:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    10221:10221:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    10217:10217:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    10482:10490:com.google.protobuf.SingleFieldBuilder getSenderChainKeyFieldBuilder() -> getSenderChainKeyFieldBuilder
    10838:10847:com.google.protobuf.RepeatedFieldBuilder getSenderMessageKeysFieldBuilder() -> getSenderMessageKeysFieldBuilder
    10599:10607:com.google.protobuf.SingleFieldBuilder getSenderSigningKeyFieldBuilder() -> getSenderSigningKeyFieldBuilder
    10160:10160:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    10176:10181:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    10150:10150:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10150:10150:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    10150:10150:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10150:10150:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    10150:10150:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10271:10275:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    10280:10317:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure) -> mergeFrom
    10328:10336:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    10430:10443:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder mergeSenderChainKey(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey) -> mergeSenderChainKey
    10547:10560:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder mergeSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey) -> mergeSenderSigningKey
    10361:10364:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$Builder setSenderKeyId(int) -> setSenderKeyId
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey:
    8582:8949:void <clinit>() -> <clinit>
    8500:8500:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8500:8500:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8505:8507:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    8508:8508:void <init>(boolean) -> <init>
    8528:8569:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    8500:8500:boolean access$13600() -> access$13600
    8500:8500:int access$13802(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey,int) -> access$13802
    8500:8500:com.google.protobuf.ByteString access$13902(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey,com.google.protobuf.ByteString) -> access$13902
    8500:8500:int access$14002(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey,int) -> access$14002
    8512:8512:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey getDefaultInstance() -> getDefaultInstance
    8500:8500:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    8516:8516:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey getDefaultInstanceForType() -> getDefaultInstanceForType
    8611:8611:int getIteration() -> getIteration
    8594:8594:com.google.protobuf.Parser getParserForType() -> getParserForType
    8627:8627:com.google.protobuf.ByteString getSeed() -> getSeed
    8657:8671:int getSerializedSize() -> getSerializedSize
    8523:8523:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    8605:8605:boolean hasIteration() -> hasIteration
    8621:8621:boolean hasSeed() -> hasSeed
    8631:8633:void initFields() -> initFields
    8577:8577:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    8636:8640:boolean isInitialized() -> isInitialized
    8734:8734:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder newBuilder() -> newBuilder
    8737:8737:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey) -> newBuilder
    8500:8500:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    8500:8500:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    8735:8735:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder newBuilderForType() -> newBuilderForType
    8744:8745:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    8500:8500:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    8500:8500:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    8739:8739:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder toBuilder() -> toBuilder
    8645:8653:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$1 -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$1:
    8583:8583:void <init>() -> <init>
    8583:8583:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    8588:8588:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder:
    8750:8750:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8766:8768:void <init>() -> <init>
    8772:8774:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    8750:8750:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder access$13400() -> access$13400
    8750:8750:com.google.protobuf.Message build() -> build
    8750:8750:com.google.protobuf.MessageLite build() -> build
    8806:8808:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey build() -> build
    8750:8750:com.google.protobuf.Message buildPartial() -> buildPartial
    8814:8827:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey buildPartial() -> buildPartial
    8750:8750:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    8750:8750:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    8750:8750:java.lang.Object clone() -> clone
    8793:8793:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder clone() -> clone
    8780:8780:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder create() -> create
    8750:8750:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    8802:8802:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey getDefaultInstanceForType() -> getDefaultInstanceForType
    8798:8798:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    8760:8760:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    8776:8778:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    8750:8750:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8750:8750:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8750:8750:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8750:8750:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8750:8750:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8831:8835:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    8840:8848:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey) -> mergeFrom
    8859:8867:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    8892:8895:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder setIteration(int) -> setIteration
    8925:8926:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderChainKey$Builder setSeed(com.google.protobuf.ByteString) -> setSeed
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey:
    9062:9429:void <clinit>() -> <clinit>
    8980:8980:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8980:8980:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    8985:8987:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    8988:8988:void <init>(boolean) -> <init>
    9008:9049:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    8980:8980:boolean access$14600() -> access$14600
    8980:8980:int access$14802(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey,int) -> access$14802
    8980:8980:com.google.protobuf.ByteString access$14902(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey,com.google.protobuf.ByteString) -> access$14902
    8980:8980:int access$15002(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey,int) -> access$15002
    8992:8992:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey getDefaultInstance() -> getDefaultInstance
    8980:8980:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    8996:8996:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey getDefaultInstanceForType() -> getDefaultInstanceForType
    9091:9091:int getIteration() -> getIteration
    9074:9074:com.google.protobuf.Parser getParserForType() -> getParserForType
    9107:9107:com.google.protobuf.ByteString getSeed() -> getSeed
    9137:9151:int getSerializedSize() -> getSerializedSize
    9003:9003:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    9085:9085:boolean hasIteration() -> hasIteration
    9101:9101:boolean hasSeed() -> hasSeed
    9111:9113:void initFields() -> initFields
    9057:9057:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    9116:9120:boolean isInitialized() -> isInitialized
    9214:9214:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder newBuilder() -> newBuilder
    9217:9217:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey) -> newBuilder
    8980:8980:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    8980:8980:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    9215:9215:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder newBuilderForType() -> newBuilderForType
    9224:9225:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    8980:8980:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    8980:8980:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    9219:9219:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder toBuilder() -> toBuilder
    9125:9133:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$1 -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$1:
    9063:9063:void <init>() -> <init>
    9063:9063:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    9068:9068:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder:
    9230:9230:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    9246:9248:void <init>() -> <init>
    9252:9254:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    9230:9230:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder access$14400() -> access$14400
    9230:9230:com.google.protobuf.Message build() -> build
    9230:9230:com.google.protobuf.MessageLite build() -> build
    9286:9288:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey build() -> build
    9230:9230:com.google.protobuf.Message buildPartial() -> buildPartial
    9294:9307:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey buildPartial() -> buildPartial
    9230:9230:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    9230:9230:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    9230:9230:java.lang.Object clone() -> clone
    9273:9273:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder clone() -> clone
    9260:9260:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder create() -> create
    9230:9230:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    9282:9282:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey getDefaultInstanceForType() -> getDefaultInstanceForType
    9278:9278:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    9240:9240:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    9256:9258:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    9230:9230:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9230:9230:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9230:9230:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9230:9230:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9230:9230:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9311:9315:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9320:9328:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey) -> mergeFrom
    9339:9347:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9372:9375:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder setIteration(int) -> setIteration
    9405:9406:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderMessageKey$Builder setSeed(com.google.protobuf.ByteString) -> setSeed
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey:
    9542:9912:void <clinit>() -> <clinit>
    9460:9460:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    9460:9460:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    9465:9467:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    9468:9468:void <init>(boolean) -> <init>
    9488:9529:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    9460:9460:boolean access$15600() -> access$15600
    9460:9460:com.google.protobuf.ByteString access$15802(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey,com.google.protobuf.ByteString) -> access$15802
    9460:9460:com.google.protobuf.ByteString access$15902(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey,com.google.protobuf.ByteString) -> access$15902
    9460:9460:int access$16002(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey,int) -> access$16002
    9472:9472:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey getDefaultInstance() -> getDefaultInstance
    9460:9460:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    9476:9476:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey getDefaultInstanceForType() -> getDefaultInstanceForType
    9554:9554:com.google.protobuf.Parser getParserForType() -> getParserForType
    9587:9587:com.google.protobuf.ByteString getPrivate() -> getPrivate
    9571:9571:com.google.protobuf.ByteString getPublic() -> getPublic
    9617:9631:int getSerializedSize() -> getSerializedSize
    9483:9483:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    9581:9581:boolean hasPrivate() -> hasPrivate
    9565:9565:boolean hasPublic() -> hasPublic
    9591:9593:void initFields() -> initFields
    9537:9537:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    9596:9600:boolean isInitialized() -> isInitialized
    9694:9694:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder newBuilder() -> newBuilder
    9697:9697:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey) -> newBuilder
    9460:9460:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    9460:9460:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    9695:9695:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder newBuilderForType() -> newBuilderForType
    9704:9705:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    9460:9460:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    9460:9460:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    9699:9699:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder toBuilder() -> toBuilder
    9605:9613:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$1 -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$1:
    9543:9543:void <init>() -> <init>
    9543:9543:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    9548:9548:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder -> org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder:
    9710:9710:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    9726:9728:void <init>() -> <init>
    9732:9734:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    9710:9710:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder access$15400() -> access$15400
    9710:9710:com.google.protobuf.Message build() -> build
    9710:9710:com.google.protobuf.MessageLite build() -> build
    9766:9768:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey build() -> build
    9710:9710:com.google.protobuf.Message buildPartial() -> buildPartial
    9774:9787:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey buildPartial() -> buildPartial
    9710:9710:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    9710:9710:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    9710:9710:java.lang.Object clone() -> clone
    9753:9753:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder clone() -> clone
    9740:9740:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder create() -> create
    9710:9710:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    9762:9762:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey getDefaultInstanceForType() -> getDefaultInstanceForType
    9758:9758:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    9720:9720:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    9736:9738:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    9710:9710:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9710:9710:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9710:9710:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9710:9710:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9710:9710:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9791:9795:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    9800:9808:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey) -> mergeFrom
    9819:9827:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    9888:9889:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder setPrivate(com.google.protobuf.ByteString) -> setPrivate
    9852:9853:org.whispersystems.libsignal.state.StorageProtos$SenderKeyStateStructure$SenderSigningKey$Builder setPublic(com.google.protobuf.ByteString) -> setPublic
org.whispersystems.libsignal.state.StorageProtos$SessionStructure -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure:
    341:5626:void <clinit>() -> <clinit>
    174:174:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    174:174:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    179:181:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    182:182:void <init>(boolean) -> <init>
    202:328:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    174:174:boolean access$6600() -> access$6600
    174:174:int access$6802(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,int) -> access$6802
    174:174:com.google.protobuf.ByteString access$6902(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,com.google.protobuf.ByteString) -> access$6902
    174:174:com.google.protobuf.ByteString access$7002(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,com.google.protobuf.ByteString) -> access$7002
    174:174:com.google.protobuf.ByteString access$7102(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,com.google.protobuf.ByteString) -> access$7102
    174:174:int access$7202(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,int) -> access$7202
    174:174:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain access$7302(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> access$7302
    174:174:java.util.List access$7400(org.whispersystems.libsignal.state.StorageProtos$SessionStructure) -> access$7400
    174:174:java.util.List access$7402(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,java.util.List) -> access$7402
    174:174:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange access$7502(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange) -> access$7502
    174:174:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey access$7602(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey) -> access$7602
    174:174:int access$7702(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,int) -> access$7702
    174:174:int access$7802(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,int) -> access$7802
    174:174:boolean access$7902(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,boolean) -> access$7902
    174:174:com.google.protobuf.ByteString access$8002(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,com.google.protobuf.ByteString) -> access$8002
    174:174:int access$8102(org.whispersystems.libsignal.state.StorageProtos$SessionStructure,int) -> access$8102
    174:174:boolean access$8200() -> access$8200
    4226:4226:com.google.protobuf.ByteString getAliceBaseKey() -> getAliceBaseKey
    186:186:org.whispersystems.libsignal.state.StorageProtos$SessionStructure getDefaultInstance() -> getDefaultInstance
    174:174:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    190:190:org.whispersystems.libsignal.state.StorageProtos$SessionStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    4012:4012:com.google.protobuf.ByteString getLocalIdentityPublic() -> getLocalIdentityPublic
    4194:4194:int getLocalRegistrationId() -> getLocalRegistrationId
    4210:4210:boolean getNeedsRefresh() -> getNeedsRefresh
    353:353:com.google.protobuf.Parser getParserForType() -> getParserForType
    4134:4134:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange getPendingKeyExchange() -> getPendingKeyExchange
    4156:4156:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey getPendingPreKey() -> getPendingPreKey
    4060:4060:int getPreviousCounter() -> getPreviousCounter
    4092:4092:java.util.List getReceiverChainsList() -> getReceiverChainsList
    4028:4028:com.google.protobuf.ByteString getRemoteIdentityPublic() -> getRemoteIdentityPublic
    4178:4178:int getRemoteRegistrationId() -> getRemoteRegistrationId
    4044:4044:com.google.protobuf.ByteString getRootKey() -> getRootKey
    4076:4076:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain getSenderChain() -> getSenderChain
    4300:4358:int getSerializedSize() -> getSerializedSize
    3996:3996:int getSessionVersion() -> getSessionVersion
    197:197:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    4220:4220:boolean hasAliceBaseKey() -> hasAliceBaseKey
    4006:4006:boolean hasLocalIdentityPublic() -> hasLocalIdentityPublic
    4188:4188:boolean hasLocalRegistrationId() -> hasLocalRegistrationId
    4204:4204:boolean hasNeedsRefresh() -> hasNeedsRefresh
    4128:4128:boolean hasPendingKeyExchange() -> hasPendingKeyExchange
    4150:4150:boolean hasPendingPreKey() -> hasPendingPreKey
    4054:4054:boolean hasPreviousCounter() -> hasPreviousCounter
    4022:4022:boolean hasRemoteIdentityPublic() -> hasRemoteIdentityPublic
    4172:4172:boolean hasRemoteRegistrationId() -> hasRemoteRegistrationId
    4038:4038:boolean hasRootKey() -> hasRootKey
    4070:4070:boolean hasSenderChain() -> hasSenderChain
    3990:3990:boolean hasSessionVersion() -> hasSessionVersion
    4230:4243:void initFields() -> initFields
    336:336:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    4246:4250:boolean isInitialized() -> isInitialized
    4421:4421:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder newBuilder() -> newBuilder
    4424:4424:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SessionStructure) -> newBuilder
    174:174:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    174:174:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    4422:4422:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder newBuilderForType() -> newBuilderForType
    4431:4432:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    174:174:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    174:174:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    4426:4426:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder toBuilder() -> toBuilder
    4255:4296:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$1 -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$1:
    342:342:void <init>() -> <init>
    342:342:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    347:347:org.whispersystems.libsignal.state.StorageProtos$SessionStructure parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder:
    4437:4437:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    4453:4455:void <init>() -> <init>
    4459:4461:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    4437:4437:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder access$6400() -> access$6400
    5089:5099:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder addReceiverChains(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> addReceiverChains
    4437:4437:com.google.protobuf.Message build() -> build
    4437:4437:com.google.protobuf.MessageLite build() -> build
    4535:4537:org.whispersystems.libsignal.state.StorageProtos$SessionStructure build() -> build
    4437:4437:com.google.protobuf.Message buildPartial() -> buildPartial
    4543:4617:org.whispersystems.libsignal.state.StorageProtos$SessionStructure buildPartial() -> buildPartial
    5441:5448:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder clearPendingPreKey() -> clearPendingPreKey
    4437:4437:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    4437:4437:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    4437:4437:java.lang.Object clone() -> clone
    4522:4522:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder clone() -> clone
    4471:4471:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder create() -> create
    5015:5019:void ensureReceiverChainsIsMutable() -> ensureReceiverChainsIsMutable
    4437:4437:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    4531:4531:org.whispersystems.libsignal.state.StorageProtos$SessionStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    4527:4527:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    5357:5365:com.google.protobuf.SingleFieldBuilder getPendingKeyExchangeFieldBuilder() -> getPendingKeyExchangeFieldBuilder
    5474:5482:com.google.protobuf.SingleFieldBuilder getPendingPreKeyFieldBuilder() -> getPendingPreKeyFieldBuilder
    5239:5248:com.google.protobuf.RepeatedFieldBuilder getReceiverChainsFieldBuilder() -> getReceiverChainsFieldBuilder
    5000:5008:com.google.protobuf.SingleFieldBuilder getSenderChainFieldBuilder() -> getSenderChainFieldBuilder
    4447:4447:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    4463:4469:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    4437:4437:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    4437:4437:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    4437:4437:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    4437:4437:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    4437:4437:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    4621:4625:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    4630:4694:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SessionStructure) -> mergeFrom
    4705:4713:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    5305:5318:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder mergePendingKeyExchange(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange) -> mergePendingKeyExchange
    5422:5435:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder mergePendingPreKey(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey) -> mergePendingPreKey
    4948:4961:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder mergeSenderChain(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> mergeSenderChain
    5177:5184:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder removeReceiverChains(int) -> removeReceiverChains
    5602:5603:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setAliceBaseKey(com.google.protobuf.ByteString) -> setAliceBaseKey
    4771:4772:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setLocalIdentityPublic(com.google.protobuf.ByteString) -> setLocalIdentityPublic
    5536:5539:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setLocalRegistrationId(int) -> setLocalRegistrationId
    5569:5572:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setNeedsRefresh(boolean) -> setNeedsRefresh
    5392:5402:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setPendingPreKey(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey) -> setPendingPreKey
    4879:4882:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setPreviousCounter(int) -> setPreviousCounter
    5059:5069:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setReceiverChains(int,org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> setReceiverChains
    4807:4808:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setRemoteIdentityPublic(com.google.protobuf.ByteString) -> setRemoteIdentityPublic
    5503:5506:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setRemoteRegistrationId(int) -> setRemoteRegistrationId
    4843:4844:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setRootKey(com.google.protobuf.ByteString) -> setRootKey
    4918:4928:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setSenderChain(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> setSenderChain
    4738:4741:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Builder setSessionVersion(int) -> setSessionVersion
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain:
    527:2516:void <clinit>() -> <clinit>
    421:421:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    421:421:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    426:428:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    429:429:void <init>(boolean) -> <init>
    449:514:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    421:421:boolean access$3000() -> access$3000
    421:421:com.google.protobuf.ByteString access$3202(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain,com.google.protobuf.ByteString) -> access$3202
    421:421:com.google.protobuf.ByteString access$3302(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain,com.google.protobuf.ByteString) -> access$3302
    421:421:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey access$3402(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain,org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey) -> access$3402
    421:421:java.util.List access$3500(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> access$3500
    421:421:java.util.List access$3502(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain,java.util.List) -> access$3502
    421:421:int access$3602(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain,int) -> access$3602
    421:421:boolean access$3700() -> access$3700
    1716:1716:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey getChainKey() -> getChainKey
    433:433:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain getDefaultInstance() -> getDefaultInstance
    421:421:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    437:437:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain getDefaultInstanceForType() -> getDefaultInstanceForType
    1732:1732:java.util.List getMessageKeysList() -> getMessageKeysList
    539:539:com.google.protobuf.Parser getParserForType() -> getParserForType
    1684:1684:com.google.protobuf.ByteString getSenderRatchetKey() -> getSenderRatchetKey
    1700:1700:com.google.protobuf.ByteString getSenderRatchetKeyPrivate() -> getSenderRatchetKeyPrivate
    1796:1818:int getSerializedSize() -> getSerializedSize
    444:444:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    1710:1710:boolean hasChainKey() -> hasChainKey
    1678:1678:boolean hasSenderRatchetKey() -> hasSenderRatchetKey
    1694:1694:boolean hasSenderRatchetKeyPrivate() -> hasSenderRatchetKeyPrivate
    1762:1766:void initFields() -> initFields
    522:522:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1769:1773:boolean isInitialized() -> isInitialized
    1881:1881:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder newBuilder() -> newBuilder
    1884:1884:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> newBuilder
    421:421:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    421:421:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1882:1882:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder newBuilderForType() -> newBuilderForType
    1891:1892:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    421:421:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    421:421:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    1886:1886:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder toBuilder() -> toBuilder
    1778:1792:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$1 -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$1:
    528:528:void <init>() -> <init>
    528:528:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    533:533:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder:
    1897:1897:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    1913:1915:void <init>() -> <init>
    1919:1921:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    1897:1897:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder access$2800() -> access$2800
    2410:2417:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder addAllMessageKeys(java.lang.Iterable) -> addAllMessageKeys
    2348:2358:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder addMessageKeys(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey) -> addMessageKeys
    1897:1897:com.google.protobuf.Message build() -> build
    1897:1897:com.google.protobuf.MessageLite build() -> build
    1967:1969:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain build() -> build
    1897:1897:com.google.protobuf.Message buildPartial() -> buildPartial
    1975:2005:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain buildPartial() -> buildPartial
    2423:2430:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder clearMessageKeys() -> clearMessageKeys
    1897:1897:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    1897:1897:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    1897:1897:java.lang.Object clone() -> clone
    1954:1954:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder clone() -> clone
    1929:1929:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder create() -> create
    2274:2278:void ensureMessageKeysIsMutable() -> ensureMessageKeysIsMutable
    2259:2267:com.google.protobuf.SingleFieldBuilder getChainKeyFieldBuilder() -> getChainKeyFieldBuilder
    1897:1897:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    1963:1963:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain getDefaultInstanceForType() -> getDefaultInstanceForType
    1959:1959:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    2297:2300:int getMessageKeysCount() -> getMessageKeysCount
    2498:2507:com.google.protobuf.RepeatedFieldBuilder getMessageKeysFieldBuilder() -> getMessageKeysFieldBuilder
    1907:1907:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1923:1927:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    2207:2220:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder mergeChainKey(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey) -> mergeChainKey
    1897:1897:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1897:1897:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1897:1897:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1897:1897:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1897:1897:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2009:2013:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    2018:2055:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain) -> mergeFrom
    2066:2074:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2436:2443:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder removeMessageKeys(int) -> removeMessageKeys
    2177:2187:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder setChainKey(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey) -> setChainKey
    2099:2100:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder setSenderRatchetKey(com.google.protobuf.ByteString) -> setSenderRatchetKey
    2135:2136:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$Builder setSenderRatchetKeyPrivate(com.google.protobuf.ByteString) -> setSenderRatchetKeyPrivate
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey:
    650:1017:void <clinit>() -> <clinit>
    568:568:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    568:568:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    573:575:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    576:576:void <init>(boolean) -> <init>
    596:637:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    568:568:boolean access$1100() -> access$1100
    568:568:int access$1302(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey,int) -> access$1302
    568:568:com.google.protobuf.ByteString access$1402(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey,com.google.protobuf.ByteString) -> access$1402
    568:568:int access$1502(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey,int) -> access$1502
    580:580:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey getDefaultInstance() -> getDefaultInstance
    568:568:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    584:584:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey getDefaultInstanceForType() -> getDefaultInstanceForType
    679:679:int getIndex() -> getIndex
    695:695:com.google.protobuf.ByteString getKey() -> getKey
    662:662:com.google.protobuf.Parser getParserForType() -> getParserForType
    725:739:int getSerializedSize() -> getSerializedSize
    591:591:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    673:673:boolean hasIndex() -> hasIndex
    689:689:boolean hasKey() -> hasKey
    699:701:void initFields() -> initFields
    645:645:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    704:708:boolean isInitialized() -> isInitialized
    802:802:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder newBuilder() -> newBuilder
    805:805:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey) -> newBuilder
    568:568:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    568:568:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    803:803:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder newBuilderForType() -> newBuilderForType
    812:813:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    568:568:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    568:568:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    807:807:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder toBuilder() -> toBuilder
    713:721:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$1 -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$1:
    651:651:void <init>() -> <init>
    651:651:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    656:656:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder:
    818:818:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    834:836:void <init>() -> <init>
    840:842:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    818:818:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder access$900() -> access$900
    818:818:com.google.protobuf.Message build() -> build
    818:818:com.google.protobuf.MessageLite build() -> build
    874:876:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey build() -> build
    818:818:com.google.protobuf.Message buildPartial() -> buildPartial
    882:895:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey buildPartial() -> buildPartial
    818:818:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    818:818:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    818:818:java.lang.Object clone() -> clone
    861:861:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder clone() -> clone
    848:848:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder create() -> create
    818:818:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    870:870:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey getDefaultInstanceForType() -> getDefaultInstanceForType
    866:866:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    828:828:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    844:846:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    818:818:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    818:818:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    818:818:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    818:818:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    818:818:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    899:903:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    908:916:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey) -> mergeFrom
    927:935:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    960:963:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder setIndex(int) -> setIndex
    993:994:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$ChainKey$Builder setKey(com.google.protobuf.ByteString) -> setKey
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey:
    1160:1665:void <clinit>() -> <clinit>
    1068:1068:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    1068:1068:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    1073:1075:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    1076:1076:void <init>(boolean) -> <init>
    1096:1147:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    1068:1068:boolean access$2100() -> access$2100
    1068:1068:int access$2302(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey,int) -> access$2302
    1068:1068:com.google.protobuf.ByteString access$2402(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey,com.google.protobuf.ByteString) -> access$2402
    1068:1068:com.google.protobuf.ByteString access$2502(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey,com.google.protobuf.ByteString) -> access$2502
    1068:1068:com.google.protobuf.ByteString access$2602(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey,com.google.protobuf.ByteString) -> access$2602
    1068:1068:int access$2702(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey,int) -> access$2702
    1205:1205:com.google.protobuf.ByteString getCipherKey() -> getCipherKey
    1080:1080:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey getDefaultInstance() -> getDefaultInstance
    1068:1068:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    1084:1084:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey getDefaultInstanceForType() -> getDefaultInstanceForType
    1189:1189:int getIndex() -> getIndex
    1237:1237:com.google.protobuf.ByteString getIv() -> getIv
    1221:1221:com.google.protobuf.ByteString getMacKey() -> getMacKey
    1172:1172:com.google.protobuf.Parser getParserForType() -> getParserForType
    1275:1297:int getSerializedSize() -> getSerializedSize
    1091:1091:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    1199:1199:boolean hasCipherKey() -> hasCipherKey
    1183:1183:boolean hasIndex() -> hasIndex
    1231:1231:boolean hasIv() -> hasIv
    1215:1215:boolean hasMacKey() -> hasMacKey
    1241:1245:void initFields() -> initFields
    1155:1155:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1248:1252:boolean isInitialized() -> isInitialized
    1360:1360:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder newBuilder() -> newBuilder
    1363:1363:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey) -> newBuilder
    1068:1068:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    1068:1068:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1361:1361:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder newBuilderForType() -> newBuilderForType
    1370:1371:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    1068:1068:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    1068:1068:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    1365:1365:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder toBuilder() -> toBuilder
    1257:1271:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$1 -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$1:
    1161:1161:void <init>() -> <init>
    1161:1161:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    1166:1166:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder:
    1376:1376:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    1392:1394:void <init>() -> <init>
    1398:1400:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    1376:1376:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder access$1900() -> access$1900
    1376:1376:com.google.protobuf.Message build() -> build
    1376:1376:com.google.protobuf.MessageLite build() -> build
    1436:1438:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey build() -> build
    1376:1376:com.google.protobuf.Message buildPartial() -> buildPartial
    1444:1465:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey buildPartial() -> buildPartial
    1376:1376:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    1376:1376:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    1376:1376:java.lang.Object clone() -> clone
    1423:1423:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder clone() -> clone
    1406:1406:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder create() -> create
    1376:1376:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    1432:1432:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey getDefaultInstanceForType() -> getDefaultInstanceForType
    1428:1428:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    1386:1386:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    1402:1404:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    1376:1376:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1376:1376:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1376:1376:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1376:1376:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1376:1376:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1469:1473:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    1478:1492:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey) -> mergeFrom
    1503:1511:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    1569:1570:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder setCipherKey(com.google.protobuf.ByteString) -> setCipherKey
    1536:1539:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder setIndex(int) -> setIndex
    1641:1642:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder setIv(com.google.protobuf.ByteString) -> setIv
    1605:1606:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$Chain$MessageKey$Builder setMacKey(com.google.protobuf.ByteString) -> setMacKey
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange:
    2704:3416:void <clinit>() -> <clinit>
    2597:2597:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    2597:2597:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    2602:2604:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    2605:2605:void <init>(boolean) -> <init>
    2625:2691:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    2597:2597:boolean access$4300() -> access$4300
    2597:2597:int access$4502(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,int) -> access$4502
    2597:2597:com.google.protobuf.ByteString access$4602(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,com.google.protobuf.ByteString) -> access$4602
    2597:2597:com.google.protobuf.ByteString access$4702(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,com.google.protobuf.ByteString) -> access$4702
    2597:2597:com.google.protobuf.ByteString access$4802(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,com.google.protobuf.ByteString) -> access$4802
    2597:2597:com.google.protobuf.ByteString access$4902(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,com.google.protobuf.ByteString) -> access$4902
    2597:2597:com.google.protobuf.ByteString access$5002(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,com.google.protobuf.ByteString) -> access$5002
    2597:2597:com.google.protobuf.ByteString access$5102(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,com.google.protobuf.ByteString) -> access$5102
    2597:2597:int access$5202(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange,int) -> access$5202
    2609:2609:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange getDefaultInstance() -> getDefaultInstance
    2597:2597:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    2613:2613:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange getDefaultInstanceForType() -> getDefaultInstanceForType
    2749:2749:com.google.protobuf.ByteString getLocalBaseKey() -> getLocalBaseKey
    2765:2765:com.google.protobuf.ByteString getLocalBaseKeyPrivate() -> getLocalBaseKeyPrivate
    2813:2813:com.google.protobuf.ByteString getLocalIdentityKey() -> getLocalIdentityKey
    2829:2829:com.google.protobuf.ByteString getLocalIdentityKeyPrivate() -> getLocalIdentityKeyPrivate
    2781:2781:com.google.protobuf.ByteString getLocalRatchetKey() -> getLocalRatchetKey
    2797:2797:com.google.protobuf.ByteString getLocalRatchetKeyPrivate() -> getLocalRatchetKeyPrivate
    2716:2716:com.google.protobuf.Parser getParserForType() -> getParserForType
    2733:2733:int getSequence() -> getSequence
    2879:2913:int getSerializedSize() -> getSerializedSize
    2620:2620:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    2743:2743:boolean hasLocalBaseKey() -> hasLocalBaseKey
    2759:2759:boolean hasLocalBaseKeyPrivate() -> hasLocalBaseKeyPrivate
    2807:2807:boolean hasLocalIdentityKey() -> hasLocalIdentityKey
    2823:2823:boolean hasLocalIdentityKeyPrivate() -> hasLocalIdentityKeyPrivate
    2775:2775:boolean hasLocalRatchetKey() -> hasLocalRatchetKey
    2791:2791:boolean hasLocalRatchetKeyPrivate() -> hasLocalRatchetKeyPrivate
    2727:2727:boolean hasSequence() -> hasSequence
    2833:2840:void initFields() -> initFields
    2699:2699:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    2843:2847:boolean isInitialized() -> isInitialized
    2976:2976:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder newBuilder() -> newBuilder
    2979:2979:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange) -> newBuilder
    2597:2597:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    2597:2597:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    2977:2977:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder newBuilderForType() -> newBuilderForType
    2986:2987:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    2597:2597:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    2597:2597:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    2981:2981:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder toBuilder() -> toBuilder
    2852:2875:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$1 -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$1:
    2705:2705:void <init>() -> <init>
    2705:2705:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    2710:2710:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder:
    2992:2992:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    3008:3010:void <init>() -> <init>
    3014:3016:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    2992:2992:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder access$4100() -> access$4100
    2992:2992:com.google.protobuf.Message build() -> build
    2992:2992:com.google.protobuf.MessageLite build() -> build
    3058:3060:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange build() -> build
    2992:2992:com.google.protobuf.Message buildPartial() -> buildPartial
    3066:3099:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange buildPartial() -> buildPartial
    2992:2992:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    2992:2992:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    2992:2992:java.lang.Object clone() -> clone
    3045:3045:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder clone() -> clone
    3022:3022:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder create() -> create
    2992:2992:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    3054:3054:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange getDefaultInstanceForType() -> getDefaultInstanceForType
    3050:3050:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    3002:3002:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    3018:3020:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    2992:2992:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2992:2992:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    2992:2992:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    2992:2992:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    2992:2992:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3103:3107:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3112:3135:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange) -> mergeFrom
    3146:3154:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3212:3213:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder setLocalBaseKey(com.google.protobuf.ByteString) -> setLocalBaseKey
    3248:3249:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder setLocalBaseKeyPrivate(com.google.protobuf.ByteString) -> setLocalBaseKeyPrivate
    3356:3357:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder setLocalIdentityKey(com.google.protobuf.ByteString) -> setLocalIdentityKey
    3392:3393:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder setLocalIdentityKeyPrivate(com.google.protobuf.ByteString) -> setLocalIdentityKeyPrivate
    3284:3285:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder setLocalRatchetKey(com.google.protobuf.ByteString) -> setLocalRatchetKey
    3320:3321:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder setLocalRatchetKeyPrivate(com.google.protobuf.ByteString) -> setLocalRatchetKeyPrivate
    3179:3182:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingKeyExchange$Builder setSequence(int) -> setSequence
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey:
    3544:3977:void <clinit>() -> <clinit>
    3457:3457:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    3457:3457:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    3462:3464:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    3465:3465:void <init>(boolean) -> <init>
    3485:3531:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    3457:3457:boolean access$5800() -> access$5800
    3457:3457:int access$6002(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey,int) -> access$6002
    3457:3457:int access$6102(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey,int) -> access$6102
    3457:3457:com.google.protobuf.ByteString access$6202(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey,com.google.protobuf.ByteString) -> access$6202
    3457:3457:int access$6302(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey,int) -> access$6302
    3605:3605:com.google.protobuf.ByteString getBaseKey() -> getBaseKey
    3469:3469:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey getDefaultInstance() -> getDefaultInstance
    3457:3457:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    3473:3473:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey getDefaultInstanceForType() -> getDefaultInstanceForType
    3556:3556:com.google.protobuf.Parser getParserForType() -> getParserForType
    3573:3573:int getPreKeyId() -> getPreKeyId
    3639:3657:int getSerializedSize() -> getSerializedSize
    3589:3589:int getSignedPreKeyId() -> getSignedPreKeyId
    3480:3480:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    3599:3599:boolean hasBaseKey() -> hasBaseKey
    3567:3567:boolean hasPreKeyId() -> hasPreKeyId
    3583:3583:boolean hasSignedPreKeyId() -> hasSignedPreKeyId
    3609:3612:void initFields() -> initFields
    3539:3539:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    3615:3619:boolean isInitialized() -> isInitialized
    3720:3720:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder newBuilder() -> newBuilder
    3723:3723:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey) -> newBuilder
    3457:3457:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    3457:3457:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    3721:3721:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder newBuilderForType() -> newBuilderForType
    3730:3731:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    3457:3457:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    3457:3457:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    3725:3725:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder toBuilder() -> toBuilder
    3624:3635:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$1 -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$1:
    3545:3545:void <init>() -> <init>
    3545:3545:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    3550:3550:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder -> org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder:
    3736:3736:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    3752:3754:void <init>() -> <init>
    3758:3760:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    3736:3736:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder access$5600() -> access$5600
    3736:3736:com.google.protobuf.Message build() -> build
    3736:3736:com.google.protobuf.MessageLite build() -> build
    3794:3796:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey build() -> build
    3736:3736:com.google.protobuf.Message buildPartial() -> buildPartial
    3802:3819:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey buildPartial() -> buildPartial
    3736:3736:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    3736:3736:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    3736:3736:java.lang.Object clone() -> clone
    3781:3781:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder clone() -> clone
    3766:3766:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder create() -> create
    3736:3736:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    3790:3790:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey getDefaultInstanceForType() -> getDefaultInstanceForType
    3786:3786:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    3746:3746:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    3762:3764:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    3736:3736:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3736:3736:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3736:3736:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3736:3736:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3736:3736:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3823:3827:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    3832:3843:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey) -> mergeFrom
    3854:3862:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    3953:3954:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder setBaseKey(com.google.protobuf.ByteString) -> setBaseKey
    3887:3890:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder setPreKeyId(int) -> setPreKeyId
    3920:3923:org.whispersystems.libsignal.state.StorageProtos$SessionStructure$PendingPreKey$Builder setSignedPreKeyId(int) -> setSignedPreKeyId
org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure -> org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure:
    7217:7788:void <clinit>() -> <clinit>
    7120:7120:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    7120:7120:void <init>(com.google.protobuf.GeneratedMessage$Builder,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    7125:7127:void <init>(com.google.protobuf.GeneratedMessage$Builder) -> <init>
    7128:7128:void <init>(boolean) -> <init>
    7148:7204:void <init>(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> <init>
    7120:7120:boolean access$11000() -> access$11000
    7120:7120:int access$11202(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure,int) -> access$11202
    7120:7120:com.google.protobuf.ByteString access$11302(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure,com.google.protobuf.ByteString) -> access$11302
    7120:7120:com.google.protobuf.ByteString access$11402(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure,com.google.protobuf.ByteString) -> access$11402
    7120:7120:com.google.protobuf.ByteString access$11502(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure,com.google.protobuf.ByteString) -> access$11502
    7120:7120:long access$11602(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure,long) -> access$11602
    7120:7120:int access$11702(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure,int) -> access$11702
    7132:7132:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure getDefaultInstance() -> getDefaultInstance
    7120:7120:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    7136:7136:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    7246:7246:int getId() -> getId
    7229:7229:com.google.protobuf.Parser getParserForType() -> getParserForType
    7278:7278:com.google.protobuf.ByteString getPrivateKey() -> getPrivateKey
    7262:7262:com.google.protobuf.ByteString getPublicKey() -> getPublicKey
    7352:7378:int getSerializedSize() -> getSerializedSize
    7294:7294:com.google.protobuf.ByteString getSignature() -> getSignature
    7310:7310:long getTimestamp() -> getTimestamp
    7143:7143:com.google.protobuf.UnknownFieldSet getUnknownFields() -> getUnknownFields
    7240:7240:boolean hasId() -> hasId
    7272:7272:boolean hasPrivateKey() -> hasPrivateKey
    7256:7256:boolean hasPublicKey() -> hasPublicKey
    7288:7288:boolean hasSignature() -> hasSignature
    7304:7304:boolean hasTimestamp() -> hasTimestamp
    7314:7319:void initFields() -> initFields
    7212:7212:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    7322:7326:boolean isInitialized() -> isInitialized
    7441:7441:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder newBuilder() -> newBuilder
    7444:7444:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure) -> newBuilder
    7120:7120:com.google.protobuf.Message$Builder newBuilderForType() -> newBuilderForType
    7120:7120:com.google.protobuf.Message$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    7442:7442:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder newBuilderForType() -> newBuilderForType
    7451:7452:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder newBuilderForType(com.google.protobuf.GeneratedMessage$BuilderParent) -> newBuilderForType
    7401:7401:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure parseFrom(byte[]) -> parseFrom
    7120:7120:com.google.protobuf.Message$Builder toBuilder() -> toBuilder
    7120:7120:com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    7446:7446:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder toBuilder() -> toBuilder
    7331:7348:void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$1 -> org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$1:
    7218:7218:void <init>() -> <init>
    7218:7218:java.lang.Object parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    7223:7223:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure parsePartialFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parsePartialFrom
org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder -> org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder:
    7457:7457:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent,org.whispersystems.libsignal.state.StorageProtos$1) -> <init>
    7473:7475:void <init>() -> <init>
    7479:7481:void <init>(com.google.protobuf.GeneratedMessage$BuilderParent) -> <init>
    7457:7457:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder access$10800() -> access$10800
    7457:7457:com.google.protobuf.Message build() -> build
    7457:7457:com.google.protobuf.MessageLite build() -> build
    7519:7521:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure build() -> build
    7457:7457:com.google.protobuf.Message buildPartial() -> buildPartial
    7527:7552:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure buildPartial() -> buildPartial
    7457:7457:com.google.protobuf.AbstractMessage$Builder clone() -> clone
    7457:7457:com.google.protobuf.GeneratedMessage$Builder clone() -> clone
    7457:7457:java.lang.Object clone() -> clone
    7506:7506:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder clone() -> clone
    7487:7487:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder create() -> create
    7457:7457:com.google.protobuf.Message getDefaultInstanceForType() -> getDefaultInstanceForType
    7515:7515:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure getDefaultInstanceForType() -> getDefaultInstanceForType
    7511:7511:com.google.protobuf.Descriptors$Descriptor getDescriptorForType() -> getDescriptorForType
    7467:7467:com.google.protobuf.GeneratedMessage$FieldAccessorTable internalGetFieldAccessorTable() -> internalGetFieldAccessorTable
    7483:7485:void maybeForceBuilderInitialization() -> maybeForceBuilderInitialization
    7457:7457:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    7457:7457:com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    7457:7457:com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    7457:7457:com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    7457:7457:com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    7556:7560:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder mergeFrom(com.google.protobuf.Message) -> mergeFrom
    7565:7582:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure) -> mergeFrom
    7593:7601:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    7626:7629:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder setId(int) -> setId
    7695:7696:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder setPrivateKey(com.google.protobuf.ByteString) -> setPrivateKey
    7659:7660:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder setPublicKey(com.google.protobuf.ByteString) -> setPublicKey
    7731:7732:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder setSignature(com.google.protobuf.ByteString) -> setSignature
    7767:7770:org.whispersystems.libsignal.state.StorageProtos$SignedPreKeyRecordStructure$Builder setTimestamp(long) -> setTimestamp
org.whispersystems.libsignal.state.impl.InMemoryIdentityKeyStore -> org.whispersystems.libsignal.state.impl.InMemoryIdentityKeyStore:
    30:30:org.whispersystems.libsignal.IdentityKeyPair getIdentityKeyPair() -> getIdentityKeyPair
    35:35:int getLocalRegistrationId() -> getLocalRegistrationId
    52:53:boolean isTrustedIdentity(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.state.IdentityKeyStore$Direction) -> isTrustedIdentity
    40:46:boolean saveIdentity(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.IdentityKey) -> saveIdentity
org.whispersystems.libsignal.state.impl.InMemoryPreKeyStore -> org.whispersystems.libsignal.state.impl.InMemoryPreKeyStore:
    16:18:void <init>() -> <init>
    23:29:org.whispersystems.libsignal.state.PreKeyRecord loadPreKey(int) -> loadPreKey
    45:46:void removePreKey(int) -> removePreKey
org.whispersystems.libsignal.state.impl.InMemorySessionStore -> org.whispersystems.libsignal.state.impl.InMemorySessionStore:
    22:22:void <init>() -> <init>
    59:59:boolean containsSession(org.whispersystems.libsignal.SignalProtocolAddress) -> containsSession
    27:26:org.whispersystems.libsignal.state.SessionRecord loadSession(org.whispersystems.libsignal.SignalProtocolAddress) -> loadSession
    54:53:void storeSession(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.state.SessionRecord) -> storeSession
org.whispersystems.libsignal.state.impl.InMemorySignalProtocolStore -> org.whispersystems.libsignal.state.impl.InMemorySignalProtocolStore:
    88:88:boolean containsSession(org.whispersystems.libsignal.SignalProtocolAddress) -> containsSession
    33:33:org.whispersystems.libsignal.IdentityKeyPair getIdentityKeyPair() -> getIdentityKeyPair
    38:38:int getLocalRegistrationId() -> getLocalRegistrationId
    48:48:boolean isTrustedIdentity(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.state.IdentityKeyStore$Direction) -> isTrustedIdentity
    53:53:org.whispersystems.libsignal.state.PreKeyRecord loadPreKey(int) -> loadPreKey
    73:73:org.whispersystems.libsignal.state.SessionRecord loadSession(org.whispersystems.libsignal.SignalProtocolAddress) -> loadSession
    103:103:org.whispersystems.libsignal.state.SignedPreKeyRecord loadSignedPreKey(int) -> loadSignedPreKey
    68:69:void removePreKey(int) -> removePreKey
    43:43:boolean saveIdentity(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.IdentityKey) -> saveIdentity
    83:84:void storeSession(org.whispersystems.libsignal.SignalProtocolAddress,org.whispersystems.libsignal.state.SessionRecord) -> storeSession
org.whispersystems.libsignal.state.impl.InMemorySignedPreKeyStore -> org.whispersystems.libsignal.state.impl.InMemorySignedPreKeyStore:
    18:20:void <init>() -> <init>
    25:31:org.whispersystems.libsignal.state.SignedPreKeyRecord loadSignedPreKey(int) -> loadSignedPreKey
org.whispersystems.libsignal.util.ByteArrayComparator -> org.whispersystems.libsignal.util.ByteArrayComparator:
    3:3:void <init>() -> <init>
    6:15:int compare(byte[],byte[]) -> compare
org.whispersystems.libsignal.util.ByteUtil -> org.whispersystems.libsignal.util.ByteUtil:
    12:12:void <init>() -> <init>
    16:24:byte[] combine(byte[][]) -> combine
    82:82:int highBitsToInt(byte) -> highBitsToInt
    78:78:byte intsToByteHighAndLow(int,int) -> intsToByteHighAndLow
    29:37:byte[][] split(byte[],int,int) -> split
    43:46:byte[][] split(byte[],int,int,int) -> split
    64:67:byte[] trim(byte[],int) -> trim
org.whispersystems.libsignal.util.Hex -> org.whispersystems.libsignal.util.Hex:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    62:65:void appendHexChar(java.lang.StringBuffer,int) -> appendHexChar
    20:20:java.lang.String toString(byte[]) -> toString
    24:29:java.lang.String toString(byte[],int,int) -> toString
org.whispersystems.libsignal.util.IdentityKeyComparator -> org.whispersystems.libsignal.util.IdentityKeyComparator:
    7:7:void <init>() -> <init>
    7:7:int compare(java.lang.Object,java.lang.Object) -> compare
    11:11:int compare(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey) -> compare
org.whispersystems.libsignal.util.KeyHelper -> org.whispersystems.libsignal.util.KeyHelper:
    28:28:void <init>() -> <init>
    84:92:java.util.List generatePreKeys(int,int) -> generatePreKeys
    55:59:int generateRegistrationId(boolean) -> generateRegistrationId
    107:110:org.whispersystems.libsignal.state.SignedPreKeyRecord generateSignedPreKey(org.whispersystems.libsignal.IdentityKeyPair,int) -> generateSignedPreKey
org.whispersystems.libsignal.util.Medium -> org.whispersystems.libsignal.util.Medium:
    9:9:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
org.whispersystems.libsignal.util.Pair -> org.whispersystems.libsignal.util.Pair:
    12:15:void <init>(java.lang.Object,java.lang.Object) -> <init>
    36:37:boolean equal(java.lang.Object,java.lang.Object) -> equal
    26:26:boolean equals(java.lang.Object) -> equals
    18:18:java.lang.Object first() -> first
    32:32:int hashCode() -> hashCode
    22:22:java.lang.Object second() -> second
org.whispersystems.libsignal.util.guava.Absent -> org.whispersystems.libsignal.util.guava.Absent:
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    71:71:boolean equals(java.lang.Object) -> equals
    39:39:java.lang.Object get() -> get
    75:75:int hashCode() -> hashCode
    35:35:boolean isPresent() -> isPresent
    79:79:java.lang.String toString() -> toString
org.whispersystems.libsignal.util.guava.Optional -> org.whispersystems.libsignal.util.guava.Optional:
    94:94:void <init>() -> <init>
    74:74:org.whispersystems.libsignal.util.guava.Optional absent() -> absent
    89:89:org.whispersystems.libsignal.util.guava.Optional fromNullable(java.lang.Object) -> fromNullable
    81:81:org.whispersystems.libsignal.util.guava.Optional of(java.lang.Object) -> of
org.whispersystems.libsignal.util.guava.Preconditions -> org.whispersystems.libsignal.util.guava.Preconditions:
    63:63:void <init>() -> <init>
    188:189:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
org.whispersystems.libsignal.util.guava.Present -> org.whispersystems.libsignal.util.guava.Present:
    31:33:void <init>(java.lang.Object) -> <init>
    72:76:boolean equals(java.lang.Object) -> equals
    40:40:java.lang.Object get() -> get
    80:80:int hashCode() -> hashCode
    36:36:boolean isPresent() -> isPresent
    84:84:java.lang.String toString() -> toString
rocks.xmpp.addr.AbstractJid -> rocks.xmpp.addr.AbstractJid:
    35:35:void <init>() -> <init>
    144:144:char charAt(int) -> charAt
    35:35:int compareTo(java.lang.Object) -> compareTo
    98:133:int compareTo(rocks.xmpp.addr.Jid) -> compareTo
    70:78:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    60:60:boolean isBareJid() -> isBareJid
    65:65:boolean isDomainJid() -> isDomainJid
    139:139:int length() -> length
    149:149:java.lang.CharSequence subSequence(int,int) -> subSequence
    165:165:java.lang.String toEscapedString() -> toEscapedString
    160:160:java.lang.String toString() -> toString
    169:177:java.lang.String toString(java.lang.String,java.lang.String,java.lang.String) -> toString
rocks.xmpp.addr.FullJid -> rocks.xmpp.addr.FullJid:
    51:79:void <clinit>() -> <clinit>
    46:46:void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,boolean,rocks.xmpp.addr.Jid,rocks.xmpp.addr.FullJid$1) -> <init>
    101:102:void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> <init>
    104:112:void <init>(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,boolean,rocks.xmpp.addr.Jid) -> <init>
    46:46:java.util.regex.Pattern access$200() -> access$200
    327:327:rocks.xmpp.addr.Jid asBareJid() -> asBareJid
    258:267:java.lang.String escape(java.lang.CharSequence) -> escape
    370:370:java.lang.String getDomain() -> getDomain
    353:353:java.lang.String getEscapedLocal() -> getEscapedLocal
    348:348:java.lang.String getLocal() -> getLocal
    391:391:java.lang.String getResource() -> getResource
    215:216:rocks.xmpp.addr.Jid of(java.lang.String,boolean) -> of
    271:285:java.lang.String unescape(java.lang.CharSequence) -> unescape
    289:290:void validateDomain(java.lang.String) -> validateDomain
    306:314:void validateLength(java.lang.CharSequence,java.lang.CharSequence) -> validateLength
    421:422:rocks.xmpp.addr.Jid withResource(java.lang.CharSequence) -> withResource
rocks.xmpp.addr.FullJid$1 -> rocks.xmpp.addr.FullJid$1:
    149:149:void <init>(rocks.xmpp.addr.FullJid) -> <init>
    153:153:rocks.xmpp.addr.Jid asBareJid() -> asBareJid
    192:192:java.lang.String getDomain() -> getDomain
    187:187:java.lang.String getEscapedLocal() -> getEscapedLocal
    182:182:java.lang.String getLocal() -> getLocal
    197:197:java.lang.String getResource() -> getResource
    166:167:rocks.xmpp.addr.Jid withResource(java.lang.CharSequence) -> withResource
rocks.xmpp.addr.FullJid$IDNProfile -> rocks.xmpp.addr.FullJid$IDNProfile:
    448:448:void <init>(rocks.xmpp.addr.FullJid$1) -> <init>
    451:452:void <init>() -> <init>
    480:480:java.lang.CharSequence applyAdditionalMappingRule(java.lang.CharSequence) -> applyAdditionalMappingRule
    485:485:java.lang.CharSequence applyCaseMappingRule(java.lang.CharSequence) -> applyCaseMappingRule
    495:495:java.lang.CharSequence applyDirectionalityRule(java.lang.CharSequence) -> applyDirectionalityRule
    490:490:java.lang.CharSequence applyNormalizationRule(java.lang.CharSequence) -> applyNormalizationRule
    475:475:java.lang.CharSequence applyWidthMappingRule(java.lang.CharSequence) -> applyWidthMappingRule
    462:462:java.lang.String enforce(java.lang.CharSequence) -> enforce
    456:456:java.lang.String prepare(java.lang.CharSequence) -> prepare
rocks.xmpp.addr.Jid$-CC -> rocks.xmpp.addr.Jid$-CC:
    104:104:rocks.xmpp.addr.Jid rocks.xmpp.addr.Jid.of(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> of
    157:160:rocks.xmpp.addr.Jid rocks.xmpp.addr.Jid.of(java.lang.CharSequence) -> of
    116:116:rocks.xmpp.addr.Jid rocks.xmpp.addr.Jid.ofDomain(java.lang.CharSequence) -> ofDomain
    175:175:rocks.xmpp.addr.Jid rocks.xmpp.addr.Jid.ofEscaped(java.lang.CharSequence) -> ofEscaped
rocks.xmpp.precis.InvalidCodePointException -> rocks.xmpp.precis.InvalidCodePointException:
    37:38:void <init>(java.lang.String) -> <init>
rocks.xmpp.precis.InvalidDirectionalityException -> rocks.xmpp.precis.InvalidDirectionalityException:
    37:38:void <init>(java.lang.String) -> <init>
rocks.xmpp.precis.NicknameProfile -> rocks.xmpp.precis.NicknameProfile:
    41:42:void <init>() -> <init>
    107:117:java.lang.CharSequence applyAdditionalMappingRule(java.lang.CharSequence) -> applyAdditionalMappingRule
    124:124:java.lang.CharSequence applyCaseMappingRule(java.lang.CharSequence) -> applyCaseMappingRule
    136:136:java.lang.CharSequence applyDirectionalityRule(java.lang.CharSequence) -> applyDirectionalityRule
    130:130:java.lang.CharSequence applyNormalizationRule(java.lang.CharSequence) -> applyNormalizationRule
    92:92:java.lang.CharSequence applyWidthMappingRule(java.lang.CharSequence) -> applyWidthMappingRule
    53:63:java.lang.String enforce(java.lang.CharSequence) -> enforce
    53:53:java.lang.String lambda$enforce$0(java.lang.CharSequence) -> lambda$enforce$0$NicknameProfile
    86:86:java.lang.String lambda$toComparableString$1(java.lang.CharSequence) -> lambda$toComparableString$1$NicknameProfile
    86:86:java.lang.String toComparableString(java.lang.CharSequence) -> toComparableString
rocks.xmpp.precis.OpaqueStringProfile -> rocks.xmpp.precis.OpaqueStringProfile:
    38:39:void <init>() -> <init>
    65:65:java.lang.CharSequence applyAdditionalMappingRule(java.lang.CharSequence) -> applyAdditionalMappingRule
    74:74:java.lang.CharSequence applyCaseMappingRule(java.lang.CharSequence) -> applyCaseMappingRule
    87:87:java.lang.CharSequence applyDirectionalityRule(java.lang.CharSequence) -> applyDirectionalityRule
    81:81:java.lang.CharSequence applyNormalizationRule(java.lang.CharSequence) -> applyNormalizationRule
    56:56:java.lang.CharSequence applyWidthMappingRule(java.lang.CharSequence) -> applyWidthMappingRule
    43:47:java.lang.String enforce(java.lang.CharSequence) -> enforce
rocks.xmpp.precis.PrecisProfile -> rocks.xmpp.precis.PrecisProfile:
    61:233:void <clinit>() -> <clinit>
    240:242:void <init>(boolean) -> <init>
    516:516:java.lang.CharSequence caseMap(java.lang.CharSequence) -> caseMap
    526:556:void checkBidiRule(java.lang.CharSequence) -> checkBidiRule
    59:59:int compare(java.lang.Object,java.lang.Object) -> compare
    708:708:int compare(java.lang.CharSequence,java.lang.CharSequence) -> compare
    690:690:java.lang.String enforce(java.lang.CharSequence) -> enforce
    471:472:boolean hasCompatibilityEquivalent(int) -> hasCompatibilityEquivalent
    364:364:boolean isASCII7(int) -> isASCII7
    312:312:boolean isBackwardsCompatible(int) -> isBackwardsCompatible
    374:374:boolean isControl(int) -> isControl
    381:381:boolean isDefaultIgnorable(int) -> isDefaultIgnorable
    300:300:boolean isExceptionallyDisallowed(int) -> isExceptionallyDisallowed
    279:279:boolean isExceptionallyValid(int) -> isExceptionallyValid
    411:411:boolean isIgnorable(int) -> isIgnorable
    325:325:boolean isJoinControl(int) -> isJoinControl
    253:253:boolean isLetterDigit(int) -> isLetterDigit
    398:398:boolean isNonCharacter(int) -> isNonCharacter
    339:339:boolean isOldHangulJamo(int) -> isOldHangulJamo
    484:484:boolean isOtherLetterDigit(int) -> isOtherLetterDigit
    452:452:boolean isPunctuation(int) -> isPunctuation
    423:423:boolean isSpace(int) -> isSpace
    436:436:boolean isSymbol(int) -> isSymbol
    353:353:boolean isUnassigned(int) -> isUnassigned
    614:673:java.lang.String prepare(java.lang.CharSequence) -> prepare
    820:834:java.lang.String stabilize(java.lang.CharSequence,java.util.function.Function) -> stabilize
    720:720:java.lang.String toComparableString(java.lang.CharSequence) -> toComparableString
    499:506:java.lang.CharSequence widthMap(java.lang.CharSequence) -> widthMap
rocks.xmpp.precis.PrecisProfiles -> rocks.xmpp.precis.PrecisProfiles:
    83:108:void <clinit>() -> <clinit>
rocks.xmpp.precis.UsernameProfile -> rocks.xmpp.precis.UsernameProfile:
    43:45:void <init>(boolean) -> <init>
    84:84:java.lang.CharSequence applyAdditionalMappingRule(java.lang.CharSequence) -> applyAdditionalMappingRule
    94:94:java.lang.CharSequence applyCaseMappingRule(java.lang.CharSequence) -> applyCaseMappingRule
    110:113:java.lang.CharSequence applyDirectionalityRule(java.lang.CharSequence) -> applyDirectionalityRule
    100:100:java.lang.CharSequence applyNormalizationRule(java.lang.CharSequence) -> applyNormalizationRule
    78:78:java.lang.CharSequence applyWidthMappingRule(java.lang.CharSequence) -> applyWidthMappingRule
    64:68:java.lang.String enforce(java.lang.CharSequence) -> enforce
    53:56:java.lang.String prepare(java.lang.CharSequence) -> prepare
rocks.xmpp.util.cache.LruCache -> rocks.xmpp.util.cache.LruCache:
    54:61:void <init>(int) -> <init>
    119:121:void clear() -> clear
    198:198:java.lang.Object compute(java.lang.Object,java.util.function.BiFunction) -> compute
    180:180:java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function) -> computeIfAbsent
    189:189:java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction) -> computeIfPresent
    75:75:boolean containsKey(java.lang.Object) -> containsKey
    80:80:boolean containsValue(java.lang.Object) -> containsValue
    135:135:java.util.Set entrySet() -> entrySet
    86:91:java.lang.Object get(java.lang.Object) -> get
    70:70:boolean isEmpty() -> isEmpty
    125:125:java.util.Set keySet() -> keySet
    225:227:void keyUsed(java.lang.Object) -> keyUsed
    199:201:java.lang.Object lambda$compute$2(java.lang.Object,java.lang.Object) -> lambda$compute$2$LruCache
    181:183:java.lang.Object lambda$computeIfAbsent$0(java.lang.Object,java.lang.Object) -> lambda$computeIfAbsent$0$LruCache
    190:192:java.lang.Object lambda$computeIfPresent$1(java.lang.Object,java.lang.Object) -> lambda$computeIfPresent$1$LruCache
    208:210:java.lang.Object lambda$merge$3(java.lang.Object,java.lang.Object) -> lambda$merge$3$LruCache
    215:221:void limit() -> limit
    207:207:java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction) -> merge
    97:100:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    112:115:void putAll(java.util.Map) -> putAll
    143:148:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    105:106:java.lang.Object remove(java.lang.Object) -> remove
    153:157:boolean remove(java.lang.Object,java.lang.Object) -> remove
    162:166:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    171:175:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    65:65:int size() -> size
    130:130:java.util.Collection values() -> values
